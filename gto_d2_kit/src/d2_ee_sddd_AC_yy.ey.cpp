/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AC_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_13_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30372 = ce * de;
    const double C30371 = ce + de;
    const double C30370 = 0 * de;
    const double C30369 = yC - yD;
    const double C30410 = 0 * ce;
    const double C30405 = 0 * de;
    const double C30404 = 0 * de;
    const double C30455 = 0 * de;
    const double C30501 = ae * be;
    const double C30500 = ae + be;
    const double C30499 = 0 * be;
    const double C30498 = yA - yB;
    const double C30517 = p + q;
    const double C30516 = p * q;
    const double C30525 = ae * ce;
    const double C30524 = yP - yQ;
    const double C30522 = bs[3];
    const double C30531 = bs[4];
    const double C30529 = xP - xQ;
    const double C30540 = bs[5];
    const double C30549 = bs[6];
    const double C30564 = bs[7];
    const double C30582 = bs[2];
    const double C30687 = zP - zQ;
    const double C115 = bs[0];
    const double C31420 = xA - xB;
    const double C31432 = xC - xD;
    const double C31480 = zC - zD;
    const double C31659 = zA - zB;
    const double C30373 = std::pow(C30371, 2);
    const double C30388 = 2 * C30371;
    const double C30406 = C30370 / C30371;
    const double C30374 = C30372 * C30369;
    const double C30407 = C30369 * C30370;
    const double C31463 = std::pow(C30369, 2);
    const double C31522 = C30369 * de;
    const double C31520 = C30369 * ce;
    const double C30417 = C30410 / C30371;
    const double C30412 = C30369 * C30405;
    const double C30456 = C30455 / C30371;
    const double C30502 = std::pow(C30500, 2);
    const double C30533 = C30371 * C30500;
    const double C31723 = 2 * C30500;
    const double C30503 = C30501 * C30498;
    const double C31646 = std::pow(C30498, 2);
    const double C31754 = C30498 * ae;
    const double C30518 = 2 * C30516;
    const double C30527 = std::pow(C30524, 2);
    const double C30586 = C30524 * ae;
    const double C30584 = C30524 * ce;
    const double C30542 = std::pow(C30529, 2);
    const double C30804 = std::pow(C30687, 2);
    const double C31421 = std::pow(C31420, 2);
    const double C31722 = C31420 * ae;
    const double C31435 = C31432 * de;
    const double C31434 = C31432 * ce;
    const double C31433 = std::pow(C31432, 2);
    const double C31481 = std::pow(C31480, 2);
    const double C31564 = C31480 * de;
    const double C31562 = C31480 * ce;
    const double C31660 = std::pow(C31659, 2);
    const double C31755 = C31659 * ae;
    const double C30375 = 2 * C30373;
    const double C31734 = 4 * C30373;
    const double C31447 = std::pow(C30388, -1);
    const double C31735 = C30373 * C30388;
    const double C31731 = std::pow(C30388, -2);
    const double C30415 = C30407 / C30371;
    const double C31464 = C31463 * C30372;
    const double C31736 = std::pow(C31520, 2);
    const double C30418 = C30412 / C30371;
    const double C30504 = 2 * C30502;
    const double C31758 = std::pow(C31723, -2);
    const double C31756 = std::pow(C31723, -1);
    const double C31647 = C31646 * C30501;
    const double C30520 = C30518 / C30517;
    const double C136 =
        (-((std::pow(yP - yQ, 2) * bs[2] * std::pow(C30518 / C30517, 2) -
            (bs[1] * C30518) / C30517) *
           ae * ce) /
         C30371) /
        C30500;
    const double C116 = -(C30529 * bs[1] * C30518) / C30517;
    const double C308 = -(C30524 * bs[1] * C30518) / C30517;
    const double C524 = -(C30687 * bs[1] * C30518) / C30517;
    const double C30534 = C30527 * C30531;
    const double C30543 = C30527 * C30540;
    const double C30552 = C30527 * C30549;
    const double C30568 = C30527 * C30564;
    const double C30588 = C30522 * C30586;
    const double C30595 = C30531 * C30586;
    const double C30604 = C30540 * C30586;
    const double C30619 = C30549 * C30586;
    const double C30648 = C30564 * C30586;
    const double C122 = (-(bs[1] * C30586 * C30518) / C30517) / C30500;
    const double C30587 = C30522 * C30584;
    const double C30593 = C30531 * C30584;
    const double C30602 = C30540 * C30584;
    const double C30615 = C30549 * C30584;
    const double C30642 = C30564 * C30584;
    const double C123 = (bs[1] * C30584 * C30518) / (C30517 * C30371);
    const double C31422 = C31421 * C30501;
    const double C31724 = std::pow(C31434, 2);
    const double C31436 = C31433 * C30372;
    const double C31482 = C31481 * C30372;
    const double C31738 = std::pow(C31562, 2);
    const double C31661 = C31660 * C30501;
    const double C30409 = C30370 / C30375;
    const double C30414 = C30405 / C30375;
    const double C30413 = C30404 / C30375;
    const double C31767 = C30371 * C31734;
    const double C31768 = 4 * C31735;
    const double C30419 = 0 - C30415;
    const double C31465 = C31464 / C30371;
    const double C30422 = 0 - C30418;
    const double C31648 = C31647 / C30500;
    const double C30523 = -C30520;
    const double C30532 = std::pow(C30520, 4);
    const double C30550 = std::pow(C30520, 6);
    const double C30581 = std::pow(C30520, 2);
    const double C137 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C30520, 2) +
            std::pow(yP - yQ, 2) * bs[3] * std::pow(-C30520, 3)) *
           ae * ce) /
         C30371) /
        C30500;
    const double C31423 = C31422 / C30500;
    const double C31437 = C31436 / C30371;
    const double C31483 = C31482 / C30371;
    const double C31662 = C31661 / C30500;
    const double C30423 = C30419 * ce;
    const double C31466 = -C31465;
    const double C30426 = C30422 * ce;
    const double C31649 = -C31648;
    const double C30526 = std::pow(C30523, 3);
    const double C30541 = std::pow(C30523, 5);
    const double C30565 = std::pow(C30523, 7);
    const double C30535 = C30534 * C30532;
    const double C30539 = C30531 * C30532;
    const double C30597 = C30532 * C30595;
    const double C30596 = C30532 * C30593;
    const double C30553 = C30552 * C30550;
    const double C30563 = C30549 * C30550;
    const double C30625 = C30550 * C30619;
    const double C30621 = C30550 * C30615;
    const double C30585 = C30582 * C30581;
    const double C124 = (C30529 * C30581 * C30582 * C30586) / C30500;
    const double C125 = -(C30529 * C30581 * C30582 * C30584) / C30371;
    const double C318 = (C30524 * C30581 * C30582 * C30586) / C30500 -
                        (ae * bs[1] * C30518) / (C30517 * C30500);
    const double C319 = (ce * bs[1] * C30518) / (C30517 * C30371) -
                        (C30524 * C30581 * C30582 * C30584) / C30371;
    const double C537 = -(C30687 * C30581 * C30582 * C30584) / C30371;
    const double C538 = (C30687 * C30581 * C30582 * C30586) / C30500;
    const double C31424 = -C31423;
    const double C31438 = -C31437;
    const double C31484 = -C31483;
    const double C31663 = -C31662;
    const double C30427 = C30423 / C30371;
    const double C31467 = std::exp(C31466);
    const double C30430 = C30426 / C30371;
    const double C31650 = std::exp(C31649);
    const double C30530 = C30522 * C30526;
    const double C30590 = C30526 * C30588;
    const double C30589 = C30526 * C30587;
    const double C138 =
        (-((C30522 * C30526 + C30527 * bs[4] * std::pow(C30520, 4)) * C30525 *
           std::pow(xP - xQ, 2)) /
         C30371) /
            C30500 -
        ((bs[2] * std::pow(C30520, 2) + C30527 * C30522 * C30526) * C30525) /
            (C30371 * C30500);
    const double C338 =
        (-(C30581 * C30582 * C30524 * ae * ce) / C30371) / C30500 -
        (ae * C30581 * C30582 * C30524 * ce) / C30533 -
        (C30524 * (C30582 * C30581 + C30527 * C30522 * C30526) * C30525) /
            C30533;
    const double C30544 = C30543 * C30541;
    const double C30548 = C30540 * C30541;
    const double C30607 = C30541 * C30604;
    const double C30605 = C30541 * C30602;
    const double C30570 = C30568 * C30565;
    const double C30655 = C30565 * C30648;
    const double C30651 = C30565 * C30642;
    const double C30603 = C30539 * C30542;
    const double C30616 = C30529 * C30539;
    const double C30709 = C30539 * ae;
    const double C30707 = C30539 * C30527;
    const double C30706 = C30524 * C30539;
    const double C30705 = C30539 * ce;
    const double C31396 = C30539 * C30804;
    const double C31399 = C30687 * C30539;
    const double C30599 = C30529 * C30597;
    const double C30696 = C30524 * C30597;
    const double C30701 = C30597 * ce;
    const double C30598 = C30529 * C30596;
    const double C30693 = C30524 * C30596;
    const double C30702 = ae * C30596;
    const double C30645 = C30563 * C30542;
    const double C30911 = C30563 * ae;
    const double C30905 = C30563 * C30527;
    const double C30904 = C30524 * C30563;
    const double C30903 = C30563 * ce;
    const double C31017 = C30529 * C30563;
    const double C30629 = C30625 * C30542;
    const double C30647 = C30529 * C30625;
    const double C30850 = C30524 * C30625;
    const double C30897 = C30625 * ce;
    const double C30990 = C30625 * C30804;
    const double C31085 = C30687 * C30625;
    const double C30627 = C30621 * C30542;
    const double C30641 = C30529 * C30621;
    const double C30844 = C30524 * C30621;
    const double C30898 = ae * C30621;
    const double C30991 = C30621 * C30804;
    const double C31086 = C30687 * C30621;
    const double C554 =
        (-((zP - zQ) * (C30585 + C30527 * C30522 * C30526) * C30525) / C30371) /
        C30500;
    const double C117 = C30585 * C30542 - (bs[1] * C30518) / C30517;
    const double C309 = C30585 * C30527 - (bs[1] * C30518) / C30517;
    const double C310 = C30524 * C30529 * C30585;
    const double C521 = C30687 * C30529 * C30585;
    const double C526 = C30585 * C30804 - (bs[1] * C30518) / C30517;
    const double C1013 = C30687 * C30524 * C30585;
    const double C31425 = std::exp(C31424);
    const double C31439 = std::exp(C31438);
    const double C31485 = std::exp(C31484);
    const double C31664 = std::exp(C31663);
    const double C30431 = C30427 - C30414;
    const double C30376 = C30374 * C31467;
    const double C114 = -(2 * ce * de * (yC - yD) * C31467) / (ce + de);
    const double C31521 = C31467 / C30388;
    const double C31523 = C31467 * C31520;
    const double C31530 = C31447 * C31467;
    const double C31742 = C31467 * C31522;
    const double C31771 = C31731 * C31467;
    const double C31769 = C31467 * C31736;
    const double C30434 = C30430 - C30413;
    const double C147 = C31650 * C137;
    const double C145 = C31650 * C124;
    const double C9427 = C31650 * C538;
    const double C30505 = C30503 * C31650;
    const double C113 = -(2 * ae * be * (yA - yB) * C31650) / (ae + be);
    const double C31788 = C31650 * C31754;
    const double C5035 =
        (C31650 * std::pow(C31754, 2)) / C30502 + C31650 / C31723;
    const double C5037 = C31758 * C31650;
    const double C13646 = C31756 * C31650;
    const double C30536 = C30530 + C30535;
    const double C30594 = C30529 * C30530;
    const double C30697 = C30530 * ae;
    const double C30695 = C30524 * C30530;
    const double C30694 = C30530 * ce;
    const double C118 =
        2 * C30529 * C30585 + C30529 * (C30585 + C30530 * C30542);
    const double C312 = C30524 * (C30585 + C30530 * C30542);
    const double C522 = C30687 * (C30585 + C30530 * C30542);
    const double C1283 =
        2 * C30524 * C30585 + C30524 * (C30585 + C30530 * C30527);
    const double C1417 = C30687 * (C30585 + C30530 * C30527);
    const double C2169 =
        2 * C30687 * C30585 + C30687 * (C30585 + C30530 * C30804);
    const double C2170 =
        3 * (C30585 + C30530 * C30804) +
        C30687 * (2 * C30687 * C30530 + C30687 * (C30530 + C30539 * C30804));
    const double C126 = (C30581 * C30582 * C30586 + C30590 * C30542) / C30500;
    const double C129 =
        (2 * C30529 * C30590 + C30529 * (C30590 + C30597 * C30542)) / C30500;
    const double C320 =
        (C30581 * C30582 * C30586 + C30524 * (C30524 * C30590 + C30585 * ae) +
         C30524 * C30585 * ae) /
        C30500;
    const double C322 =
        (C30524 * C30529 * C30590 + C30529 * C30585 * ae) / C30500;
    const double C326 = (C30524 * (C30590 + C30597 * C30542) +
                         (C30585 + C30530 * C30542) * ae) /
                        C30500;
    const double C531 = (C30687 * C30529 * C30590) / C30500;
    const double C533 = (C30687 * (C30590 + C30597 * C30542)) / C30500;
    const double C541 = (C30581 * C30582 * C30586 + C30590 * C30804) / C30500;
    const double C1018 = (C30687 * (C30524 * C30590 + C30585 * ae)) / C30500;
    const double C2178 =
        (2 * C30687 * C30590 + C30687 * (C30590 + C30597 * C30804)) / C30500;
    const double C127 = -(C30589 * C30542 + C30581 * C30582 * C30584) / C30371;
    const double C128 = (-2 * C30529 * C30589) / C30371 -
                        (C30529 * (C30596 * C30542 + C30589)) / C30371;
    const double C321 = -(C30524 * (C30524 * C30589 + C30585 * ce) +
                          C30581 * C30582 * C30584 + C30524 * C30585 * ce) /
                        C30371;
    const double C323 =
        -(C30524 * C30529 * C30589 + C30529 * C30585 * ce) / C30371;
    const double C327 = -(C30524 * (C30596 * C30542 + C30589) +
                          (C30585 + C30530 * C30542) * ce) /
                        C30371;
    const double C532 = -(C30687 * C30529 * C30589) / C30371;
    const double C534 = -(C30687 * (C30596 * C30542 + C30589)) / C30371;
    const double C542 = -(C30589 * C30804 + C30581 * C30582 * C30584) / C30371;
    const double C1019 = -(C30687 * (C30524 * C30589 + C30585 * ce)) / C30371;
    const double C2177 = (-2 * C30687 * C30589) / C30371 -
                         (C30687 * (C30596 * C30804 + C30589)) / C30371;
    const double C151 = C31650 * C138;
    const double C30545 = C30539 + C30544;
    const double C30554 = C30548 + C30553;
    const double C30617 = C30548 * C30542;
    const double C30644 = C30529 * C30548;
    const double C30851 = C30548 * ae;
    const double C30847 = C30548 * C30527;
    const double C30846 = C30524 * C30548;
    const double C30845 = C30548 * ce;
    const double C31400 = C30548 * C30804;
    const double C30609 = C30607 * C30542;
    const double C30618 = C30529 * C30607;
    const double C30708 = C30524 * C30607;
    const double C30840 = C30607 * ce;
    const double C30970 = C30687 * C30607;
    const double C31290 = C30607 * C30804;
    const double C2179 =
        (3 * (C30590 + C30597 * C30804) +
         C30687 * (2 * C30687 * C30597 + C30687 * (C30597 + C30607 * C30804))) /
        C30500;
    const double C30608 = C30605 * C30542;
    const double C30614 = C30529 * C30605;
    const double C30704 = C30524 * C30605;
    const double C30841 = ae * C30605;
    const double C30971 = C30687 * C30605;
    const double C31287 = C30605 * C30804;
    const double C2180 =
        (-3 * (C30596 * C30804 + C30589)) / C30371 +
        C30687 * ((-2 * C30687 * C30596) / C30371 -
                  (C30687 * (C30605 * C30804 + C30596)) / C30371);
    const double C30571 = C30563 + C30570;
    const double C30659 = C30655 * C30542;
    const double C30910 = C30524 * C30655;
    const double C31020 = C30529 * C30655;
    const double C30657 = C30651 * C30542;
    const double C30902 = C30524 * C30651;
    const double C31016 = C30529 * C30651;
    const double C30606 = C30530 + C30603;
    const double C30622 = 2 * C30616;
    const double C30734 = C30616 * ae;
    const double C30732 = C30524 * C30616;
    const double C30731 = C30616 * ce;
    const double C30715 = C30530 + C30707;
    const double C30717 = C30706 * ae;
    const double C30714 = C30706 * ce;
    const double C30848 = 2 * C30706;
    const double C31397 = C30530 + C31396;
    const double C31401 = 2 * C31399;
    const double C543 = (C30529 * C30590 + C30599 * C30804) / C30500;
    const double C30710 = C30701 / C30371;
    const double C544 = -(C30598 * C30804 + C30529 * C30589) / C30371;
    const double C30711 = C30702 / C30533;
    const double C30653 = C30548 + C30645;
    const double C30923 = C30548 + C30905;
    const double C30925 = C30904 * ae;
    const double C30922 = C30904 * ce;
    const double C31032 = C31017 * ae;
    const double C31030 = C31017 * C30527;
    const double C31029 = C30524 * C31017;
    const double C31028 = C31017 * ce;
    const double C30632 = C30607 + C30629;
    const double C30654 = 2 * C30647;
    const double C30745 = C30524 * C30647;
    const double C31012 = C30647 * ce;
    const double C31068 = C30687 * C30647;
    const double C31305 = C30647 * C30804;
    const double C30916 = C30897 / C30371;
    const double C30993 = C30607 + C30990;
    const double C31090 = C31085 * ce;
    const double C30630 = C30627 + C30605;
    const double C30650 = -2 * C30641;
    const double C30741 = C30524 * C30641;
    const double C31013 = ae * C30641;
    const double C31069 = C30687 * C30641;
    const double C31308 = C30641 * C30804;
    const double C30917 = C30898 / C30533;
    const double C30994 = C30991 + C30605;
    const double C31091 = ae * C31086;
    const double C9429 = C31650 * C554;
    const double C31757 = C31425 * C31722;
    const double C104 =
        (C31425 * std::pow(C31722, 2)) / C30502 + C31425 / C31723;
    const double C106 = C31758 * C31425;
    const double C13648 = C31756 * C31425;
    const double C31441 = C31439 * C31434;
    const double C31440 = C31439 / C30388;
    const double C31449 = C31447 * C31439;
    const double C31727 = C31439 * C31435;
    const double C31765 = C31731 * C31439;
    const double C31759 = C31439 * C31724;
    const double C31563 = C31485 / C30388;
    const double C31565 = C31485 * C31562;
    const double C31572 = C31447 * C31485;
    const double C31748 = C31485 * C31564;
    const double C31774 = C31731 * C31485;
    const double C31772 = C31485 * C31738;
    const double C31789 = C31664 * C31755;
    const double C9202 =
        (C31664 * std::pow(C31755, 2)) / C30502 + C31664 / C31723;
    const double C9204 = C31758 * C31664;
    const double C19340 = C31756 * C31664;
    const double C30436 = C30431 / C30388;
    const double C30435 = C30369 * C30431;
    const double C30389 = 2 * C30376;
    const double C30411 = C30376 / C30373;
    const double C307 = ((0 * ce) / C30371 - C30376 / C30373) / (2 * C30371) +
                        (0 * ce) / C30371;
    const double C717 =
        ((C31467 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
        C30370 / C30375;
    const double C718 = (0 * ce) / C30371 - C30376 / C30373;
    const double C1177 = (C31467 * std::pow(C31522, 2)) / C30373 + C31521;
    const double C31524 = C31523 * C31522;
    const double C31529 = C31523 / C30375;
    const double C31740 = C31523 / C30371;
    const double C31737 = C31447 * C31523;
    const double C306 =
        (((C31467 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
         C30370 / C30375) /
            (2 * C30371) +
        ((C30369 * ((0 * ce) / C30371 - C30376 / C30373) + C31530) * ce) /
            C30371;
    const double C31531 = C31530 * C31522;
    const double C31746 = C31520 * C31530;
    const double C31745 = 2 * C31530;
    const double C31781 = C31530 / C31734;
    const double C1276 = C31530 / C31768;
    const double C3121 = C31530 / C30388;
    const double C31777 = C31742 / C30371;
    const double C1178 = (-2 * C31447 * C31742) / C30371;
    const double C31795 = C31769 / C30373;
    const double C30440 = C30434 + C30406;
    const double C5041 = ((0 * ae) / C30500 - C30505 / C30502) / (2 * C30500) +
                         (0 * ae) / C30500;
    const double C13649 =
        ((C31650 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
        C30499 / C30504;
    const double C13650 = (0 * ae) / C30500 - C30505 / C30502;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C351 = C113 * C310;
    const double C562 = C113 * C521;
    const double C9430 = C113 * C526;
    const double C9428 = C113 * C537;
    const double C9426 = C113 * C524;
    const double C9796 = C113 * C1013;
    const double C5036 = (2 * C31756 * C31788) / C30500;
    const double C13645 = C31788 / C30500;
    const double C5040 =
        (((C31650 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
         C30499 / C30504) /
            (2 * C30500) +
        ((C30498 * ((0 * ae) / C30500 - C30505 / C30502) + C13646) * ae) /
            C30500;
    const double C30537 = C30536 * C30525;
    const double C324 =
        (C30529 * C30590 + C30524 * (C30524 * C30599 + C30594 * ae) +
         C30524 * C30594 * ae) /
        C30500;
    const double C325 = -(C30524 * (C30524 * C30598 + C30594 * ce) +
                          C30529 * C30589 + C30524 * C30594 * ce) /
                        C30371;
    const double C1020 = (C30687 * (C30524 * C30599 + C30594 * ae)) / C30500;
    const double C1021 = -(C30687 * (C30524 * C30598 + C30594 * ce)) / C30371;
    const double C311 = C30529 * C30585 + C30594 * C30527;
    const double C527 = C30529 * C30585 + C30594 * C30804;
    const double C1014 = C30687 * C30524 * C30594;
    const double C1285 =
        2 * C30524 * C30594 + C30524 * (C30594 + C30616 * C30527);
    const double C1418 = C30687 * (C30594 + C30616 * C30527);
    const double C2168 =
        2 * C30687 * C30594 + C30687 * (C30594 + C30616 * C30804);
    const double C30699 = C30696 + C30697;
    const double C1420 = C30524 * C30585 + C30695 * C30804;
    const double C2581 =
        2 * C30687 * C30695 + C30687 * (C30695 + C30706 * C30804);
    const double C30698 = C30693 + C30694;
    const double C154 = C113 * C118;
    const double C361 = C113 * C312;
    const double C566 = C113 * C522;
    const double C10100 = C113 * C1417;
    const double C9437 = C113 * C2169;
    const double C10839 = C113 * C2170;
    const double C149 = C31650 * C126;
    const double C155 = C31650 * C129;
    const double C352 = C31650 * C322;
    const double C13655 = C13646 * C322;
    const double C362 = C31650 * C326;
    const double C13665 = C13646 * C326;
    const double C563 = C31650 * C531;
    const double C567 = C31650 * C533;
    const double C9431 = C31650 * C541;
    const double C9797 = C31650 * C1018;
    const double C25168 = C13646 * C1018;
    const double C9438 = C31650 * C2178;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C353 = C113 * C323;
    const double C363 = C113 * C327;
    const double C564 = C113 * C532;
    const double C568 = C113 * C534;
    const double C9432 = C113 * C542;
    const double C9798 = C113 * C1019;
    const double C9435 = C113 * C2177;
    const double C30546 = C30545 * C30525;
    const double C30555 = C30554 * C30525;
    const double C30623 = C30539 + C30617;
    const double C30652 = 2 * C30644;
    const double C30746 = C30644 * ae;
    const double C30744 = C30644 * C30527;
    const double C30743 = C30524 * C30644;
    const double C30742 = C30644 * ce;
    const double C31407 = C30644 * C30804;
    const double C2171 =
        3 * (C30594 + C30616 * C30804) +
        C30687 * (2 * C30687 * C30616 + C30687 * (C30616 + C30644 * C30804));
    const double C30861 = C30850 + C30851;
    const double C30860 = C30539 + C30847;
    const double C30862 = C30846 * ae;
    const double C30859 = C30846 * ce;
    const double C30906 = 2 * C30846;
    const double C31410 = C30846 * C30804;
    const double C6543 =
        3 * (C30695 + C30706 * C30804) +
        C30687 * (2 * C30687 * C30706 + C30687 * (C30706 + C30846 * C30804));
    const double C30858 = C30844 + C30845;
    const double C31402 = C30539 + C31400;
    const double C30611 = C30597 + C30609;
    const double C30624 = 2 * C30618;
    const double C30733 = C30524 * C30618;
    const double C30738 = C30618 * ce;
    const double C2176 =
        (2 * C30687 * C30599 + C30687 * (C30599 + C30618 * C30804)) / C30500;
    const double C2181 =
        (3 * (C30599 + C30618 * C30804) +
         C30687 * (2 * C30687 * C30618 + C30687 * (C30618 + C30647 * C30804))) /
        C30500;
    const double C30716 = C30708 + C30709;
    const double C30854 = C30840 / C30371;
    const double C30973 = C30970 * ce;
    const double C31293 = 2 * C30970;
    const double C31291 = C30597 + C31290;
    const double C10840 = C31650 * C2179;
    const double C30610 = C30608 + C30596;
    const double C30620 = -2 * C30614;
    const double C30730 = C30524 * C30614;
    const double C30739 = ae * C30614;
    const double C2175 = (-2 * C30687 * C30598) / C30371 -
                         (C30687 * (C30614 * C30804 + C30598)) / C30371;
    const double C2182 =
        (-3 * (C30614 * C30804 + C30598)) / C30371 +
        C30687 * ((-2 * C30687 * C30614) / C30371 -
                  (C30687 * (C30641 * C30804 + C30614)) / C30371);
    const double C30713 = C30704 + C30705;
    const double C30855 = C30841 / C30533;
    const double C30974 = ae * C30971;
    const double C31297 = -2 * C30971;
    const double C31288 = C31287 + C30596;
    const double C10841 = C113 * C2180;
    const double C30572 = C30571 * C30525;
    const double C30662 = C30625 + C30659;
    const double C30924 = C30910 + C30911;
    const double C31031 = C30524 * C31020;
    const double C30660 = C30657 + C30621;
    const double C30921 = C30902 + C30903;
    const double C31027 = C30524 * C31016;
    const double C119 = 3 * (C30585 + C30530 * C30542) +
                        C30529 * (2 * C30594 + C30529 * C30606);
    const double C313 = C30585 + C30530 * C30542 + C30606 * C30527;
    const double C314 = C30524 * (2 * C30594 + C30529 * C30606);
    const double C523 = C30687 * (2 * C30594 + C30529 * C30606);
    const double C528 = C30585 + C30530 * C30542 + C30606 * C30804;
    const double C1015 = C30687 * C30524 * C30606;
    const double C1422 = C30524 * C30594 + C30732 * C30804;
    const double C1284 = 3 * (C30585 + C30530 * C30527) +
                         C30524 * (2 * C30695 + C30524 * C30715);
    const double C1421 = C30585 + C30530 * C30527 + C30715 * C30804;
    const double C1865 = C30687 * (2 * C30695 + C30524 * C30715);
    const double C10829 =
        4 * (2 * C30687 * C30530 + C30687 * C31397) +
        C30687 * (3 * C31397 + C30687 * (2 * C30687 * C30539 +
                                         C30687 * (C30539 + C30548 * C30804)));
    const double C575 = C31650 * C543;
    const double C30718 = -C30710;
    const double C576 = C113 * C544;
    const double C30658 = C30529 * C30653;
    const double C30782 = C30653 * ae;
    const double C30780 = C30653 * C30527;
    const double C30779 = C30524 * C30653;
    const double C30778 = C30653 * ce;
    const double C30933 = C30923 * ae;
    const double C30931 = C30524 * C30923;
    const double C30930 = C30923 * ce;
    const double C31038 = C30644 + C31030;
    const double C31040 = C31029 * ae;
    const double C31037 = C31029 * ce;
    const double C30634 = C30529 * C30632;
    const double C30646 = 3 * C30632;
    const double C30769 = C30524 * C30632;
    const double C30774 = C30632 * ce;
    const double C31023 = C31012 / C30371;
    const double C31071 = C31068 * ce;
    const double C31306 = C30618 + C31305;
    const double C30928 = -C30916;
    const double C30996 = C30993 * ce;
    const double C31294 = C30687 * C30993;
    const double C31095 = C31090 / C30371;
    const double C30633 = C30529 * C30630;
    const double C30640 = -3 * C30630;
    const double C30766 = C30524 * C30630;
    const double C30775 = ae * C30630;
    const double C30656 = C30650 / C30371;
    const double C31024 = C31013 / C30533;
    const double C31072 = ae * C31069;
    const double C31309 = C31308 + C30614;
    const double C30997 = ae * C30994;
    const double C31298 = C30687 * C30994;
    const double C31096 = C31091 / C30533;
    const double C105 = (2 * C31756 * C31757) / C30500;
    const double C13647 = C31757 / C30500;
    const double C31442 = C31441 * C31435;
    const double C31448 = C31441 / C30375;
    const double C31728 = C31447 * C31441;
    const double C31726 = C31441 / C30371;
    const double C302 = (C31439 * std::pow(C31435, 2)) / C30373 + C31440;
    const double C31450 = C31449 * C31435;
    const double C31732 = C31434 * C31449;
    const double C31730 = 2 * C31449;
    const double C31775 = C31449 / C31734;
    const double C111 = C31449 / C31768;
    const double C3124 = C31449 / C30388;
    const double C31761 = C31727 / C30371;
    const double C303 = (-2 * C31447 * C31727) / C30371;
    const double C31790 = C31759 / C30373;
    const double C1987 = (C31485 * std::pow(C31564, 2)) / C30373 + C31563;
    const double C31566 = C31565 * C31564;
    const double C31571 = C31565 / C30375;
    const double C31741 = C31565 / C30371;
    const double C31739 = C31447 * C31565;
    const double C31573 = C31572 * C31564;
    const double C31752 = C31562 * C31572;
    const double C31751 = 2 * C31572;
    const double C31787 = C31572 / C31734;
    const double C2166 = C31572 / C31768;
    const double C4082 = C31572 / C30388;
    const double C31783 = C31748 / C30371;
    const double C1988 = (-2 * C31447 * C31748) / C30371;
    const double C31797 = C31772 / C30373;
    const double C9203 = (2 * C31756 * C31789) / C30500;
    const double C19339 = C31789 / C30500;
    const double C30441 = C30435 + 0;
    const double C30408 = C30369 * C30389;
    const double C1184 =
        ((-C30370 / C30371) / C30388 -
         ((C31467 - (C30369 * C30389) / C30371) * de) / C30371) /
            C30388 -
        ((C30369 * ((-C30389 / C30371) / C30388 - (0 * de) / C30371) + C31530) *
         de) /
            C30371;
    const double C1185 =
        ((-C30389 / C30371) / C30388 - (0 * de) / C30371) / C30388 -
        (0 * de) / C30371;
    const double C2698 = (-C30389 / C30371) / C30388 - (0 * de) / C30371;
    const double C30421 = C30417 - C30411;
    const double C31525 = C31524 / C30373;
    const double C305 =
        (((0 - (C30369 * C30370) / C30371) * ce) / C30371 - (0 * de) / C30375) /
            (2 * C30371) +
        ((C30369 * (((C31467 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
                    C30370 / C30375) +
          C31740) *
         ce) /
            C30371 +
        (0 * ce) / C30371 - C30376 / C30373;
    const double C31770 = 2 * C31737;
    const double C31532 = C31531 / C30371;
    const double C31780 = C31746 / C30375;
    const double C31799 = C31740 - C31777;
    const double C2691 = -C31777;
    const double C31808 = C31795 + C31521;
    const double C30444 = C30440 / C30388;
    const double C13672 = C13649 * C128;
    const double C13668 = C13649 * C118;
    const double C13666 = C13649 * C117;
    const double C13662 = C13649 * C127;
    const double C13656 = C13649 * C125;
    const double C13652 = C13649 * C116;
    const double C13866 = C13649 * C327;
    const double C13862 = C13649 * C312;
    const double C13852 = C13649 * C323;
    const double C13848 = C13649 * C310;
    const double C14060 = C13649 * C544;
    const double C14052 = C13649 * C534;
    const double C14048 = C13649 * C522;
    const double C14044 = C13649 * C532;
    const double C14040 = C13649 * C521;
    const double C25179 = C13649 * C526;
    const double C25175 = C13649 * C542;
    const double C25169 = C13649 * C537;
    const double C25165 = C13649 * C524;
    const double C25649 = C13649 * C1019;
    const double C25645 = C13649 * C1013;
    const double C26029 = C13649 * C1417;
    const double C26919 = C13649 * C2170;
    const double C26915 = C13649 * C2180;
    const double C26909 = C13649 * C2177;
    const double C26905 = C13649 * C2169;
    const double C13664 = C13650 * C312;
    const double C13660 = C13650 * C327;
    const double C13658 = C13650 * C323;
    const double C13654 = C13650 * C310;
    const double C25171 = C13650 * C1019;
    const double C25167 = C13650 * C1013;
    const double C25643 = C13650 * C1417;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C9440 = C9428 + C9429;
    const double C9439 = C9426 + C9427;
    const double C13669 = C13645 * C129;
    const double C13667 = C13645 * C126;
    const double C13663 = C13645 * C138;
    const double C13657 = C13645 * C137;
    const double C13653 = C13645 * C124;
    const double C13863 = C13645 * C326;
    const double C13849 = C13645 * C322;
    const double C14057 = C13645 * C543;
    const double C14049 = C13645 * C533;
    const double C14041 = C13645 * C531;
    const double C25180 = C13645 * C541;
    const double C25170 = C13645 * C554;
    const double C25166 = C13645 * C538;
    const double C25646 = C13645 * C1018;
    const double C26920 = C13645 * C2179;
    const double C26906 = C13645 * C2178;
    const double C5039 =
        (((0 - (C30498 * C30499) / C30500) * ae) / C30500 - (0 * be) / C30504) /
            (2 * C30500) +
        ((C30498 * (((C31650 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
                    C30499 / C30504) +
          C13645) *
         ae) /
            C30500 +
        (0 * ae) / C30500 - C30505 / C30502;
    const double C139 =
        (-2 * C30529 * C30537) / C30533 +
        C30529 * ((-((C30531 * C30532 + C30527 * bs[5] * std::pow(C30523, 5)) *
                     C30525 * std::pow(C30529, 2)) /
                   C30371) /
                      C30500 -
                  C30537 / C30533);
    const double C339 =
        (-(ae * (C30524 * C30589 + C30585 * ce)) / C30371) / C30500 -
        ((C30585 + C30527 * C30522 * C30526) * C30525) / C30533 -
        ((C30524 * C30590 + C30585 * ae) * ce) / C30533 +
        C30524 * ((-(C30590 * ce) / C30371) / C30500 - (ae * C30589) / C30533 -
                  (C30524 * C30537) / C30533);
    const double C340 = (-(C30529 * C30590 * ce) / C30371) / C30500 -
                        (ae * C30529 * C30589) / C30533 -
                        (C30524 * C30529 * C30537) / C30533;
    const double C551 = (-((zP - zQ) * C30529 * C30537) / C30371) / C30500;
    const double C556 = (-(C30537 * std::pow(zP - zQ, 2)) / C30371) / C30500 -
                        ((C30585 + C30527 * C30522 * C30526) * C30525) / C30533;
    const double C1028 = (-(C30687 * C30590 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30589) / C30533 -
                         (C30524 * C30687 * C30537) / C30533;
    const double C356 = C31650 * C324;
    const double C13855 = C13645 * C324;
    const double C13847 = C13646 * C324;
    const double C357 = C113 * C325;
    const double C13858 = C13649 * C325;
    const double C13850 = C13650 * C325;
    const double C1035 = C31650 * C1020;
    const double C14043 = C13646 * C1020;
    const double C14567 = C13645 * C1020;
    const double C1038 = C113 * C1021;
    const double C14046 = C13650 * C1021;
    const double C14570 = C13649 * C1021;
    const double C355 = C113 * C311;
    const double C13854 = C13649 * C311;
    const double C13846 = C13650 * C311;
    const double C574 = C113 * C527;
    const double C14056 = C13649 * C527;
    const double C1034 = C113 * C1014;
    const double C14042 = C13650 * C1014;
    const double C14566 = C13649 * C1014;
    const double C1572 = C113 * C1285;
    const double C13856 = C13650 * C1285;
    const double C15096 = C13649 * C1285;
    const double C1748 = C113 * C1418;
    const double C14568 = C13650 * C1418;
    const double C15302 = C13649 * C1418;
    const double C2468 = C113 * C2168;
    const double C16152 = C13649 * C2168;
    const double C1289 = (2 * (C30524 * C30590 + C30585 * ae) +
                          C30524 * (C30590 + C30524 * C30699 + C30695 * ae) +
                          (C30585 + C30530 * C30527) * ae) /
                         C30500;
    const double C1426 =
        (C30687 * (C30590 + C30524 * C30699 + C30695 * ae)) / C30500;
    const double C1432 =
        (C30524 * C30590 + C30585 * ae + C30699 * C30804) / C30500;
    const double C9802 = C113 * C1420;
    const double C25177 = C13650 * C1420;
    const double C26037 = C13649 * C1420;
    const double C10112 = C113 * C2581;
    const double C26907 = C13650 * C2581;
    const double C27385 = C13649 * C2581;
    const double C1290 =
        (-2 * (C30524 * C30589 + C30585 * ce)) / C30371 -
        (C30524 * (C30524 * C30698 + C30589 + C30695 * ce)) / C30371 -
        ((C30585 + C30530 * C30527) * ce) / C30371;
    const double C1427 =
        -(C30687 * (C30524 * C30698 + C30589 + C30695 * ce)) / C30371;
    const double C1433 =
        -(C30698 * C30804 + C30524 * C30589 + C30585 * ce) / C30371;
    const double C166 = C148 + C149;
    const double C169 = C154 + C155;
    const double C379 = C351 + C352;
    const double C384 = C361 + C362;
    const double C586 = C562 + C563;
    const double C588 = C566 + C567;
    const double C9441 = C9430 + C9431;
    const double C9806 = C9796 + C9797;
    const double C9444 = C9437 + C9438;
    const double C167 = C150 + C151;
    const double C30551 = C30546 / C30533;
    const double C30703 = C30524 * C30546;
    const double C30729 = C30529 * C30546;
    const double C30821 = C30687 * C30546;
    const double C140 =
        3 * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533) +
        C30529 *
            ((-2 * C30529 * C30546) / C30533 +
             C30529 *
                 ((-((C30540 * C30541 + C30527 * bs[6] * std::pow(C30520, 6)) *
                     C30525 * C30542) /
                   C30371) /
                      C30500 -
                  C30546 / C30533));
    const double C341 =
        (-(ae * (C30524 * C30598 + C30594 * ce)) / C30371) / C30500 -
        (C30529 * C30537) / C30533 -
        ((C30524 * C30599 + C30594 * ae) * ce) / C30533 +
        C30524 * ((-(C30599 * ce) / C30371) / C30500 - (ae * C30598) / C30533 -
                  (C30524 * C30529 * C30546) / C30533);
    const double C342 =
        (-((C30590 + C30597 * C30542) * ce) / C30371) / C30500 -
        (ae * (C30596 * C30542 + C30589)) / C30533 +
        C30524 * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533);
    const double C552 =
        (zP - zQ) * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533);
    const double C557 =
        (-(C30529 * C30546 * std::pow(zP - zQ, 2)) / C30371) / C30500 -
        (C30529 * C30537) / C30533;
    const double C1029 = (-(C30687 * C30599 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30598) / C30533 -
                         (C30524 * C30687 * C30529 * C30546) / C30533;
    const double C1301 =
        2 * ((-(C30590 * ce) / C30371) / C30500 - (ae * C30589) / C30533 -
             (C30524 * C30537) / C30533) -
        (ae * (C30524 * C30698 + C30589 + C30695 * ce)) / C30533 -
        ((C30590 + C30524 * C30699 + C30695 * ae) * ce) / C30533 +
        C30524 *
            ((-(ae * C30698) / C30371) / C30500 - C30537 / C30533 -
             (C30699 * ce) / C30533 +
             C30524 * ((-(C30597 * ce) / C30371) / C30500 -
                       (ae * C30596) / C30533 - (C30524 * C30546) / C30533));
    const double C1444 = (-(ae * C30687 * C30698) / C30371) / C30500 -
                         (C30687 * C30537) / C30533 -
                         (C30687 * C30699 * ce) / C30533 +
                         C30524 * ((-(C30687 * C30597 * ce) / C30371) / C30500 -
                                   (ae * C30687 * C30596) / C30533 -
                                   (C30524 * C30687 * C30546) / C30533);
    const double C1447 =
        (-((C30590 + C30597 * C30804) * ce) / C30371) / C30500 -
        (ae * (C30596 * C30804 + C30589)) / C30533 +
        C30524 * ((-(C30546 * C30804) / C30371) / C30500 - C30537 / C30533);
    const double C2187 =
        (-2 * C30687 * C30537) / C30533 +
        C30687 * ((-(C30546 * C30804) / C30371) / C30500 - C30537 / C30533);
    const double C30556 = C30555 * C30542;
    const double C30566 = C30555 / C30533;
    const double C30562 = C30529 * C30555;
    const double C30842 = C30524 * C30555;
    const double C30972 = C30687 * C30555;
    const double C30984 = C30555 * C30804;
    const double C30628 = C30529 * C30623;
    const double C30643 = 3 * C30623;
    const double C30770 = C30623 * ae;
    const double C30768 = C30524 * C30623;
    const double C30767 = C30623 * ce;
    const double C1287 =
        2 * C30524 * C30606 + C30524 * (C30606 + C30623 * C30527);
    const double C1419 = C30687 * (C30606 + C30623 * C30527);
    const double C2167 =
        2 * C30687 * C30606 + C30687 * (C30606 + C30623 * C30804);
    const double C2172 =
        3 * (C30606 + C30623 * C30804) +
        C30687 * (2 * C30687 * C30623 + C30687 * (C30623 + C30653 * C30804));
    const double C30753 = C30745 + C30746;
    const double C30752 = C30616 + C30744;
    const double C30754 = C30743 * ae;
    const double C30751 = C30743 * ce;
    const double C31018 = 2 * C30743;
    const double C2582 =
        2 * C30687 * C30732 + C30687 * (C30732 + C30743 * C30804);
    const double C11001 =
        3 * (C30732 + C30743 * C30804) +
        C30687 * (2 * C30687 * C30743 + C30687 * (C30743 + C31029 * C30804));
    const double C30750 = C30741 + C30742;
    const double C31408 = C30616 + C31407;
    const double C11131 = C113 * C2171;
    const double C30868 = C30524 * C30861;
    const double C30909 = 2 * C30861;
    const double C30896 = C30861 * ce;
    const double C31084 = C30687 * C30861;
    const double C31311 = C30861 * C30804;
    const double C30869 = C30860 * ae;
    const double C30867 = C30524 * C30860;
    const double C30866 = C30860 * ce;
    const double C30907 = 3 * C30860;
    const double C6542 =
        2 * C30687 * C30715 + C30687 * (C30715 + C30860 * C30804);
    const double C6544 =
        3 * (C30715 + C30860 * C30804) +
        C30687 * (2 * C30687 * C30860 + C30687 * (C30860 + C30923 * C30804));
    const double C31411 = C30706 + C31410;
    const double C11242 = C113 * C6543;
    const double C26917 = C13650 * C6543;
    const double C30865 = C30524 * C30858;
    const double C30901 = -2 * C30858;
    const double C30895 = ae * C30858;
    const double C31082 = C30687 * C30858;
    const double C31314 = C30858 * C30804;
    const double C31403 = C30687 * C31402;
    const double C130 = (3 * (C30590 + C30597 * C30542) +
                         C30529 * (2 * C30599 + C30529 * C30611)) /
                        C30500;
    const double C328 =
        (C30590 + C30597 * C30542 + C30524 * (C30524 * C30611 + C30606 * ae) +
         C30524 * C30606 * ae) /
        C30500;
    const double C330 = (C30524 * (2 * C30599 + C30529 * C30611) +
                         (2 * C30594 + C30529 * C30606) * ae) /
                        C30500;
    const double C535 = (C30687 * (2 * C30599 + C30529 * C30611)) / C30500;
    const double C545 = (C30590 + C30597 * C30542 + C30611 * C30804) / C30500;
    const double C1022 = (C30687 * (C30524 * C30611 + C30606 * ae)) / C30500;
    const double C2174 =
        (2 * C30687 * C30611 + C30687 * (C30611 + C30632 * C30804)) / C30500;
    const double C30736 = C30733 + C30734;
    const double C30747 = C30738 / C30371;
    const double C2469 = C31650 * C2176;
    const double C16153 = C13645 * C2176;
    const double C11132 = C31650 * C2181;
    const double C30720 = C30524 * C30716;
    const double C30849 = 2 * C30716;
    const double C30839 = C30716 * ce;
    const double C2584 =
        (2 * C30687 * C30699 + C30687 * (C30699 + C30716 * C30804)) / C30500;
    const double C6547 =
        (3 * (C30699 + C30716 * C30804) +
         C30687 * (2 * C30687 * C30716 + C30687 * (C30716 + C30861 * C30804))) /
        C30500;
    const double C30864 = -C30854;
    const double C30976 = C30973 / C30371;
    const double C10832 =
        (4 * (2 * C30687 * C30597 + C30687 * C31291) +
         C30687 * (3 * C31291 + C30687 * (2 * C30970 + C30687 * C30993))) /
        C30500;
    const double C10847 = C10839 + C10840;
    const double C131 =
        (-3 * (C30596 * C30542 + C30589)) / C30371 +
        C30529 * ((-2 * C30598) / C30371 - (C30529 * C30610) / C30371);
    const double C329 = -(C30524 * (C30524 * C30610 + C30606 * ce) +
                          C30596 * C30542 + C30589 + C30524 * C30606 * ce) /
                        C30371;
    const double C331 =
        C30524 * ((-2 * C30598) / C30371 - (C30529 * C30610) / C30371) -
        ((2 * C30594 + C30529 * C30606) * ce) / C30371;
    const double C536 =
        C30687 * ((-2 * C30598) / C30371 - (C30529 * C30610) / C30371);
    const double C546 = -(C30610 * C30804 + C30596 * C30542 + C30589) / C30371;
    const double C1023 = -(C30687 * (C30524 * C30610 + C30606 * ce)) / C30371;
    const double C2173 = (-2 * C30687 * C30610) / C30371 -
                         (C30687 * (C30630 * C30804 + C30610)) / C30371;
    const double C30626 = C30620 / C30371;
    const double C30735 = C30730 + C30731;
    const double C30748 = C30739 / C30533;
    const double C2470 = C113 * C2175;
    const double C16156 = C13649 * C2175;
    const double C11129 = C113 * C2182;
    const double C30719 = C30524 * C30713;
    const double C30843 = -2 * C30713;
    const double C30838 = ae * C30713;
    const double C2585 = (-2 * C30687 * C30698) / C30371 -
                         (C30687 * (C30713 * C30804 + C30698)) / C30371;
    const double C6549 =
        (-3 * (C30713 * C30804 + C30698)) / C30371 +
        C30687 * ((-2 * C30687 * C30713) / C30371 -
                  (C30687 * (C30858 * C30804 + C30713)) / C30371);
    const double C30977 = C30974 / C30533;
    const double C31299 = C31297 / C30371;
    const double C10831 =
        4 * ((-2 * C30687 * C30596) / C30371 - (C30687 * C31288) / C30371) +
        C30687 *
            ((-3 * C31288) / C30371 +
             C30687 * ((-2 * C30971) / C30371 - (C30687 * C30994) / C30371));
    const double C30573 = C30572 * C30542;
    const double C30899 = C30524 * C30572;
    const double C30992 = C30572 * C30804;
    const double C31014 = C30529 * C30572;
    const double C31087 = C30687 * C30572;
    const double C30665 = C30529 * C30662;
    const double C30781 = C30524 * C30662;
    const double C2183 =
        (3 * (C30611 + C30632 * C30804) +
         C30687 * (2 * C30687 * C30632 + C30687 * (C30632 + C30662 * C30804))) /
        C30500;
    const double C30932 = C30524 * C30924;
    const double C31039 = C31031 + C31032;
    const double C30663 = C30529 * C30660;
    const double C30777 = C30524 * C30660;
    const double C2184 =
        (-3 * (C30630 * C30804 + C30610)) / C30371 +
        C30687 * ((-2 * C30687 * C30630) / C30371 -
                  (C30687 * (C30660 * C30804 + C30630)) / C30371);
    const double C30929 = C30524 * C30921;
    const double C31036 = C31027 + C31028;
    const double C156 = C113 * C119;
    const double C13682 = C13649 * C119;
    const double C365 = C113 * C313;
    const double C13872 = C13649 * C313;
    const double C13864 = C13650 * C313;
    const double C369 = C113 * C314;
    const double C13670 = C13650 * C314;
    const double C14220 = C13649 * C314;
    const double C570 = C113 * C523;
    const double C14366 = C13649 * C523;
    const double C578 = C113 * C528;
    const double C14070 = C13649 * C528;
    const double C1040 = C113 * C1015;
    const double C14050 = C13650 * C1015;
    const double C14576 = C13649 * C1015;
    const double C2344 = C113 * C1422;
    const double C14058 = C13650 * C1422;
    const double C16012 = C13649 * C1422;
    const double C10108 = C113 * C1421;
    const double C26047 = C13649 * C1421;
    const double C26039 = C13650 * C1421;
    const double C10503 = C113 * C1865;
    const double C26031 = C13650 * C1865;
    const double C26521 = C13649 * C1865;
    const double C10845 = C113 * C10829;
    const double C30721 = C30718 / C30500;
    const double C30661 = C30652 + C30658;
    const double C30787 = C30623 + C30780;
    const double C30789 = C30779 * ae;
    const double C30786 = C30779 * ce;
    const double C30939 = C30906 + C30931;
    const double C30938 = C30930 / C30371;
    const double C31047 = C31038 * ae;
    const double C31045 = C30524 * C31038;
    const double C31044 = C31038 * ce;
    const double C30636 = C30624 + C30634;
    const double C30783 = C30774 / C30371;
    const double C31034 = -C31023;
    const double C31074 = C31071 / C30371;
    const double C11124 =
        (4 * (2 * C30687 * C30618 + C30687 * C31306) +
         C30687 *
             (3 * C31306 +
              C30687 * (2 * C31068 + C30687 * (C30647 + C31020 * C30804)))) /
        C30500;
    const double C30936 = C30928 / C30500;
    const double C30999 = C30996 / C30371;
    const double C31295 = C31293 + C31294;
    const double C31099 = -C31095;
    const double C30635 = C30633 / C30371;
    const double C30649 = C30640 / C30371;
    const double C30784 = C30775 / C30533;
    const double C31075 = C31072 / C30533;
    const double C11125 =
        4 * ((-2 * C30687 * C30614) / C30371 - (C30687 * C31309) / C30371) +
        C30687 * ((-3 * C31309) / C30371 +
                  C30687 * ((-2 * C31069) / C30371 -
                            (C30687 * (C31016 * C30804 + C30641)) / C30371));
    const double C31000 = C30997 / C30533;
    const double C31300 = C31298 / C30371;
    const double C31443 = C31442 / C30373;
    const double C31762 = 2 * C31728;
    const double C31451 = C31450 / C30371;
    const double C31766 = C31732 / C30375;
    const double C31791 = C31726 - C31761;
    const double C2825 = -C31761;
    const double C31805 = C31790 + C31440;
    const double C31567 = C31566 / C30373;
    const double C31773 = 2 * C31739;
    const double C31574 = C31573 / C30371;
    const double C31786 = C31752 / C30375;
    const double C31802 = C31741 - C31783;
    const double C3562 = -C31783;
    const double C31809 = C31797 + C31563;
    const double C30445 = C30441 * de;
    const double C30416 = C30408 / C30371;
    const double C30425 = C30369 * C30421;
    const double C30454 = C30421 / C30388;
    const double C31526 = C31521 - C31525;
    const double C31796 = C31770 / C30371;
    const double C31533 = C31529 - C31532;
    const double C31810 = C31799 / C30388;
    const double C1183 =
        ((-(0 * de) / C30371) / C30388 -
         ((0 - (C30369 * C30370) / C30371) * de) / C30371) /
            C30388 -
        ((C30369 * ((-C30370 / C30371) / C30388 -
                    ((C31467 - (C30369 * C30389) / C30371) * de) / C30371) +
          C2691) *
         de) /
            C30371 +
        (-C30389 / C30371) / C30388 - (0 * de) / C30371;
    const double C13690 = C13664 + C13665;
    const double C13685 = C13654 + C13655;
    const double C25182 = C25167 + C25168;
    const double C175 = C165 * C31467;
    const double C350 = C165 * C31808;
    const double C725 = C165 * C31740;
    const double C1188 = C165 * C1177;
    const double C2701 = C165 * C2691;
    const double C174 = C164 * C114;
    const double C349 = C164 * C305;
    const double C724 = C164 * C717;
    const double C9446 = C9440 * C31467;
    const double C9795 = C9440 * C31740;
    const double C10097 = C9440 * C1177;
    const double C10746 = C9440 * C31808;
    const double C11595 = C9440 * C2691;
    const double C9445 = C9439 * C114;
    const double C9794 = C9439 * C717;
    const double C10745 = C9439 * C305;
    const double C13692 = C13668 + C13669;
    const double C13691 = C13666 + C13667;
    const double C13689 = C13662 + C13663;
    const double C13686 = C13656 + C13657;
    const double C13684 = C13652 + C13653;
    const double C13886 = C13862 + C13863;
    const double C13879 = C13848 + C13849;
    const double C14076 = C14048 + C14049;
    const double C14072 = C14040 + C14041;
    const double C25188 = C25179 + C25180;
    const double C25183 = C25169 + C25170;
    const double C25181 = C25165 + C25166;
    const double C25652 = C25645 + C25646;
    const double C26928 = C26919 + C26920;
    const double C26921 = C26905 + C26906;
    const double C153 = C31650 * C139;
    const double C13673 = C13645 * C139;
    const double C354 = C31650 * C340;
    const double C13659 = C13646 * C340;
    const double C13853 = C13645 * C340;
    const double C565 = C31650 * C551;
    const double C14045 = C13645 * C551;
    const double C9433 = C31650 * C556;
    const double C25176 = C13645 * C556;
    const double C9799 = C31650 * C1028;
    const double C25172 = C13646 * C1028;
    const double C25650 = C13645 * C1028;
    const double C381 = C355 + C356;
    const double C13882 = C13854 + C13855;
    const double C13878 = C13846 + C13847;
    const double C592 = C574 + C575;
    const double C14080 = C14056 + C14057;
    const double C1052 = C1034 + C1035;
    const double C14073 = C14042 + C14043;
    const double C14582 = C14566 + C14567;
    const double C10101 = C31650 * C1426;
    const double C25644 = C13646 * C1426;
    const double C26030 = C13645 * C1426;
    const double C9803 = C31650 * C1432;
    const double C25178 = C13646 * C1432;
    const double C26038 = C13645 * C1432;
    const double C10102 = C113 * C1427;
    const double C25647 = C13650 * C1427;
    const double C26033 = C13649 * C1427;
    const double C9804 = C113 * C1433;
    const double C25173 = C13650 * C1433;
    const double C26041 = C13649 * C1433;
    const double C176 = C166 * C114;
    const double C359 = C166 * C305;
    const double C728 = C166 * C717;
    const double C179 = C169 * C114;
    const double C372 = C169 * C305;
    const double C734 = C169 * C717;
    const double C392 = C379 * C306;
    const double C726 = C379 * C718;
    const double C1189 = C379 * C1184;
    const double C2702 = C379 * C2698;
    const double C396 = C384 * C306;
    const double C730 = C384 * C718;
    const double C1195 = C384 * C1184;
    const double C2706 = C384 * C2698;
    const double C598 = C586 * C114;
    const double C1037 = C586 * C717;
    const double C3713 = C586 * C305;
    const double C600 = C588 * C114;
    const double C1043 = C588 * C717;
    const double C3719 = C588 * C305;
    const double C9447 = C9441 * C114;
    const double C9800 = C9441 * C717;
    const double C10751 = C9441 * C305;
    const double C9810 = C9806 * C718;
    const double C10098 = C9806 * C1184;
    const double C10747 = C9806 * C306;
    const double C11596 = C9806 * C2698;
    const double C9450 = C9444 * C114;
    const double C10759 = C9444 * C305;
    const double C11010 = C9444 * C717;
    const double C177 = C167 * C31467;
    const double C360 = C167 * C31808;
    const double C729 = C167 * C31740;
    const double C1194 = C167 * C1177;
    const double C2705 = C167 * C2691;
    const double C1448 =
        (-(C30546 * C30804) / C30371) / C30500 - C30537 / C30533 -
        (ae * (C30713 * C30804 + C30698)) / C30533 -
        ((C30699 + C30716 * C30804) * ce) / C30533 +
        C30524 * ((-((C30597 + C30607 * C30804) * ce) / C30371) / C30500 -
                  (ae * (C30605 * C30804 + C30596)) / C30533 +
                  C30524 * ((-(C30555 * C30804) / C30371) / C30500 - C30551));
    const double C30712 = C30703 / C30533;
    const double C2188 =
        3 * ((-(C30546 * C30804) / C30371) / C30500 - C30537 / C30533) +
        C30687 * ((-2 * C30821) / C30533 +
                  C30687 * ((-(C30555 * C30804) / C30371) / C30500 - C30551));
    const double C2590 =
        (((-2 * C30687 * C30596) / C30371 -
          (C30687 * (C30605 * C30804 + C30596)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30597 + C30687 * (C30597 + C30607 * C30804)) * ce) /
            C30533 +
        C30524 * ((-2 * C30821) / C30533 +
                  C30687 * ((-(C30555 * C30804) / C30371) / C30500 - C30551));
    const double C159 = C31650 * C140;
    const double C13679 = C13645 * C140;
    const double C358 = C31650 * C341;
    const double C13859 = C13645 * C341;
    const double C13851 = C13646 * C341;
    const double C364 = C31650 * C342;
    const double C13661 = C13646 * C342;
    const double C13867 = C13645 * C342;
    const double C569 = C31650 * C552;
    const double C14053 = C13645 * C552;
    const double C577 = C31650 * C557;
    const double C14061 = C13645 * C557;
    const double C1039 = C31650 * C1029;
    const double C14047 = C13646 * C1029;
    const double C14571 = C13645 * C1029;
    const double C10103 = C31650 * C1444;
    const double C25648 = C13646 * C1444;
    const double C26034 = C13645 * C1444;
    const double C9805 = C31650 * C1447;
    const double C25174 = C13646 * C1447;
    const double C26042 = C13645 * C1447;
    const double C9436 = C31650 * C2187;
    const double C26910 = C13645 * C2187;
    const double C30557 = C30556 / C30371;
    const double C30567 = -2 * C30562;
    const double C30740 = C30524 * C30562;
    const double C30823 = C30687 * C30562;
    const double C31010 = C30562 / C30533;
    const double C1449 =
        (-((C30599 + C30618 * C30804) * ce) / C30371) / C30500 -
        (ae * (C30614 * C30804 + C30598)) / C30533 +
        C30524 * ((-(C30562 * C30804) / C30371) / C30500 - C30729 / C30533);
    const double C2186 =
        (-2 * C30687 * C30729) / C30533 +
        C30687 * ((-(C30562 * C30804) / C30371) / C30500 - C30729 / C30533);
    const double C30856 = C30842 / C30533;
    const double C30975 = C30524 * C30972;
    const double C31083 = C30972 / C30533;
    const double C31119 = -2 * C30972;
    const double C30985 = C30984 / C30371;
    const double C30631 = C30622 + C30628;
    const double C30772 = C30769 + C30770;
    const double C1424 = C30524 * C30606 + C30768 * C30804;
    const double C2583 =
        2 * C30687 * C30768 + C30687 * (C30768 + C30779 * C30804);
    const double C30771 = C30766 + C30767;
    const double C1582 = C113 * C1287;
    const double C13870 = C13650 * C1287;
    const double C1756 = C113 * C1419;
    const double C14574 = C13650 * C1419;
    const double C2472 = C113 * C2167;
    const double C30757 = C30524 * C30753;
    const double C31019 = 2 * C30753;
    const double C31011 = C30753 * ce;
    const double C1286 = 3 * (C30594 + C30616 * C30527) +
                         C30524 * (2 * C30732 + C30524 * C30752);
    const double C1423 = C30594 + C30616 * C30527 + C30752 * C30804;
    const double C1866 = C30687 * (2 * C30732 + C30524 * C30752);
    const double C6802 =
        2 * C30687 * C30752 + C30687 * (C30752 + C31038 * C30804);
    const double C11014 = C113 * C2582;
    const double C16154 = C13650 * C2582;
    const double C30756 = C30524 * C30750;
    const double C31015 = -2 * C30750;
    const double C31009 = ae * C30750;
    const double C11123 =
        4 * (2 * C30687 * C30616 + C30687 * C31408) +
        C30687 * (3 * C31408 + C30687 * (2 * C30687 * C30644 +
                                         C30687 * (C30644 + C31017 * C30804)));
    const double C30875 = C30607 + C30868;
    const double C30915 = C30896 / C30533;
    const double C31089 = C31084 * ce;
    const double C31312 = C30716 + C31311;
    const double C30874 = C30848 + C30867;
    const double C30873 = C30866 / C30371;
    const double C10118 = C113 * C6542;
    const double C27383 = C13650 * C6542;
    const double C11234 =
        4 * (2 * C30687 * C30706 + C30687 * C31411) +
        C30687 * (3 * C31411 + C30687 * (2 * C30687 * C30846 +
                                         C30687 * (C30846 + C30904 * C30804)));
    const double C30872 = C30865 + C30605;
    const double C30920 = C30901 / C30371;
    const double C30914 = C30895 / C30371;
    const double C31088 = ae * C31082;
    const double C31315 = C31314 + C30713;
    const double C31404 = C31401 + C31403;
    const double C157 = C31650 * C130;
    const double C13683 = C13645 * C130;
    const double C366 = C31650 * C328;
    const double C13873 = C13645 * C328;
    const double C13865 = C13646 * C328;
    const double C370 = C31650 * C330;
    const double C13671 = C13646 * C330;
    const double C14221 = C13645 * C330;
    const double C571 = C31650 * C535;
    const double C14367 = C13645 * C535;
    const double C579 = C31650 * C545;
    const double C14071 = C13645 * C545;
    const double C1041 = C31650 * C1022;
    const double C14051 = C13646 * C1022;
    const double C14577 = C13645 * C1022;
    const double C2473 = C31650 * C2174;
    const double C1293 = (2 * (C30524 * C30599 + C30594 * ae) +
                          C30524 * (C30599 + C30524 * C30736 + C30732 * ae) +
                          (C30594 + C30616 * C30527) * ae) /
                         C30500;
    const double C1428 =
        (C30687 * (C30599 + C30524 * C30736 + C30732 * ae)) / C30500;
    const double C1436 =
        (C30524 * C30599 + C30594 * ae + C30736 * C30804) / C30500;
    const double C2586 =
        (2 * C30687 * C30736 + C30687 * (C30736 + C30753 * C30804)) / C30500;
    const double C30755 = -C30747;
    const double C2476 = C2468 + C2469;
    const double C16160 = C16152 + C16153;
    const double C11134 = C11131 + C11132;
    const double C30723 = C30597 + C30720;
    const double C30853 = C30839 / C30533;
    const double C10113 = C31650 * C2584;
    const double C26908 = C13646 * C2584;
    const double C27386 = C13645 * C2584;
    const double C11243 = C31650 * C6547;
    const double C26918 = C13646 * C6547;
    const double C30871 = C30864 / C30500;
    const double C30979 = -C30976;
    const double C10846 = C31650 * C10832;
    const double C10851 = C10847 * C114;
    const double C11240 = C10847 * C717;
    const double C158 = C113 * C131;
    const double C13678 = C13649 * C131;
    const double C367 = C113 * C329;
    const double C13876 = C13649 * C329;
    const double C13868 = C13650 * C329;
    const double C373 = C113 * C331;
    const double C13674 = C13650 * C331;
    const double C14224 = C13649 * C331;
    const double C572 = C113 * C536;
    const double C14362 = C13649 * C536;
    const double C580 = C113 * C546;
    const double C14066 = C13649 * C546;
    const double C1044 = C113 * C1023;
    const double C14054 = C13650 * C1023;
    const double C14580 = C13649 * C1023;
    const double C2474 = C113 * C2173;
    const double C1303 =
        2 * ((-(C30599 * ce) / C30371) / C30500 - (ae * C30598) / C30533 -
             (C30524 * C30729) / C30533) -
        (ae * (C30524 * C30735 + C30598 + C30732 * ce)) / C30533 -
        ((C30599 + C30524 * C30736 + C30732 * ae) * ce) / C30533 +
        C30524 *
            ((-(ae * C30735) / C30371) / C30500 - C30729 / C30533 -
             (C30736 * ce) / C30533 +
             C30524 * ((-(C30618 * ce) / C30371) / C30500 -
                       (ae * C30614) / C30533 - (C30524 * C30562) / C30533));
    const double C1445 = (-(ae * C30687 * C30735) / C30371) / C30500 -
                         (C30687 * C30729) / C30533 -
                         (C30687 * C30736 * ce) / C30533 +
                         C30524 * ((-(C30687 * C30618 * ce) / C30371) / C30500 -
                                   (ae * C30687 * C30614) / C30533 -
                                   (C30524 * C30687 * C30562) / C30533);
    const double C1450 =
        (-(C30562 * C30804) / C30371) / C30500 - C30729 / C30533 -
        (ae * (C30750 * C30804 + C30735)) / C30533 -
        ((C30736 + C30753 * C30804) * ce) / C30533 +
        C30524 * ((-((C30618 + C30647 * C30804) * ce) / C30371) / C30500 -
                  (ae * (C30641 * C30804 + C30614)) / C30533 +
                  C30524 * ((-(C30529 * C30572 * C30804) / C30371) / C30500 -
                            C30562 / C30533));
    const double C1294 =
        (-2 * (C30524 * C30598 + C30594 * ce)) / C30371 -
        (C30524 * (C30524 * C30735 + C30598 + C30732 * ce)) / C30371 -
        ((C30594 + C30616 * C30527) * ce) / C30371;
    const double C1429 =
        -(C30687 * (C30524 * C30735 + C30598 + C30732 * ce)) / C30371;
    const double C1437 =
        -(C30735 * C30804 + C30524 * C30598 + C30594 * ce) / C30371;
    const double C2587 = (-2 * C30687 * C30735) / C30371 -
                         (C30687 * (C30750 * C30804 + C30735)) / C30371;
    const double C30722 = C30719 + C30596;
    const double C30857 = C30843 / C30371;
    const double C30852 = C30838 / C30371;
    const double C10116 = C113 * C2585;
    const double C26911 = C13650 * C2585;
    const double C27389 = C13649 * C2585;
    const double C11244 = C113 * C6549;
    const double C26913 = C13650 * C6549;
    const double C10843 = C113 * C10831;
    const double C30574 = C30573 / C30371;
    const double C30918 = C30899 / C30533;
    const double C30995 = C30992 / C30371;
    const double C31025 = C30524 * C31014;
    const double C31070 = C30687 * C31014;
    const double C31112 = C31014 * C30804;
    const double C31092 = C30524 * C31087;
    const double C30668 = C30654 + C30665;
    const double C30788 = C30781 + C30782;
    const double C30940 = C30625 + C30932;
    const double C31046 = C30524 * C31039;
    const double C11002 =
        (3 * (C30736 + C30753 * C30804) +
         C30687 * (2 * C30687 * C30753 + C30687 * (C30753 + C31039 * C30804))) /
        C30500;
    const double C30666 = C30663 / C30371;
    const double C30785 = C30777 + C30778;
    const double C30937 = C30929 + C30621;
    const double C31043 = C30524 * C31036;
    const double C11003 =
        (-3 * (C30750 * C30804 + C30735)) / C30371 +
        C30687 * ((-2 * C30687 * C30750) / C30371 -
                  (C30687 * (C31036 * C30804 + C30750)) / C30371);
    const double C30724 = C30721 - C30711;
    const double C30664 = C30529 * C30661;
    const double C30815 = C30661 * ae;
    const double C30813 = C30524 * C30661;
    const double C30812 = C30661 * ce;
    const double C1288 = 3 * (C30606 + C30623 * C30527) +
                         C30524 * (2 * C30768 + C30524 * C30787);
    const double C1425 = C30606 + C30623 * C30527 + C30787 * C30804;
    const double C1867 = C30687 * (2 * C30768 + C30524 * C30787);
    const double C30947 = C30939 * ae;
    const double C30945 = C30524 * C30939;
    const double C30944 = C30939 * ce;
    const double C31052 = C31018 + C31045;
    const double C31051 = C31044 / C30371;
    const double C133 = (4 * (2 * C30599 + C30529 * C30611) +
                         C30529 * (3 * C30611 + C30529 * C30636)) /
                        C30500;
    const double C540 = (C30687 * (3 * C30611 + C30529 * C30636)) / C30500;
    const double C548 =
        (2 * C30599 + C30529 * C30611 + C30636 * C30804) / C30500;
    const double C30790 = -C30783;
    const double C31042 = C31034 / C30500;
    const double C31077 = -C31074;
    const double C30942 = C30936 - C30917;
    const double C31002 = -C30999;
    const double C10833 =
        (5 * (3 * C31291 + C30687 * C31295) +
         C30687 * (4 * C31295 +
                   C30687 * (3 * C30993 +
                             C30687 * (2 * C31085 +
                                       C30687 * (C30625 + C30655 * C30804))))) /
        C30500;
    const double C31101 = C31099 / C30500;
    const double C30637 = C30626 - C30635;
    const double C31301 = C31299 - C31300;
    const double C31444 = C31440 - C31443;
    const double C31792 = C31762 / C30371;
    const double C31452 = C31448 - C31451;
    const double C31806 = C31791 / C30388;
    const double C31568 = C31563 - C31567;
    const double C31798 = C31773 / C30371;
    const double C31575 = C31571 - C31574;
    const double C31812 = C31802 / C30388;
    const double C30447 = C30445 / C30371;
    const double C30420 = C31467 - C30416;
    const double C30429 = C30425 + C31530;
    const double C30457 = C30454 - C30456;
    const double C3136 = C167 * C31526;
    const double C3130 = C165 * C31526;
    const double C12019 = C9440 * C31526;
    const double C31743 = C31526 * C31520;
    const double C31779 = C31745 + C31526;
    const double C31747 = C31533 / C30388;
    const double C31744 = C31533 * C31520;
    const double C1551 = C31810 - (C31526 * C31522) / C30371;
    const double C1201 = C169 * C1183;
    const double C1193 = C166 * C1183;
    const double C1187 = C164 * C1183;
    const double C1754 = C588 * C1183;
    const double C1746 = C586 * C1183;
    const double C10115 = C9444 * C1183;
    const double C10104 = C9441 * C1183;
    const double C10096 = C9439 * C1183;
    const double C168 = C152 + C153;
    const double C13694 = C13672 + C13673;
    const double C380 = C353 + C354;
    const double C13687 = C13658 + C13659;
    const double C13881 = C13852 + C13853;
    const double C587 = C564 + C565;
    const double C14074 = C14044 + C14045;
    const double C9442 = C9432 + C9433;
    const double C25186 = C25175 + C25176;
    const double C9807 = C9798 + C9799;
    const double C25184 = C25171 + C25172;
    const double C25654 = C25649 + C25650;
    const double C394 = C381 * C307;
    const double C1191 = C381 * C1185;
    const double C604 = C592 * C114;
    const double C2342 = C592 * C717;
    const double C10389 = C592 * C1183;
    const double C12282 = C592 * C305;
    const double C1059 = C1052 * C718;
    const double C1744 = C1052 * C1184;
    const double C2994 = C1052 * C2698;
    const double C3711 = C1052 * C306;
    const double C10122 = C10100 + C10101;
    const double C25651 = C25643 + C25644;
    const double C26053 = C26029 + C26030;
    const double C9808 = C9802 + C9803;
    const double C25187 = C25177 + C25178;
    const double C26057 = C26037 + C26038;
    const double C184 = C176 + C177;
    const double C383 = C359 + C360;
    const double C742 = C728 + C729;
    const double C10111 = C31650 * C1448;
    const double C26052 = C13645 * C1448;
    const double C26044 = C13646 * C1448;
    const double C10842 = C31650 * C2188;
    const double C26916 = C13645 * C2188;
    const double C10117 = C31650 * C2590;
    const double C26912 = C13646 * C2590;
    const double C27390 = C13645 * C2590;
    const double C382 = C357 + C358;
    const double C13884 = C13858 + C13859;
    const double C13880 = C13850 + C13851;
    const double C385 = C363 + C364;
    const double C13688 = C13660 + C13661;
    const double C13888 = C13866 + C13867;
    const double C589 = C568 + C569;
    const double C14078 = C14052 + C14053;
    const double C593 = C576 + C577;
    const double C14082 = C14060 + C14061;
    const double C1053 = C1038 + C1039;
    const double C14075 = C14046 + C14047;
    const double C14584 = C14570 + C14571;
    const double C10123 = C10102 + C10103;
    const double C25653 = C25647 + C25648;
    const double C26055 = C26033 + C26034;
    const double C9809 = C9804 + C9805;
    const double C25185 = C25173 + C25174;
    const double C26059 = C26041 + C26042;
    const double C9443 = C9435 + C9436;
    const double C26923 = C26909 + C26910;
    const double C30558 = -C30557;
    const double C30569 = C30567 / C30533;
    const double C30749 = C30740 / C30533;
    const double C2189 =
        3 * ((-(C30562 * C30804) / C30371) / C30500 - C30729 / C30533) +
        C30687 * ((-2 * C30823) / C30533 +
                  C30687 * ((-(C30529 * C30572 * C30804) / C30371) / C30500 -
                            C30562 / C30533));
    const double C2591 =
        (((-2 * C30687 * C30614) / C30371 -
          (C30687 * (C30641 * C30804 + C30614)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30618 + C30687 * (C30618 + C30647 * C30804)) * ce) /
            C30533 +
        C30524 * ((-2 * C30823) / C30533 +
                  C30687 * ((-(C30529 * C30572 * C30804) / C30371) / C30500 -
                            C30562 / C30533));
    const double C2347 = C31650 * C1449;
    const double C14063 = C13646 * C1449;
    const double C16017 = C13645 * C1449;
    const double C2471 = C31650 * C2186;
    const double C16157 = C13645 * C2186;
    const double C30978 = C30975 / C30533;
    const double C31121 = C31119 / C30533;
    const double C30986 = -C30985;
    const double C332 =
        (2 * C30599 + C30529 * C30611 +
         C30524 * (C30524 * C30636 + C30631 * ae) + C30524 * C30631 * ae) /
        C30500;
    const double C334 = (C30524 * (3 * C30611 + C30529 * C30636) +
                         (3 * C30606 + C30529 * C30631) * ae) /
                        C30500;
    const double C1024 = (C30687 * (C30524 * C30636 + C30631 * ae)) / C30500;
    const double C120 = 4 * (2 * C30594 + C30529 * C30606) +
                        C30529 * (3 * C30606 + C30529 * C30631);
    const double C315 = 2 * C30594 + C30529 * C30606 + C30631 * C30527;
    const double C316 = C30524 * (3 * C30606 + C30529 * C30631);
    const double C525 = C30687 * (3 * C30606 + C30529 * C30631);
    const double C529 = 2 * C30594 + C30529 * C30606 + C30631 * C30804;
    const double C1016 = C30687 * C30524 * C30631;
    const double C1561 =
        2 * C30524 * C30631 + C30524 * (C30631 + C30661 * C30527);
    const double C1739 = C30687 * (C30631 + C30661 * C30527);
    const double C2463 =
        2 * C30687 * C30631 + C30687 * (C30631 + C30661 * C30804);
    const double C1297 = (2 * (C30524 * C30611 + C30606 * ae) +
                          C30524 * (C30611 + C30524 * C30772 + C30768 * ae) +
                          (C30606 + C30623 * C30527) * ae) /
                         C30500;
    const double C1430 =
        (C30687 * (C30611 + C30524 * C30772 + C30768 * ae)) / C30500;
    const double C1440 =
        (C30524 * C30611 + C30606 * ae + C30772 * C30804) / C30500;
    const double C2350 = C113 * C1424;
    const double C14068 = C13650 * C1424;
    const double C1298 =
        (-2 * (C30524 * C30610 + C30606 * ce)) / C30371 -
        (C30524 * (C30524 * C30771 + C30610 + C30768 * ce)) / C30371 -
        ((C30606 + C30623 * C30527) * ce) / C30371;
    const double C1431 =
        -(C30687 * (C30524 * C30771 + C30610 + C30768 * ce)) / C30371;
    const double C1441 =
        -(C30771 * C30804 + C30524 * C30610 + C30606 * ce) / C30371;
    const double C30760 = C30618 + C30757;
    const double C31022 = C31011 / C30533;
    const double C15094 = C13650 * C1286;
    const double C10391 = C113 * C1423;
    const double C16010 = C13650 * C1423;
    const double C15300 = C13650 * C1866;
    const double C20613 = C113 * C1866;
    const double C30759 = C30756 + C30614;
    const double C31026 = C31015 / C30371;
    const double C31021 = C31009 / C30371;
    const double C30879 = C30875 + C30862;
    const double C31094 = C31089 / C30533;
    const double C11235 =
        (4 * (2 * C30687 * C30716 + C30687 * C31312) +
         C30687 *
             (3 * C31312 +
              C30687 * (2 * C31084 + C30687 * (C30861 + C30924 * C30804)))) /
        C30500;
    const double C5776 = 4 * (2 * C30695 + C30524 * C30715) +
                         C30524 * (3 * C30715 + C30524 * C30874);
    const double C5894 = C30687 * (3 * C30715 + C30524 * C30874);
    const double C5895 = 2 * C30695 + C30524 * C30715 + C30874 * C30804;
    const double C6904 =
        2 * C30687 * C30874 + C30687 * (C30874 + C30939 * C30804);
    const double C30878 = C30872 + C30859;
    const double C30927 = -C30914;
    const double C31093 = C31088 / C30371;
    const double C11236 =
        4 * ((-2 * C30687 * C30713) / C30371 - (C30687 * C31315) / C30371) +
        C30687 * ((-3 * C31315) / C30371 +
                  C30687 * ((-2 * C31082) / C30371 -
                            (C30687 * (C30921 * C30804 + C30858)) / C30371));
    const double C10830 =
        5 * (3 * C31397 + C30687 * C31404) +
        C30687 * (4 * C31404 +
                  C30687 * (3 * C31402 +
                            C30687 * (2 * C30687 * C30548 +
                                      C30687 * (C30548 + C30563 * C30804))));
    const double C170 = C156 + C157;
    const double C13699 = C13682 + C13683;
    const double C386 = C365 + C366;
    const double C13891 = C13872 + C13873;
    const double C13887 = C13864 + C13865;
    const double C388 = C369 + C370;
    const double C13693 = C13670 + C13671;
    const double C14227 = C14220 + C14221;
    const double C590 = C570 + C571;
    const double C14371 = C14366 + C14367;
    const double C594 = C578 + C579;
    const double C14087 = C14070 + C14071;
    const double C1054 = C1040 + C1041;
    const double C14077 = C14050 + C14051;
    const double C14587 = C14576 + C14577;
    const double C2478 = C2472 + C2473;
    const double C1573 = C31650 * C1293;
    const double C13857 = C13646 * C1293;
    const double C15097 = C13645 * C1293;
    const double C1749 = C31650 * C1428;
    const double C14569 = C13646 * C1428;
    const double C15303 = C13645 * C1428;
    const double C2345 = C31650 * C1436;
    const double C14059 = C13646 * C1436;
    const double C16013 = C13645 * C1436;
    const double C11015 = C31650 * C2586;
    const double C16155 = C13646 * C2586;
    const double C30758 = C30755 / C30500;
    const double C2480 = C2476 * C114;
    const double C11012 = C2476 * C717;
    const double C11136 = C11134 * C114;
    const double C30726 = C30723 + C30717;
    const double C10127 = C10112 + C10113;
    const double C26922 = C26907 + C26908;
    const double C27392 = C27385 + C27386;
    const double C11247 = C11242 + C11243;
    const double C26927 = C26917 + C26918;
    const double C30877 = C30871 - C30855;
    const double C30980 = C30979 / C30500;
    const double C10850 = C10845 + C10846;
    const double C171 = C158 + C159;
    const double C13697 = C13678 + C13679;
    const double C1575 = C31650 * C1303;
    const double C13861 = C13646 * C1303;
    const double C15101 = C13645 * C1303;
    const double C1751 = C31650 * C1445;
    const double C14573 = C13646 * C1445;
    const double C15307 = C13645 * C1445;
    const double C10394 = C31650 * C1450;
    const double C16015 = C13646 * C1450;
    const double C1574 = C113 * C1294;
    const double C13860 = C13650 * C1294;
    const double C15100 = C13649 * C1294;
    const double C1750 = C113 * C1429;
    const double C14572 = C13650 * C1429;
    const double C15306 = C13649 * C1429;
    const double C2346 = C113 * C1437;
    const double C14062 = C13650 * C1437;
    const double C16016 = C13649 * C1437;
    const double C11016 = C113 * C2587;
    const double C16158 = C13650 * C2587;
    const double C30725 = C30722 + C30714;
    const double C30863 = -C30852;
    const double C30575 = -C30574;
    const double C30998 = -C30995;
    const double C31035 = C31025 / C30533;
    const double C31073 = C30524 * C31070;
    const double C31113 = C31112 / C30371;
    const double C31097 = C31092 / C30533;
    const double C30670 = C30529 * C30668;
    const double C30814 = C30524 * C30668;
    const double C2464 =
        (2 * C30687 * C30636 + C30687 * (C30636 + C30668 * C30804)) / C30500;
    const double C30792 = C30524 * C30788;
    const double C2588 =
        (2 * C30687 * C30772 + C30687 * (C30772 + C30788 * C30804)) / C30500;
    const double C30946 = C30940 + C30925;
    const double C31053 = C30647 + C31046;
    const double C30669 = C30656 - C30666;
    const double C30791 = C30524 * C30785;
    const double C2589 = (-2 * C30687 * C30771) / C30371 -
                         (C30687 * (C30785 * C30804 + C30771)) / C30371;
    const double C30943 = C30937 + C30922;
    const double C31050 = C31043 + C30641;
    const double C30727 = C30724 - C30712;
    const double C30667 = C30643 + C30664;
    const double C2337 = C30524 * C30631 + C30813 * C30804;
    const double C30816 = C30812 / C30371;
    const double C30952 = C30907 + C30945;
    const double C30951 = C30944 / C30371;
    const double C6004 = 4 * (2 * C30732 + C30524 * C30752) +
                         C30524 * (3 * C30752 + C30524 * C31052);
    const double C6154 = C30687 * (3 * C30752 + C30524 * C31052);
    const double C6700 = 2 * C30732 + C30524 * C30752 + C31052 * C30804;
    const double C163 = C31650 * C133;
    const double C862 = C31650 * C540;
    const double C585 = C31650 * C548;
    const double C30793 = C30790 / C30500;
    const double C31049 = C31042 - C31024;
    const double C31078 = C31077 / C30500;
    const double C30949 = C30942 - C30918;
    const double C31004 = C31002 / C30500;
    const double C31103 = C31101 - C31096;
    const double C132 =
        4 * ((-2 * C30598) / C30371 - (C30529 * C30610) / C30371) +
        C30529 * ((-3 * C30610) / C30371 + C30529 * C30637);
    const double C333 = (-2 * C30598) / C30371 - (C30529 * C30610) / C30371 +
                        C30524 * (C30524 * C30637 - (C30631 * ce) / C30371) -
                        (C30524 * C30631 * ce) / C30371;
    const double C335 = C30524 * ((-3 * C30610) / C30371 + C30529 * C30637) -
                        ((3 * C30606 + C30529 * C30631) * ce) / C30371;
    const double C539 = C30687 * ((-3 * C30610) / C30371 + C30529 * C30637);
    const double C547 =
        (-2 * C30598) / C30371 - (C30529 * C30610) / C30371 + C30637 * C30804;
    const double C1025 = C30687 * (C30524 * C30637 - (C30631 * ce) / C30371);
    const double C10834 =
        5 * ((-3 * C31288) / C30371 + C30687 * C31301) +
        C30687 * (4 * C31301 +
                  C30687 * ((-3 * C30994) / C30371 +
                            C30687 * ((-2 * C31086) / C30371 -
                                      (C30687 * (C30651 * C30804 + C30621)) /
                                          C30371)));
    const double C31725 = C31444 * C31434;
    const double C31764 = C31730 + C31444;
    const double C31733 = C31452 / C30388;
    const double C31729 = C31452 * C31434;
    const double C713 = C31806 - (C31444 * C31435) / C30371;
    const double C31749 = C31568 * C31562;
    const double C31785 = C31751 + C31568;
    const double C31753 = C31575 / C30388;
    const double C31750 = C31575 * C31562;
    const double C2459 = C31812 - (C31568 * C31564) / C30371;
    const double C30449 = C30444 - C30447;
    const double C30424 = C30420 * ce;
    const double C2697 = (-C30406) / C30388 - (C30420 * de) / C30371;
    const double C30433 = C30429 * de;
    const double C3133 = C381 * C30457;
    const double C1282 =
        (C30457 / C30388 + (0 * ce) / C30371) / C30388 - (0 * de) / C30371;
    const double C1560 = C30457 / C30388 - (0 * de) / C30371;
    const double C2830 = C30457 / C30388 + (0 * ce) / C30371;
    const double C31776 = C31743 / C30371;
    const double C31800 = C31779 / C30388;
    const double C31801 = C31780 + C31747;
    const double C1553 = C31747 - C31531 / C30375;
    const double C31778 = C31744 / C30371;
    const double C1577 = C167 * C1551;
    const double C1567 = C165 * C1551;
    const double C10498 = C9440 * C1551;
    const double C1205 = C1193 + C1194;
    const double C178 = C168 * C31467;
    const double C371 = C168 * C31808;
    const double C733 = C168 * C31740;
    const double C1200 = C168 * C1177;
    const double C2709 = C168 * C2691;
    const double C3142 = C168 * C31526;
    const double C393 = C380 * C31796;
    const double C727 = C380 * C31530;
    const double C1190 = C380 * C1178;
    const double C2703 = C380 * C31530;
    const double C3132 = C380 * C31533;
    const double C599 = C587 * C31467;
    const double C1036 = C587 * C31740;
    const double C1745 = C587 * C1177;
    const double C2995 = C587 * C2691;
    const double C3454 = C587 * C31526;
    const double C3712 = C587 * C31808;
    const double C20608 = C587 * C1551;
    const double C9448 = C9442 * C31467;
    const double C9801 = C9442 * C31740;
    const double C10105 = C9442 * C1177;
    const double C10508 = C9442 * C1551;
    const double C10752 = C9442 * C31808;
    const double C11599 = C9442 * C2691;
    const double C12025 = C9442 * C31526;
    const double C9811 = C9807 * C31530;
    const double C10099 = C9807 * C1178;
    const double C10748 = C9807 * C31796;
    const double C11597 = C9807 * C31530;
    const double C12021 = C9807 * C31533;
    const double C10131 = C10122 * C1185;
    const double C10749 = C10122 * C307;
    const double C12022 = C10122 * C30457;
    const double C9812 = C9808 * C718;
    const double C10106 = C9808 * C1184;
    const double C10753 = C9808 * C306;
    const double C11600 = C9808 * C2698;
    const double C187 = C184 * C31664;
    const double C404 = C383 - C396;
    const double C746 = C742 - C730;
    const double C10848 = C10841 + C10842;
    const double C26926 = C26915 + C26916;
    const double C10128 = C10116 + C10117;
    const double C26924 = C26911 + C26912;
    const double C27394 = C27389 + C27390;
    const double C395 = C382 * C31771;
    const double C1192 = C382 * C31771;
    const double C3134 = C382 * C3121;
    const double C397 = C385 * C31796;
    const double C731 = C385 * C31530;
    const double C1196 = C385 * C1178;
    const double C2707 = C385 * C31530;
    const double C3138 = C385 * C31533;
    const double C601 = C589 * C31467;
    const double C1042 = C589 * C31740;
    const double C1753 = C589 * C1177;
    const double C2999 = C589 * C2691;
    const double C3460 = C589 * C31526;
    const double C3718 = C589 * C31808;
    const double C605 = C593 * C31467;
    const double C2343 = C593 * C31740;
    const double C3003 = C593 * C2691;
    const double C10388 = C593 * C1177;
    const double C12031 = C593 * C31526;
    const double C12281 = C593 * C31808;
    const double C1060 = C1053 * C31530;
    const double C1747 = C1053 * C1178;
    const double C2997 = C1053 * C31530;
    const double C3456 = C1053 * C31533;
    const double C3714 = C1053 * C31796;
    const double C10132 = C10123 * C31771;
    const double C10750 = C10123 * C31771;
    const double C12023 = C10123 * C3121;
    const double C9813 = C9809 * C31530;
    const double C10107 = C9809 * C1178;
    const double C10754 = C9809 * C31796;
    const double C11601 = C9809 * C31530;
    const double C12027 = C9809 * C31533;
    const double C9449 = C9443 * C31467;
    const double C10114 = C9443 * C1177;
    const double C10758 = C9443 * C31808;
    const double C11009 = C9443 * C31740;
    const double C11604 = C9443 * C2691;
    const double C13555 = C9443 * C31526;
    const double C30559 = C30558 / C30500;
    const double C11130 = C31650 * C2189;
    const double C11017 = C31650 * C2591;
    const double C16159 = C13646 * C2591;
    const double C2477 = C2470 + C2471;
    const double C16162 = C16156 + C16157;
    const double C30987 = C30986 / C30500;
    const double C376 = C31650 * C332;
    const double C14219 = C13646 * C332;
    const double C739 = C31650 * C334;
    const double C13681 = C13646 * C334;
    const double C1049 = C31650 * C1024;
    const double C14365 = C13646 * C1024;
    const double C162 = C113 * C120;
    const double C375 = C113 * C315;
    const double C14218 = C13650 * C315;
    const double C738 = C113 * C316;
    const double C13680 = C13650 * C316;
    const double C861 = C113 * C525;
    const double C584 = C113 * C529;
    const double C1048 = C113 * C1016;
    const double C14364 = C13650 * C1016;
    const double C1583 = C31650 * C1297;
    const double C13871 = C13646 * C1297;
    const double C1757 = C31650 * C1430;
    const double C14575 = C13646 * C1430;
    const double C2351 = C31650 * C1440;
    const double C14069 = C13646 * C1440;
    const double C1584 = C113 * C1298;
    const double C13874 = C13650 * C1298;
    const double C1758 = C113 * C1431;
    const double C14578 = C13650 * C1431;
    const double C2352 = C113 * C1441;
    const double C14064 = C13650 * C1441;
    const double C30763 = C30760 + C30754;
    const double C30762 = C30759 + C30751;
    const double C31033 = -C31021;
    const double C30883 = C30524 * C30879;
    const double C30908 = 3 * C30879;
    const double C30894 = C30879 * ce;
    const double C26519 = C13650 * C5894;
    const double C10513 = C113 * C5895;
    const double C26045 = C13650 * C5895;
    const double C30882 = C30524 * C30878;
    const double C30900 = -3 * C30878;
    const double C30893 = ae * C30878;
    const double C30935 = C30927 / C30500;
    const double C31098 = -C31093;
    const double C180 = C170 * C114;
    const double C736 = C170 * C717;
    const double C398 = C386 * C307;
    const double C1197 = C386 * C1185;
    const double C3139 = C386 * C30457;
    const double C400 = C388 * C306;
    const double C732 = C388 * C718;
    const double C1199 = C388 * C1184;
    const double C2708 = C388 * C2698;
    const double C602 = C590 * C114;
    const double C1046 = C590 * C717;
    const double C606 = C594 * C114;
    const double C2348 = C594 * C717;
    const double C1061 = C1054 * C718;
    const double C1752 = C1054 * C1184;
    const double C2998 = C1054 * C2698;
    const double C3717 = C1054 * C306;
    const double C2482 = C2478 * C114;
    const double C1586 = C1572 + C1573;
    const double C13883 = C13856 + C13857;
    const double C15103 = C15096 + C15097;
    const double C1760 = C1748 + C1749;
    const double C14583 = C14568 + C14569;
    const double C15309 = C15302 + C15303;
    const double C2354 = C2344 + C2345;
    const double C14081 = C14058 + C14059;
    const double C16019 = C16012 + C16013;
    const double C11020 = C11014 + C11015;
    const double C16161 = C16154 + C16155;
    const double C30761 = C30758 - C30748;
    const double C1291 =
        (3 * (C30590 + C30524 * C30699 + C30695 * ae) +
         C30524 * (2 * C30699 + C30524 * C30726 + C30715 * ae) +
         (2 * C30695 + C30524 * C30715) * ae) /
        C30500;
    const double C1434 =
        (C30590 + C30524 * C30699 + C30695 * ae + C30726 * C30804) / C30500;
    const double C1868 =
        (C30687 * (2 * C30699 + C30524 * C30726 + C30715 * ae)) / C30500;
    const double C6546 =
        (2 * C30687 * C30726 + C30687 * (C30726 + C30879 * C30804)) / C30500;
    const double C10136 = C10127 * C1184;
    const double C10757 = C10127 * C306;
    const double C11008 = C10127 * C718;
    const double C11603 = C10127 * C2698;
    const double C11250 = C11247 * C718;
    const double C13147 = C11247 * C2698;
    const double C30881 = C30877 - C30856;
    const double C30981 = C30980 - C30977;
    const double C10854 = C10850 * C114;
    const double C181 = C171 * C31467;
    const double C737 = C171 * C31740;
    const double C2713 = C171 * C2691;
    const double C1587 = C1574 + C1575;
    const double C13885 = C13860 + C13861;
    const double C15105 = C15100 + C15101;
    const double C1761 = C1750 + C1751;
    const double C14585 = C14572 + C14573;
    const double C15311 = C15306 + C15307;
    const double C2355 = C2346 + C2347;
    const double C14083 = C14062 + C14063;
    const double C16021 = C16016 + C16017;
    const double C1874 =
        2 * ((-(C30687 * C30597 * ce) / C30371) / C30500 -
             (ae * C30687 * C30596) / C30533 - (C30524 * C30821) / C30533) -
        (ae * C30687 * C30725) / C30533 - (C30687 * C30726 * ce) / C30533 +
        C30524 * ((-(ae * C30687 * C30713) / C30371) / C30500 -
                  C30821 / C30533 - (C30687 * C30716 * ce) / C30533 +
                  C30524 * ((-(C30687 * C30607 * ce) / C30371) / C30500 -
                            (ae * C30687 * C30605) / C30533 -
                            (C30524 * C30687 * C30555) / C30533));
    const double C1292 =
        (-3 * (C30524 * C30698 + C30589 + C30695 * ce)) / C30371 +
        C30524 * ((-2 * C30698) / C30371 - (C30524 * C30725) / C30371 -
                  (C30715 * ce) / C30371) -
        ((2 * C30695 + C30524 * C30715) * ce) / C30371;
    const double C1435 =
        -(C30725 * C30804 + C30524 * C30698 + C30589 + C30695 * ce) / C30371;
    const double C1869 =
        C30687 * ((-2 * C30698) / C30371 - (C30524 * C30725) / C30371 -
                  (C30715 * ce) / C30371);
    const double C6545 = (-2 * C30687 * C30725) / C30371 -
                         (C30687 * (C30878 * C30804 + C30725)) / C30371;
    const double C30870 = C30863 / C30500;
    const double C30576 = C30575 / C30500;
    const double C31001 = C30998 / C30500;
    const double C31076 = C31073 / C30533;
    const double C31114 = -C31113;
    const double C30672 = C30646 + C30670;
    const double C30817 = C30814 + C30815;
    const double C30795 = C30632 + C30792;
    const double C30953 = C30524 * C30946;
    const double C6548 =
        (3 * (C30726 + C30879 * C30804) +
         C30687 * (2 * C30687 * C30879 + C30687 * (C30879 + C30946 * C30804))) /
        C30500;
    const double C31057 = C31053 + C31040;
    const double C30671 = C30529 * C30669;
    const double C30811 = C30524 * C30669;
    const double C2465 =
        2 * C30687 * C30637 + C30687 * (C30637 + C30669 * C30804);
    const double C30794 = C30791 + C30630;
    const double C30950 = C30524 * C30943;
    const double C6550 =
        (-3 * (C30878 * C30804 + C30725)) / C30371 +
        C30687 * ((-2 * C30687 * C30878) / C30371 -
                  (C30687 * (C30943 * C30804 + C30878)) / C30371);
    const double C31056 = C31050 + C31037;
    const double C1302 =
        3 * ((-(ae * C30698) / C30371) / C30500 - C30537 / C30533 -
             (C30699 * ce) / C30533 + C30524 * C30727) +
        (((-2 * C30698) / C30371 - (C30524 * C30725) / C30371 -
          (C30715 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30699 + C30524 * C30726 + C30715 * ae) * ce) / C30533 +
        C30524 * (2 * C30727 - (ae * C30725) / C30533 - (C30726 * ce) / C30533 +
                  C30524 * ((-(ae * C30713) / C30371) / C30500 - C30551 -
                            (C30716 * ce) / C30533 +
                            C30524 * ((-(C30607 * ce) / C30371) / C30500 -
                                      (ae * C30605) / C30533 -
                                      (C30524 * C30555) / C30533)));
    const double C121 = 5 * (3 * C30606 + C30529 * C30631) +
                        C30529 * (4 * C30631 + C30529 * C30667);
    const double C317 = 3 * C30606 + C30529 * C30631 + C30667 * C30527;
    const double C530 = 3 * C30606 + C30529 * C30631 + C30667 * C30804;
    const double C719 = C30524 * (4 * C30631 + C30529 * C30667);
    const double C853 = C30687 * (4 * C30631 + C30529 * C30667);
    const double C1017 = C30687 * C30524 * C30667;
    const double C5777 = 5 * (3 * C30715 + C30524 * C30874) +
                         C30524 * (4 * C30874 + C30524 * C30952);
    const double C5896 = 3 * C30715 + C30524 * C30874 + C30952 * C30804;
    const double C6256 = C30687 * (4 * C30874 + C30524 * C30952);
    const double C30796 = C30793 - C30784;
    const double C31055 = C31049 - C31035;
    const double C31079 = C31078 - C31075;
    const double C30954 = C30524 * C30949;
    const double C31006 = C31004 - C31000;
    const double C31105 = C31103 - C31097;
    const double C160 = C113 * C132;
    const double C377 = C113 * C333;
    const double C14222 = C13650 * C333;
    const double C740 = C113 * C335;
    const double C13676 = C13650 * C335;
    const double C859 = C113 * C539;
    const double C582 = C113 * C547;
    const double C1050 = C113 * C1025;
    const double C14360 = C13650 * C1025;
    const double C31760 = C31725 / C30371;
    const double C31793 = C31764 / C30388;
    const double C31794 = C31766 + C31733;
    const double C715 = C31733 - C31450 / C30375;
    const double C31763 = C31729 / C30371;
    const double C31782 = C31749 / C30371;
    const double C31803 = C31785 / C30388;
    const double C31804 = C31786 + C31753;
    const double C2461 = C31753 - C31573 / C30375;
    const double C31784 = C31750 / C30371;
    const double C30428 = C30424 / C30371;
    const double C2712 = C170 * C2697;
    const double C2710 = C169 * C2697;
    const double C2704 = C166 * C2697;
    const double C2700 = C164 * C2697;
    const double C3006 = C594 * C2697;
    const double C3002 = C592 * C2697;
    const double C3000 = C588 * C2697;
    const double C2996 = C586 * C2697;
    const double C3300 = C590 * C2697;
    const double C11607 = C2476 * C2697;
    const double C11605 = C9444 * C2697;
    const double C11598 = C9441 * C2697;
    const double C11594 = C9439 * C2697;
    const double C13145 = C10847 * C2697;
    const double C30439 = C30433 / C30371;
    const double C31815 = C31776 + C31810;
    const double C1552 = C31800 - (C31533 * C31522) / C30371;
    const double C2837 = C382 * C31801;
    const double C13035 = C10123 * C31801;
    const double C1275 = C31801 / C30388 - C31531 / C31767;
    const double C1571 = C382 * C1553;
    const double C10502 = C10123 * C1553;
    const double C31811 = C31778 + C31800;
    const double C1206 = C1205 - C1195;
    const double C185 = C178 + C179;
    const double C743 = C733 + C734;
    const double C19635 = C599 + C598;
    const double C19634 = C598 + C599;
    const double C20095 = C1036 + C1037;
    const double C20094 = C1037 + C1036;
    const double C20816 = C1745 + C1746;
    const double C20815 = C1746 + C1745;
    const double C23130 = C3712 + C3713;
    const double C23129 = C3713 + C3712;
    const double C9451 = C9447 + C9448;
    const double C11006 = C9800 + C9801;
    const double C10124 = C10104 + C10105;
    const double C10763 = C10751 + C10752;
    const double C10852 = C10848 * C31467;
    const double C11241 = C10848 * C31740;
    const double C13146 = C10848 * C2691;
    const double C10137 = C10128 * C1178;
    const double C10760 = C10128 * C31796;
    const double C11011 = C10128 * C31530;
    const double C11606 = C10128 * C31530;
    const double C13557 = C10128 * C31533;
    const double C405 = C404 - C397;
    const double C750 = C746 - C731;
    const double C610 = C601 + C600;
    const double C19636 = C600 + C601;
    const double C1055 = C1042 + C1043;
    const double C20096 = C1043 + C1042;
    const double C9434 = C605 + C604;
    const double C19637 = C604 + C605;
    const double C11007 = C2343 + C2342;
    const double C21523 = C2342 + C2343;
    const double C10838 = C9449 + C9450;
    const double C11239 = C11009 + C11010;
    const double C30560 = C30559 - C30551;
    const double C11133 = C11129 + C11130;
    const double C11021 = C11016 + C11017;
    const double C16163 = C16158 + C16159;
    const double C2481 = C2477 * C31467;
    const double C11013 = C2477 * C31740;
    const double C11608 = C2477 * C2691;
    const double C30988 = C30987 - C30551;
    const double C173 = C162 + C163;
    const double C390 = C375 + C376;
    const double C14226 = C14218 + C14219;
    const double C744 = C738 + C739;
    const double C13698 = C13680 + C13681;
    const double C865 = C861 + C862;
    const double C597 = C584 + C585;
    const double C1057 = C1048 + C1049;
    const double C14370 = C14364 + C14365;
    const double C1588 = C1582 + C1583;
    const double C13890 = C13870 + C13871;
    const double C1762 = C1756 + C1757;
    const double C14586 = C14574 + C14575;
    const double C2356 = C2350 + C2351;
    const double C14086 = C14068 + C14069;
    const double C1295 =
        (3 * (C30599 + C30524 * C30736 + C30732 * ae) +
         C30524 * (2 * C30736 + C30524 * C30763 + C30752 * ae) +
         (2 * C30732 + C30524 * C30752) * ae) /
        C30500;
    const double C1438 =
        (C30599 + C30524 * C30736 + C30732 * ae + C30763 * C30804) / C30500;
    const double C1870 =
        (C30687 * (2 * C30736 + C30524 * C30763 + C30752 * ae)) / C30500;
    const double C1875 =
        2 * ((-(C30687 * C30618 * ce) / C30371) / C30500 -
             (ae * C30687 * C30614) / C30533 - (C30524 * C30823) / C30533) -
        (ae * C30687 * C30762) / C30533 - (C30687 * C30763 * ce) / C30533 +
        C30524 * ((-(ae * C30687 * C30750) / C30371) / C30500 -
                  C30823 / C30533 - (C30687 * C30753 * ce) / C30533 +
                  C30524 * ((-(C30687 * C30647 * ce) / C30371) / C30500 -
                            (ae * C30687 * C30641) / C30533 -
                            (C30524 * C30687 * C30529 * C30572) / C30533));
    const double C1296 =
        (-3 * (C30524 * C30735 + C30598 + C30732 * ce)) / C30371 +
        C30524 * ((-2 * C30735) / C30371 - (C30524 * C30762) / C30371 -
                  (C30752 * ce) / C30371) -
        ((2 * C30732 + C30524 * C30752) * ce) / C30371;
    const double C1439 =
        -(C30762 * C30804 + C30524 * C30735 + C30598 + C30732 * ce) / C30371;
    const double C1871 =
        C30687 * ((-2 * C30735) / C30371 - (C30524 * C30762) / C30371 -
                  (C30752 * ce) / C30371);
    const double C31041 = C31033 / C30500;
    const double C30886 = C30849 + C30883;
    const double C30913 = C30894 / C30533;
    const double C30885 = C30882 / C30371;
    const double C30919 = C30900 / C30371;
    const double C30912 = C30893 / C30533;
    const double C30941 = C30935 - C30566;
    const double C31100 = C31098 / C30500;
    const double C1590 = C1586 * C1560;
    const double C2838 = C1586 * C2830;
    const double C1764 = C1760 * C1185;
    const double C3457 = C1760 * C30457;
    const double C3715 = C1760 * C307;
    const double C2358 = C2354 * C718;
    const double C3004 = C2354 * C2698;
    const double C10387 = C2354 * C1184;
    const double C12280 = C2354 * C306;
    const double C11024 = C11020 * C718;
    const double C11609 = C11020 * C2698;
    const double C30764 = C30761 - C30749;
    const double C10109 = C31650 * C1434;
    const double C26048 = C13645 * C1434;
    const double C26040 = C13646 * C1434;
    const double C10504 = C31650 * C1868;
    const double C26032 = C13646 * C1868;
    const double C26522 = C13645 * C1868;
    const double C10119 = C31650 * C6546;
    const double C27384 = C13646 * C6546;
    const double C30884 = C30524 * C30881;
    const double C30892 = 2 * C30881;
    const double C30982 = C30981 - C30978;
    const double C186 = C180 + C181;
    const double C1591 = C1587 * C31781;
    const double C2839 = C1587 * C31781;
    const double C1765 = C1761 * C31771;
    const double C3458 = C1761 * C3121;
    const double C3716 = C1761 * C31771;
    const double C20612 = C1761 * C1553;
    const double C22052 = C1761 * C31801;
    const double C2359 = C2355 * C31530;
    const double C3005 = C2355 * C31530;
    const double C10390 = C2355 * C1178;
    const double C12033 = C2355 * C31533;
    const double C12283 = C2355 * C31796;
    const double C10506 = C31650 * C1874;
    const double C26036 = C13646 * C1874;
    const double C26526 = C13645 * C1874;
    const double C10110 = C113 * C1435;
    const double C26051 = C13649 * C1435;
    const double C26043 = C13650 * C1435;
    const double C10505 = C113 * C1869;
    const double C26035 = C13650 * C1869;
    const double C26525 = C13649 * C1869;
    const double C10120 = C113 * C6545;
    const double C27387 = C13650 * C6545;
    const double C30876 = C30870 - C30551;
    const double C30577 = C30576 - C30566;
    const double C31003 = C31001 - C30566;
    const double C31115 = C31114 / C30500;
    const double C134 = (5 * (3 * C30611 + C30529 * C30636) +
                         C30529 * (4 * C30636 + C30529 * C30672)) /
                        C30500;
    const double C336 =
        (3 * C30611 + C30529 * C30636 +
         C30524 * (C30524 * C30672 + C30667 * ae) + C30524 * C30667 * ae) /
        C30500;
    const double C549 =
        (3 * C30611 + C30529 * C30636 + C30672 * C30804) / C30500;
    const double C720 = (C30524 * (4 * C30636 + C30529 * C30672) +
                         (4 * C30631 + C30529 * C30667) * ae) /
                        C30500;
    const double C854 = (C30687 * (4 * C30636 + C30529 * C30672)) / C30500;
    const double C1026 = (C30687 * (C30524 * C30672 + C30667 * ae)) / C30500;
    const double C1562 = (2 * (C30524 * C30636 + C30631 * ae) +
                          C30524 * (C30636 + C30524 * C30817 + C30813 * ae) +
                          (C30631 + C30661 * C30527) * ae) /
                         C30500;
    const double C1740 =
        (C30687 * (C30636 + C30524 * C30817 + C30813 * ae)) / C30500;
    const double C2338 =
        (C30524 * C30636 + C30631 * ae + C30817 * C30804) / C30500;
    const double C30798 = C30795 + C30789;
    const double C30956 = C30909 + C30953;
    const double C31060 = C30524 * C31057;
    const double C6803 =
        (2 * C30687 * C30763 + C30687 * (C30763 + C31057 * C30804)) / C30500;
    const double C30673 = C30649 + C30671;
    const double C30818 = C30811 - C30816;
    const double C30797 = C30794 + C30786;
    const double C30955 = C30950 / C30371;
    const double C31059 = C30524 * C31056;
    const double C6804 = (-2 * C30687 * C30762) / C30371 -
                         (C30687 * (C31056 * C30804 + C30762)) / C30371;
    const double C31058 = C30524 * C31055;
    const double C31080 = C31079 - C31076;
    const double C31106 = C30524 * C31105;
    const double C31814 = C31760 + C31806;
    const double C714 = C31793 - (C31452 * C31435) / C30371;
    const double C110 = C31794 / C30388 - C31450 / C31767;
    const double C31807 = C31763 + C31793;
    const double C31816 = C31782 + C31812;
    const double C2460 = C31803 - (C31575 * C31564) / C30371;
    const double C2165 = C31804 / C30388 - C31573 / C31767;
    const double C31813 = C31784 + C31803;
    const double C30432 = C30428 - C30409;
    const double C2717 = C2709 + C2710;
    const double C2716 = C2704 + C2705;
    const double C11602 = C3003 + C3002;
    const double C22251 = C3002 + C3003;
    const double C3299 = C2999 + C3000;
    const double C22598 = C3000 + C2999;
    const double C22250 = C2995 + C2996;
    const double C22249 = C2996 + C2995;
    const double C13144 = C11604 + C11605;
    const double C11611 = C11598 + C11599;
    const double C2841 = C167 * C31815;
    const double C2833 = C165 * C31815;
    const double C13039 = C9442 * C31815;
    const double C13031 = C9440 * C31815;
    const double C22048 = C587 * C31815;
    const double C1272 =
        (C31808 + 2 * C31526) / C30388 - (C31815 * C31522) / C30371;
    const double C1579 = C385 * C1552;
    const double C1569 = C380 * C1552;
    const double C10510 = C9809 * C1552;
    const double C10500 = C9807 * C1552;
    const double C20610 = C1053 * C1552;
    const double C2843 = C385 * C31811;
    const double C2835 = C380 * C31811;
    const double C13041 = C9809 * C31811;
    const double C13033 = C9807 * C31811;
    const double C22050 = C1053 * C31811;
    const double C1273 =
        (C31796 + 2 * C31533 + C31815) / C30388 - (C31811 * C31522) / C30371;
    const double C1274 = (C31771 + C31530 / C30371 + C31811) / C30388 -
                         (C31801 * C31522) / C30371;
    const double C1207 = C1206 - C1196;
    const double C188 = C185 * C31664;
    const double C747 = C732 - C743;
    const double C20098 = C1059 - C20095;
    const double C20097 = C20094 - C1059;
    const double C20818 = C1744 - C20816;
    const double C20817 = C20815 - C1744;
    const double C23132 = C3711 - C23130;
    const double C23131 = C23129 - C3711;
    const double C11018 = C11006 - C9812;
    const double C10133 = C10124 - C10106;
    const double C10764 = C10763 - C10753;
    const double C10855 = C10851 + C10852;
    const double C406 = C405 + C398;
    const double C752 = C750 * C31664;
    const double C612 = C610 * C31664;
    const double C1065 = C1061 - C1055;
    const double C20099 = C20096 - C1061;
    const double C11246 = C11008 - C11239;
    const double C141 =
        4 * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560) +
        C30529 *
            (3 * C30560 +
             C30529 * ((-2 * C30529 * C30555) / C30533 +
                       C30529 * ((-((C30549 * C30550 +
                                     C30527 * bs[7] * std::pow(C30523, 7)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30555 / C30533)));
    const double C343 = (-(C30546 * C30542) / C30371) / C30500 -
                        C30537 / C30533 -
                        (ae * (C30524 * C30610 + C30606 * ce)) / C30533 -
                        ((C30524 * C30611 + C30606 * ae) * ce) / C30533 +
                        C30524 * ((-(C30611 * ce) / C30371) / C30500 -
                                  (ae * C30610) / C30533 + C30524 * C30560);
    const double C344 =
        (((-2 * C30598) / C30371 - (C30529 * C30610) / C30371) * ae) / C30500 -
        ((2 * C30599 + C30529 * C30611) * ce) / C30533 +
        C30524 * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560);
    const double C553 =
        (zP - zQ) * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560);
    const double C558 = (-(C30546 * C30542) / C30371) / C30500 -
                        C30537 / C30533 + C30560 * std::pow(zP - zQ, 2);
    const double C1030 = (-(C30687 * C30611 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30610) / C30533 +
                         C30524 * C30687 * C30560;
    const double C11135 = C11133 * C31467;
    const double C11025 = C11021 * C31530;
    const double C11610 = C11021 * C31530;
    const double C11128 = C2480 + C2481;
    const double C21656 = C2481 + C2480;
    const double C5904 =
        2 * ((-((C30597 + C30607 * C30804) * ce) / C30371) / C30500 -
             (ae * (C30605 * C30804 + C30596)) / C30533 + C30524 * C30988) -
        (ae * (C30878 * C30804 + C30725)) / C30533 -
        ((C30726 + C30879 * C30804) * ce) / C30533 +
        C30524 *
            (C30988 - (ae * (C30858 * C30804 + C30713)) / C30533 -
             ((C30716 + C30861 * C30804) * ce) / C30533 +
             C30524 *
                 ((-((C30607 + C30625 * C30804) * ce) / C30371) / C30500 -
                  (ae * (C30621 * C30804 + C30605)) / C30533 +
                  C30524 * ((-(C30572 * C30804) / C30371) / C30500 - C30566)));
    const double C183 = C173 * C114;
    const double C402 = C390 * C307;
    const double C1203 = C390 * C1185;
    const double C3145 = C390 * C30457;
    const double C748 = C744 * C718;
    const double C2714 = C744 * C2698;
    const double C867 = C865 * C114;
    const double C609 = C597 * C114;
    const double C1063 = C1057 * C718;
    const double C3302 = C1057 * C2698;
    const double C1592 = C1588 * C1560;
    const double C2846 = C1588 * C2830;
    const double C1766 = C1762 * C1185;
    const double C3463 = C1762 * C30457;
    const double C3721 = C1762 * C307;
    const double C2360 = C2356 * C718;
    const double C3008 = C2356 * C2698;
    const double C15095 = C13646 * C1295;
    const double C10392 = C31650 * C1438;
    const double C16011 = C13646 * C1438;
    const double C15301 = C13646 * C1870;
    const double C20614 = C31650 * C1870;
    const double C15305 = C13646 * C1875;
    const double C20616 = C31650 * C1875;
    const double C15098 = C13650 * C1296;
    const double C10393 = C113 * C1439;
    const double C16014 = C13650 * C1439;
    const double C15304 = C13650 * C1871;
    const double C20615 = C113 * C1871;
    const double C31048 = C31041 - C31010;
    const double C30889 = C30886 + C30869;
    const double C30888 = C30857 - C30885;
    const double C30948 = C30941 - C30915;
    const double C31102 = C31100 - C31083;
    const double C11019 = C2358 - C11007;
    const double C21524 = C21523 - C2358;
    const double C1304 =
        3 * ((-(ae * C30735) / C30371) / C30500 - C30729 / C30533 -
             (C30736 * ce) / C30533 + C30524 * C30764) +
        (((-2 * C30735) / C30371 - (C30524 * C30762) / C30371 -
          (C30752 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30736 + C30524 * C30763 + C30752 * ae) * ce) / C30533 +
        C30524 * (2 * C30764 - (ae * C30762) / C30533 - (C30763 * ce) / C30533 +
                  C30524 * ((-(ae * C30750) / C30371) / C30500 -
                            C30562 / C30533 - (C30753 * ce) / C30533 +
                            C30524 * ((-(C30647 * ce) / C30371) / C30500 -
                                      (ae * C30641) / C30533 -
                                      (C30524 * C30529 * C30572) / C30533)));
    const double C10125 = C10108 + C10109;
    const double C26062 = C26047 + C26048;
    const double C26058 = C26039 + C26040;
    const double C10517 = C10503 + C10504;
    const double C26054 = C26031 + C26032;
    const double C26528 = C26521 + C26522;
    const double C10129 = C10118 + C10119;
    const double C27391 = C27383 + C27384;
    const double C30926 = C30892 - C30912;
    const double C189 = C186 * C31664;
    const double C10126 = C10110 + C10111;
    const double C26064 = C26051 + C26052;
    const double C26060 = C26043 + C26044;
    const double C10518 = C10505 + C10506;
    const double C26056 = C26035 + C26036;
    const double C26530 = C26525 + C26526;
    const double C30880 = C30876 - C30853;
    const double C30578 = C30529 * C30577;
    const double C30776 = C30524 * C30577;
    const double C30825 = C30687 * C30577;
    const double C1305 =
        2 * ((-(C30611 * ce) / C30371) / C30500 - (ae * C30610) / C30533 +
             C30524 * C30560) -
        (ae * (C30524 * C30771 + C30610 + C30768 * ce)) / C30533 -
        ((C30611 + C30524 * C30772 + C30768 * ae) * ce) / C30533 +
        C30524 * (C30560 - (ae * C30771) / C30533 - (C30772 * ce) / C30533 +
                  C30524 * ((-(C30632 * ce) / C30371) / C30500 -
                            (ae * C30630) / C30533 + C30524 * C30577));
    const double C1446 =
        C30687 * C30560 - (ae * C30687 * C30771) / C30533 -
        (C30687 * C30772 * ce) / C30533 +
        C30524 * ((-(C30687 * C30632 * ce) / C30371) / C30500 -
                  (ae * C30687 * C30630) / C30533 + C30524 * C30687 * C30577);
    const double C1451 =
        (-((C30611 + C30632 * C30804) * ce) / C30371) / C30500 -
        (ae * (C30630 * C30804 + C30610)) / C30533 +
        C30524 * (C30560 + C30577 * C30804);
    const double C1452 =
        C30560 + C30577 * C30804 - (ae * (C30785 * C30804 + C30771)) / C30533 -
        ((C30772 + C30788 * C30804) * ce) / C30533 +
        C30524 *
            ((-((C30632 + C30662 * C30804) * ce) / C30371) / C30500 -
             (ae * (C30660 * C30804 + C30630)) / C30533 +
             C30524 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30804));
    const double C2185 =
        2 * C30687 * C30560 + C30687 * (C30560 + C30577 * C30804);
    const double C31005 = C30524 * C31003;
    const double C31120 = C30687 * C31003;
    const double C6551 =
        (-2 * C30821) / C30533 + C30687 * C30988 +
        (((-2 * C30687 * C30713) / C30371 -
          (C30687 * (C30858 * C30804 + C30713)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30716 + C30687 * (C30716 + C30861 * C30804)) * ce) /
            C30533 +
        C30524 * ((((-2 * C30971) / C30371 - (C30687 * C30994) / C30371) * ae) /
                      C30500 -
                  ((2 * C30970 + C30687 * C30993) * ce) / C30533 +
                  C30524 * ((-2 * C30972) / C30533 + C30687 * C31003));
    const double C6552 =
        (((-3 * (C30605 * C30804 + C30596)) / C30371 +
          C30687 * ((-2 * C30971) / C30371 - (C30687 * C30994) / C30371)) *
         ae) /
            C30500 -
        ((3 * (C30597 + C30607 * C30804) +
          C30687 * (2 * C30970 + C30687 * C30993)) *
         ce) /
            C30533 +
        C30524 *
            (3 * C30988 + C30687 * ((-2 * C30972) / C30533 + C30687 * C31003));
    const double C6553 =
        3 * C30988 + C30687 * ((-2 * C30972) / C30533 + C30687 * C31003) +
        (((-3 * (C30858 * C30804 + C30713)) / C30371 +
          C30687 * ((-2 * C31082) / C30371 -
                    (C30687 * (C30921 * C30804 + C30858)) / C30371)) *
         ae) /
            C30500 -
        ((3 * (C30716 + C30861 * C30804) +
          C30687 * (2 * C31084 + C30687 * (C30861 + C30924 * C30804))) *
         ce) /
            C30533 +
        C30524 *
            ((((-3 * C30994) / C30371 +
               C30687 * ((-2 * C31086) / C30371 -
                         (C30687 * (C30651 * C30804 + C30621)) / C30371)) *
              ae) /
                 C30500 -
             ((3 * C30993 +
               C30687 * (2 * C31085 + C30687 * (C30625 + C30655 * C30804))) *
              ce) /
                 C30533 +
             C30524 *
                 (3 * C31003 +
                  C30687 *
                      ((-2 * C31087) / C30533 +
                       C30687 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C31116 = C31115 - C31010;
    const double C1299 =
        (3 * (C30611 + C30524 * C30772 + C30768 * ae) +
         C30524 * (2 * C30772 + C30524 * C30798 + C30787 * ae) +
         (2 * C30768 + C30524 * C30787) * ae) /
        C30500;
    const double C1442 =
        (C30611 + C30524 * C30772 + C30768 * ae + C30798 * C30804) / C30500;
    const double C1872 =
        (C30687 * (2 * C30772 + C30524 * C30798 + C30787 * ae)) / C30500;
    const double C30959 = C30956 + C30933;
    const double C31063 = C31019 + C31060;
    const double C1032 =
        (C30687 * C30673 * ae) / C30500 - (C30687 * C30672 * ce) / C30533 +
        C30524 * C30687 *
            (3 * C30577 +
             C30529 * ((-2 * C30529 * C30572) / C30533 +
                       C30529 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533)));
    const double C135 = 5 * ((-3 * C30610) / C30371 + C30529 * C30637) +
                        C30529 * (4 * C30637 + C30529 * C30673);
    const double C337 = (-3 * C30610) / C30371 + C30529 * C30637 +
                        C30524 * (C30524 * C30673 - (C30667 * ce) / C30371) -
                        (C30524 * C30667 * ce) / C30371;
    const double C550 =
        (-3 * C30610) / C30371 + C30529 * C30637 + C30673 * C30804;
    const double C721 = C30524 * (4 * C30637 + C30529 * C30673) -
                        ((4 * C30631 + C30529 * C30667) * ce) / C30371;
    const double C855 = C30687 * (4 * C30637 + C30529 * C30673);
    const double C1027 = C30687 * (C30524 * C30673 - (C30667 * ce) / C30371);
    const double C1563 =
        2 * (C30524 * C30637 - (C30631 * ce) / C30371) +
        C30524 * (C30637 + C30524 * C30818 - (C30813 * ce) / C30371) -
        ((C30631 + C30661 * C30527) * ce) / C30371;
    const double C1741 =
        C30687 * (C30637 + C30524 * C30818 - (C30813 * ce) / C30371);
    const double C2339 =
        C30524 * C30637 - (C30631 * ce) / C30371 + C30818 * C30804;
    const double C1300 =
        (-3 * (C30524 * C30771 + C30610 + C30768 * ce)) / C30371 +
        C30524 * ((-2 * C30771) / C30371 - (C30524 * C30797) / C30371 -
                  (C30787 * ce) / C30371) -
        ((2 * C30768 + C30524 * C30787) * ce) / C30371;
    const double C1443 =
        -(C30797 * C30804 + C30524 * C30771 + C30610 + C30768 * ce) / C30371;
    const double C1873 =
        C30687 * ((-2 * C30771) / C30371 - (C30524 * C30797) / C30371 -
                  (C30787 * ce) / C30371);
    const double C30958 = C30920 - C30955;
    const double C31062 = C31059 / C30371;
    const double C107 =
        (C31805 + 2 * C31444) / C30388 - (C31814 * C31435) / C30371;
    const double C108 =
        (C31792 + 2 * C31452 + C31814) / C30388 - (C31807 * C31435) / C30371;
    const double C109 = (C31765 + C31449 / C30371 + C31807) / C30388 -
                        (C31794 * C31435) / C30371;
    const double C2162 =
        (C31809 + 2 * C31568) / C30388 - (C31816 * C31564) / C30371;
    const double C2163 =
        (C31798 + 2 * C31575 + C31816) / C30388 - (C31813 * C31564) / C30371;
    const double C2164 = (C31774 + C31572 / C30371 + C31813) / C30388 -
                         (C31804 * C31564) / C30371;
    const double C30438 = C30432 / C30388;
    const double C30437 = C30369 * C30432;
    const double C2719 = C2708 - C2717;
    const double C2718 = C2716 - C2706;
    const double C11612 = C3004 - C11602;
    const double C22254 = C22251 - C3004;
    const double C3304 = C2998 - C3299;
    const double C22599 = C22598 - C2998;
    const double C22253 = C2994 - C22250;
    const double C22252 = C22249 - C2994;
    const double C13149 = C11603 - C13144;
    const double C11613 = C11611 - C11600;
    const double C1208 = C1207 + C1197;
    const double C20101 = C20098 + C1060;
    const double C20100 = C20097 - C1060;
    const double C20820 = C20818 + C1747;
    const double C20819 = C20817 - C1747;
    const double C23134 = C23132 + C3714;
    const double C23133 = C23131 - C3714;
    const double C11022 = C11018 - C9813;
    const double C10140 = C10133 - C10107;
    const double C10765 = C10764 - C10754;
    const double C11249 = C11246 + C11011;
    const double C161 = C31650 * C141;
    const double C368 = C31650 * C343;
    const double C13877 = C13645 * C343;
    const double C13869 = C13646 * C343;
    const double C374 = C31650 * C344;
    const double C13675 = C13646 * C344;
    const double C14225 = C13645 * C344;
    const double C573 = C31650 * C553;
    const double C14363 = C13645 * C553;
    const double C581 = C31650 * C558;
    const double C14067 = C13645 * C558;
    const double C1045 = C31650 * C1030;
    const double C14055 = C13646 * C1030;
    const double C14581 = C13645 * C1030;
    const double C10516 = C31650 * C5904;
    const double C26050 = C13646 * C5904;
    const double C15102 = C15094 + C15095;
    const double C10395 = C10391 + C10392;
    const double C16018 = C16010 + C16011;
    const double C15308 = C15300 + C15301;
    const double C20617 = C20613 + C20614;
    const double C10396 = C10393 + C10394;
    const double C16020 = C16014 + C16015;
    const double C15310 = C15304 + C15305;
    const double C20618 = C20615 + C20616;
    const double C31054 = C31048 - C31022;
    const double C5778 =
        (4 * (2 * C30699 + C30524 * C30726 + C30715 * ae) +
         C30524 * (3 * C30726 + C30524 * C30889 + C30874 * ae) +
         (3 * C30715 + C30524 * C30874) * ae) /
        C30500;
    const double C5897 =
        (C30687 * (3 * C30726 + C30524 * C30889 + C30874 * ae)) / C30500;
    const double C5899 =
        (2 * C30699 + C30524 * C30726 + C30715 * ae + C30889 * C30804) / C30500;
    const double C30890 = C30888 - C30873;
    const double C30957 = C30948 + C30954;
    const double C31104 = C31102 - C31094;
    const double C11023 = C11019 + C2359;
    const double C21525 = C21524 - C2359;
    const double C15099 = C13646 * C1304;
    const double C10134 = C10125 * C1185;
    const double C10755 = C10125 * C307;
    const double C12028 = C10125 * C30457;
    const double C10521 = C10517 * C1560;
    const double C13036 = C10517 * C2830;
    const double C10138 = C10129 * C1185;
    const double C10761 = C10129 * C307;
    const double C13558 = C10129 * C30457;
    const double C30934 = C30926 - C30913;
    const double C10135 = C10126 * C31771;
    const double C10512 = C10126 * C1553;
    const double C10756 = C10126 * C31771;
    const double C12029 = C10126 * C3121;
    const double C13043 = C10126 * C31801;
    const double C10522 = C10518 * C31781;
    const double C13037 = C10518 * C31781;
    const double C30887 = C30880 + C30884;
    const double C30579 = C30569 + C30578;
    const double C30799 = C30796 + C30776;
    const double C1876 =
        2 * ((-(C30687 * C30632 * ce) / C30371) / C30500 -
             (ae * C30687 * C30630) / C30533 + C30524 * C30825) -
        (ae * C30687 * C30797) / C30533 - (C30687 * C30798 * ce) / C30533 +
        C30524 * (C30825 - (ae * C30687 * C30785) / C30533 -
                  (C30687 * C30788 * ce) / C30533 +
                  C30524 * ((-(C30687 * C30662 * ce) / C30371) / C30500 -
                            (ae * C30687 * C30660) / C30533 +
                            C30524 * C30687 *
                                ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533)));
    const double C2190 =
        3 * (C30560 + C30577 * C30804) +
        C30687 *
            (2 * C30825 +
             C30687 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30804));
    const double C2592 =
        (((-2 * C30687 * C30630) / C30371 -
          (C30687 * (C30660 * C30804 + C30630)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30632 + C30687 * (C30632 + C30662 * C30804)) * ce) /
            C30533 +
        C30524 *
            (2 * C30825 +
             C30687 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30804));
    const double C1585 = C31650 * C1305;
    const double C13875 = C13646 * C1305;
    const double C1759 = C31650 * C1446;
    const double C14579 = C13646 * C1446;
    const double C2353 = C31650 * C1451;
    const double C14065 = C13646 * C1451;
    const double C2475 = C31650 * C2185;
    const double C31007 = C31006 + C31005;
    const double C31122 = C31121 + C31120;
    const double C10121 = C31650 * C6551;
    const double C27388 = C13646 * C6551;
    const double C11245 = C31650 * C6552;
    const double C26914 = C13646 * C6552;
    const double C6703 =
        2 * ((-((C30618 + C30647 * C30804) * ce) / C30371) / C30500 -
             (ae * (C30641 * C30804 + C30614)) / C30533 + C30524 * C31116) -
        (ae * (C31056 * C30804 + C30762)) / C30533 -
        ((C30763 + C31057 * C30804) * ce) / C30533 +
        C30524 *
            (C31116 - (ae * (C31036 * C30804 + C30750)) / C30533 -
             ((C30753 + C31039 * C30804) * ce) / C30533 +
             C30524 * ((-((C30647 + C31020 * C30804) * ce) / C30371) / C30500 -
                       (ae * (C31016 * C30804 + C30641)) / C30533 +
                       C30524 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C31014 / C30533)));
    const double C6805 =
        (-2 * C30823) / C30533 + C30687 * C31116 +
        (((-2 * C30687 * C30750) / C30371 -
          (C30687 * (C31036 * C30804 + C30750)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30753 + C30687 * (C30753 + C31039 * C30804)) * ce) /
            C30533 +
        C30524 *
            ((((-2 * C31069) / C30371 -
               (C30687 * (C31016 * C30804 + C30641)) / C30371) *
              ae) /
                 C30500 -
             ((2 * C31068 + C30687 * (C30647 + C31020 * C30804)) * ce) /
                 C30533 +
             C30524 * ((-2 * C31070) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C31014 / C30533)));
    const double C11004 =
        (((-3 * (C30641 * C30804 + C30614)) / C30371 +
          C30687 * ((-2 * C31069) / C30371 -
                    (C30687 * (C31016 * C30804 + C30641)) / C30371)) *
         ae) /
            C30500 -
        ((3 * (C30618 + C30647 * C30804) +
          C30687 * (2 * C31068 + C30687 * (C30647 + C31020 * C30804))) *
         ce) /
            C30533 +
        C30524 *
            (3 * C31116 +
             C30687 * ((-2 * C31070) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C31014 / C30533)));
    const double C11126 =
        4 * ((-2 * C30823) / C30533 + C30687 * C31116) +
        C30687 *
            (3 * C31116 +
             C30687 * ((-2 * C31070) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C31014 / C30533)));
    const double C30962 = C30524 * C30959;
    const double C6905 =
        (2 * C30687 * C30889 + C30687 * (C30889 + C30959 * C30804)) / C30500;
    const double C31065 = C31063 + C31047;
    const double C30961 = C30958 - C30938;
    const double C31064 = C31026 - C31062;
    const double C30443 = C30438 - C30439;
    const double C30442 = C30437 + C31740;
    const double C2720 = C2718 - C2707;
    const double C11614 = C11612 + C3005;
    const double C22257 = C22254 - C3005;
    const double C22256 = C22253 + C2997;
    const double C22255 = C22252 - C2997;
    const double C13150 = C13149 + C11606;
    const double C11615 = C11613 - C11601;
    const double C20822 = C20820 - C1764;
    const double C20821 = C20819 + C1764;
    const double C23136 = C23134 - C3715;
    const double C23135 = C23133 + C3715;
    const double C172 = C160 + C161;
    const double C387 = C367 + C368;
    const double C13893 = C13876 + C13877;
    const double C13889 = C13868 + C13869;
    const double C389 = C373 + C374;
    const double C13695 = C13674 + C13675;
    const double C14229 = C14224 + C14225;
    const double C591 = C572 + C573;
    const double C14369 = C14362 + C14363;
    const double C595 = C580 + C581;
    const double C14085 = C14066 + C14067;
    const double C1056 = C1044 + C1045;
    const double C14079 = C14054 + C14055;
    const double C14589 = C14580 + C14581;
    const double C10397 = C10395 * C1185;
    const double C12034 = C10395 * C30457;
    const double C12284 = C10395 * C307;
    const double C20619 = C20617 * C1560;
    const double C22053 = C20617 * C2830;
    const double C10398 = C10396 * C31771;
    const double C12035 = C10396 * C3121;
    const double C12285 = C10396 * C31771;
    const double C20620 = C20618 * C31781;
    const double C22054 = C20618 * C31781;
    const double C31061 = C31054 + C31058;
    const double C26520 = C13646 * C5897;
    const double C10514 = C31650 * C5899;
    const double C26046 = C13646 * C5899;
    const double C5903 =
        3 * ((-(ae * C30687 * C30713) / C30371) / C30500 - C30821 / C30533 -
             (C30687 * C30716 * ce) / C30533 + C30524 * C30982) +
        (C30687 * C30890 * ae) / C30500 - (C30687 * C30889 * ce) / C30533 +
        C30524 *
            (2 * C30982 - (ae * C30687 * C30878) / C30533 -
             (C30687 * C30879 * ce) / C30533 +
             C30524 * ((-(ae * C30687 * C30858) / C30371) / C30500 -
                       C30972 / C30533 - (C30687 * C30861 * ce) / C30533 +
                       C30524 * ((-(C30687 * C30625 * ce) / C30371) / C30500 -
                                 (ae * C30687 * C30621) / C30533 -
                                 (C30524 * C30687 * C30572) / C30533)));
    const double C5779 =
        4 * ((-2 * C30698) / C30371 - (C30524 * C30725) / C30371 -
             (C30715 * ce) / C30371) +
        C30524 * ((-3 * C30725) / C30371 + C30524 * C30890 -
                  (C30874 * ce) / C30371) -
        ((3 * C30715 + C30524 * C30874) * ce) / C30371;
    const double C5898 = C30687 * ((-3 * C30725) / C30371 + C30524 * C30890 -
                                   (C30874 * ce) / C30371);
    const double C5900 = (-2 * C30698) / C30371 - (C30524 * C30725) / C30371 -
                         (C30715 * ce) / C30371 + C30890 * C30804;
    const double C30960 = C30524 * C30957;
    const double C31107 = C31104 + C31106;
    const double C15104 = C15098 + C15099;
    const double C10141 = C10140 + C10134;
    const double C10766 = C10765 + C10755;
    const double C5782 =
        4 * (2 * C30727 - (ae * C30725) / C30533 - (C30726 * ce) / C30533 +
             C30524 * C30887) +
        (((-3 * C30725) / C30371 + C30524 * C30890 - (C30874 * ce) / C30371) *
         ae) /
            C30500 -
        ((3 * C30726 + C30524 * C30889 + C30874 * ae) * ce) / C30533 +
        C30524 *
            (3 * C30887 + (C30890 * ae) / C30500 - (C30889 * ce) / C30533 +
             C30524 *
                 (2 * C30881 - (ae * C30878) / C30533 - (C30879 * ce) / C30533 +
                  C30524 * ((-(ae * C30858) / C30371) / C30500 - C30566 -
                            (C30861 * ce) / C30533 +
                            C30524 * ((-(C30625 * ce) / C30371) / C30500 -
                                      (ae * C30621) / C30533 -
                                      (C30524 * C30572) / C30533))));
    const double C142 =
        5 * (3 * C30560 + C30529 * C30579) +
        C30529 * (4 * C30579 +
                  C30529 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C345 =
        (-2 * C30529 * C30546) / C30533 + C30529 * C30560 +
        ((C30524 * C30637 - (C30631 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30636 + C30631 * ae) * ce) / C30533 +
        C30524 *
            ((C30637 * ae) / C30500 - (C30636 * ce) / C30533 + C30524 * C30579);
    const double C346 =
        (((-3 * C30610) / C30371 + C30529 * C30637) * ae) / C30500 -
        ((3 * C30611 + C30529 * C30636) * ce) / C30533 +
        C30524 * (3 * C30560 + C30529 * C30579);
    const double C347 =
        3 * C30560 + C30529 * C30579 +
        ((C30524 * C30673 - (C30667 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30672 + C30667 * ae) * ce) / C30533 +
        C30524 * ((C30673 * ae) / C30500 - (C30672 * ce) / C30533 +
                  C30524 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C555 = (zP - zQ) * (3 * C30560 + C30529 * C30579);
    const double C559 = (-2 * C30529 * C30546) / C30533 + C30529 * C30560 +
                        C30579 * std::pow(zP - zQ, 2);
    const double C560 =
        3 * C30560 + C30529 * C30579 +
        (3 * C30577 +
         C30529 *
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533))) *
            std::pow(zP - zQ, 2);
    const double C722 =
        ((4 * C30637 + C30529 * C30673) * ae) / C30500 -
        ((4 * C30636 + C30529 * C30672) * ce) / C30533 +
        C30524 * (4 * C30579 +
                  C30529 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C856 =
        (zP - zQ) *
        (4 * C30579 +
         C30529 *
             (3 * C30577 +
              C30529 * ((-2 * C30529 * C30572) / C30533 +
                        C30529 * ((-((C30564 * C30565 +
                                      C30527 * bs[8] * std::pow(C30520, 8)) *
                                     C30525 * C30542) /
                                   C30371) /
                                      C30500 -
                                  C30572 / C30533))));
    const double C1031 = (C30687 * C30637 * ae) / C30500 -
                         (C30687 * C30636 * ce) / C30533 +
                         C30524 * C30687 * C30579;
    const double C1564 =
        2 * ((C30637 * ae) / C30500 - (C30636 * ce) / C30533 +
             C30524 * C30579) +
        ((C30637 + C30524 * C30818 - (C30813 * ce) / C30371) * ae) / C30500 -
        ((C30636 + C30524 * C30817 + C30813 * ae) * ce) / C30533 +
        C30524 * (C30579 + (C30818 * ae) / C30500 - (C30817 * ce) / C30533 +
                  C30524 * ((C30669 * ae) / C30500 - (C30668 * ce) / C30533 +
                            C30524 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C1742 =
        C30687 * C30579 + (C30687 * C30818 * ae) / C30500 -
        (C30687 * C30817 * ce) / C30533 +
        C30524 *
            ((C30687 * C30669 * ae) / C30500 - (C30687 * C30668 * ce) / C30533 +
             C30524 * C30687 *
                 ((-2 * C30529 * C30572) / C30533 +
                  C30529 * ((-((C30564 * C30565 +
                                C30527 * bs[8] * std::pow(C30520, 8)) *
                               C30525 * C30542) /
                             C30371) /
                                C30500 -
                            C30572 / C30533)));
    const double C2340 =
        ((C30637 + C30669 * C30804) * ae) / C30500 -
        ((C30636 + C30668 * C30804) * ce) / C30533 +
        C30524 *
            (C30579 +
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533)) *
                 C30804);
    const double C2466 =
        2 * C30687 * C30579 +
        C30687 *
            (C30579 +
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533)) *
                 C30804);
    const double C1306 =
        3 * (C30560 - (ae * C30771) / C30533 - (C30772 * ce) / C30533 +
             C30524 * C30799) +
        (((-2 * C30771) / C30371 - (C30524 * C30797) / C30371 -
          (C30787 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30772 + C30524 * C30798 + C30787 * ae) * ce) / C30533 +
        C30524 *
            (2 * C30799 - (ae * C30797) / C30533 - (C30798 * ce) / C30533 +
             C30524 *
                 (C30577 - (ae * C30785) / C30533 - (C30788 * ce) / C30533 +
                  C30524 *
                      ((-(C30662 * ce) / C30371) / C30500 -
                       (ae * C30660) / C30533 +
                       C30524 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C1589 = C1584 + C1585;
    const double C13892 = C13874 + C13875;
    const double C1763 = C1758 + C1759;
    const double C14588 = C14578 + C14579;
    const double C2357 = C2352 + C2353;
    const double C14084 = C14064 + C14065;
    const double C2479 = C2474 + C2475;
    const double C6907 =
        2 * ((((-2 * C30971) / C30371 - (C30687 * C30994) / C30371) * ae) /
                 C30500 -
             ((2 * C30970 + C30687 * C30993) * ce) / C30533 + C30524 * C31122) +
        (((-2 * C30687 * C30878) / C30371 -
          (C30687 * (C30943 * C30804 + C30878)) / C30371) *
         ae) /
            C30500 -
        ((2 * C30687 * C30879 + C30687 * (C30879 + C30946 * C30804)) * ce) /
            C30533 +
        C30524 *
            (C31122 +
             (((-2 * C31082) / C30371 -
               (C30687 * (C30921 * C30804 + C30858)) / C30371) *
              ae) /
                 C30500 -
             ((2 * C31084 + C30687 * (C30861 + C30924 * C30804)) * ce) /
                 C30533 +
             C30524 *
                 ((((-2 * C31086) / C30371 -
                    (C30687 * (C30651 * C30804 + C30621)) / C30371) *
                   ae) /
                      C30500 -
                  ((2 * C31085 + C30687 * (C30625 + C30655 * C30804)) * ce) /
                      C30533 +
                  C30524 *
                      ((-2 * C31087) / C30533 +
                       C30687 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C10835 = 4 * ((-2 * C30821) / C30533 + C30687 * C30988) +
                          C30687 * (3 * C30988 + C30687 * C31122);
    const double C10836 =
        5 * (3 * C30988 + C30687 * C31122) +
        C30687 * (4 * C31122 +
                  C30687 * (3 * C31003 +
                            C30687 * ((-2 * C31087) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30804) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C11237 =
        ((4 * ((-2 * C30971) / C30371 - (C30687 * C30994) / C30371) +
          C30687 *
              ((-3 * C30994) / C30371 +
               C30687 * ((-2 * C31086) / C30371 -
                         (C30687 * (C30651 * C30804 + C30621)) / C30371))) *
         ae) /
            C30500 -
        ((4 * (2 * C30970 + C30687 * C30993) +
          C30687 *
              (3 * C30993 +
               C30687 * (2 * C31085 + C30687 * (C30625 + C30655 * C30804)))) *
         ce) /
            C30533 +
        C30524 * (4 * C31122 +
                  C30687 * (3 * C31003 +
                            C30687 * ((-2 * C31087) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30804) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C10130 = C10120 + C10121;
    const double C27393 = C27387 + C27388;
    const double C11248 = C11244 + C11245;
    const double C26925 = C26913 + C26914;
    const double C30965 = C30908 + C30962;
    const double C6005 =
        (4 * (2 * C30736 + C30524 * C30763 + C30752 * ae) +
         C30524 * (3 * C30763 + C30524 * C31065 + C31052 * ae) +
         (3 * C30752 + C30524 * C31052) * ae) /
        C30500;
    const double C6155 =
        (C30687 * (3 * C30763 + C30524 * C31065 + C31052 * ae)) / C30500;
    const double C6701 =
        (2 * C30736 + C30524 * C30763 + C30752 * ae + C31065 * C30804) / C30500;
    const double C30964 = C30524 * C30961;
    const double C5905 =
        3 * (C30988 - (ae * (C30858 * C30804 + C30713)) / C30533 -
             ((C30716 + C30861 * C30804) * ce) / C30533 + C30524 * C31007) +
        ((C30890 + C30961 * C30804) * ae) / C30500 -
        ((C30889 + C30959 * C30804) * ce) / C30533 +
        C30524 *
            (2 * C31007 - (ae * (C30943 * C30804 + C30878)) / C30533 -
             ((C30879 + C30946 * C30804) * ce) / C30533 +
             C30524 *
                 (C31003 - (ae * (C30921 * C30804 + C30858)) / C30533 -
                  ((C30861 + C30924 * C30804) * ce) / C30533 +
                  C30524 *
                      ((-((C30625 + C30655 * C30804) * ce) / C30371) / C30500 -
                       (ae * (C30651 * C30804 + C30621)) / C30533 +
                       C30524 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30804) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C6906 =
        2 * C30687 * C30890 + C30687 * (C30890 + C30961 * C30804);
    const double C31066 = C31064 - C31051;
    const double C3141 = C388 * C30443;
    const double C3137 = C384 * C30443;
    const double C3131 = C379 * C30443;
    const double C3459 = C1054 * C30443;
    const double C3453 = C1052 * C30443;
    const double C12030 = C2354 * C30443;
    const double C12026 = C9808 * C30443;
    const double C12020 = C9806 * C30443;
    const double C13554 = C10127 * C30443;
    const double C1281 =
        (C30443 / C30388 + ((C30369 * C30457 + C3121) * ce) / C30371) / C30388 -
        ((C30369 * (C30457 / C30388 + (0 * ce) / C30371) + C31781) * de) /
            C30371;
    const double C1559 =
        C30443 / C30388 - ((C30369 * C30457 + C3121) * de) / C30371;
    const double C2829 =
        C30443 / C30388 + ((C30369 * C30457 + C3121) * ce) / C30371;
    const double C30446 = C30442 * de;
    const double C2722 = C2720 * C31664;
    const double C20824 = C20822 - C1765;
    const double C20823 = C20821 + C1765;
    const double C23138 = C23136 - C3716;
    const double C23137 = C23135 + C3716;
    const double C182 = C172 * C31467;
    const double C399 = C387 * C31771;
    const double C1198 = C387 * C31771;
    const double C1581 = C387 * C1553;
    const double C2845 = C387 * C31801;
    const double C3140 = C387 * C3121;
    const double C401 = C389 * C31796;
    const double C735 = C389 * C31530;
    const double C1202 = C389 * C1178;
    const double C2711 = C389 * C31530;
    const double C3144 = C389 * C31533;
    const double C603 = C591 * C31467;
    const double C1047 = C591 * C31740;
    const double C3301 = C591 * C2691;
    const double C607 = C595 * C31467;
    const double C2349 = C595 * C31740;
    const double C3007 = C595 * C2691;
    const double C1062 = C1056 * C31530;
    const double C1755 = C1056 * C1178;
    const double C3001 = C1056 * C31530;
    const double C3462 = C1056 * C31533;
    const double C3720 = C1056 * C31796;
    const double C26527 = C26519 + C26520;
    const double C10519 = C10513 + C10514;
    const double C26061 = C26045 + C26046;
    const double C26524 = C13646 * C5903;
    const double C26523 = C13650 * C5898;
    const double C10515 = C113 * C5900;
    const double C26049 = C13650 * C5900;
    const double C30963 = C30934 + C30960;
    const double C10142 = C10141 + C10135;
    const double C10767 = C10766 + C10756;
    const double C378 = C31650 * C345;
    const double C14223 = C13646 * C345;
    const double C741 = C31650 * C346;
    const double C13677 = C13646 * C346;
    const double C860 = C31650 * C555;
    const double C583 = C31650 * C559;
    const double C1051 = C31650 * C1031;
    const double C14361 = C13646 * C1031;
    const double C1593 = C1589 * C31781;
    const double C2847 = C1589 * C31781;
    const double C1767 = C1763 * C31771;
    const double C3464 = C1763 * C3121;
    const double C3722 = C1763 * C31771;
    const double C2361 = C2357 * C31530;
    const double C3009 = C2357 * C31530;
    const double C2483 = C2479 * C31467;
    const double C10844 = C31650 * C10835;
    const double C10139 = C10130 * C31771;
    const double C10762 = C10130 * C31771;
    const double C13559 = C10130 * C3121;
    const double C11251 = C11248 * C31530;
    const double C13148 = C11248 * C31530;
    const double C30967 = C30965 + C30947;
    const double C30966 = C30919 + C30964;
    const double C6007 =
        4 * (2 * C30764 - (ae * C30762) / C30533 - (C30763 * ce) / C30533 +
             C30524 * C31061) +
        (((-3 * C30762) / C30371 + C30524 * C31066 - (C31052 * ce) / C30371) *
         ae) /
            C30500 -
        ((3 * C30763 + C30524 * C31065 + C31052 * ae) * ce) / C30533 +
        C30524 *
            (3 * C31061 + (C31066 * ae) / C30500 - (C31065 * ce) / C30533 +
             C30524 *
                 (2 * C31055 - (ae * C31056) / C30533 - (C31057 * ce) / C30533 +
                  C30524 * ((-(ae * C31036) / C30371) / C30500 -
                            C31014 / C30533 - (C31039 * ce) / C30533 +
                            C30524 * ((-(C31020 * ce) / C30371) / C30500 -
                                      (ae * C31016) / C30533 -
                                      (C30524 * C30529 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533))));
    const double C6157 =
        3 * ((-(ae * C30687 * C30750) / C30371) / C30500 - C30823 / C30533 -
             (C30687 * C30753 * ce) / C30533 + C30524 * C31080) +
        (C30687 * C31066 * ae) / C30500 - (C30687 * C31065 * ce) / C30533 +
        C30524 *
            (2 * C31080 - (ae * C30687 * C31056) / C30533 -
             (C30687 * C31057 * ce) / C30533 +
             C30524 * ((-(ae * C30687 * C31036) / C30371) / C30500 -
                       C31070 / C30533 - (C30687 * C31039 * ce) / C30533 +
                       C30524 * ((-(C30687 * C31020 * ce) / C30371) / C30500 -
                                 (ae * C30687 * C31016) / C30533 -
                                 (C30524 * C30687 * C30529 *
                                  (C30564 * C30565 +
                                   C30527 * bs[8] * std::pow(C30520, 8)) *
                                  C30525) /
                                     C30533)));
    const double C6006 =
        4 * ((-2 * C30735) / C30371 - (C30524 * C30762) / C30371 -
             (C30752 * ce) / C30371) +
        C30524 * ((-3 * C30762) / C30371 + C30524 * C31066 -
                  (C31052 * ce) / C30371) -
        ((3 * C30752 + C30524 * C31052) * ce) / C30371;
    const double C6156 = C30687 * ((-3 * C30762) / C30371 + C30524 * C31066 -
                                   (C31052 * ce) / C30371);
    const double C6702 = (-2 * C30735) / C30371 - (C30524 * C30762) / C30371 -
                         (C30752 * ce) / C30371 + C31066 * C30804;
    const double C1580 = C386 * C1559;
    const double C1570 = C381 * C1559;
    const double C10511 = C10125 * C1559;
    const double C10501 = C10122 * C1559;
    const double C20611 = C1760 * C1559;
    const double C2844 = C386 * C2829;
    const double C2836 = C381 * C2829;
    const double C13042 = C10125 * C2829;
    const double C13034 = C10122 * C2829;
    const double C22051 = C1760 * C2829;
    const double C30448 = C30446 / C30371;
    const double C407 = C406 + C399;
    const double C1209 = C1208 + C1198;
    const double C751 = C747 + C735;
    const double C2721 = C2719 + C2711;
    const double C858 = C602 + C603;
    const double C19899 = C603 + C602;
    const double C611 = C606 + C607;
    const double C19638 = C607 + C606;
    const double C1066 = C1065 + C1062;
    const double C20102 = C20099 - C1062;
    const double C3305 = C3304 + C3001;
    const double C22600 = C22599 - C3001;
    const double C10523 = C10519 * C1560;
    const double C13044 = C10519 * C2830;
    const double C26529 = C26523 + C26524;
    const double C10520 = C10515 + C10516;
    const double C26063 = C26049 + C26050;
    const double C391 = C377 + C378;
    const double C14228 = C14222 + C14223;
    const double C745 = C740 + C741;
    const double C13696 = C13676 + C13677;
    const double C864 = C859 + C860;
    const double C596 = C582 + C583;
    const double C1058 = C1050 + C1051;
    const double C14368 = C14360 + C14361;
    const double C10849 = C10843 + C10844;
    const double C5780 =
        (5 * (3 * C30726 + C30524 * C30889 + C30874 * ae) +
         C30524 * (4 * C30889 + C30524 * C30967 + C30952 * ae) +
         (4 * C30874 + C30524 * C30952) * ae) /
        C30500;
    const double C5901 =
        (3 * C30726 + C30524 * C30889 + C30874 * ae + C30967 * C30804) / C30500;
    const double C6257 =
        (C30687 * (4 * C30889 + C30524 * C30967 + C30952 * ae)) / C30500;
    const double C30968 = C30966 - C30951;
    const double C30450 = C30436 - C30448;
    const double C408 = C407 * C31664;
    const double C1210 = C1209 * C31664;
    const double C753 = C751 * C31664;
    const double C2723 = C2721 * C31664;
    const double C863 = C858 * C31664;
    const double C613 = C611 * C31664;
    const double C1067 = C1066 * C31664;
    const double C3306 = C3305 * C31664;
    const double C10524 = C10520 * C31781;
    const double C13045 = C10520 * C31781;
    const double C403 = C391 * C31771;
    const double C1204 = C391 * C31771;
    const double C3146 = C391 * C3121;
    const double C749 = C745 * C31530;
    const double C2715 = C745 * C31530;
    const double C866 = C864 * C31467;
    const double C608 = C596 * C31467;
    const double C1064 = C1058 * C31530;
    const double C3303 = C1058 * C31530;
    const double C10853 = C10849 * C31467;
    const double C5783 =
        5 * (3 * C30887 + (C30890 * ae) / C30500 - (C30889 * ce) / C30533 +
             C30524 * C30963) +
        ((4 * C30890 + C30524 * C30968 - (C30952 * ce) / C30371) * ae) /
            C30500 -
        ((4 * C30889 + C30524 * C30967 + C30952 * ae) * ce) / C30533 +
        C30524 *
            (4 * C30963 + (C30968 * ae) / C30500 - (C30967 * ce) / C30533 +
             C30524 *
                 (3 * C30957 + (C30961 * ae) / C30500 - (C30959 * ce) / C30533 +
                  C30524 *
                      (2 * C30949 - (ae * C30943) / C30533 -
                       (C30946 * ce) / C30533 +
                       C30524 *
                           ((-(ae * C30921) / C30371) / C30500 -
                            C30572 / C30533 - (C30924 * ce) / C30533 +
                            C30524 * ((-(C30655 * ce) / C30371) / C30500 -
                                      (ae * C30651) / C30533 -
                                      (C30524 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533)))));
    const double C6259 =
        4 * (2 * C30982 - (ae * C30687 * C30878) / C30533 -
             (C30687 * C30879 * ce) / C30533 + C30524 * C31107) +
        (C30687 * C30968 * ae) / C30500 - (C30687 * C30967 * ce) / C30533 +
        C30524 *
            (3 * C31107 + (C30687 * C30961 * ae) / C30500 -
             (C30687 * C30959 * ce) / C30533 +
             C30524 *
                 (2 * C31105 - (ae * C30687 * C30943) / C30533 -
                  (C30687 * C30946 * ce) / C30533 +
                  C30524 *
                      ((-(ae * C30687 * C30921) / C30371) / C30500 -
                       C31087 / C30533 - (C30687 * C30924 * ce) / C30533 +
                       C30524 * ((-(C30687 * C30655 * ce) / C30371) / C30500 -
                                 (ae * C30687 * C30651) / C30533 -
                                 (C30524 * C30687 *
                                  (C30564 * C30565 +
                                   C30527 * bs[8] * std::pow(C30520, 8)) *
                                  C30525) /
                                     C30533))));
    const double C5781 =
        5 * ((-3 * C30725) / C30371 + C30524 * C30890 -
             (C30874 * ce) / C30371) +
        C30524 * (4 * C30890 + C30524 * C30968 - (C30952 * ce) / C30371) -
        ((4 * C30874 + C30524 * C30952) * ce) / C30371;
    const double C5902 = (-3 * C30725) / C30371 + C30524 * C30890 -
                         (C30874 * ce) / C30371 + C30968 * C30804;
    const double C6258 =
        C30687 * (4 * C30890 + C30524 * C30968 - (C30952 * ce) / C30371);
    const double C30451 = C30450 + C30421;
    const double C3143 = C169 * C30451;
    const double C3135 = C166 * C30451;
    const double C3129 = C164 * C30451;
    const double C3461 = C588 * C30451;
    const double C3455 = C586 * C30451;
    const double C12032 = C592 * C30451;
    const double C12024 = C9441 * C30451;
    const double C12018 = C9439 * C30451;
    const double C13556 = C9444 * C30451;
    const double C1278 =
        (((((0 - (C30369 * C30404) / C30371) * ce) / C30371 -
           (0 * de) / C30375 + (2 * C30405) / C30371) /
              C30388 -
          ((C30369 * C30440 + 0) * de) / C30371 + C30414 - C30427) /
             C30388 +
         ((C30369 * C30449 + 0) * ce) / C30371) /
            C30388 -
        ((C30369 * (C30449 / C30388 +
                    ((C30369 * C30451 + C31526) * ce) / C30371 + C30443) +
          C31815) *
         de) /
            C30371 +
        C30451 / C30388 + ((C30369 * C30443 + C31533) * ce) / C30371 +
        2 * (C30421 / C30388 - (0 * de) / C30371);
    const double C1279 =
        (C30449 / C30388 + ((C30369 * C30451 + C31526) * ce) / C30371 +
         C30443) /
            C30388 -
        ((C30369 * (C30451 / C30388 +
                    ((C30369 * C30443 + C31533) * ce) / C30371 + 2 * C30457) +
          C31811) *
         de) /
            C30371 +
        2 * (C30443 / C30388 + ((C30369 * C30457 + C3121) * ce) / C30371);
    const double C1280 =
        (C30451 / C30388 + ((C30369 * C30443 + C31533) * ce) / C30371 +
         2 * C30457) /
            C30388 -
        ((C30369 *
              (C30443 / C30388 + ((C30369 * C30457 + C3121) * ce) / C30371) +
          C31801) *
         de) /
            C30371 +
        3 * (C30457 / C30388 + (0 * ce) / C30371);
    const double C1557 =
        C30449 / C30388 - ((C30369 * C30451 + C31526) * de) / C30371 + C30443;
    const double C1558 = C30451 / C30388 -
                         ((C30369 * C30443 + C31533) * de) / C30371 +
                         2 * C30457;
    const double C2827 =
        C30449 / C30388 + ((C30369 * C30451 + C31526) * ce) / C30371 + C30443;
    const double C2828 = C30451 / C30388 +
                         ((C30369 * C30443 + C31533) * ce) / C30371 +
                         2 * C30457;
    const double C3147 = C3135 + C3136;
    const double C22796 = C3454 + C3455;
    const double C22795 = C3455 + C3454;
    const double C13553 = C12024 + C12025;
    const double C1576 = C166 * C1557;
    const double C1566 = C164 * C1557;
    const double C10507 = C9441 * C1557;
    const double C10497 = C9439 * C1557;
    const double C20607 = C586 * C1557;
    const double C1578 = C384 * C1558;
    const double C1568 = C379 * C1558;
    const double C10509 = C9808 * C1558;
    const double C10499 = C9806 * C1558;
    const double C20609 = C1052 * C1558;
    const double C2840 = C166 * C2827;
    const double C2832 = C164 * C2827;
    const double C13038 = C9441 * C2827;
    const double C13030 = C9439 * C2827;
    const double C22047 = C586 * C2827;
    const double C2842 = C384 * C2828;
    const double C2834 = C379 * C2828;
    const double C13040 = C9808 * C2828;
    const double C13032 = C9806 * C2828;
    const double C22049 = C1052 * C2828;
    const double C3148 = C3147 - C3137;
    const double C22798 = C3453 - C22796;
    const double C22797 = C22795 - C3453;
    const double C13560 = C13553 - C12026;
    const double C3149 = C3148 - C3138;
    const double C22800 = C22798 + C3456;
    const double C22799 = C22797 - C3456;
    const double C13561 = C13560 - C12027;
    const double C3150 = C3149 + C3139;
    const double C22802 = C22800 - C3457;
    const double C22801 = C22799 + C3457;
    const double C13562 = C13561 + C12028;
    const double C3151 = C3150 + C3140;
    const double C22804 = C22802 - C3458;
    const double C22803 = C22801 + C3458;
    const double C13563 = C13562 + C12029;
    const double C3152 = C3151 * C31664;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C30451 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31526 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C30443 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31533 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C30457 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C3121) *
               C31664 * C13647 +
           ((C13684 + C13685) * C30451 + (C13686 + C13687) * C31526 -
            (C13878 + C13879) * C30443 - (C13880 + C13881) * C31533 +
            (C13882 + C13883) * C30457 + (C13884 + C13885) * C3121) *
               C31664 * C13648) *
              C31444 +
          (((C13879 + C13878) * C30443 -
            ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
            (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
            (C13885 + C13884) * C3121) *
               C31664 * C13647 +
           ((C13886 + C13887) * C30443 -
            ((C13688 + C13689) * C31526 + (C13690 + C13691) * C30451) +
            (C13888 + C13889) * C31533 - (C13890 + C13891) * C30457 -
            (C13892 + C13893) * C3121) *
               C31664 * C13648) *
              C31452 +
          (((C13691 + C13690) * C30451 + (C13689 + C13688) * C31526 -
            (C13887 + C13886) * C30443 - (C13889 + C13888) * C31533 +
            (C13891 + C13890) * C30457 + (C13893 + C13892) * C3121) *
               C31664 * C13647 +
           ((C13692 + C13693) * C30451 + (C13694 + C13695) * C31526 -
            (C14226 + C14227) * C30443 - (C14228 + C14229) * C31533 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C30457 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C3121) *
               C31664 * C13648) *
              C3124) *
         C31485) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C30451 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31526 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C30443 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31533 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C30457 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C3121) *
                C31664 * C13647 +
            ((C13684 + C13685) * C30451 + (C13686 + C13687) * C31526 -
             (C13878 + C13879) * C30443 - (C13880 + C13881) * C31533 +
             (C13882 + C13883) * C30457 + (C13884 + C13885) * C3121) *
                C31664 * C13648) *
               C2825 +
           (((C13879 + C13878) * C30443 -
             ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
             (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
             (C13885 + C13884) * C3121) *
                C31664 * C13647 +
            ((C13886 + C13887) * C30443 -
             ((C13688 + C13689) * C31526 + (C13690 + C13691) * C30451) +
             (C13888 + C13889) * C31533 - (C13890 + C13891) * C30457 -
             (C13892 + C13893) * C3121) *
                C31664 * C13648) *
               C31449) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C30443 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31526 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C30451) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31533 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C30457 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C3121) *
                C31664 * C13647 +
            ((C14582 + C14583) * C30443 -
             ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
             (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
             (C15310 + C15311) * C3121) *
                C31664 * C13648) *
               C2825 +
           (((C14072 + C14073) * C30451 + (C14074 + C14075) * C31526 -
             (C14583 + C14582) * C30443 - (C14585 + C14584) * C31533 +
             (C15309 + C15308) * C30457 + (C15311 + C15310) * C3121) *
                C31664 * C13647 +
            ((C14076 + C14077) * C30451 + (C14078 + C14079) * C31526 -
             (C14586 + C14587) * C30443 - (C14588 + C14589) * C31533 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C30457 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C3121) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2827 + (C13686 + C13687) * C31815 -
            (C13878 + C13879) * C2828 - (C13880 + C13881) * C31811 +
            (C13882 + C13883) * C2829 + (C13884 + C13885) * C31801 -
            (C15102 + C15103) * C2830 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C2825 +
          (((C13879 + C13878) * C2828 -
            ((C13687 + C13686) * C31815 + (C13685 + C13684) * C2827) +
            (C13881 + C13880) * C31811 - (C13883 + C13882) * C2829 -
            (C13885 + C13884) * C31801 + (C15103 + C15102) * C2830 +
            (C15105 + C15104) * C31781) *
               C31664 * C13647 +
           ((C13886 + C13887) * C2828 -
            ((C13688 + C13689) * C31815 + (C13690 + C13691) * C2827) +
            (C13888 + C13889) * C31811 - (C13890 + C13891) * C2829 -
            (C13892 + C13893) * C31801 +
            (C13649 * C1287 + C13645 * C1297 + C13650 * C1288 +
             C13646 * C1299) *
                C2830 +
            (C13649 * C1298 + C13645 * C1305 + C13650 * C1300 +
             C13646 * C1306) *
                C31781) *
               C31664 * C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
            (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C31814 +
          (((C13879 + C13878) * C2698 -
            ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
            (C13881 + C13880) * C31530) *
               C31664 * C13647 +
           ((C13886 + C13887) * C2698 -
            ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
            (C13888 + C13889) * C31530) *
               C31664 * C13648) *
              C31807 +
          (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
            (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
               C31664 * C13647 +
           ((C13692 + C13693) * C2697 + (C13694 + C13695) * C2691 -
            (C14226 + C14227) * C2698 - (C14228 + C14229) * C31530) *
               C31664 * C13648) *
              C31794 +
          (((C14227 + C14226) * C2698 -
            ((C13695 + C13694) * C2691 + (C13693 + C13692) * C2697) +
            (C14229 + C14228) * C31530) *
               C31664 * C13647 +
           ((C13649 * C316 + C13645 * C334 + C13650 * C317 + C13646 * C336) *
                C2698 -
            ((C13696 + C13697) * C2691 + (C13698 + C13699) * C2697) +
            (C13649 * C335 + C13645 * C346 + C13650 * C337 + C13646 * C347) *
                C31530) *
               C31664 * C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
             (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C2698 -
             ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31809 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C2698 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C2691 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C2697) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31798 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C2697 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C2691 -
             (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
              C13645 * C1432) *
                 C2698 -
             (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
              C13645 * C1447) *
                 C31530) *
                C31664 * C13647 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C16019 + C16018) * C2698 -
             ((C14083 + C14082) * C2691 + (C14081 + C14080) * C2697) +
             (C16021 + C16020) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C2698 -
             ((C14084 + C14085) * C2691 + (C14086 + C14087) * C2697) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C31664 * C13648) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
             (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31444 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C2698 -
             ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31452 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C2697 + (C13694 + C13695) * C2691 -
             (C14226 + C14227) * C2698 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C3124) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C2698 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C2691 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C2697) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31444 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31452 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C2698 -
             ((C14368 + C14369) * C2691 + (C14370 + C14371) * C2697) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
            (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C31814 +
          (((C13879 + C13878) * C2698 -
            ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
            (C13881 + C13880) * C31530) *
               C31664 * C13647 +
           ((C13886 + C13887) * C2698 -
            ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
            (C13888 + C13889) * C31530) *
               C31664 * C13648) *
              C31807 +
          (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
            (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
               C31664 * C13647 +
           ((C13692 + C13693) * C2697 + (C13694 + C13695) * C2691 -
            (C14226 + C14227) * C2698 - (C14228 + C14229) * C31530) *
               C31664 * C13648) *
              C31794 +
          (((C14227 + C14226) * C2698 -
            ((C13695 + C13694) * C2691 + (C13693 + C13692) * C2697) +
            (C14229 + C14228) * C31530) *
               C31664 * C13647 +
           ((C13649 * C316 + C13645 * C334 + C13650 * C317 + C13646 * C336) *
                C2698 -
            ((C13696 + C13697) * C2691 + (C13698 + C13699) * C2697) +
            (C13649 * C335 + C13645 * C346 + C13650 * C337 + C13646 * C347) *
                C31530) *
               C31664 * C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2827 + (C13686 + C13687) * C31815 -
            (C13878 + C13879) * C2828 - (C13880 + C13881) * C31811 +
            (C13882 + C13883) * C2829 + (C13884 + C13885) * C31801 -
            (C15102 + C15103) * C2830 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C2825 +
          (((C13879 + C13878) * C2828 -
            ((C13687 + C13686) * C31815 + (C13685 + C13684) * C2827) +
            (C13881 + C13880) * C31811 - (C13883 + C13882) * C2829 -
            (C13885 + C13884) * C31801 + (C15103 + C15102) * C2830 +
            (C15105 + C15104) * C31781) *
               C31664 * C13647 +
           ((C13886 + C13887) * C2828 -
            ((C13688 + C13689) * C31815 + (C13690 + C13691) * C2827) +
            (C13888 + C13889) * C31811 - (C13890 + C13891) * C2829 -
            (C13892 + C13893) * C31801 +
            (C13649 * C1287 + C13645 * C1297 + C13650 * C1288 +
             C13646 * C1299) *
                C2830 +
            (C13649 * C1298 + C13645 * C1305 + C13650 * C1300 +
             C13646 * C1306) *
                C31781) *
               C31664 * C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C30451 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31526 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C30443 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31533 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C30457 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C3121) *
                C31664 * C13647 +
            ((C13684 + C13685) * C30451 + (C13686 + C13687) * C31526 -
             (C13878 + C13879) * C30443 - (C13880 + C13881) * C31533 +
             (C13882 + C13883) * C30457 + (C13884 + C13885) * C3121) *
                C31664 * C13648) *
               C31726 +
           (((C13879 + C13878) * C30443 -
             ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
             (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
             (C13885 + C13884) * C3121) *
                C31664 * C13647 +
            ((C13886 + C13887) * C30443 -
             ((C13688 + C13689) * C31526 + (C13690 + C13691) * C30451) +
             (C13888 + C13889) * C31533 - (C13890 + C13891) * C30457 -
             (C13892 + C13893) * C3121) *
                C31664 * C13648) *
               C31449) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C30443 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31526 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C30451) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31533 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C30457 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C3121) *
                C31664 * C13647 +
            ((C14582 + C14583) * C30443 -
             ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
             (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
             (C15310 + C15311) * C3121) *
                C31664 * C13648) *
               C31726 +
           (((C14072 + C14073) * C30451 + (C14074 + C14075) * C31526 -
             (C14583 + C14582) * C30443 - (C14585 + C14584) * C31533 +
             (C15309 + C15308) * C30457 + (C15311 + C15310) * C3121) *
                C31664 * C13647 +
            ((C14076 + C14077) * C30451 + (C14078 + C14079) * C31526 -
             (C14586 + C14587) * C30443 - (C14588 + C14589) * C31533 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C30457 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C3121) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C30451 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31526 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C30443 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31533 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C30457 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C3121) *
               C31664 * C13647 +
           ((C13684 + C13685) * C30451 + (C13686 + C13687) * C31526 -
            (C13878 + C13879) * C30443 - (C13880 + C13881) * C31533 +
            (C13882 + C13883) * C30457 + (C13884 + C13885) * C3121) *
               C31664 * C13648) *
              C31439 * C31568 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C30443 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31526 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C30451) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31533 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C30457 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C3121) *
               C31664 * C13647 +
           ((C14582 + C14583) * C30443 -
            ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
            (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
            (C15310 + C15311) * C3121) *
               C31664 * C13648) *
              C31439 * C31575 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C30451 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C31526 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C30443 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C31533 +
            (C13649 * C1421 + C13645 * C1434 + C13650 * C5895 +
             C13646 * C5899) *
                C30457 +
            (C13649 * C1435 + C13645 * C1448 + C13650 * C5900 +
             C13646 * C5904) *
                C3121) *
               C31664 * C13647 +
           ((C14080 + C14081) * C30451 + (C14082 + C14083) * C31526 -
            (C16018 + C16019) * C30443 - (C16020 + C16021) * C31533 +
            (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
             C13646 * C6701) *
                C30457 +
            (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
             C13646 * C6703) *
                C3121) *
               C31664 * C13648) *
              C31439 * C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2827 + (C13686 + C13687) * C31815 -
            (C13878 + C13879) * C2828 - (C13880 + C13881) * C31811 +
            (C13882 + C13883) * C2829 + (C13884 + C13885) * C31801 -
            (C15102 + C15103) * C2830 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31439 * C3562 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C2828 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31815 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C2827) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31811 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C2829 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31801 +
            (C13649 * C1865 + C13645 * C1868 + C13650 * C5894 +
             C13646 * C5897) *
                C2830 +
            (C13649 * C1869 + C13645 * C1874 + C13650 * C5898 +
             C13646 * C5903) *
                C31781) *
               C31664 * C13647 +
           ((C14582 + C14583) * C2828 -
            ((C14075 + C14074) * C31815 + (C14073 + C14072) * C2827) +
            (C14584 + C14585) * C31811 - (C15308 + C15309) * C2829 -
            (C15310 + C15311) * C31801 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C2830 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C31664 * C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
             (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31805 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C2698 -
             ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31792 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C2697 + (C13694 + C13695) * C2691 -
             (C14226 + C14227) * C2698 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C31765) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C2698 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C2691 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C2697) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31805 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31792 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C2698 -
             ((C14368 + C14369) * C2691 + (C14370 + C14371) * C2697) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
            (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C31439 * C31816 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C2698 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C2691 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C2697) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31530) *
               C31664 * C13647 +
           ((C14582 + C14583) * C2698 -
            ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
            (C14584 + C14585) * C31530) *
               C31664 * C13648) *
              C31439 * C31813 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C2697 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C2691 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C2698 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C31530) *
               C31664 * C13647 +
           ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
            (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
               C31664 * C13648) *
              C31439 * C31804 +
          (((C13649 * C2581 + C13645 * C2584 + C13650 * C6542 +
             C13646 * C6546) *
                C2698 -
            ((C13650 * C2585 + C13646 * C2590 + C13649 * C2177 +
              C13645 * C2187) *
                 C2691 +
             (C13650 * C2581 + C13646 * C2584 + C13649 * C2169 +
              C13645 * C2178) *
                 C2697) +
            (C13649 * C2585 + C13645 * C2590 + C13650 * C6545 +
             C13646 * C6551) *
                C31530) *
               C31664 * C13647 +
           ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
             C13646 * C6803) *
                C2698 -
            ((C16163 + C16162) * C2691 + (C16161 + C16160) * C2697) +
            (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
             C13646 * C6805) *
                C31530) *
               C31664 * C13648) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
             (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C2698 -
             ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31568 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C2698 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C2691 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C2697) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31575 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C2697 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C2691 -
             (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
              C13645 * C1432) *
                 C2698 -
             (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
              C13645 * C1447) *
                 C31530) *
                C31664 * C13647 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C16019 + C16018) * C2698 -
             ((C14083 + C14082) * C2691 + (C14081 + C14080) * C2697) +
             (C16021 + C16020) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C2698 -
             ((C14084 + C14085) * C2691 + (C14086 + C14087) * C2697) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C31664 * C13648) *
               C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C2697 + (C13686 + C13687) * C2691 -
             (C13878 + C13879) * C2698 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31805 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C2698 -
             ((C13688 + C13689) * C2691 + (C13690 + C13691) * C2697) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31792 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C2697 + (C13694 + C13695) * C2691 -
             (C14226 + C14227) * C2698 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C31765) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C2698 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C2691 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C2697) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31805 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31792 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C2698 -
             ((C14368 + C14369) * C2691 + (C14370 + C14371) * C2697) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C2827 + (C13686 + C13687) * C31815 -
            (C13878 + C13879) * C2828 - (C13880 + C13881) * C31811 +
            (C13882 + C13883) * C2829 + (C13884 + C13885) * C31801 -
            (C15102 + C15103) * C2830 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31439 * C3562 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C2828 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31815 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C2827) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31811 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C2829 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31801 +
            (C13649 * C1865 + C13645 * C1868 + C13650 * C5894 +
             C13646 * C5897) *
                C2830 +
            (C13649 * C1869 + C13645 * C1874 + C13650 * C5898 +
             C13646 * C5903) *
                C31781) *
               C31664 * C13647 +
           ((C14582 + C14583) * C2828 -
            ((C14075 + C14074) * C31815 + (C14073 + C14072) * C2827) +
            (C14584 + C14585) * C31811 - (C15308 + C15309) * C2829 -
            (C15310 + C15311) * C31801 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C2830 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C31664 * C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1557 + (C13686 + C13687) * C1551 -
            (C13878 + C13879) * C1558 - (C13880 + C13881) * C1552 +
            (C13882 + C13883) * C1559 + (C13884 + C13885) * C1553 -
            (C15102 + C15103) * C1560 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31726 +
          (((C13879 + C13878) * C1558 -
            ((C13687 + C13686) * C1551 + (C13685 + C13684) * C1557) +
            (C13881 + C13880) * C1552 - (C13883 + C13882) * C1559 -
            (C13885 + C13884) * C1553 + (C15103 + C15102) * C1560 +
            (C15105 + C15104) * C31781) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1558 -
            ((C13688 + C13689) * C1551 + (C13690 + C13691) * C1557) +
            (C13888 + C13889) * C1552 - (C13890 + C13891) * C1559 -
            (C13892 + C13893) * C1553 +
            (C13649 * C1287 + C13645 * C1297 + C13650 * C1288 +
             C13646 * C1299) *
                C1560 +
            (C13649 * C1298 + C13645 * C1305 + C13650 * C1300 +
             C13646 * C1306) *
                C31781) *
               C31664 * C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
            (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C713 +
          (((C13879 + C13878) * C718 -
            ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
            (C13881 + C13880) * C31530) *
               C31664 * C13647 +
           ((C13886 + C13887) * C718 -
            ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
            (C13888 + C13889) * C31530) *
               C31664 * C13648) *
              C714 +
          (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
            (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
               C31664 * C13647 +
           ((C13692 + C13693) * C717 + (C13694 + C13695) * C31740 -
            (C14226 + C14227) * C718 - (C14228 + C14229) * C31530) *
               C31664 * C13648) *
              C715 +
          (((C14227 + C14226) * C718 -
            ((C13695 + C13694) * C31740 + (C13693 + C13692) * C717) +
            (C14229 + C14228) * C31530) *
               C31664 * C13647 +
           ((C13649 * C316 + C13645 * C334 + C13650 * C317 + C13646 * C336) *
                C718 -
            ((C13696 + C13697) * C31740 + (C13698 + C13699) * C717) +
            (C13649 * C335 + C13645 * C346 + C13650 * C337 + C13646 * C347) *
                C31530) *
               C31664 * C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
             (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C718 -
             ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31449) *
              C1987 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C718 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31740 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C717) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31449) *
              C1988 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C717 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31740 -
             (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
              C13645 * C1432) *
                 C718 -
             (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
              C13645 * C1447) *
                 C31530) *
                C31664 * C13647 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C31664 * C13648) *
               C31726 +
           (((C16019 + C16018) * C718 -
             ((C14083 + C14082) * C31740 + (C14081 + C14080) * C717) +
             (C16021 + C16020) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C718 -
             ((C14084 + C14085) * C31740 + (C14086 + C14087) * C717) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C31664 * C13648) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1557 + (C13686 + C13687) * C1551 -
            (C13878 + C13879) * C1558 - (C13880 + C13881) * C1552 +
            (C13882 + C13883) * C1559 + (C13884 + C13885) * C1553 -
            (C15102 + C15103) * C1560 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31439 * C31741 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C1558 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C1551 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C1557) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C1552 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C1559 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C1553 +
            (C13649 * C1865 + C13645 * C1868 + C13650 * C5894 +
             C13646 * C5897) *
                C1560 +
            (C13649 * C1869 + C13645 * C1874 + C13650 * C5898 +
             C13646 * C5903) *
                C31781) *
               C31664 * C13647 +
           ((C14582 + C14583) * C1558 -
            ((C14075 + C14074) * C1551 + (C14073 + C14072) * C1557) +
            (C14584 + C14585) * C1552 - (C15308 + C15309) * C1559 -
            (C15310 + C15311) * C1553 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C1560 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C31664 * C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
             (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C302 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C718 -
             ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C303 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C717 + (C13694 + C13695) * C31740 -
             (C14226 + C14227) * C718 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C31765) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C718 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31740 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C717) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C302 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C303 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C718 -
             ((C14368 + C14369) * C31740 + (C14370 + C14371) * C717) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
            (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C31439 * C2459 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C718 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31740 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C717) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31530) *
               C31664 * C13647 +
           ((C14582 + C14583) * C718 -
            ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
            (C14584 + C14585) * C31530) *
               C31664 * C13648) *
              C31439 * C2460 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C717 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C31740 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C718 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C31530) *
               C31664 * C13647 +
           ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
            (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
               C31664 * C13648) *
              C31439 * C2461 +
          (((C13649 * C2581 + C13645 * C2584 + C13650 * C6542 +
             C13646 * C6546) *
                C718 -
            ((C13650 * C2585 + C13646 * C2590 + C13649 * C2177 +
              C13645 * C2187) *
                 C31740 +
             (C13650 * C2581 + C13646 * C2584 + C13649 * C2169 +
              C13645 * C2178) *
                 C717) +
            (C13649 * C2585 + C13645 * C2590 + C13650 * C6545 +
             C13646 * C6551) *
                C31530) *
               C31664 * C13647 +
           ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
             C13646 * C6803) *
                C718 -
            ((C16163 + C16162) * C31740 + (C16161 + C16160) * C717) +
            (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
             C13646 * C6805) *
                C31530) *
               C31664 * C13648) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C115 + C13645 * C122 + C13650 * C308 +
                 C13646 * C318) *
                    C114 +
                (C13649 * C123 + C13645 * C136 + C13650 * C319 +
                 C13646 * C338) *
                    C31467) *
                   C31664 * C13647 +
               ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) *
                   C31664 * C13648) *
                  C107 -
              (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) *
                   C31664 * C13648 +
               ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) *
                   C31664 * C13647) *
                  C108 +
              (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) *
                   C31664 * C13647 +
               ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) *
                   C31664 * C13648) *
                  C109 -
              (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) *
                   C31664 * C13648 +
               ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) *
                   C31664 * C13647) *
                  C110 +
              (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) *
                   C31664 * C13647 +
               ((C13649 * C120 + C13645 * C133 + C13650 * C719 +
                 C13646 * C720) *
                    C114 +
                (C13649 * C132 + C13645 * C141 + C13650 * C721 +
                 C13646 * C722) *
                    C31467) *
                   C31664 * C13648) *
                  C111) *
             C31485 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C115 + C13645 * C122 + C13650 * C308 +
                 C13646 * C318) *
                    C305 +
                (C13649 * C123 + C13645 * C136 + C13650 * C319 +
                 C13646 * C338) *
                    C31808 -
                (C13650 * C309 + C13646 * C320 + C13649 * C308 +
                 C13645 * C318) *
                    C306 -
                (C13650 * C321 + C13646 * C339 + C13649 * C319 +
                 C13645 * C338) *
                    C31796 +
                (C13649 * C309 + C13645 * C320 + C13650 * C1283 +
                 C13646 * C1289) *
                    C307 +
                (C13649 * C321 + C13645 * C339 + C13650 * C1290 +
                 C13646 * C1301) *
                    C31771) *
                   C31664 * C13647 +
               ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
                (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
                (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
                   C31664 * C13648) *
                  C302 +
              (((C13879 + C13878) * C306 -
                ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
                (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
                (C13885 + C13884) * C31771) *
                   C31664 * C13647 +
               ((C13886 + C13887) * C306 -
                ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
                (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
                (C13892 + C13893) * C31771) *
                   C31664 * C13648) *
                  C303 +
              (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
                (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
                (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
                   C31664 * C13647 +
               ((C13692 + C13693) * C305 + (C13694 + C13695) * C31808 -
                (C13650 * C315 + C13646 * C332 + C13649 * C314 +
                 C13645 * C330) *
                    C306 -
                (C13650 * C333 + C13646 * C345 + C13649 * C331 +
                 C13645 * C344) *
                    C31796 +
                (C13649 * C315 + C13645 * C332 + C13650 * C1561 +
                 C13646 * C1562) *
                    C307 +
                (C13649 * C333 + C13645 * C345 + C13650 * C1563 +
                 C13646 * C1564) *
                    C31771) *
                   C31664 * C13648) *
                  C31765) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C302 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C303 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31765) *
              C31809 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C303 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C302 -
           (((C13650 * C1025 + C13646 * C1031 + C13649 * C536 + C13645 * C553) *
                 C31467 +
             (C13650 * C1016 + C13646 * C1024 + C13649 * C523 + C13645 * C535) *
                 C114) *
                C31664 * C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31765) *
              C31798 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C302 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C303 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C31664 *
                C13647 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C31664 * C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1184 -
            ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
            (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C1183 + (C13694 + C13695) * C1177 -
            (C14226 + C14227) * C1184 - (C14228 + C14229) * C1178 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C1185 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C31664 * C13647 +
          ((C13684 + C13685) * C1278 + (C13686 + C13687) * C1272 -
           (C13878 + C13879) * C1279 - (C13880 + C13881) * C1273 +
           (C13882 + C13883) * C1280 + (C13884 + C13885) * C1274 -
           (C13650 * C1286 + C13646 * C1295 + C13649 * C1285 + C13645 * C1293) *
               C1281 -
           (C13650 * C1296 + C13646 * C1304 + C13649 * C1294 + C13645 * C1303) *
               C1275 +
           (C13649 * C1286 + C13645 * C1295 + C13650 * C6004 + C13646 * C6005) *
               C1282 +
           (C13649 * C1296 + C13645 * C1304 + C13650 * C6006 + C13646 * C6007) *
               C1276) *
              C31664 * C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31439 * C31809 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C1184 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C1177 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C1183) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C1178 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C1185 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31771) *
               C31664 * C13647 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 -
            (C13650 * C1866 + C13646 * C1870 + C13649 * C1418 +
             C13645 * C1428) *
                C1185 -
            (C13650 * C1871 + C13646 * C1875 + C13649 * C1429 +
             C13645 * C1445) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31798 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C1183 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C1177 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C1184 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C1178 +
            (C13649 * C1421 + C13645 * C1434 + C13650 * C5895 +
             C13646 * C5899) *
                C1185 +
            (C13649 * C1435 + C13645 * C1448 + C13650 * C5900 +
             C13646 * C5904) *
                C31771) *
               C31664 * C13647 +
           ((C14080 + C14081) * C1183 + (C14082 + C14083) * C1177 -
            (C13650 * C1423 + C13646 * C1438 + C13649 * C1422 +
             C13645 * C1436) *
                C1184 -
            (C13650 * C1439 + C13646 * C1450 + C13649 * C1437 +
             C13645 * C1449) *
                C1178 +
            (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
             C13646 * C6701) *
                C1185 +
            (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
             C13646 * C6703) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31805 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31792 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31765) *
              C1987 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31792 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31805 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31765) *
              C1988 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C31805 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C31792 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C31664 *
                C13647 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C31664 * C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
            (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
            (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31439 * C1987 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C306 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31808 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C305) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31796 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C307 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31771) *
               C31664 * C13647 +
           ((C14582 + C14583) * C306 -
            ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
            (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
            (C15310 + C15311) * C31771) *
               C31664 * C13648) *
              C31439 * C1988 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C305 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C31808 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C306 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C31796 +
            (C13649 * C1421 + C13645 * C1434 + C13650 * C5895 +
             C13646 * C5899) *
                C307 +
            (C13649 * C1435 + C13645 * C1448 + C13650 * C5900 +
             C13646 * C5904) *
                C31771) *
               C31664 * C13647 +
           ((C14080 + C14081) * C305 + (C14082 + C14083) * C31808 -
            (C13650 * C1423 + C13646 * C1438 + C13649 * C1422 +
             C13645 * C1436) *
                C306 -
            (C13650 * C1439 + C13646 * C1450 + C13649 * C1437 +
             C13645 * C1449) *
                C31796 +
            (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
             C13646 * C6701) *
                C307 +
            (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
             C13646 * C6703) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C31664 * C13647 +
           ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
               C13648) *
              C31439 * C2162 -
          (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
               C13648 +
           ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                C31467 +
            (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                C114) *
               C31664 * C13647) *
              C31439 * C2163 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C114 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C31467) *
               C31664 * C13647 +
           ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
               C13648) *
              C31439 * C2164 -
          (((C13650 * C2587 + C13646 * C2591 + C13649 * C2175 +
             C13645 * C2186) *
                C31467 +
            (C13650 * C2582 + C13646 * C2586 + C13649 * C2168 +
             C13645 * C2176) *
                C114) *
               C31664 * C13648 +
           ((C13650 * C2585 + C13646 * C2590 + C13649 * C2177 +
             C13645 * C2187) *
                C31467 +
            (C13650 * C2581 + C13646 * C2584 + C13649 * C2169 +
             C13645 * C2178) *
                C114) *
               C31664 * C13647) *
              C31439 * C2165 +
          (((C13649 * C2170 + C13645 * C2179 + C13650 * C6543 +
             C13646 * C6547) *
                C114 +
            (C13649 * C2180 + C13645 * C2188 + C13650 * C6549 +
             C13646 * C6552) *
                C31467) *
               C31664 * C13647 +
           ((C13649 * C2171 + C13645 * C2181 + C13650 * C11001 +
             C13646 * C11002) *
                C114 +
            (C13649 * C2182 + C13645 * C2189 + C13650 * C11003 +
             C13646 * C11004) *
                C31467) *
               C31664 * C13648) *
              C31439 * C2166)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C1183 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C1177 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C1184 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C1178 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C1185 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C31664 * C13647 +
            ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
             (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
             (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
                C31664 * C13648) *
               C31726 +
           (((C13879 + C13878) * C1184 -
             ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
             (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
             (C13885 + C13884) * C31771) *
                C31664 * C13647 +
            ((C13886 + C13887) * C1184 -
             ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
             (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
             (C13892 + C13893) * C31771) *
                C31664 * C13648) *
               C31449) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C1184 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C1177 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C1183) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C1178 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C1185 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C31771) *
                C31664 * C13647 +
            ((C14582 + C14583) * C1184 -
             ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
             (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
             (C15310 + C15311) * C31771) *
                C31664 * C13648) *
               C31726 +
           (((C14072 + C14073) * C1183 + (C14074 + C14075) * C1177 -
             (C14583 + C14582) * C1184 - (C14585 + C14584) * C1178 +
             (C15309 + C15308) * C1185 + (C15311 + C15310) * C31771) *
                C31664 * C13647 +
            ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
             (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C1185 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C31771) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C713 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C714 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C715 -
           (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
                C13648 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
                C13647) *
               C31775) *
              C31741 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C714 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C713 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C715 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C31664 *
                C13647 +
            ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                 C114 +
             (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                 C31467) *
                C31664 * C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31726 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31449) *
              C2459 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31449 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31726) *
              C2460 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C31726 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C31449) *
              C2461 +
          ((((C16160 + C16161) * C114 + (C16162 + C16163) * C31467) * C31664 *
                C13647 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C31664 * C13648) *
               C31449 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C31664 *
                C13648 +
            ((C13650 * C2585 + C13646 * C2590 + C13649 * C2177 +
              C13645 * C2187) *
                 C31467 +
             (C13650 * C2581 + C13646 * C2584 + C13649 * C2169 +
              C13645 * C2178) *
                 C114) *
                C31664 * C13647) *
               C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
            (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
            (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C306 -
            ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
            (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C305 + (C13694 + C13695) * C31808 -
            (C13650 * C315 + C13646 * C332 + C13649 * C314 + C13645 * C330) *
                C306 -
            (C13650 * C333 + C13646 * C345 + C13649 * C331 + C13645 * C344) *
                C31796 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C307 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C31664 * C13647 +
           ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
               C13648) *
              C107 -
          (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
               C13648 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
               C13647) *
              C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
               C13647 +
           ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
               C13648) *
              C109 -
          (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
               C13648 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
               C13647) *
              C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C31664 *
               C13647 +
           ((C13649 * C120 + C13645 * C133 + C13650 * C719 + C13646 * C720) *
                C114 +
            (C13649 * C132 + C13645 * C141 + C13650 * C721 + C13646 * C722) *
                C31467) *
               C31664 * C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1184 -
            ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
            (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C1183 + (C13694 + C13695) * C1177 -
            (C14226 + C14227) * C1184 - (C14228 + C14229) * C1178 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C1185 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C31664 * C13647 +
          ((C13684 + C13685) * C1278 + (C13686 + C13687) * C1272 -
           (C13878 + C13879) * C1279 - (C13880 + C13881) * C1273 +
           (C13882 + C13883) * C1280 + (C13884 + C13885) * C1274 -
           (C13650 * C1286 + C13646 * C1295 + C13649 * C1285 + C13645 * C1293) *
               C1281 -
           (C13650 * C1296 + C13646 * C1304 + C13649 * C1294 + C13645 * C1303) *
               C1275 +
           (C13649 * C1286 + C13645 * C1295 + C13650 * C6004 + C13646 * C6005) *
               C1282 +
           (C13649 * C1296 + C13645 * C1304 + C13650 * C6006 + C13646 * C6007) *
               C1276) *
              C31664 * C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31805 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31792 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31765) *
              C1987 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31792 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31805 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31765) *
              C1988 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C31805 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C31792 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C31664 *
                C13647 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C31664 * C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
            (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
            (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31439 * C1987 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C306 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31808 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C305) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C31796 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C307 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31771) *
               C31664 * C13647 +
           ((C14582 + C14583) * C306 -
            ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
            (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
            (C15310 + C15311) * C31771) *
               C31664 * C13648) *
              C31439 * C1988 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C305 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C31808 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C306 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C31796 +
            (C13649 * C1421 + C13645 * C1434 + C13650 * C5895 +
             C13646 * C5899) *
                C307 +
            (C13649 * C1435 + C13645 * C1448 + C13650 * C5900 +
             C13646 * C5904) *
                C31771) *
               C31664 * C13647 +
           ((C14080 + C14081) * C305 + (C14082 + C14083) * C31808 -
            (C13650 * C1423 + C13646 * C1438 + C13649 * C1422 +
             C13645 * C1436) *
                C306 -
            (C13650 * C1439 + C13646 * C1450 + C13649 * C1437 +
             C13645 * C1449) *
                C31796 +
            (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
             C13646 * C6701) *
                C307 +
            (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
             C13646 * C6703) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
             (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C31444 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C718 -
             ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31452 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C717 + (C13694 + C13695) * C31740 -
             (C14226 + C14227) * C718 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C3124) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C718 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31740 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C717) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C31444 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31452 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C718 -
             ((C14368 + C14369) * C31740 + (C14370 + C14371) * C717) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
             (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C718 -
             ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31568 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C718 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31740 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C717) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C31449) *
              C31575 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C717 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31740 -
             (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
              C13645 * C1432) *
                 C718 -
             (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
              C13645 * C1447) *
                 C31530) *
                C31664 * C13647 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C31664 * C13648) *
               C2825 +
           (((C16019 + C16018) * C718 -
             ((C14083 + C14082) * C31740 + (C14081 + C14080) * C717) +
             (C16021 + C16020) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C718 -
             ((C14084 + C14085) * C31740 + (C14086 + C14087) * C717) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C31664 * C13648) *
               C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C305 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31808 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C306 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31796 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C307 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C31664 * C13647 +
            ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
             (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
             (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
                C31664 * C13648) *
               C2825 +
           (((C13879 + C13878) * C306 -
             ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
             (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
             (C13885 + C13884) * C31771) *
                C31664 * C13647 +
            ((C13886 + C13887) * C306 -
             ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
             (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
             (C13892 + C13893) * C31771) *
                C31664 * C13648) *
               C31449) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C306 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31808 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C305) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31796 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C307 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C31771) *
                C31664 * C13647 +
            ((C14582 + C14583) * C306 -
             ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
             (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
             (C15310 + C15311) * C31771) *
                C31664 * C13648) *
               C2825 +
           (((C14072 + C14073) * C305 + (C14074 + C14075) * C31808 -
             (C14583 + C14582) * C306 - (C14585 + C14584) * C31796 +
             (C15309 + C15308) * C307 + (C15311 + C15310) * C31771) *
                C31664 * C13647 +
            ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
             (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C307 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C31771) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31814 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31807 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31794 -
           (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
                C13648 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
                C13647) *
               C31775) *
              C3562 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31807 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31814 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31794 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C31664 *
                C13647 +
            ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                 C114 +
             (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                 C31467) *
                C31664 * C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C2825 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31449) *
              C31816 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31449 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C2825) *
              C31813 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C2825 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C31449) *
              C31804 +
          ((((C16160 + C16161) * C114 + (C16162 + C16163) * C31467) * C31664 *
                C13647 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C31664 * C13648) *
               C31449 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C31664 *
                C13648 +
            ((C13650 * C2585 + C13646 * C2590 + C13649 * C2177 +
              C13645 * C2187) *
                 C31467 +
             (C13650 * C2581 + C13646 * C2584 + C13649 * C2169 +
              C13645 * C2178) *
                 C114) *
                C31664 * C13647) *
               C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31444 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31452 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C3124) *
              C31568 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31452 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31444 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C3124) *
              C31575 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C31444 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C31452 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C31664 *
                C13647 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C31664 * C13648) *
               C3124) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C31814 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C31807 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31794 -
           (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
                C13648 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
                C13647) *
               C31775) *
              C3562 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C31807 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C31814 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31794 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C31664 *
                C13647 +
            ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                 C114 +
             (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                 C31467) *
                C31664 * C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C305 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31808 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C306 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31796 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C307 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C31664 * C13647 +
            ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
             (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
             (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
                C31664 * C13648) *
               C2825 +
           (((C13879 + C13878) * C306 -
             ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
             (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
             (C13885 + C13884) * C31771) *
                C31664 * C13647 +
            ((C13886 + C13887) * C306 -
             ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
             (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
             (C13892 + C13893) * C31771) *
                C31664 * C13648) *
               C31449) *
              C3562 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C306 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31808 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C305) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31796 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C307 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C31771) *
                C31664 * C13647 +
            ((C14582 + C14583) * C306 -
             ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
             (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
             (C15310 + C15311) * C31771) *
                C31664 * C13648) *
               C2825 +
           (((C14072 + C14073) * C305 + (C14074 + C14075) * C31808 -
             (C14583 + C14582) * C306 - (C14585 + C14584) * C31796 +
             (C15309 + C15308) * C307 + (C15311 + C15310) * C31771) *
                C31664 * C13647 +
            ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
             (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C307 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C31771) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C31664 * C13647 +
           ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
            (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
               C31664 * C13648) *
              C713 +
          (((C13879 + C13878) * C718 -
            ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
            (C13881 + C13880) * C31530) *
               C31664 * C13647 +
           ((C13886 + C13887) * C718 -
            ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
            (C13888 + C13889) * C31530) *
               C31664 * C13648) *
              C714 +
          (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
            (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
               C31664 * C13647 +
           ((C13692 + C13693) * C717 + (C13694 + C13695) * C31740 -
            (C14226 + C14227) * C718 - (C14228 + C14229) * C31530) *
               C31664 * C13648) *
              C715 +
          (((C14227 + C14226) * C718 -
            ((C13695 + C13694) * C31740 + (C13693 + C13692) * C717) +
            (C14229 + C14228) * C31530) *
               C31664 * C13647 +
           ((C13649 * C316 + C13645 * C334 + C13650 * C317 + C13646 * C336) *
                C718 -
            ((C13696 + C13697) * C31740 + (C13698 + C13699) * C717) +
            (C13649 * C335 + C13645 * C346 + C13650 * C337 + C13646 * C347) *
                C31530) *
               C31664 * C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1557 + (C13686 + C13687) * C1551 -
            (C13878 + C13879) * C1558 - (C13880 + C13881) * C1552 +
            (C13882 + C13883) * C1559 + (C13884 + C13885) * C1553 -
            (C15102 + C15103) * C1560 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31726 +
          (((C13879 + C13878) * C1558 -
            ((C13687 + C13686) * C1551 + (C13685 + C13684) * C1557) +
            (C13881 + C13880) * C1552 - (C13883 + C13882) * C1559 -
            (C13885 + C13884) * C1553 + (C15103 + C15102) * C1560 +
            (C15105 + C15104) * C31781) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1558 -
            ((C13688 + C13689) * C1551 + (C13690 + C13691) * C1557) +
            (C13888 + C13889) * C1552 - (C13890 + C13891) * C1559 -
            (C13892 + C13893) * C1553 +
            (C13649 * C1287 + C13645 * C1297 + C13650 * C1288 +
             C13646 * C1299) *
                C1560 +
            (C13649 * C1298 + C13645 * C1305 + C13650 * C1300 +
             C13646 * C1306) *
                C31781) *
               C31664 * C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C31664 * C13647 +
            ((C13684 + C13685) * C717 + (C13686 + C13687) * C31740 -
             (C13878 + C13879) * C718 - (C13880 + C13881) * C31530) *
                C31664 * C13648) *
               C302 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C31664 * C13647 +
            ((C13886 + C13887) * C718 -
             ((C13688 + C13689) * C31740 + (C13690 + C13691) * C717) +
             (C13888 + C13889) * C31530) *
                C31664 * C13648) *
               C303 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C31664 * C13647 +
            ((C13692 + C13693) * C717 + (C13694 + C13695) * C31740 -
             (C14226 + C14227) * C718 - (C14228 + C14229) * C31530) *
                C31664 * C13648) *
               C31765) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C718 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C31740 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C717) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C31530) *
                C31664 * C13647 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C31664 * C13648) *
               C302 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C31664 * C13647 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C31664 * C13648) *
               C303 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C31664 * C13647 +
            ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
              C13646 * C1740) *
                 C718 -
             ((C14368 + C14369) * C31740 + (C14370 + C14371) * C717) +
             (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
              C13646 * C1742) *
                 C31530) *
                C31664 * C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1557 + (C13686 + C13687) * C1551 -
            (C13878 + C13879) * C1558 - (C13880 + C13881) * C1552 +
            (C13882 + C13883) * C1559 + (C13884 + C13885) * C1553 -
            (C15102 + C15103) * C1560 - (C15104 + C15105) * C31781) *
               C31664 * C13648) *
              C31439 * C31741 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C1558 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C1551 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C1557) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C1552 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C1559 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C1553 +
            (C13649 * C1865 + C13645 * C1868 + C13650 * C5894 +
             C13646 * C5897) *
                C1560 +
            (C13649 * C1869 + C13645 * C1874 + C13650 * C5898 +
             C13646 * C5903) *
                C31781) *
               C31664 * C13647 +
           ((C14582 + C14583) * C1558 -
            ((C14075 + C14074) * C1551 + (C14073 + C14072) * C1557) +
            (C14584 + C14585) * C1552 - (C15308 + C15309) * C1559 -
            (C15310 + C15311) * C1553 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C1560 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C31664 * C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
            (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
            (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C306 -
            ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
            (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C305 + (C13694 + C13695) * C31808 -
            (C13650 * C315 + C13646 * C332 + C13649 * C314 + C13645 * C330) *
                C306 -
            (C13650 * C333 + C13646 * C345 + C13649 * C331 + C13645 * C344) *
                C31796 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C307 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C31664 * C13647 +
           ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
               C13648) *
              C107 -
          (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
               C13648 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
               C13647) *
              C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
               C13647 +
           ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
               C13648) *
              C109 -
          (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
               C13648 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
               C13647) *
              C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C31664 *
               C13647 +
           ((C13649 * C120 + C13645 * C133 + C13650 * C719 + C13646 * C720) *
                C114 +
            (C13649 * C132 + C13645 * C141 + C13650 * C721 + C13646 * C722) *
                C31467) *
               C31664 * C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C302 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C303 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C31765) *
              C31809 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C303 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C302 -
           (((C13650 * C1025 + C13646 * C1031 + C13649 * C536 + C13645 * C553) *
                 C31467 +
             (C13650 * C1016 + C13646 * C1024 + C13649 * C523 + C13645 * C535) *
                 C114) *
                C31664 * C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C31765) *
              C31798 +
          ((((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                 C114 +
             (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                 C31467) *
                C31664 * C13647 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C31664 *
                C13648) *
               C302 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C31664 *
                C13648 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C31664 *
                C13647) *
               C303 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C31664 *
                C13647 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C31664 * C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1184 -
            ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
            (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C1183 + (C13694 + C13695) * C1177 -
            (C14226 + C14227) * C1184 - (C14228 + C14229) * C1178 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C1185 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C31664 * C13647 +
          ((C13684 + C13685) * C1278 + (C13686 + C13687) * C1272 -
           (C13878 + C13879) * C1279 - (C13880 + C13881) * C1273 +
           (C13882 + C13883) * C1280 + (C13884 + C13885) * C1274 -
           (C13650 * C1286 + C13646 * C1295 + C13649 * C1285 + C13645 * C1293) *
               C1281 -
           (C13650 * C1296 + C13646 * C1304 + C13649 * C1294 + C13645 * C1303) *
               C1275 +
           (C13649 * C1286 + C13645 * C1295 + C13650 * C6004 + C13646 * C6005) *
               C1282 +
           (C13649 * C1296 + C13645 * C1304 + C13650 * C6006 + C13646 * C6007) *
               C1276) *
              C31664 * C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31439 * C31809 +
          (((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
             C13646 * C1426) *
                C1184 -
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C1177 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C1183) +
            (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
             C13646 * C1444) *
                C1178 -
            (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
             C13645 * C1426) *
                C1185 -
            (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
             C13645 * C1444) *
                C31771) *
               C31664 * C13647 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 -
            (C13650 * C1866 + C13646 * C1870 + C13649 * C1418 +
             C13645 * C1428) *
                C1185 -
            (C13650 * C1871 + C13646 * C1875 + C13649 * C1429 +
             C13645 * C1445) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31798 +
          (((C13649 * C526 + C13645 * C541 + C13650 * C1420 + C13646 * C1432) *
                C1183 +
            (C13649 * C542 + C13645 * C556 + C13650 * C1433 + C13646 * C1447) *
                C1177 -
            (C13650 * C1421 + C13646 * C1434 + C13649 * C1420 +
             C13645 * C1432) *
                C1184 -
            (C13650 * C1435 + C13646 * C1448 + C13649 * C1433 +
             C13645 * C1447) *
                C1178 +
            (C13649 * C1421 + C13645 * C1434 + C13650 * C5895 +
             C13646 * C5899) *
                C1185 +
            (C13649 * C1435 + C13645 * C1448 + C13650 * C5900 +
             C13646 * C5904) *
                C31771) *
               C31664 * C13647 +
           ((C14080 + C14081) * C1183 + (C14082 + C14083) * C1177 -
            (C13650 * C1423 + C13646 * C1438 + C13649 * C1422 +
             C13645 * C1436) *
                C1184 -
            (C13650 * C1439 + C13646 * C1450 + C13649 * C1437 +
             C13645 * C1449) *
                C1178 +
            (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
             C13646 * C6701) *
                C1185 +
            (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
             C13646 * C6703) *
                C31771) *
               C31664 * C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C31664 * C13647 +
            ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
                C13648) *
               C713 -
           (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
                C13648 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
                C13647) *
               C714 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
                C13647 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
                C13648) *
               C715 -
           (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
                C13648 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
                C13647) *
               C31775) *
              C31741 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C31664 *
                C13647 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C31664 *
                C13648) *
               C714 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C31664 *
                C13648 +
            ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 + C13645 * C554) *
                 C31467 +
             (C13650 * C1013 + C13646 * C1018 + C13649 * C524 + C13645 * C538) *
                 C114) *
                C31664 * C13647) *
               C713 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C31664 *
                C13648 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C31664 *
                C13647) *
               C715 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C31664 *
                C13647 +
            ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                 C114 +
             (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                 C31467) *
                C31664 * C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C1183 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C1177 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C1184 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C1178 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C1185 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C31664 * C13647 +
            ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
             (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
             (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
                C31664 * C13648) *
               C31726 +
           (((C13879 + C13878) * C1184 -
             ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
             (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
             (C13885 + C13884) * C31771) *
                C31664 * C13647 +
            ((C13886 + C13887) * C1184 -
             ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
             (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
             (C13892 + C13893) * C31771) *
                C31664 * C13648) *
               C31449) *
              C31741 +
          ((((C13649 * C1013 + C13645 * C1018 + C13650 * C1417 +
              C13646 * C1426) *
                 C1184 -
             ((C13650 * C1019 + C13646 * C1028 + C13649 * C537 +
               C13645 * C554) *
                  C1177 +
              (C13650 * C1013 + C13646 * C1018 + C13649 * C524 +
               C13645 * C538) *
                  C1183) +
             (C13649 * C1019 + C13645 * C1028 + C13650 * C1427 +
              C13646 * C1444) *
                 C1178 -
             (C13650 * C1865 + C13646 * C1868 + C13649 * C1417 +
              C13645 * C1426) *
                 C1185 -
             (C13650 * C1869 + C13646 * C1874 + C13649 * C1427 +
              C13645 * C1444) *
                 C31771) *
                C31664 * C13647 +
            ((C14582 + C14583) * C1184 -
             ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
             (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
             (C15310 + C15311) * C31771) *
                C31664 * C13648) *
               C31726 +
           (((C14072 + C14073) * C1183 + (C14074 + C14075) * C1177 -
             (C14583 + C14582) * C1184 - (C14585 + C14584) * C1178 +
             (C15309 + C15308) * C1185 + (C15311 + C15310) * C31771) *
                C31664 * C13647 +
            ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
             (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
             (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
              C13646 * C1872) *
                 C1185 +
             (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
              C13646 * C1876) *
                 C31771) *
                C31664 * C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C31664 * C13647 +
           ((C13684 + C13685) * C114 + (C13686 + C13687) * C31467) * C31664 *
               C13648) *
              C107 -
          (((C13688 + C13689) * C31467 + (C13690 + C13691) * C114) * C31664 *
               C13648 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C31664 *
               C13647) *
              C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C31664 *
               C13647 +
           ((C13692 + C13693) * C114 + (C13694 + C13695) * C31467) * C31664 *
               C13648) *
              C109 -
          (((C13696 + C13697) * C31467 + (C13698 + C13699) * C114) * C31664 *
               C13648 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C31664 *
               C13647) *
              C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C31664 *
               C13647 +
           ((C13649 * C120 + C13645 * C133 + C13650 * C719 + C13646 * C720) *
                C114 +
            (C13649 * C132 + C13645 * C141 + C13650 * C721 + C13646 * C722) *
                C31467) *
               C31664 * C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C305 + (C13686 + C13687) * C31808 -
            (C13878 + C13879) * C306 - (C13880 + C13881) * C31796 +
            (C13882 + C13883) * C307 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C306 -
            ((C13688 + C13689) * C31808 + (C13690 + C13691) * C305) +
            (C13888 + C13889) * C31796 - (C13890 + C13891) * C307 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C305 + (C13694 + C13695) * C31808 -
            (C13650 * C315 + C13646 * C332 + C13649 * C314 + C13645 * C330) *
                C306 -
            (C13650 * C333 + C13646 * C345 + C13649 * C331 + C13645 * C344) *
                C31796 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C307 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C31664 * C13647 +
           ((C13684 + C13685) * C1183 + (C13686 + C13687) * C1177 -
            (C13878 + C13879) * C1184 - (C13880 + C13881) * C1178 +
            (C13882 + C13883) * C1185 + (C13884 + C13885) * C31771) *
               C31664 * C13648) *
              C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C31664 * C13647 +
           ((C13886 + C13887) * C1184 -
            ((C13688 + C13689) * C1177 + (C13690 + C13691) * C1183) +
            (C13888 + C13889) * C1178 - (C13890 + C13891) * C1185 -
            (C13892 + C13893) * C31771) *
               C31664 * C13648) *
              C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C31664 * C13647 +
           ((C13692 + C13693) * C1183 + (C13694 + C13695) * C1177 -
            (C14226 + C14227) * C1184 - (C14228 + C14229) * C1178 +
            (C13649 * C315 + C13645 * C332 + C13650 * C1561 + C13646 * C1562) *
                C1185 +
            (C13649 * C333 + C13645 * C345 + C13650 * C1563 + C13646 * C1564) *
                C31771) *
               C31664 * C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C31664 * C13647 +
          ((C13684 + C13685) * C1278 + (C13686 + C13687) * C1272 -
           (C13878 + C13879) * C1279 - (C13880 + C13881) * C1273 +
           (C13882 + C13883) * C1280 + (C13884 + C13885) * C1274 -
           (C13650 * C1286 + C13646 * C1295 + C13649 * C1285 + C13645 * C1293) *
               C1281 -
           (C13650 * C1296 + C13646 * C1304 + C13649 * C1294 + C13645 * C1303) *
               C1275 +
           (C13649 * C1286 + C13645 * C1295 + C13650 * C6004 + C13646 * C6005) *
               C1282 +
           (C13649 * C1296 + C13645 * C1304 + C13650 * C6006 + C13646 * C6007) *
               C1276) *
              C31664 * C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C30451 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31526 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C30443 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31533 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C30457 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C3121) *
               C19339 +
           ((C25181 + C25182) * C30451 + (C25183 + C25184) * C31526 -
            (C25651 + C25652) * C30443 - (C25653 + C25654) * C31533 +
            (C26053 + C26054) * C30457 + (C26055 + C26056) * C3121) *
               C19340) *
              C31425 * C31444 +
          (((C13879 + C13878) * C30443 -
            ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
            (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
            (C13885 + C13884) * C3121) *
               C19339 +
           ((C14582 + C14583) * C30443 -
            ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
            (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
            (C15310 + C15311) * C3121) *
               C19340) *
              C31425 * C31452 +
          (((C13691 + C13690) * C30451 + (C13689 + C13688) * C31526 -
            (C13887 + C13886) * C30443 - (C13889 + C13888) * C31533 +
            (C13891 + C13890) * C30457 + (C13893 + C13892) * C3121) *
               C19339 +
           ((C14076 + C14077) * C30451 + (C14078 + C14079) * C31526 -
            (C14586 + C14587) * C30443 - (C14588 + C14589) * C31533 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C30457 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C3121) *
               C19340) *
              C31425 * C3124) *
         C31485) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C30451 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31526 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C30443 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31533 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C30457 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C3121) *
                C19339 +
            ((C25181 + C25182) * C30451 + (C25183 + C25184) * C31526 -
             (C25651 + C25652) * C30443 - (C25653 + C25654) * C31533 +
             (C26053 + C26054) * C30457 + (C26055 + C26056) * C3121) *
                C19340) *
               C31425 * C2825 +
           (((C13879 + C13878) * C30443 -
             ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
             (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
             (C13885 + C13884) * C3121) *
                C19339 +
            ((C14582 + C14583) * C30443 -
             ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
             (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
             (C15310 + C15311) * C3121) *
                C19340) *
               C31425 * C31449) *
              C31741 +
          ((((C25652 + C25651) * C30443 -
             ((C25184 + C25183) * C31526 + (C25182 + C25181) * C30451) +
             (C25654 + C25653) * C31533 - (C26054 + C26053) * C30457 -
             (C26056 + C26055) * C3121) *
                C19339 +
            ((C26057 + C26058) * C30443 -
             ((C25185 + C25186) * C31526 + (C25187 + C25188) * C30451) +
             (C26059 + C26060) * C31533 - (C26061 + C26062) * C30457 -
             (C26063 + C26064) * C3121) *
                C19340) *
               C31425 * C2825 +
           (((C14072 + C14073) * C30451 + (C14074 + C14075) * C31526 -
             (C14583 + C14582) * C30443 - (C14585 + C14584) * C31533 +
             (C15309 + C15308) * C30457 + (C15311 + C15310) * C3121) *
                C19339 +
            ((C14080 + C14081) * C30451 + (C14082 + C14083) * C31526 -
             (C16018 + C16019) * C30443 - (C16020 + C16021) * C31533 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C30457 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C3121) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C2827 + (C25183 + C25184) * C31815 -
            (C25651 + C25652) * C2828 - (C25653 + C25654) * C31811 +
            (C26053 + C26054) * C2829 + (C26055 + C26056) * C31801 -
            (C26527 + C26528) * C2830 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C2825 +
          (((C13879 + C13878) * C2828 -
            ((C13687 + C13686) * C31815 + (C13685 + C13684) * C2827) +
            (C13881 + C13880) * C31811 - (C13883 + C13882) * C2829 -
            (C13885 + C13884) * C31801 + (C15103 + C15102) * C2830 +
            (C15105 + C15104) * C31781) *
               C19339 +
           ((C14582 + C14583) * C2828 -
            ((C14075 + C14074) * C31815 + (C14073 + C14072) * C2827) +
            (C14584 + C14585) * C31811 - (C15308 + C15309) * C2829 -
            (C15310 + C15311) * C31801 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C2830 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C19340) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
            (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
               C19340) *
              C31425 * C31814 +
          (((C13879 + C13878) * C2698 -
            ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
            (C13881 + C13880) * C31530) *
               C19339 +
           ((C14582 + C14583) * C2698 -
            ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
            (C14584 + C14585) * C31530) *
               C19340) *
              C31425 * C31807 +
          (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
            (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
               C19339 +
           ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
            (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
               C19340) *
              C31425 * C31794 +
          (((C14227 + C14226) * C2698 -
            ((C13695 + C13694) * C2691 + (C13693 + C13692) * C2697) +
            (C14229 + C14228) * C31530) *
               C19339 +
           ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
             C13646 * C1740) *
                C2698 -
            ((C14368 + C14369) * C2691 + (C14370 + C14371) * C2697) +
            (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
             C13646 * C1742) *
                C31530) *
               C19340) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
             (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31809 +
          ((((C25652 + C25651) * C2698 -
             ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C2698 -
             ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31798 +
          ((((C25188 + C25187) * C2697 + (C25186 + C25185) * C2691 -
             (C26058 + C26057) * C2698 - (C26060 + C26059) * C31530) *
                C19339 +
            ((C26921 + C26922) * C2697 + (C26923 + C26924) * C2691 -
             (C27391 + C27392) * C2698 - (C27393 + C27394) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C16019 + C16018) * C2698 -
             ((C14083 + C14082) * C2691 + (C14081 + C14080) * C2697) +
             (C16021 + C16020) * C31530) *
                C19339 +
            ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
              C13646 * C6803) *
                 C2698 -
             ((C16163 + C16162) * C2691 + (C16161 + C16160) * C2697) +
             (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
              C13646 * C6805) *
                 C31530) *
                C19340) *
               C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
             (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31444 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31452 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C3124) *
              C31741 +
          ((((C25652 + C25651) * C2698 -
             ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C2698 -
             ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31444 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31452 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C2698 -
             ((C14084 + C14085) * C2691 + (C14086 + C14087) * C2697) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
            (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
               C19340) *
              C31425 * C31814 +
          (((C13879 + C13878) * C2698 -
            ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
            (C13881 + C13880) * C31530) *
               C19339 +
           ((C14582 + C14583) * C2698 -
            ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
            (C14584 + C14585) * C31530) *
               C19340) *
              C31425 * C31807 +
          (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
            (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
               C19339 +
           ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
            (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
               C19340) *
              C31425 * C31794 +
          (((C14227 + C14226) * C2698 -
            ((C13695 + C13694) * C2691 + (C13693 + C13692) * C2697) +
            (C14229 + C14228) * C31530) *
               C19339 +
           ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
             C13646 * C1740) *
                C2698 -
            ((C14368 + C14369) * C2691 + (C14370 + C14371) * C2697) +
            (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
             C13646 * C1742) *
                C31530) *
               C19340) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C2827 + (C25183 + C25184) * C31815 -
            (C25651 + C25652) * C2828 - (C25653 + C25654) * C31811 +
            (C26053 + C26054) * C2829 + (C26055 + C26056) * C31801 -
            (C26527 + C26528) * C2830 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C2825 +
          (((C13879 + C13878) * C2828 -
            ((C13687 + C13686) * C31815 + (C13685 + C13684) * C2827) +
            (C13881 + C13880) * C31811 - (C13883 + C13882) * C2829 -
            (C13885 + C13884) * C31801 + (C15103 + C15102) * C2830 +
            (C15105 + C15104) * C31781) *
               C19339 +
           ((C14582 + C14583) * C2828 -
            ((C14075 + C14074) * C31815 + (C14073 + C14072) * C2827) +
            (C14584 + C14585) * C31811 - (C15308 + C15309) * C2829 -
            (C15310 + C15311) * C31801 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C2830 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C19340) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C30451 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31526 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C30443 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31533 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C30457 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C3121) *
                C19339 +
            ((C25181 + C25182) * C30451 + (C25183 + C25184) * C31526 -
             (C25651 + C25652) * C30443 - (C25653 + C25654) * C31533 +
             (C26053 + C26054) * C30457 + (C26055 + C26056) * C3121) *
                C19340) *
               C31425 * C31726 +
           (((C13879 + C13878) * C30443 -
             ((C13687 + C13686) * C31526 + (C13685 + C13684) * C30451) +
             (C13881 + C13880) * C31533 - (C13883 + C13882) * C30457 -
             (C13885 + C13884) * C3121) *
                C19339 +
            ((C14582 + C14583) * C30443 -
             ((C14075 + C14074) * C31526 + (C14073 + C14072) * C30451) +
             (C14584 + C14585) * C31533 - (C15308 + C15309) * C30457 -
             (C15310 + C15311) * C3121) *
                C19340) *
               C31425 * C31449) *
              C3562 +
          ((((C25652 + C25651) * C30443 -
             ((C25184 + C25183) * C31526 + (C25182 + C25181) * C30451) +
             (C25654 + C25653) * C31533 - (C26054 + C26053) * C30457 -
             (C26056 + C26055) * C3121) *
                C19339 +
            ((C26057 + C26058) * C30443 -
             ((C25185 + C25186) * C31526 + (C25187 + C25188) * C30451) +
             (C26059 + C26060) * C31533 - (C26061 + C26062) * C30457 -
             (C26063 + C26064) * C3121) *
                C19340) *
               C31425 * C31726 +
           (((C14072 + C14073) * C30451 + (C14074 + C14075) * C31526 -
             (C14583 + C14582) * C30443 - (C14585 + C14584) * C31533 +
             (C15309 + C15308) * C30457 + (C15311 + C15310) * C3121) *
                C19339 +
            ((C14080 + C14081) * C30451 + (C14082 + C14083) * C31526 -
             (C16018 + C16019) * C30443 - (C16020 + C16021) * C31533 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C30457 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C3121) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C30451 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31526 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C30443 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31533 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C30457 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C3121) *
               C19339 +
           ((C25181 + C25182) * C30451 + (C25183 + C25184) * C31526 -
            (C25651 + C25652) * C30443 - (C25653 + C25654) * C31533 +
            (C26053 + C26054) * C30457 + (C26055 + C26056) * C3121) *
               C19340) *
              C31425 * C31439 * C31568 +
          (((C25652 + C25651) * C30443 -
            ((C25184 + C25183) * C31526 + (C25182 + C25181) * C30451) +
            (C25654 + C25653) * C31533 - (C26054 + C26053) * C30457 -
            (C26056 + C26055) * C3121) *
               C19339 +
           ((C26057 + C26058) * C30443 -
            ((C25185 + C25186) * C31526 + (C25187 + C25188) * C30451) +
            (C26059 + C26060) * C31533 - (C26061 + C26062) * C30457 -
            (C26063 + C26064) * C3121) *
               C19340) *
              C31425 * C31439 * C31575 +
          (((C25188 + C25187) * C30451 + (C25186 + C25185) * C31526 -
            (C26058 + C26057) * C30443 - (C26060 + C26059) * C31533 +
            (C26062 + C26061) * C30457 + (C26064 + C26063) * C3121) *
               C19339 +
           ((C26921 + C26922) * C30451 + (C26923 + C26924) * C31526 -
            (C27391 + C27392) * C30443 - (C27393 + C27394) * C31533 +
            (C13649 * C6542 + C13645 * C6546 + C13650 * C6904 +
             C13646 * C6905) *
                C30457 +
            (C13649 * C6545 + C13645 * C6551 + C13650 * C6906 +
             C13646 * C6907) *
                C3121) *
               C19340) *
              C31425 * C31439 * C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C2827 + (C25183 + C25184) * C31815 -
            (C25651 + C25652) * C2828 - (C25653 + C25654) * C31811 +
            (C26053 + C26054) * C2829 + (C26055 + C26056) * C31801 -
            (C26527 + C26528) * C2830 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C31439 * C3562 +
          (((C25652 + C25651) * C2828 -
            ((C25184 + C25183) * C31815 + (C25182 + C25181) * C2827) +
            (C25654 + C25653) * C31811 - (C26054 + C26053) * C2829 -
            (C26056 + C26055) * C31801 + (C26528 + C26527) * C2830 +
            (C26530 + C26529) * C31781) *
               C19339 +
           ((C26057 + C26058) * C2828 -
            ((C25185 + C25186) * C31815 + (C25187 + C25188) * C2827) +
            (C26059 + C26060) * C31811 - (C26061 + C26062) * C2829 -
            (C26063 + C26064) * C31801 +
            (C13649 * C5895 + C13645 * C5899 + C13650 * C5896 +
             C13646 * C5901) *
                C2830 +
            (C13649 * C5900 + C13645 * C5904 + C13650 * C5902 +
             C13646 * C5905) *
                C31781) *
               C19340) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
             (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31805 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31792 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C31765) *
              C3562 +
          ((((C25652 + C25651) * C2698 -
             ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C2698 -
             ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31805 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31792 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C2698 -
             ((C14084 + C14085) * C2691 + (C14086 + C14087) * C2697) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2697 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C2691 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2698 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
            (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
               C19340) *
              C31425 * C31439 * C31816 +
          (((C25652 + C25651) * C2698 -
            ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
            (C25654 + C25653) * C31530) *
               C19339 +
           ((C26057 + C26058) * C2698 -
            ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
            (C26059 + C26060) * C31530) *
               C19340) *
              C31425 * C31439 * C31813 +
          (((C25188 + C25187) * C2697 + (C25186 + C25185) * C2691 -
            (C26058 + C26057) * C2698 - (C26060 + C26059) * C31530) *
               C19339 +
           ((C26921 + C26922) * C2697 + (C26923 + C26924) * C2691 -
            (C27391 + C27392) * C2698 - (C27393 + C27394) * C31530) *
               C19340) *
              C31425 * C31439 * C31804 +
          (((C27392 + C27391) * C2698 -
            ((C26924 + C26923) * C2691 + (C26922 + C26921) * C2697) +
            (C27394 + C27393) * C31530) *
               C19339 +
           ((C13649 * C6543 + C13645 * C6547 + C13650 * C6544 +
             C13646 * C6548) *
                C2698 -
            ((C26925 + C26926) * C2691 + (C26927 + C26928) * C2697) +
            (C13649 * C6549 + C13645 * C6552 + C13650 * C6550 +
             C13646 * C6553) *
                C31530) *
               C19340) *
              C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
             (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31726 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31568 +
          ((((C25652 + C25651) * C2698 -
             ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C2698 -
             ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31726 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31575 +
          ((((C25188 + C25187) * C2697 + (C25186 + C25185) * C2691 -
             (C26058 + C26057) * C2698 - (C26060 + C26059) * C31530) *
                C19339 +
            ((C26921 + C26922) * C2697 + (C26923 + C26924) * C2691 -
             (C27391 + C27392) * C2698 - (C27393 + C27394) * C31530) *
                C19340) *
               C31425 * C31726 +
           (((C16019 + C16018) * C2698 -
             ((C14083 + C14082) * C2691 + (C14081 + C14080) * C2697) +
             (C16021 + C16020) * C31530) *
                C19339 +
            ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
              C13646 * C6803) *
                 C2698 -
             ((C16163 + C16162) * C2691 + (C16161 + C16160) * C2697) +
             (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
              C13646 * C6805) *
                 C31530) *
                C19340) *
               C31425 * C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C2697 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C2691 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C2698 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C2697 + (C25183 + C25184) * C2691 -
             (C25651 + C25652) * C2698 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31805 +
           (((C13879 + C13878) * C2698 -
             ((C13687 + C13686) * C2691 + (C13685 + C13684) * C2697) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C2698 -
             ((C14075 + C14074) * C2691 + (C14073 + C14072) * C2697) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31792 +
           (((C13691 + C13690) * C2697 + (C13689 + C13688) * C2691 -
             (C13887 + C13886) * C2698 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C2697 + (C14078 + C14079) * C2691 -
             (C14586 + C14587) * C2698 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C31765) *
              C3562 +
          ((((C25652 + C25651) * C2698 -
             ((C25184 + C25183) * C2691 + (C25182 + C25181) * C2697) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C2698 -
             ((C25185 + C25186) * C2691 + (C25187 + C25188) * C2697) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31805 +
           (((C14072 + C14073) * C2697 + (C14074 + C14075) * C2691 -
             (C14583 + C14582) * C2698 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C2697 + (C14082 + C14083) * C2691 -
             (C16018 + C16019) * C2698 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31792 +
           (((C14587 + C14586) * C2698 -
             ((C14079 + C14078) * C2691 + (C14077 + C14076) * C2697) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C2698 -
             ((C14084 + C14085) * C2691 + (C14086 + C14087) * C2697) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C2827 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31815 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C2828 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31811 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C2829 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31801 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C2830 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C2827 + (C25183 + C25184) * C31815 -
            (C25651 + C25652) * C2828 - (C25653 + C25654) * C31811 +
            (C26053 + C26054) * C2829 + (C26055 + C26056) * C31801 -
            (C26527 + C26528) * C2830 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C31439 * C3562 +
          (((C25652 + C25651) * C2828 -
            ((C25184 + C25183) * C31815 + (C25182 + C25181) * C2827) +
            (C25654 + C25653) * C31811 - (C26054 + C26053) * C2829 -
            (C26056 + C26055) * C31801 + (C26528 + C26527) * C2830 +
            (C26530 + C26529) * C31781) *
               C19339 +
           ((C26057 + C26058) * C2828 -
            ((C25185 + C25186) * C31815 + (C25187 + C25188) * C2827) +
            (C26059 + C26060) * C31811 - (C26061 + C26062) * C2829 -
            (C26063 + C26064) * C31801 +
            (C13649 * C5895 + C13645 * C5899 + C13650 * C5896 +
             C13646 * C5901) *
                C2830 +
            (C13649 * C5900 + C13645 * C5904 + C13650 * C5902 +
             C13646 * C5905) *
                C31781) *
               C19340) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C1557 + (C25183 + C25184) * C1551 -
            (C25651 + C25652) * C1558 - (C25653 + C25654) * C1552 +
            (C26053 + C26054) * C1559 + (C26055 + C26056) * C1553 -
            (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 +
             C13645 * C1868) *
                C1560 -
            (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 +
             C13645 * C1874) *
                C31781) *
               C19340) *
              C31425 * C31726 +
          (((C13879 + C13878) * C1558 -
            ((C13687 + C13686) * C1551 + (C13685 + C13684) * C1557) +
            (C13881 + C13880) * C1552 - (C13883 + C13882) * C1559 -
            (C13885 + C13884) * C1553 + (C15103 + C15102) * C1560 +
            (C15105 + C15104) * C31781) *
               C19339 +
           ((C14582 + C14583) * C1558 -
            ((C14075 + C14074) * C1551 + (C14073 + C14072) * C1557) +
            (C14584 + C14585) * C1552 - (C15308 + C15309) * C1559 -
            (C15310 + C15311) * C1553 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C1560 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C19340) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
            (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
             C13645 * C1018) *
                C718 -
            (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
             C13645 * C1028) *
                C31530) *
               C19340) *
              C31425 * C713 +
          (((C13879 + C13878) * C718 -
            ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
            (C13881 + C13880) * C31530) *
               C19339 +
           ((C14582 + C14583) * C718 -
            ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
            (C14584 + C14585) * C31530) *
               C19340) *
              C31425 * C714 +
          (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
            (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
               C19339 +
           ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
            (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
               C19340) *
              C31425 * C715 +
          (((C14227 + C14226) * C718 -
            ((C13695 + C13694) * C31740 + (C13693 + C13692) * C717) +
            (C14229 + C14228) * C31530) *
               C19339 +
           ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
             C13646 * C1740) *
                C718 -
            ((C14368 + C14369) * C31740 + (C14370 + C14371) * C717) +
            (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
             C13646 * C1742) *
                C31530) *
               C19340) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
             (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31726 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31449) *
              C1987 +
          ((((C25652 + C25651) * C718 -
             ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C718 -
             ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31726 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31449) *
              C1988 +
          ((((C25188 + C25187) * C717 + (C25186 + C25185) * C31740 -
             (C26058 + C26057) * C718 - (C26060 + C26059) * C31530) *
                C19339 +
            ((C26921 + C26922) * C717 + (C26923 + C26924) * C31740 -
             (C13650 * C6542 + C13646 * C6546 + C13649 * C2581 +
              C13645 * C2584) *
                 C718 -
             (C13650 * C6545 + C13646 * C6551 + C13649 * C2585 +
              C13645 * C2590) *
                 C31530) *
                C19340) *
               C31425 * C31726 +
           (((C16019 + C16018) * C718 -
             ((C14083 + C14082) * C31740 + (C14081 + C14080) * C717) +
             (C16021 + C16020) * C31530) *
                C19339 +
            ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
              C13646 * C6803) *
                 C718 -
             ((C16163 + C16162) * C31740 + (C16161 + C16160) * C717) +
             (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
              C13646 * C6805) *
                 C31530) *
                C19340) *
               C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C1557 + (C25183 + C25184) * C1551 -
            (C25651 + C25652) * C1558 - (C25653 + C25654) * C1552 +
            (C26053 + C26054) * C1559 + (C26055 + C26056) * C1553 -
            (C26527 + C26528) * C1560 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C31439 * C31741 +
          (((C25652 + C25651) * C1558 -
            ((C25184 + C25183) * C1551 + (C25182 + C25181) * C1557) +
            (C25654 + C25653) * C1552 - (C26054 + C26053) * C1559 -
            (C26056 + C26055) * C1553 + (C26528 + C26527) * C1560 +
            (C26530 + C26529) * C31781) *
               C19339 +
           ((C26057 + C26058) * C1558 -
            ((C25185 + C25186) * C1551 + (C25187 + C25188) * C1557) +
            (C26059 + C26060) * C1552 - (C26061 + C26062) * C1559 -
            (C26063 + C26064) * C1553 +
            (C13649 * C5895 + C13645 * C5899 + C13650 * C5896 +
             C13646 * C5901) *
                C1560 +
            (C13649 * C5900 + C13645 * C5904 + C13650 * C5902 +
             C13646 * C5905) *
                C31781) *
               C19340) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
             (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C302 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C303 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C31765) *
              C31741 +
          ((((C25652 + C25651) * C718 -
             ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C13649 * C1420 + C13645 * C1432 + C13650 * C1421 +
              C13646 * C1434) *
                 C718 -
             ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
             (C13649 * C1433 + C13645 * C1447 + C13650 * C1435 +
              C13646 * C1448) *
                 C31530) *
                C19340) *
               C31425 * C302 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C303 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C718 -
             ((C14084 + C14085) * C31740 + (C14086 + C14087) * C717) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
            (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
               C19340) *
              C31425 * C31439 * C2459 +
          (((C25652 + C25651) * C718 -
            ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
            (C25654 + C25653) * C31530) *
               C19339 +
           ((C26057 + C26058) * C718 -
            ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
            (C26059 + C26060) * C31530) *
               C19340) *
              C31425 * C31439 * C2460 +
          (((C25188 + C25187) * C717 + (C25186 + C25185) * C31740 -
            (C26058 + C26057) * C718 - (C26060 + C26059) * C31530) *
               C19339 +
           ((C26921 + C26922) * C717 + (C26923 + C26924) * C31740 -
            (C27391 + C27392) * C718 - (C27393 + C27394) * C31530) *
               C19340) *
              C31425 * C31439 * C2461 +
          (((C27392 + C27391) * C718 -
            ((C26924 + C26923) * C31740 + (C26922 + C26921) * C717) +
            (C27394 + C27393) * C31530) *
               C19339 +
           ((C13649 * C6543 + C13645 * C6547 + C13650 * C6544 +
             C13646 * C6548) *
                C718 -
            ((C26925 + C26926) * C31740 + (C26927 + C26928) * C717) +
            (C13649 * C6549 + C13645 * C6552 + C13650 * C6550 +
             C13646 * C6553) *
                C31530) *
               C19340) *
              C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C115 + C13645 * C122 + C13650 * C308 +
                 C13646 * C318) *
                    C114 +
                (C13649 * C123 + C13645 * C136 + C13650 * C319 +
                 C13646 * C338) *
                    C31467) *
                   C19339 +
               ((C13649 * C524 + C13645 * C538 + C13650 * C1013 +
                 C13646 * C1018) *
                    C114 +
                (C13649 * C537 + C13645 * C554 + C13650 * C1019 +
                 C13646 * C1028) *
                    C31467) *
                   C19340) *
                  C31425 * C107 -
              (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) *
                   C19340 +
               ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) *
                   C19339) *
                  C31425 * C108 +
              (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) *
                   C19339 +
               ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) *
                   C19340) *
                  C31425 * C109 -
              (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) *
                   C19340 +
               ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) *
                   C19339) *
                  C31425 * C110 +
              (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) *
                   C19339 +
               ((C13649 * C525 + C13645 * C540 + C13650 * C1017 +
                 C13646 * C1026) *
                    C114 +
                (C13649 * C539 + C13645 * C555 + C13650 * C1027 +
                 C13646 * C1032) *
                    C31467) *
                   C19340) *
                  C31425 * C111) *
             C31485 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13649 * C115 + C13645 * C122 + C13650 * C308 +
                 C13646 * C318) *
                    C305 +
                (C13649 * C123 + C13645 * C136 + C13650 * C319 +
                 C13646 * C338) *
                    C31808 -
                (C13650 * C309 + C13646 * C320 + C13649 * C308 +
                 C13645 * C318) *
                    C306 -
                (C13650 * C321 + C13646 * C339 + C13649 * C319 +
                 C13645 * C338) *
                    C31796 +
                (C13649 * C309 + C13645 * C320 + C13650 * C1283 +
                 C13646 * C1289) *
                    C307 +
                (C13649 * C321 + C13645 * C339 + C13650 * C1290 +
                 C13646 * C1301) *
                    C31771) *
                   C19339 +
               ((C13649 * C524 + C13645 * C538 + C13650 * C1013 +
                 C13646 * C1018) *
                    C305 +
                (C13649 * C537 + C13645 * C554 + C13650 * C1019 +
                 C13646 * C1028) *
                    C31808 -
                (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
                 C13645 * C1018) *
                    C306 -
                (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
                 C13645 * C1028) *
                    C31796 +
                (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
                 C13646 * C1868) *
                    C307 +
                (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
                 C13646 * C1874) *
                    C31771) *
                   C19340) *
                  C31425 * C302 +
              (((C13879 + C13878) * C306 -
                ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
                (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
                (C13885 + C13884) * C31771) *
                   C19339 +
               ((C14582 + C14583) * C306 -
                ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
                (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
                (C15310 + C15311) * C31771) *
                   C19340) *
                  C31425 * C303 +
              (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
                (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
                (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
                   C19339 +
               ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
                (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
                (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
                 C13646 * C1872) *
                    C307 +
                (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
                 C13646 * C1876) *
                    C31771) *
                   C19340) *
                  C31425 * C31765) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C302 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C303 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31765) *
              C31809 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C303 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C302 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31765) *
              C31798 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
              C13646 * C2584) *
                 C114 +
             (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
              C13646 * C2590) *
                 C31467) *
                C19340) *
               C31425 * C302 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C303 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C19339 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C19340) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C1185 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
            (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C1185 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C19339 +
          ((C25181 + C25182) * C1278 + (C25183 + C25184) * C1272 -
           (C25651 + C25652) * C1279 - (C25653 + C25654) * C1273 +
           (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 + C13646 * C1868) *
               C1280 +
           (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 + C13646 * C1874) *
               C1274 -
           (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 + C13645 * C1868) *
               C1281 -
           (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 + C13645 * C1874) *
               C1275 +
           (C13649 * C5894 + C13645 * C5897 + C13650 * C6256 + C13646 * C6257) *
               C1282 +
           (C13649 * C5898 + C13645 * C5903 + C13650 * C6258 + C13646 * C6259) *
               C1276) *
              C19340) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C26053 + C26054) * C1185 + (C26055 + C26056) * C31771) *
               C19340) *
              C31425 * C31439 * C31809 +
          (((C25652 + C25651) * C1184 -
            ((C25184 + C25183) * C1177 + (C25182 + C25181) * C1183) +
            (C25654 + C25653) * C1178 - (C26054 + C26053) * C1185 -
            (C26056 + C26055) * C31771) *
               C19339 +
           ((C26057 + C26058) * C1184 -
            ((C25185 + C25186) * C1177 + (C25187 + C25188) * C1183) +
            (C26059 + C26060) * C1178 - (C26061 + C26062) * C1185 -
            (C26063 + C26064) * C31771) *
               C19340) *
              C31425 * C31439 * C31798 +
          (((C25188 + C25187) * C1183 + (C25186 + C25185) * C1177 -
            (C26058 + C26057) * C1184 - (C26060 + C26059) * C1178 +
            (C26062 + C26061) * C1185 + (C26064 + C26063) * C31771) *
               C19339 +
           ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
             C13646 * C2584) *
                C1183 +
            (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
             C13646 * C2590) *
                C1177 -
            (C13650 * C6542 + C13646 * C6546 + C13649 * C2581 +
             C13645 * C2584) *
                C1184 -
            (C13650 * C6545 + C13646 * C6551 + C13649 * C2585 +
             C13645 * C2590) *
                C1178 +
            (C13649 * C6542 + C13645 * C6546 + C13650 * C6904 +
             C13646 * C6905) *
                C1185 +
            (C13649 * C6545 + C13645 * C6551 + C13650 * C6906 +
             C13646 * C6907) *
                C31771) *
               C19340) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31805 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31792 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31765) *
              C1987 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31792 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31805 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31765) *
              C1988 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
              C13646 * C2584) *
                 C114 +
             (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
              C13646 * C2590) *
                 C31467) *
                C19340) *
               C31425 * C31805 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C31792 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C19339 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C19340) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C305 + (C25183 + C25184) * C31808 -
            (C25651 + C25652) * C306 - (C25653 + C25654) * C31796 +
            (C26053 + C26054) * C307 + (C26055 + C26056) * C31771) *
               C19340) *
              C31425 * C31439 * C1987 +
          (((C25652 + C25651) * C306 -
            ((C25184 + C25183) * C31808 + (C25182 + C25181) * C305) +
            (C25654 + C25653) * C31796 - (C26054 + C26053) * C307 -
            (C26056 + C26055) * C31771) *
               C19339 +
           ((C26057 + C26058) * C306 -
            ((C25185 + C25186) * C31808 + (C25187 + C25188) * C305) +
            (C26059 + C26060) * C31796 - (C26061 + C26062) * C307 -
            (C26063 + C26064) * C31771) *
               C19340) *
              C31425 * C31439 * C1988 +
          (((C25188 + C25187) * C305 + (C25186 + C25185) * C31808 -
            (C26058 + C26057) * C306 - (C26060 + C26059) * C31796 +
            (C26062 + C26061) * C307 + (C26064 + C26063) * C31771) *
               C19339 +
           ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
             C13646 * C2584) *
                C305 +
            (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
             C13646 * C2590) *
                C31808 -
            (C13650 * C6542 + C13646 * C6546 + C13649 * C2581 +
             C13645 * C2584) *
                C306 -
            (C13650 * C6545 + C13646 * C6551 + C13649 * C2585 +
             C13645 * C2590) *
                C31796 +
            (C13649 * C6542 + C13645 * C6546 + C13650 * C6904 +
             C13646 * C6905) *
                C307 +
            (C13649 * C6545 + C13645 * C6551 + C13650 * C6906 +
             C13646 * C6907) *
                C31771) *
               C19340) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C19339 +
           ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
              C31425 * C31439 * C2162 -
          (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
           ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
              C31425 * C31439 * C2163 +
          (((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
           ((C26921 + C26922) * C114 + (C26923 + C26924) * C31467) * C19340) *
              C31425 * C31439 * C2164 -
          (((C26925 + C26926) * C31467 + (C26927 + C26928) * C114) * C19340 +
           ((C26924 + C26923) * C31467 + (C26922 + C26921) * C114) * C19339) *
              C31425 * C31439 * C2165 +
          (((C26928 + C26927) * C114 + (C26926 + C26925) * C31467) * C19339 +
           ((C13649 * C10829 + C13645 * C10832 + C13650 * C11234 +
             C13646 * C11235) *
                C114 +
            (C13649 * C10831 + C13645 * C10835 + C13650 * C11236 +
             C13646 * C11237) *
                C31467) *
               C19340) *
              C31425 * C31439 * C2166)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C1183 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C1177 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C1184 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C1178 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C1185 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C19339 +
            ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
             (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
             (C26053 + C26054) * C1185 + (C26055 + C26056) * C31771) *
                C19340) *
               C31425 * C31726 +
           (((C13879 + C13878) * C1184 -
             ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
             (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
             (C13885 + C13884) * C31771) *
                C19339 +
            ((C14582 + C14583) * C1184 -
             ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
             (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
             (C15310 + C15311) * C31771) *
                C19340) *
               C31425 * C31449) *
              C31741 +
          ((((C25652 + C25651) * C1184 -
             ((C25184 + C25183) * C1177 + (C25182 + C25181) * C1183) +
             (C25654 + C25653) * C1178 - (C26054 + C26053) * C1185 -
             (C26056 + C26055) * C31771) *
                C19339 +
            ((C26057 + C26058) * C1184 -
             ((C25185 + C25186) * C1177 + (C25187 + C25188) * C1183) +
             (C26059 + C26060) * C1178 - (C26061 + C26062) * C1185 -
             (C26063 + C26064) * C31771) *
                C19340) *
               C31425 * C31726 +
           (((C14072 + C14073) * C1183 + (C14074 + C14075) * C1177 -
             (C14583 + C14582) * C1184 - (C14585 + C14584) * C1178 +
             (C15309 + C15308) * C1185 + (C15311 + C15310) * C31771) *
                C19339 +
            ((C14080 + C14081) * C1183 + (C14082 + C14083) * C1177 -
             (C16018 + C16019) * C1184 - (C16020 + C16021) * C1178 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C1185 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C31771) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C713 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C714 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C715 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
               C31425 * C31775) *
              C31741 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C714 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C713 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C715 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C19339 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C19340) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31726 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31449) *
              C2459 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31449 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31726) *
              C2460 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C26921 + C26922) * C114 + (C26923 + C26924) * C31467) * C19340) *
               C31425 * C31726 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C31449) *
              C2461 +
          ((((C16160 + C16161) * C114 + (C16162 + C16163) * C31467) * C19339 +
            ((C13649 * C2171 + C13645 * C2181 + C13650 * C11001 +
              C13646 * C11002) *
                 C114 +
             (C13649 * C2182 + C13645 * C2189 + C13650 * C11003 +
              C13646 * C11004) *
                 C31467) *
                C19340) *
               C31425 * C31449 -
           (((C26925 + C26926) * C31467 + (C26927 + C26928) * C114) * C19340 +
            ((C26924 + C26923) * C31467 + (C26922 + C26921) * C114) * C19339) *
               C31425 * C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C305 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31808 -
            (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
             C13645 * C1018) *
                C306 -
            (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
             C13645 * C1028) *
                C31796 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C307 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C306 -
            ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
            (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
            (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C307 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C114 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31467) *
               C19340) *
              C31425 * C107 -
          (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
              C31425 * C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
           ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
              C31425 * C109 -
          (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
              C31425 * C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C19339 +
           ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                C114 +
            (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                C31467) *
               C19340) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C1185 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
            (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C1185 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C19339 +
          ((C25181 + C25182) * C1278 + (C25183 + C25184) * C1272 -
           (C25651 + C25652) * C1279 - (C25653 + C25654) * C1273 +
           (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 + C13646 * C1868) *
               C1280 +
           (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 + C13646 * C1874) *
               C1274 -
           (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 + C13645 * C1868) *
               C1281 -
           (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 + C13645 * C1874) *
               C1275 +
           (C13649 * C5894 + C13645 * C5897 + C13650 * C6256 + C13646 * C6257) *
               C1282 +
           (C13649 * C5898 + C13645 * C5903 + C13650 * C6258 + C13646 * C6259) *
               C1276) *
              C19340) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31805 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31792 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31765) *
              C1987 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31792 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31805 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31765) *
              C1988 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
              C13646 * C2584) *
                 C114 +
             (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
              C13646 * C2590) *
                 C31467) *
                C19340) *
               C31425 * C31805 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C31792 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C19339 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C19340) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C305 + (C25183 + C25184) * C31808 -
            (C25651 + C25652) * C306 - (C25653 + C25654) * C31796 +
            (C26053 + C26054) * C307 + (C26055 + C26056) * C31771) *
               C19340) *
              C31425 * C31439 * C1987 +
          (((C25652 + C25651) * C306 -
            ((C25184 + C25183) * C31808 + (C25182 + C25181) * C305) +
            (C25654 + C25653) * C31796 - (C26054 + C26053) * C307 -
            (C26056 + C26055) * C31771) *
               C19339 +
           ((C26057 + C26058) * C306 -
            ((C25185 + C25186) * C31808 + (C25187 + C25188) * C305) +
            (C26059 + C26060) * C31796 - (C26061 + C26062) * C307 -
            (C26063 + C26064) * C31771) *
               C19340) *
              C31425 * C31439 * C1988 +
          (((C25188 + C25187) * C305 + (C25186 + C25185) * C31808 -
            (C26058 + C26057) * C306 - (C26060 + C26059) * C31796 +
            (C26062 + C26061) * C307 + (C26064 + C26063) * C31771) *
               C19339 +
           ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
             C13646 * C2584) *
                C305 +
            (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
             C13646 * C2590) *
                C31808 -
            (C13650 * C6542 + C13646 * C6546 + C13649 * C2581 +
             C13645 * C2584) *
                C306 -
            (C13650 * C6545 + C13646 * C6551 + C13649 * C2585 +
             C13645 * C2590) *
                C31796 +
            (C13649 * C6542 + C13645 * C6546 + C13650 * C6904 +
             C13646 * C6905) *
                C307 +
            (C13649 * C6545 + C13645 * C6551 + C13650 * C6906 +
             C13646 * C6907) *
                C31771) *
               C19340) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
             (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C31444 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31452 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C3124) *
              C3562 +
          ((((C25652 + C25651) * C718 -
             ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C718 -
             ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C31444 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31452 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C718 -
             ((C14084 + C14085) * C31740 + (C14086 + C14087) * C717) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
             (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31568 +
          ((((C25652 + C25651) * C718 -
             ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C26057 + C26058) * C718 -
             ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
             (C26059 + C26060) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C31449) *
              C31575 +
          ((((C25188 + C25187) * C717 + (C25186 + C25185) * C31740 -
             (C26058 + C26057) * C718 - (C26060 + C26059) * C31530) *
                C19339 +
            ((C26921 + C26922) * C717 + (C26923 + C26924) * C31740 -
             (C27391 + C27392) * C718 - (C27393 + C27394) * C31530) *
                C19340) *
               C31425 * C2825 +
           (((C16019 + C16018) * C718 -
             ((C14083 + C14082) * C31740 + (C14081 + C14080) * C717) +
             (C16021 + C16020) * C31530) *
                C19339 +
            ((C13649 * C2582 + C13645 * C2586 + C13650 * C6802 +
              C13646 * C6803) *
                 C718 -
             ((C16163 + C16162) * C31740 + (C16161 + C16160) * C717) +
             (C13649 * C2587 + C13645 * C2591 + C13650 * C6804 +
              C13646 * C6805) *
                 C31530) *
                C19340) *
               C31425 * C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C305 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31808 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C306 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31796 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C307 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C19339 +
            ((C25181 + C25182) * C305 + (C25183 + C25184) * C31808 -
             (C25651 + C25652) * C306 - (C25653 + C25654) * C31796 +
             (C26053 + C26054) * C307 + (C26055 + C26056) * C31771) *
                C19340) *
               C31425 * C2825 +
           (((C13879 + C13878) * C306 -
             ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
             (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
             (C13885 + C13884) * C31771) *
                C19339 +
            ((C14582 + C14583) * C306 -
             ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
             (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
             (C15310 + C15311) * C31771) *
                C19340) *
               C31425 * C31449) *
              C3562 +
          ((((C25652 + C25651) * C306 -
             ((C25184 + C25183) * C31808 + (C25182 + C25181) * C305) +
             (C25654 + C25653) * C31796 - (C26054 + C26053) * C307 -
             (C26056 + C26055) * C31771) *
                C19339 +
            ((C26057 + C26058) * C306 -
             ((C25185 + C25186) * C31808 + (C25187 + C25188) * C305) +
             (C26059 + C26060) * C31796 - (C26061 + C26062) * C307 -
             (C26063 + C26064) * C31771) *
                C19340) *
               C31425 * C2825 +
           (((C14072 + C14073) * C305 + (C14074 + C14075) * C31808 -
             (C14583 + C14582) * C306 - (C14585 + C14584) * C31796 +
             (C15309 + C15308) * C307 + (C15311 + C15310) * C31771) *
                C19339 +
            ((C14080 + C14081) * C305 + (C14082 + C14083) * C31808 -
             (C16018 + C16019) * C306 - (C16020 + C16021) * C31796 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C307 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C31771) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31814 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31807 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31794 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
               C31425 * C31775) *
              C3562 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31807 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31814 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31794 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C19339 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C19340) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C2825 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31449) *
              C31816 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31449 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C2825) *
              C31813 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C26921 + C26922) * C114 + (C26923 + C26924) * C31467) * C19340) *
               C31425 * C2825 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C31449) *
              C31804 +
          ((((C16160 + C16161) * C114 + (C16162 + C16163) * C31467) * C19339 +
            ((C13649 * C2171 + C13645 * C2181 + C13650 * C11001 +
              C13646 * C11002) *
                 C114 +
             (C13649 * C2182 + C13645 * C2189 + C13650 * C11003 +
              C13646 * C11004) *
                 C31467) *
                C19340) *
               C31425 * C31449 -
           (((C26925 + C26926) * C31467 + (C26927 + C26928) * C114) * C19340 +
            ((C26924 + C26923) * C31467 + (C26922 + C26921) * C114) * C19339) *
               C31425 * C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31444 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31452 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C3124) *
              C31568 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31452 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31444 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C3124) *
              C31575 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C26921 + C26922) * C114 + (C26923 + C26924) * C31467) * C19340) *
               C31425 * C31444 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C31452 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C19339 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C19340) *
               C31425 * C3124) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C31814 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C31807 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31794 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
               C31425 * C31775) *
              C3562 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C31807 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C31814 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31794 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C19339 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C19340) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C305 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31808 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C306 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31796 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C307 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C19339 +
            ((C25181 + C25182) * C305 + (C25183 + C25184) * C31808 -
             (C25651 + C25652) * C306 - (C25653 + C25654) * C31796 +
             (C26053 + C26054) * C307 + (C26055 + C26056) * C31771) *
                C19340) *
               C31425 * C2825 +
           (((C13879 + C13878) * C306 -
             ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
             (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
             (C13885 + C13884) * C31771) *
                C19339 +
            ((C14582 + C14583) * C306 -
             ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
             (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
             (C15310 + C15311) * C31771) *
                C19340) *
               C31425 * C31449) *
              C3562 +
          ((((C25652 + C25651) * C306 -
             ((C25184 + C25183) * C31808 + (C25182 + C25181) * C305) +
             (C25654 + C25653) * C31796 - (C26054 + C26053) * C307 -
             (C26056 + C26055) * C31771) *
                C19339 +
            ((C26057 + C26058) * C306 -
             ((C25185 + C25186) * C31808 + (C25187 + C25188) * C305) +
             (C26059 + C26060) * C31796 - (C26061 + C26062) * C307 -
             (C26063 + C26064) * C31771) *
                C19340) *
               C31425 * C2825 +
           (((C14072 + C14073) * C305 + (C14074 + C14075) * C31808 -
             (C14583 + C14582) * C306 - (C14585 + C14584) * C31796 +
             (C15309 + C15308) * C307 + (C15311 + C15310) * C31771) *
                C19339 +
            ((C14080 + C14081) * C305 + (C14082 + C14083) * C31808 -
             (C16018 + C16019) * C306 - (C16020 + C16021) * C31796 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C307 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C31771) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C717 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31740 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C718 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31530) *
               C19339 +
           ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
            (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
             C13645 * C1018) *
                C718 -
            (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
             C13645 * C1028) *
                C31530) *
               C19340) *
              C31425 * C713 +
          (((C13879 + C13878) * C718 -
            ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
            (C13881 + C13880) * C31530) *
               C19339 +
           ((C14582 + C14583) * C718 -
            ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
            (C14584 + C14585) * C31530) *
               C19340) *
              C31425 * C714 +
          (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
            (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
               C19339 +
           ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
            (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
               C19340) *
              C31425 * C715 +
          (((C14227 + C14226) * C718 -
            ((C13695 + C13694) * C31740 + (C13693 + C13692) * C717) +
            (C14229 + C14228) * C31530) *
               C19339 +
           ((C13649 * C1016 + C13645 * C1024 + C13650 * C1739 +
             C13646 * C1740) *
                C718 -
            ((C14368 + C14369) * C31740 + (C14370 + C14371) * C717) +
            (C13649 * C1025 + C13645 * C1031 + C13650 * C1741 +
             C13646 * C1742) *
                C31530) *
               C19340) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C1557 + (C25183 + C25184) * C1551 -
            (C25651 + C25652) * C1558 - (C25653 + C25654) * C1552 +
            (C26053 + C26054) * C1559 + (C26055 + C26056) * C1553 -
            (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 +
             C13645 * C1868) *
                C1560 -
            (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 +
             C13645 * C1874) *
                C31781) *
               C19340) *
              C31425 * C31726 +
          (((C13879 + C13878) * C1558 -
            ((C13687 + C13686) * C1551 + (C13685 + C13684) * C1557) +
            (C13881 + C13880) * C1552 - (C13883 + C13882) * C1559 -
            (C13885 + C13884) * C1553 + (C15103 + C15102) * C1560 +
            (C15105 + C15104) * C31781) *
               C19339 +
           ((C14582 + C14583) * C1558 -
            ((C14075 + C14074) * C1551 + (C14073 + C14072) * C1557) +
            (C14584 + C14585) * C1552 - (C15308 + C15309) * C1559 -
            (C15310 + C15311) * C1553 +
            (C13649 * C1866 + C13645 * C1870 + C13650 * C6154 +
             C13646 * C6155) *
                C1560 +
            (C13649 * C1871 + C13645 * C1875 + C13650 * C6156 +
             C13646 * C6157) *
                C31781) *
               C19340) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C717 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31740 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C718 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C31530) *
                C19339 +
            ((C25181 + C25182) * C717 + (C25183 + C25184) * C31740 -
             (C25651 + C25652) * C718 - (C25653 + C25654) * C31530) *
                C19340) *
               C31425 * C302 +
           (((C13879 + C13878) * C718 -
             ((C13687 + C13686) * C31740 + (C13685 + C13684) * C717) +
             (C13881 + C13880) * C31530) *
                C19339 +
            ((C14582 + C14583) * C718 -
             ((C14075 + C14074) * C31740 + (C14073 + C14072) * C717) +
             (C14584 + C14585) * C31530) *
                C19340) *
               C31425 * C303 +
           (((C13691 + C13690) * C717 + (C13689 + C13688) * C31740 -
             (C13887 + C13886) * C718 - (C13889 + C13888) * C31530) *
                C19339 +
            ((C14076 + C14077) * C717 + (C14078 + C14079) * C31740 -
             (C14586 + C14587) * C718 - (C14588 + C14589) * C31530) *
                C19340) *
               C31425 * C31765) *
              C31741 +
          ((((C25652 + C25651) * C718 -
             ((C25184 + C25183) * C31740 + (C25182 + C25181) * C717) +
             (C25654 + C25653) * C31530) *
                C19339 +
            ((C13649 * C1420 + C13645 * C1432 + C13650 * C1421 +
              C13646 * C1434) *
                 C718 -
             ((C25185 + C25186) * C31740 + (C25187 + C25188) * C717) +
             (C13649 * C1433 + C13645 * C1447 + C13650 * C1435 +
              C13646 * C1448) *
                 C31530) *
                C19340) *
               C31425 * C302 +
           (((C14072 + C14073) * C717 + (C14074 + C14075) * C31740 -
             (C14583 + C14582) * C718 - (C14585 + C14584) * C31530) *
                C19339 +
            ((C14080 + C14081) * C717 + (C14082 + C14083) * C31740 -
             (C16018 + C16019) * C718 - (C16020 + C16021) * C31530) *
                C19340) *
               C31425 * C303 +
           (((C14587 + C14586) * C718 -
             ((C14079 + C14078) * C31740 + (C14077 + C14076) * C717) +
             (C14589 + C14588) * C31530) *
                C19339 +
            ((C13649 * C1424 + C13645 * C1440 + C13650 * C1425 +
              C13646 * C1442) *
                 C718 -
             ((C14084 + C14085) * C31740 + (C14086 + C14087) * C717) +
             (C13649 * C1441 + C13645 * C1451 + C13650 * C1443 +
              C13646 * C1452) *
                 C31530) *
                C19340) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1557 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1551 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1558 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1552 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1559 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C1553 -
            (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 +
             C13645 * C1289) *
                C1560 -
            (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 +
             C13645 * C1301) *
                C31781) *
               C19339 +
           ((C25181 + C25182) * C1557 + (C25183 + C25184) * C1551 -
            (C25651 + C25652) * C1558 - (C25653 + C25654) * C1552 +
            (C26053 + C26054) * C1559 + (C26055 + C26056) * C1553 -
            (C26527 + C26528) * C1560 - (C26529 + C26530) * C31781) *
               C19340) *
              C31425 * C31439 * C31741 +
          (((C25652 + C25651) * C1558 -
            ((C25184 + C25183) * C1551 + (C25182 + C25181) * C1557) +
            (C25654 + C25653) * C1552 - (C26054 + C26053) * C1559 -
            (C26056 + C26055) * C1553 + (C26528 + C26527) * C1560 +
            (C26530 + C26529) * C31781) *
               C19339 +
           ((C26057 + C26058) * C1558 -
            ((C25185 + C25186) * C1551 + (C25187 + C25188) * C1557) +
            (C26059 + C26060) * C1552 - (C26061 + C26062) * C1559 -
            (C26063 + C26064) * C1553 +
            (C13649 * C5895 + C13645 * C5899 + C13650 * C5896 +
             C13646 * C5901) *
                C1560 +
            (C13649 * C5900 + C13645 * C5904 + C13650 * C5902 +
             C13646 * C5905) *
                C31781) *
               C19340) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C305 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31808 -
            (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
             C13645 * C1018) *
                C306 -
            (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
             C13645 * C1028) *
                C31796 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C307 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C306 -
            ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
            (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
            (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C307 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C114 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31467) *
               C19340) *
              C31425 * C107 -
          (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
              C31425 * C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
           ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
              C31425 * C109 -
          (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
              C31425 * C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C19339 +
           ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                C114 +
            (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                C31467) *
               C19340) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C302 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C303 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C31765) *
              C31809 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C303 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C302 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C31765) *
              C31798 +
          ((((C25188 + C25187) * C114 + (C25186 + C25185) * C31467) * C19339 +
            ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
              C13646 * C2584) *
                 C114 +
             (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
              C13646 * C2590) *
                 C31467) *
                C19340) *
               C31425 * C302 -
           (((C16163 + C16162) * C31467 + (C16161 + C16160) * C114) * C19340 +
            ((C14083 + C14082) * C31467 + (C14081 + C14080) * C114) * C19339) *
               C31425 * C303 +
           (((C14087 + C14086) * C114 + (C14085 + C14084) * C31467) * C19339 +
            ((C13649 * C2167 + C13645 * C2174 + C13650 * C2583 +
              C13646 * C2588) *
                 C114 +
             (C13649 * C2173 + C13645 * C2185 + C13650 * C2589 +
              C13646 * C2592) *
                 C31467) *
                C19340) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C1185 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
            (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C1185 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C19339 +
          ((C25181 + C25182) * C1278 + (C25183 + C25184) * C1272 -
           (C25651 + C25652) * C1279 - (C25653 + C25654) * C1273 +
           (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 + C13646 * C1868) *
               C1280 +
           (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 + C13646 * C1874) *
               C1274 -
           (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 + C13645 * C1868) *
               C1281 -
           (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 + C13645 * C1874) *
               C1275 +
           (C13649 * C5894 + C13645 * C5897 + C13650 * C6256 + C13646 * C6257) *
               C1282 +
           (C13649 * C5898 + C13645 * C5903 + C13650 * C6258 + C13646 * C6259) *
               C1276) *
              C19340) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C26053 + C26054) * C1185 + (C26055 + C26056) * C31771) *
               C19340) *
              C31425 * C31439 * C31809 +
          (((C25652 + C25651) * C1184 -
            ((C25184 + C25183) * C1177 + (C25182 + C25181) * C1183) +
            (C25654 + C25653) * C1178 - (C26054 + C26053) * C1185 -
            (C26056 + C26055) * C31771) *
               C19339 +
           ((C26057 + C26058) * C1184 -
            ((C25185 + C25186) * C1177 + (C25187 + C25188) * C1183) +
            (C26059 + C26060) * C1178 - (C26061 + C26062) * C1185 -
            (C26063 + C26064) * C31771) *
               C19340) *
              C31425 * C31439 * C31798 +
          (((C25188 + C25187) * C1183 + (C25186 + C25185) * C1177 -
            (C26058 + C26057) * C1184 - (C26060 + C26059) * C1178 +
            (C26062 + C26061) * C1185 + (C26064 + C26063) * C31771) *
               C19339 +
           ((C13649 * C2169 + C13645 * C2178 + C13650 * C2581 +
             C13646 * C2584) *
                C1183 +
            (C13649 * C2177 + C13645 * C2187 + C13650 * C2585 +
             C13646 * C2590) *
                C1177 -
            (C13650 * C6542 + C13646 * C6546 + C13649 * C2581 +
             C13645 * C2584) *
                C1184 -
            (C13650 * C6545 + C13646 * C6551 + C13649 * C2585 +
             C13645 * C2590) *
                C1178 +
            (C13649 * C6542 + C13645 * C6546 + C13650 * C6904 +
             C13646 * C6905) *
                C1185 +
            (C13649 * C6545 + C13645 * C6551 + C13650 * C6906 +
             C13646 * C6907) *
                C31771) *
               C19340) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C114 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C31467) *
                C19339 +
            ((C25181 + C25182) * C114 + (C25183 + C25184) * C31467) * C19340) *
               C31425 * C713 -
           (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
            ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
               C31425 * C714 +
           (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
            ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
               C31425 * C715 -
           (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
            ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
               C31425 * C31775) *
              C31741 +
          ((((C14072 + C14073) * C114 + (C14074 + C14075) * C31467) * C19339 +
            ((C14080 + C14081) * C114 + (C14082 + C14083) * C31467) * C19340) *
               C31425 * C714 -
           (((C25185 + C25186) * C31467 + (C25187 + C25188) * C114) * C19340 +
            ((C25184 + C25183) * C31467 + (C25182 + C25181) * C114) * C19339) *
               C31425 * C713 -
           (((C14084 + C14085) * C31467 + (C14086 + C14087) * C114) * C19340 +
            ((C14079 + C14078) * C31467 + (C14077 + C14076) * C114) * C19339) *
               C31425 * C715 +
           (((C14371 + C14370) * C114 + (C14369 + C14368) * C31467) * C19339 +
            ((C13649 * C529 + C13645 * C548 + C13650 * C2337 + C13646 * C2338) *
                 C114 +
             (C13649 * C547 + C13645 * C559 + C13650 * C2339 + C13646 * C2340) *
                 C31467) *
                C19340) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                 C1183 +
             (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                 C1177 -
             (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                 C1184 -
             (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                 C1178 +
             (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                 C1185 +
             (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                 C31771) *
                C19339 +
            ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
             (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
             (C26053 + C26054) * C1185 + (C26055 + C26056) * C31771) *
                C19340) *
               C31425 * C31726 +
           (((C13879 + C13878) * C1184 -
             ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
             (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
             (C13885 + C13884) * C31771) *
                C19339 +
            ((C14582 + C14583) * C1184 -
             ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
             (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
             (C15310 + C15311) * C31771) *
                C19340) *
               C31425 * C31449) *
              C31741 +
          ((((C25652 + C25651) * C1184 -
             ((C25184 + C25183) * C1177 + (C25182 + C25181) * C1183) +
             (C25654 + C25653) * C1178 - (C26054 + C26053) * C1185 -
             (C26056 + C26055) * C31771) *
                C19339 +
            ((C26057 + C26058) * C1184 -
             ((C25185 + C25186) * C1177 + (C25187 + C25188) * C1183) +
             (C26059 + C26060) * C1178 - (C26061 + C26062) * C1185 -
             (C26063 + C26064) * C31771) *
                C19340) *
               C31425 * C31726 +
           (((C14072 + C14073) * C1183 + (C14074 + C14075) * C1177 -
             (C14583 + C14582) * C1184 - (C14585 + C14584) * C1178 +
             (C15309 + C15308) * C1185 + (C15311 + C15310) * C31771) *
                C19339 +
            ((C14080 + C14081) * C1183 + (C14082 + C14083) * C1177 -
             (C16018 + C16019) * C1184 - (C16020 + C16021) * C1178 +
             (C13649 * C1423 + C13645 * C1438 + C13650 * C6700 +
              C13646 * C6701) *
                 C1185 +
             (C13649 * C1439 + C13645 * C1450 + C13650 * C6702 +
              C13646 * C6703) *
                 C31771) *
                C19340) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C114 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31467) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C114 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31467) *
               C19340) *
              C31425 * C107 -
          (((C14075 + C14074) * C31467 + (C14073 + C14072) * C114) * C19340 +
           ((C13687 + C13686) * C31467 + (C13685 + C13684) * C114) * C19339) *
              C31425 * C108 +
          (((C13691 + C13690) * C114 + (C13689 + C13688) * C31467) * C19339 +
           ((C14076 + C14077) * C114 + (C14078 + C14079) * C31467) * C19340) *
              C31425 * C109 -
          (((C14368 + C14369) * C31467 + (C14370 + C14371) * C114) * C19340 +
           ((C13695 + C13694) * C31467 + (C13693 + C13692) * C114) * C19339) *
              C31425 * C110 +
          (((C13699 + C13698) * C114 + (C13697 + C13696) * C31467) * C19339 +
           ((C13649 * C525 + C13645 * C540 + C13650 * C1017 + C13646 * C1026) *
                C114 +
            (C13649 * C539 + C13645 * C555 + C13650 * C1027 + C13646 * C1032) *
                C31467) *
               C19340) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C305 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C31808 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C306 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C31796 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C307 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C13649 * C524 + C13645 * C538 + C13650 * C1013 + C13646 * C1018) *
                C305 +
            (C13649 * C537 + C13645 * C554 + C13650 * C1019 + C13646 * C1028) *
                C31808 -
            (C13650 * C1417 + C13646 * C1426 + C13649 * C1013 +
             C13645 * C1018) *
                C306 -
            (C13650 * C1427 + C13646 * C1444 + C13649 * C1019 +
             C13645 * C1028) *
                C31796 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C307 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C302 +
          (((C13879 + C13878) * C306 -
            ((C13687 + C13686) * C31808 + (C13685 + C13684) * C305) +
            (C13881 + C13880) * C31796 - (C13883 + C13882) * C307 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C306 -
            ((C14075 + C14074) * C31808 + (C14073 + C14072) * C305) +
            (C14584 + C14585) * C31796 - (C15308 + C15309) * C307 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C303 +
          (((C13691 + C13690) * C305 + (C13689 + C13688) * C31808 -
            (C13887 + C13886) * C306 - (C13889 + C13888) * C31796 +
            (C13891 + C13890) * C307 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C305 + (C14078 + C14079) * C31808 -
            (C14586 + C14587) * C306 - (C14588 + C14589) * C31796 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C307 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
                C1183 +
            (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
                C1177 -
            (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
                C1184 -
            (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
                C1178 +
            (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
                C1185 +
            (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
                C31771) *
               C19339 +
           ((C25181 + C25182) * C1183 + (C25183 + C25184) * C1177 -
            (C25651 + C25652) * C1184 - (C25653 + C25654) * C1178 +
            (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 +
             C13646 * C1868) *
                C1185 +
            (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 +
             C13646 * C1874) *
                C31771) *
               C19340) *
              C31425 * C31805 +
          (((C13879 + C13878) * C1184 -
            ((C13687 + C13686) * C1177 + (C13685 + C13684) * C1183) +
            (C13881 + C13880) * C1178 - (C13883 + C13882) * C1185 -
            (C13885 + C13884) * C31771) *
               C19339 +
           ((C14582 + C14583) * C1184 -
            ((C14075 + C14074) * C1177 + (C14073 + C14072) * C1183) +
            (C14584 + C14585) * C1178 - (C15308 + C15309) * C1185 -
            (C15310 + C15311) * C31771) *
               C19340) *
              C31425 * C31792 +
          (((C13691 + C13690) * C1183 + (C13689 + C13688) * C1177 -
            (C13887 + C13886) * C1184 - (C13889 + C13888) * C1178 +
            (C13891 + C13890) * C1185 + (C13893 + C13892) * C31771) *
               C19339 +
           ((C14076 + C14077) * C1183 + (C14078 + C14079) * C1177 -
            (C14586 + C14587) * C1184 - (C14588 + C14589) * C1178 +
            (C13649 * C1419 + C13645 * C1430 + C13650 * C1867 +
             C13646 * C1872) *
                C1185 +
            (C13649 * C1431 + C13645 * C1446 + C13650 * C1873 +
             C13646 * C1876) *
                C31771) *
               C19340) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13649 * C115 + C13645 * C122 + C13650 * C308 + C13646 * C318) *
               C1278 +
           (C13649 * C123 + C13645 * C136 + C13650 * C319 + C13646 * C338) *
               C1272 -
           (C13650 * C309 + C13646 * C320 + C13649 * C308 + C13645 * C318) *
               C1279 -
           (C13650 * C321 + C13646 * C339 + C13649 * C319 + C13645 * C338) *
               C1273 +
           (C13649 * C309 + C13645 * C320 + C13650 * C1283 + C13646 * C1289) *
               C1280 +
           (C13649 * C321 + C13645 * C339 + C13650 * C1290 + C13646 * C1301) *
               C1274 -
           (C13650 * C1284 + C13646 * C1291 + C13649 * C1283 + C13645 * C1289) *
               C1281 -
           (C13650 * C1292 + C13646 * C1302 + C13649 * C1290 + C13645 * C1301) *
               C1275 +
           (C13649 * C1284 + C13645 * C1291 + C13650 * C5776 + C13646 * C5778) *
               C1282 +
           (C13649 * C1292 + C13645 * C1302 + C13650 * C5779 + C13646 * C5782) *
               C1276) *
              C19339 +
          ((C25181 + C25182) * C1278 + (C25183 + C25184) * C1272 -
           (C25651 + C25652) * C1279 - (C25653 + C25654) * C1273 +
           (C13649 * C1417 + C13645 * C1426 + C13650 * C1865 + C13646 * C1868) *
               C1280 +
           (C13649 * C1427 + C13645 * C1444 + C13650 * C1869 + C13646 * C1874) *
               C1274 -
           (C13650 * C5894 + C13646 * C5897 + C13649 * C1865 + C13645 * C1868) *
               C1281 -
           (C13650 * C5898 + C13646 * C5903 + C13649 * C1869 + C13645 * C1874) *
               C1275 +
           (C13649 * C5894 + C13645 * C5897 + C13650 * C6256 + C13646 * C6257) *
               C1282 +
           (C13649 * C5898 + C13645 * C5903 + C13650 * C6258 + C13646 * C6259) *
               C1276) *
              C19340) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C30451 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31526 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C30443 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31533 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C30457 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C3121) *
              C31664 * C31425 * C31444 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C30443 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31526 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C30451) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31533 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C30457 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C3121) *
              C31664 * C31425 * C31452 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C30451 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31526 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C30443 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31533 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C30457 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C3121) *
              C31664 * C31425 * C3124) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C31664 * C104 +
           (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
           C3152 * C106) *
              C31444 +
          ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
           (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
           (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
              C31452 +
          (C3152 * C104 +
           (C3143 + C3142 - C3141 - C3144 + C3145 + C3146) * C31664 * C105 +
           (C170 * C30451 + C171 * C31526 - C744 * C30443 - C745 * C31533 +
            (C113 * C317 + C31650 * C336) * C30457 +
            (C113 * C337 + C31650 * C347) * C3121) *
               C31664 * C106) *
              C3124) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C9202 +
           (C9439 * C30451 + C9440 * C31526 - C9806 * C30443 - C9807 * C31533 +
            C10122 * C30457 + C10123 * C3121) *
               C9203 +
           (C9441 * C30451 + C9442 * C31526 - C9808 * C30443 - C9809 * C31533 +
            C10125 * C30457 + C10126 * C3121) *
               C9204) *
              C31425 * C31444 +
          ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C9202 +
           (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C9203 +
           (C2354 * C30443 - (C593 * C31526 + C592 * C30451) + C2355 * C31533 -
            C10395 * C30457 - C10396 * C3121) *
               C9204) *
              C31425 * C31452 +
          (C3151 * C9202 +
           (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C9203 +
           (C594 * C30451 + C595 * C31526 - C2356 * C30443 - C2357 * C31533 +
            (C113 * C1425 + C31650 * C1442) * C30457 +
            (C113 * C1443 + C31650 * C1452) * C3121) *
               C9204) *
              C31425 * C3124) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C30451 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31526 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C30443 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31533 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C30457 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C3121) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C30443 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31526 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C30451) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31533 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C30457 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C30443 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31526 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C30451) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31533 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C30457 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C3121) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C30451 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31526 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C30443 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31533 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C30457 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C31664 * C104 +
            (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
            C3152 * C106) *
               C2825 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
            (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
            (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
               C31449) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C30443 -
             ((C113 * C537 + C31650 * C554) * C31526 +
              (C113 * C524 + C31650 * C538) * C30451) +
             (C113 * C1019 + C31650 * C1028) * C31533 -
             (C113 * C1417 + C31650 * C1426) * C30457 -
             (C113 * C1427 + C31650 * C1444) * C3121) *
                C31664 * C104 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
            (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
               C2825 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C31664 * C104 +
            (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C31664 * C105 +
            (C590 * C30451 + C591 * C31526 - C1057 * C30443 - C1058 * C31533 +
             (C113 * C1739 + C31650 * C1740) * C30457 +
             (C113 * C1741 + C31650 * C1742) * C3121) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C9202 +
            (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C9203 +
            (C12024 + C12025 - C12026 - C12027 + C12028 + C12029) * C9204) *
               C31425 * C2825 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C9202 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C9203 +
            (C12030 - (C12031 + C12032) + C12033 - C12034 - C12035) * C9204) *
               C31425 * C31449) *
              C31741 +
          (((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C9202 +
            (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C9203 +
            (C10127 * C30443 - (C9443 * C31526 + C9444 * C30451) +
             C10128 * C31533 - C10129 * C30457 - C10130 * C3121) *
                C9204) *
               C31425 * C2825 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C9202 +
            (C12032 + C12031 - C12030 - C12033 + C12034 + C12035) * C9203 +
            (C2476 * C30451 + C2477 * C31526 - C11020 * C30443 -
             C11021 * C31533 + (C113 * C6802 + C31650 * C6803) * C30457 +
             (C113 * C6804 + C31650 * C6805) * C3121) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C2697 +
                (C113 * C123 + C31650 * C136) * C2691 -
                (C113 * C308 + C31650 * C318) * C2698 -
                (C113 * C319 + C31650 * C338) * C31530) *
                   C31664 * C104 +
               (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
                  C31814 +
              ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
               (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 +
               C2723 * C106) *
                  C31807 +
              (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
               (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
                  C31794 +
              (C2723 * C104 +
               (C2714 - (C2713 + C2712) + C2715) * C31664 * C105 +
               ((C113 * C719 + C31650 * C720) * C2698 -
                (C172 * C2691 + C173 * C2697) +
                (C113 * C721 + C31650 * C722) * C31530) *
                   C31664 * C106) *
                  C31775) *
             C31485 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C2827 +
                (C113 * C123 + C31650 * C136) * C31815 -
                (C113 * C308 + C31650 * C318) * C2828 -
                (C113 * C319 + C31650 * C338) * C31811 +
                (C113 * C309 + C31650 * C320) * C2829 +
                (C113 * C321 + C31650 * C339) * C31801 -
                (C113 * C1283 + C31650 * C1289) * C2830 -
                (C113 * C1290 + C31650 * C1301) * C31781) *
                   C31664 * C104 +
               (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                   C31664 * C105 +
               (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
                   C31664 * C106) *
                  C2825 +
              ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 +
                C2839) *
                   C31664 * C104 +
               (C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 +
                C2847) *
                   C31664 * C105 +
               (C388 * C2828 - (C168 * C31815 + C169 * C2827) + C389 * C31811 -
                C390 * C2829 - C391 * C31801 +
                (C113 * C1561 + C31650 * C1562) * C2830 +
                (C113 * C1563 + C31650 * C1564) * C31781) *
                   C31664 * C106) *
                  C31449) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C2825 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31449) *
              C31809 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 +
            (C2998 - (C2999 + C3000) + C3001) * C31664 * C106) *
               C2825 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C590 * C2697 + C591 * C2691 - C1057 * C2698 - C1058 * C31530) *
                C31664 * C106) *
               C31449) *
              C31798 +
          ((((C113 * C526 + C31650 * C541) * C2697 +
             (C113 * C542 + C31650 * C556) * C2691 -
             (C113 * C1420 + C31650 * C1432) * C2698 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
            (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
               C2825 +
           ((C3004 - (C3003 + C3002) + C3005) * C31664 * C104 +
            (C3008 - (C3007 + C3006) + C3009) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C2698 -
             (C596 * C2691 + C597 * C2697) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31814 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2698 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C2691 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2697) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C31807 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C2697 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C2691 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C2698 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C31794 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C2698 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C2691 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C2697) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C2825 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2828 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31815 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2827) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31811 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C2829 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31801 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C2830 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31809 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C2697 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C2691 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C2698 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C2698 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C2691 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C2697) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C9439 * C2697 + C9440 * C2691 - C9806 * C2698 - C9807 * C31530) *
               C9203 +
           (C9441 * C2697 + C9442 * C2691 - C9808 * C2698 - C9809 * C31530) *
               C9204) *
              C31425 * C31814 +
          ((C2702 - (C2701 + C2700) + C2703) * C9202 +
           (C2994 - (C2995 + C2996) + C2997) * C9203 +
           (C3004 - (C3003 + C3002) + C3005) * C9204) *
              C31425 * C31807 +
          (C2720 * C9202 + (C3000 + C2999 - C2998 - C3001) * C9203 +
           (C3006 + C3007 - C3008 - C3009) * C9204) *
              C31425 * C31794 +
          (C2721 * C9202 + (C3302 - (C3301 + C3300) + C3303) * C9203 +
           ((C113 * C2337 + C31650 * C2338) * C2698 -
            (C596 * C2691 + C597 * C2697) +
            (C113 * C2339 + C31650 * C2340) * C31530) *
               C9204) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C9439 * C2827 + C9440 * C31815 - C9806 * C2828 - C9807 * C31811 +
            C10122 * C2829 + C10123 * C31801 - C10517 * C2830 -
            C10518 * C31781) *
               C9203 +
           (C9441 * C2827 + C9442 * C31815 - C9808 * C2828 - C9809 * C31811 +
            C10125 * C2829 + C10126 * C31801 - C10519 * C2830 -
            C10520 * C31781) *
               C9204) *
              C31425 * C2825 +
          ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
               C9202 +
           (C1052 * C2828 - (C587 * C31815 + C586 * C2827) + C1053 * C31811 -
            C1760 * C2829 - C1761 * C31801 +
            (C113 * C1866 + C31650 * C1870) * C2830 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C9203 +
           (C2354 * C2828 - (C593 * C31815 + C592 * C2827) + C2355 * C31811 -
            C10395 * C2829 - C10396 * C31801 +
            (C113 * C6700 + C31650 * C6701) * C2830 +
            (C113 * C6702 + C31650 * C6703) * C31781) *
               C9204) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
               C31425 * C2825 +
           ((C2702 - (C2701 + C2700) + C2703) * C9202 +
            (C2994 - (C2995 + C2996) + C2997) * C9203 + C11614 * C9204) *
               C31425 * C31449) *
              C31809 +
          (((C11596 - (C11595 + C11594) + C11597) * C9202 +
            (C11600 - (C11599 + C11598) + C11601) * C9203 +
            (C11603 - (C11604 + C11605) + C11606) * C9204) *
               C31425 * C2825 +
           ((C2996 + C2995 - C2994 - C2997) * C9202 +
            (C3002 + C3003 - C3004 - C3005) * C9203 +
            (C11607 + C11608 - C11609 - C11610) * C9204) *
               C31425 * C31449) *
              C31798 +
          ((C11615 * C9202 + (C11605 + C11604 - C11603 - C11606) * C9203 +
            (C10847 * C2697 + C10848 * C2691 - C11247 * C2698 -
             C11248 * C31530) *
                C9204) *
               C31425 * C2825 +
           (C11614 * C9202 + (C11609 - (C11608 + C11607) + C11610) * C9203 +
            ((C113 * C11001 + C31650 * C11002) * C2698 -
             (C11133 * C2691 + C11134 * C2697) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C9204) *
               C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31444 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31452 +
           (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
            (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
               C3124) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31444 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31452 +
           (C3306 * C104 + (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
               C31425 * C31444 +
           ((C2702 - (C2701 + C2700) + C2703) * C9202 +
            (C2994 - (C2995 + C2996) + C2997) * C9203 + C11614 * C9204) *
               C31425 * C31452 +
           (C2720 * C9202 + (C3000 + C2999 - C2998 - C3001) * C9203 +
            (C3006 + C3007 - C3008 - C3009) * C9204) *
               C31425 * C3124) *
              C31741 +
          (((C11596 - (C11595 + C11594) + C11597) * C9202 +
            (C11600 - (C11599 + C11598) + C11601) * C9203 +
            (C11603 - (C11604 + C11605) + C11606) * C9204) *
               C31425 * C31444 +
           ((C2996 + C2995 - C2994 - C2997) * C9202 +
            (C3002 + C3003 - C3004 - C3005) * C9203 +
            (C11607 + C11608 - C11609 - C11610) * C9204) *
               C31425 * C31452 +
           (C3305 * C9202 + (C3008 - (C3007 + C3006) + C3009) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C2698 -
             (C2479 * C2691 + C2478 * C2697) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C2825 +
          ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
               C31664 * C104 +
           (C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 + C2847) *
               C31664 * C105 +
           (C388 * C2828 - (C168 * C31815 + C169 * C2827) + C389 * C31811 -
            C390 * C2829 - C391 * C31801 +
            (C113 * C1561 + C31650 * C1562) * C2830 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
              C31814 +
          ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
           (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
              C31807 +
          (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
           (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
              C31794 +
          (C2723 * C104 + (C2714 - (C2713 + C2712) + C2715) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C2698 -
            (C172 * C2691 + C173 * C2697) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31814 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2698 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C2691 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2697) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C31807 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C2697 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C2691 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C2698 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C31794 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C2698 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C2691 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C2697) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C2825 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2828 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31815 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2827) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31811 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C2829 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31801 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C2830 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C9439 * C2697 + C9440 * C2691 - C9806 * C2698 - C9807 * C31530) *
               C9203 +
           (C9441 * C2697 + C9442 * C2691 - C9808 * C2698 - C9809 * C31530) *
               C9204) *
              C31425 * C31814 +
          ((C2702 - (C2701 + C2700) + C2703) * C9202 +
           (C2994 - (C2995 + C2996) + C2997) * C9203 +
           (C3004 - (C3003 + C3002) + C3005) * C9204) *
              C31425 * C31807 +
          (C2720 * C9202 + (C3000 + C2999 - C2998 - C3001) * C9203 +
           (C3006 + C3007 - C3008 - C3009) * C9204) *
              C31425 * C31794 +
          (C2721 * C9202 + (C3302 - (C3301 + C3300) + C3303) * C9203 +
           ((C113 * C2337 + C31650 * C2338) * C2698 -
            (C596 * C2691 + C597 * C2697) +
            (C113 * C2339 + C31650 * C2340) * C31530) *
               C9204) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C9439 * C2827 + C9440 * C31815 - C9806 * C2828 - C9807 * C31811 +
            C10122 * C2829 + C10123 * C31801 - C10517 * C2830 -
            C10518 * C31781) *
               C9203 +
           (C9441 * C2827 + C9442 * C31815 - C9808 * C2828 - C9809 * C31811 +
            C10125 * C2829 + C10126 * C31801 - C10519 * C2830 -
            C10520 * C31781) *
               C9204) *
              C31425 * C2825 +
          ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
               C9202 +
           (C1052 * C2828 - (C587 * C31815 + C586 * C2827) + C1053 * C31811 -
            C1760 * C2829 - C1761 * C31801 +
            (C113 * C1866 + C31650 * C1870) * C2830 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C9203 +
           (C2354 * C2828 - (C593 * C31815 + C592 * C2827) + C2355 * C31811 -
            C10395 * C2829 - C10396 * C31801 +
            (C113 * C6700 + C31650 * C6701) * C2830 +
            (C113 * C6702 + C31650 * C6703) * C31781) *
               C9204) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C30451 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31526 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C30443 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31533 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C30457 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C3121) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C30443 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31526 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C30451) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31533 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C30457 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C3121) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C30443 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31526 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C30451) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31533 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C30457 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C3121) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C30451 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31526 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C30443 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31533 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C30457 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C31664 * C104 +
            (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
            C3152 * C106) *
               C31726 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
            (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
            (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
               C31449) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C30443 -
             ((C113 * C537 + C31650 * C554) * C31526 +
              (C113 * C524 + C31650 * C538) * C30451) +
             (C113 * C1019 + C31650 * C1028) * C31533 -
             (C113 * C1417 + C31650 * C1426) * C30457 -
             (C113 * C1427 + C31650 * C1444) * C3121) *
                C31664 * C104 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
            (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
               C31726 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C31664 * C104 +
            (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C31664 * C105 +
            (C590 * C30451 + C591 * C31526 - C1057 * C30443 - C1058 * C31533 +
             (C113 * C1739 + C31650 * C1740) * C30457 +
             (C113 * C1741 + C31650 * C1742) * C3121) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C9202 +
            (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C9203 +
            (C12024 + C12025 - C12026 - C12027 + C12028 + C12029) * C9204) *
               C31425 * C31726 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C9202 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C9203 +
            (C12030 - (C12031 + C12032) + C12033 - C12034 - C12035) * C9204) *
               C31425 * C31449) *
              C3562 +
          (((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C9202 +
            (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C9203 +
            (C10127 * C30443 - (C9443 * C31526 + C9444 * C30451) +
             C10128 * C31533 - C10129 * C30457 - C10130 * C3121) *
                C9204) *
               C31425 * C31726 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C9202 +
            (C12032 + C12031 - C12030 - C12033 + C12034 + C12035) * C9203 +
            (C2476 * C30451 + C2477 * C31526 - C11020 * C30443 -
             C11021 * C31533 + (C113 * C6802 + C31650 * C6803) * C30457 +
             (C113 * C6804 + C31650 * C6805) * C3121) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C30451 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31526 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C30443 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31533 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C30457 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C3121) *
              C31664 * C31425 * C31439 * C31568 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C30443 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31526 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C30451) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31533 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C30457 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C3121) *
              C31664 * C31425 * C31439 * C31575 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C30451 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31526 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C30443 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31533 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C30457 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C3121) *
              C31664 * C31425 * C31439 * C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C31664 * C104 +
           (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
           C3152 * C106) *
              C31439 * C31568 +
          (((C113 * C1013 + C31650 * C1018) * C30443 -
            ((C113 * C537 + C31650 * C554) * C31526 +
             (C113 * C524 + C31650 * C538) * C30451) +
            (C113 * C1019 + C31650 * C1028) * C31533 -
            (C113 * C1417 + C31650 * C1426) * C30457 -
            (C113 * C1427 + C31650 * C1444) * C3121) *
               C31664 * C104 +
           (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
           (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
              C31439 * C31575 +
          (((C113 * C526 + C31650 * C541) * C30451 +
            (C113 * C542 + C31650 * C556) * C31526 -
            (C113 * C1420 + C31650 * C1432) * C30443 -
            (C113 * C1433 + C31650 * C1447) * C31533 +
            (C113 * C1421 + C31650 * C1434) * C30457 +
            (C113 * C1435 + C31650 * C1448) * C3121) *
               C31664 * C104 +
           (C592 * C30451 + C593 * C31526 - C2354 * C30443 - C2355 * C31533 +
            (C113 * C1423 + C31650 * C1438) * C30457 +
            (C113 * C1439 + C31650 * C1450) * C3121) *
               C31664 * C105 +
           (C594 * C30451 + C595 * C31526 - C2356 * C30443 - C2357 * C31533 +
            (C113 * C1425 + C31650 * C1442) * C30457 +
            (C113 * C1443 + C31650 * C1452) * C3121) *
               C31664 * C106) *
              C31439 * C4082)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C9202 +
           (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C9203 +
           C13563 * C9204) *
              C31425 * C31439 * C31568 +
          ((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C9202 +
           (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C9203 +
           (C13554 - (C13555 + C13556) + C13557 - C13558 - C13559) * C9204) *
              C31425 * C31439 * C31575 +
          (C13563 * C9202 +
           (C13556 + C13555 - C13554 - C13557 + C13558 + C13559) * C9203 +
           (C10847 * C30451 + C10848 * C31526 - C11247 * C30443 -
            C11248 * C31533 + (C113 * C6544 + C31650 * C6548) * C30457 +
            (C113 * C6550 + C31650 * C6553) * C3121) *
               C9204) *
              C31425 * C31439 * C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C2697 +
                 (C113 * C123 + C31650 * C136) * C2691 -
                 (C113 * C308 + C31650 * C318) * C2698 -
                 (C113 * C319 + C31650 * C338) * C31530) *
                    C31664 * C104 +
                (C2700 + C2701 - C2702 - C2703) * C31664 * C105 +
                C2722 * C106) *
                   C31805 +
               ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
                (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 +
                C2723 * C106) *
                   C31792 +
               (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
                (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
                   C31765) *
                  C3562 +
              ((((C113 * C1013 + C31650 * C1018) * C2698 -
                 ((C113 * C537 + C31650 * C554) * C2691 +
                  (C113 * C524 + C31650 * C538) * C2697) +
                 (C113 * C1019 + C31650 * C1028) * C31530) *
                    C31664 * C104 +
                (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 +
                C3306 * C106) *
                   C31805 +
               ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
                (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
                (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
                   C31792 +
               (C3306 * C104 +
                (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
                ((C113 * C1017 + C31650 * C1026) * C2698 -
                 (C864 * C2691 + C865 * C2697) +
                 (C113 * C1027 + C31650 * C1032) * C31530) *
                    C31664 * C106) *
                   C31765) *
                  C31572) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C2827 +
                (C113 * C123 + C31650 * C136) * C31815 -
                (C113 * C308 + C31650 * C318) * C2828 -
                (C113 * C319 + C31650 * C338) * C31811 +
                (C113 * C309 + C31650 * C320) * C2829 +
                (C113 * C321 + C31650 * C339) * C31801 -
                (C113 * C1283 + C31650 * C1289) * C2830 -
                (C113 * C1290 + C31650 * C1301) * C31781) *
                   C31664 * C104 +
               (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                   C31664 * C105 +
               (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
                   C31664 * C106) *
                  C31439 * C3562 +
              (((C113 * C1013 + C31650 * C1018) * C2828 -
                ((C113 * C537 + C31650 * C554) * C31815 +
                 (C113 * C524 + C31650 * C538) * C2827) +
                (C113 * C1019 + C31650 * C1028) * C31811 -
                (C113 * C1417 + C31650 * C1426) * C2829 -
                (C113 * C1427 + C31650 * C1444) * C31801 +
                (C113 * C1865 + C31650 * C1868) * C2830 +
                (C113 * C1869 + C31650 * C1874) * C31781) *
                   C31664 * C104 +
               (C1052 * C2828 - (C587 * C31815 + C586 * C2827) +
                C1053 * C31811 - C1760 * C2829 - C1761 * C31801 +
                (C113 * C1866 + C31650 * C1870) * C2830 +
                (C113 * C1871 + C31650 * C1875) * C31781) *
                   C31664 * C105 +
               (C1054 * C2828 - (C589 * C31815 + C588 * C2827) +
                C1056 * C31811 - C1762 * C2829 - C1763 * C31801 +
                (C113 * C1867 + C31650 * C1872) * C2830 +
                (C113 * C1873 + C31650 * C1876) * C31781) *
                   C31664 * C106) *
                  C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
              C31439 * C31816 +
          (((C113 * C1013 + C31650 * C1018) * C2698 -
            ((C113 * C537 + C31650 * C554) * C2691 +
             (C113 * C524 + C31650 * C538) * C2697) +
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C31664 * C104 +
           (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
              C31439 * C31813 +
          (((C113 * C526 + C31650 * C541) * C2697 +
            (C113 * C542 + C31650 * C556) * C2691 -
            (C113 * C1420 + C31650 * C1432) * C2698 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C31664 * C104 +
           (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
           (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
              C31439 * C31804 +
          (((C113 * C2581 + C31650 * C2584) * C2698 -
            ((C113 * C2177 + C31650 * C2187) * C2691 +
             (C113 * C2169 + C31650 * C2178) * C2697) +
            (C113 * C2585 + C31650 * C2590) * C31530) *
               C31664 * C104 +
           ((C113 * C2582 + C31650 * C2586) * C2698 -
            (C2477 * C2691 + C2476 * C2697) +
            (C113 * C2587 + C31650 * C2591) * C31530) *
               C31664 * C105 +
           ((C113 * C2583 + C31650 * C2588) * C2698 -
            (C2479 * C2691 + C2478 * C2697) +
            (C113 * C2589 + C31650 * C2592) * C31530) *
               C31664 * C106) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C3562 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2828 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31815 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2827) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31811 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C2829 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31801 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C2830 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31439 * C31816 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2698 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C2691 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2697) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31530) *
              C31664 * C31425 * C31439 * C31813 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C2697 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C2691 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C2698 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31530) *
              C31664 * C31425 * C31439 * C31804 +
          ((C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6546 +
            C5041 * C6904 + C5037 * C6905) *
               C2698 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C2691 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C2697) +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6545 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31530) *
              C31664 * C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
               C31425 * C31805 +
           ((C2702 - (C2701 + C2700) + C2703) * C9202 +
            (C2994 - (C2995 + C2996) + C2997) * C9203 + C11614 * C9204) *
               C31425 * C31792 +
           (C2720 * C9202 + (C3000 + C2999 - C2998 - C3001) * C9203 +
            (C3006 + C3007 - C3008 - C3009) * C9204) *
               C31425 * C31765) *
              C3562 +
          (((C11596 - (C11595 + C11594) + C11597) * C9202 +
            (C11600 - (C11599 + C11598) + C11601) * C9203 +
            (C11603 - (C11604 + C11605) + C11606) * C9204) *
               C31425 * C31805 +
           ((C2996 + C2995 - C2994 - C2997) * C9202 +
            (C3002 + C3003 - C3004 - C3005) * C9203 +
            (C11607 + C11608 - C11609 - C11610) * C9204) *
               C31425 * C31792 +
           (C3305 * C9202 + (C3008 - (C3007 + C3006) + C3009) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C2698 -
             (C2479 * C2691 + C2478 * C2697) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
            C13037) *
               C9203 +
           (C13038 + C13039 - C13040 - C13041 + C13042 + C13043 - C13044 -
            C13045) *
               C9204) *
              C31425 * C31439 * C3562 +
          ((C13032 - (C13031 + C13030) + C13033 - C13034 - C13035 + C13036 +
            C13037) *
               C9202 +
           (C13040 - (C13039 + C13038) + C13041 - C13042 - C13043 + C13044 +
            C13045) *
               C9203 +
           (C10127 * C2828 - (C9443 * C31815 + C9444 * C2827) +
            C10128 * C31811 - C10129 * C2829 - C10130 * C31801 +
            (C113 * C6904 + C31650 * C6905) * C2830 +
            (C113 * C6906 + C31650 * C6907) * C31781) *
               C9204) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
              C31425 * C31439 * C31816 +
          ((C11596 - (C11595 + C11594) + C11597) * C9202 +
           (C11600 - (C11599 + C11598) + C11601) * C9203 + C13150 * C9204) *
              C31425 * C31439 * C31813 +
          (C11615 * C9202 + (C11605 + C11604 - C11603 - C11606) * C9203 +
           (C13145 + C13146 - C13147 - C13148) * C9204) *
              C31425 * C31439 * C31804 +
          (C13150 * C9202 + (C13147 - (C13146 + C13145) + C13148) * C9203 +
           ((C113 * C11234 + C31650 * C11235) * C2698 -
            (C10849 * C2691 + C10850 * C2697) +
            (C113 * C11236 + C31650 * C11237) * C31530) *
               C9204) *
              C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31568 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C2697 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C2691 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C2698 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C2698 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C2691 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C2697) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31726 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31449) *
              C31568 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31726 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31449) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C2697 +
             (C113 * C542 + C31650 * C556) * C2691 -
             (C113 * C1420 + C31650 * C1432) * C2698 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
            (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
               C31726 +
           ((C3004 - (C3003 + C3002) + C3005) * C31664 * C104 +
            (C3008 - (C3007 + C3006) + C3009) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C2698 -
             (C596 * C2691 + C597 * C2697) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
               C31425 * C31726 +
           ((C2702 - (C2701 + C2700) + C2703) * C9202 +
            (C2994 - (C2995 + C2996) + C2997) * C9203 + C11614 * C9204) *
               C31425 * C31449) *
              C31568 +
          (((C11596 - (C11595 + C11594) + C11597) * C9202 +
            (C11600 - (C11599 + C11598) + C11601) * C9203 + C13150 * C9204) *
               C31425 * C31726 +
           ((C2996 + C2995 - C2994 - C2997) * C9202 +
            (C3002 + C3003 - C3004 - C3005) * C9203 +
            (C11607 + C11608 - C11609 - C11610) * C9204) *
               C31425 * C31449) *
              C31575 +
          ((C11615 * C9202 + (C11605 + C11604 - C11603 - C11606) * C9203 +
            (C13145 + C13146 - C13147 - C13148) * C9204) *
               C31425 * C31726 +
           (C11614 * C9202 + (C11609 - (C11608 + C11607) + C11610) * C9203 +
            ((C113 * C11001 + C31650 * C11002) * C2698 -
             (C11133 * C2691 + C11134 * C2697) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C9204) *
               C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C31439 * C3562 +
          (((C113 * C1013 + C31650 * C1018) * C2828 -
            ((C113 * C537 + C31650 * C554) * C31815 +
             (C113 * C524 + C31650 * C538) * C2827) +
            (C113 * C1019 + C31650 * C1028) * C31811 -
            (C113 * C1417 + C31650 * C1426) * C2829 -
            (C113 * C1427 + C31650 * C1444) * C31801 +
            (C113 * C1865 + C31650 * C1868) * C2830 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C2828 - (C587 * C31815 + C586 * C2827) + C1053 * C31811 -
            C1760 * C2829 - C1761 * C31801 +
            (C113 * C1866 + C31650 * C1870) * C2830 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C2828 - (C589 * C31815 + C588 * C2827) + C1056 * C31811 -
            C1762 * C2829 - C1763 * C31801 +
            (C113 * C1867 + C31650 * C1872) * C2830 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31805 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31792 +
           (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
            (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
               C31765) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31805 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31792 +
           (C3306 * C104 + (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C3562 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2828 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31815 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2827) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31811 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C2829 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31801 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C2830 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C11594 + C11595 - C11596 - C11597) * C9203 + C11615 * C9204) *
               C31425 * C31805 +
           ((C2702 - (C2701 + C2700) + C2703) * C9202 +
            (C2994 - (C2995 + C2996) + C2997) * C9203 + C11614 * C9204) *
               C31425 * C31792 +
           (C2720 * C9202 + (C3000 + C2999 - C2998 - C3001) * C9203 +
            (C3006 + C3007 - C3008 - C3009) * C9204) *
               C31425 * C31765) *
              C3562 +
          (((C11596 - (C11595 + C11594) + C11597) * C9202 +
            (C11600 - (C11599 + C11598) + C11601) * C9203 +
            (C11603 - (C11604 + C11605) + C11606) * C9204) *
               C31425 * C31805 +
           ((C2996 + C2995 - C2994 - C2997) * C9202 +
            (C3002 + C3003 - C3004 - C3005) * C9203 +
            (C11607 + C11608 - C11609 - C11610) * C9204) *
               C31425 * C31792 +
           (C3305 * C9202 + (C3008 - (C3007 + C3006) + C3009) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C2698 -
             (C2479 * C2691 + C2478 * C2697) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
            C13037) *
               C9203 +
           (C13038 + C13039 - C13040 - C13041 + C13042 + C13043 - C13044 -
            C13045) *
               C9204) *
              C31425 * C31439 * C3562 +
          ((C13032 - (C13031 + C13030) + C13033 - C13034 - C13035 + C13036 +
            C13037) *
               C9202 +
           (C13040 - (C13039 + C13038) + C13041 - C13042 - C13043 + C13044 +
            C13045) *
               C9203 +
           (C10127 * C2828 - (C9443 * C31815 + C9444 * C2827) +
            C10128 * C31811 - C10129 * C2829 - C10130 * C31801 +
            (C113 * C6904 + C31650 * C6905) * C2830 +
            (C113 * C6906 + C31650 * C6907) * C31781) *
               C9204) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C717 +
                (C113 * C123 + C31650 * C136) * C31740 -
                (C113 * C308 + C31650 * C318) * C718 -
                (C113 * C319 + C31650 * C338) * C31530) *
                   C31664 * C104 +
               (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
                  C713 +
              ((C726 - (C725 + C724) + C727) * C31664 * C104 +
               (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
                  C714 +
              (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
               (C736 + C737 - C748 - C749) * C31664 * C106) *
                  C715 +
              (C753 * C104 + (C748 - (C737 + C736) + C749) * C31664 * C105 +
               ((C113 * C719 + C31650 * C720) * C718 -
                (C172 * C31740 + C173 * C717) +
                (C113 * C721 + C31650 * C722) * C31530) *
                   C31664 * C106) *
                  C31775) *
             C31485 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C1557 +
                (C113 * C123 + C31650 * C136) * C1551 -
                (C113 * C308 + C31650 * C318) * C1558 -
                (C113 * C319 + C31650 * C338) * C1552 +
                (C113 * C309 + C31650 * C320) * C1559 +
                (C113 * C321 + C31650 * C339) * C1553 -
                (C113 * C1283 + C31650 * C1289) * C1560 -
                (C113 * C1290 + C31650 * C1301) * C31781) *
                   C31664 * C104 +
               (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                   C31664 * C105 +
               (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
                   C31664 * C106) *
                  C31726 +
              ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 +
                C1591) *
                   C31664 * C104 +
               (C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 +
                C1593) *
                   C31664 * C105 +
               (C388 * C1558 - (C168 * C1551 + C169 * C1557) + C389 * C1552 -
                C390 * C1559 - C391 * C1553 +
                (C113 * C1561 + C31650 * C1562) * C1560 +
                (C113 * C1563 + C31650 * C1564) * C31781) *
                   C31664 * C106) *
                  C31449) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C31726 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31449) *
              C1987 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C31726 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31449) *
              C1988 +
          ((((C113 * C526 + C31650 * C541) * C717 +
             (C113 * C542 + C31650 * C556) * C31740 -
             (C113 * C1420 + C31650 * C1432) * C718 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
            (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
               C31726 +
           ((C2358 - (C2343 + C2342) + C2359) * C31664 * C104 +
            (C2360 - (C2349 + C2348) + C2361) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C718 -
             (C596 * C31740 + C597 * C717) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C713 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C718 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31740 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C717) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C717 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31740 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C718 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C715 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C718 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31740 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C717) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31726 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1558 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1551 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1557) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1552 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1559 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C1553 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C1560 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C1987 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C717 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31740 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C718 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C718 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C31740 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C717) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C9439 * C717 + C9440 * C31740 -
            (C113 * C1013 + C31650 * C1018) * C718 -
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C9203 +
           (C9441 * C717 + C9442 * C31740 -
            (C113 * C1420 + C31650 * C1432) * C718 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C9204) *
              C31425 * C713 +
          ((C726 - (C725 + C724) + C727) * C9202 +
           (C1059 - (C1036 + C1037) + C1060) * C9203 +
           (C2358 - (C2343 + C2342) + C2359) * C9204) *
              C31425 * C714 +
          (C750 * C9202 + (C1043 + C1042 - C1061 - C1062) * C9203 +
           (C2348 + C2349 - C2360 - C2361) * C9204) *
              C31425 * C715 +
          (C751 * C9202 + (C1063 - (C1047 + C1046) + C1064) * C9203 +
           ((C113 * C2337 + C31650 * C2338) * C718 -
            (C596 * C31740 + C597 * C717) +
            (C113 * C2339 + C31650 * C2340) * C31530) *
               C9204) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C9439 * C1557 + C9440 * C1551 - C9806 * C1558 - C9807 * C1552 +
            C10122 * C1559 + C10123 * C1553 -
            (C113 * C1865 + C31650 * C1868) * C1560 -
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C9203 +
           (C9441 * C1557 + C9442 * C1551 - C9808 * C1558 - C9809 * C1552 +
            C10125 * C1559 + C10126 * C1553 -
            (C113 * C5895 + C31650 * C5899) * C1560 -
            (C113 * C5900 + C31650 * C5904) * C31781) *
               C9204) *
              C31425 * C31726 +
          ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
               C9202 +
           (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
            C1760 * C1559 - C1761 * C1553 +
            (C113 * C1866 + C31650 * C1870) * C1560 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C9203 +
           (C2354 * C1558 - (C593 * C1551 + C592 * C1557) + C2355 * C1552 -
            (C113 * C1423 + C31650 * C1438) * C1559 -
            (C113 * C1439 + C31650 * C1450) * C1553 +
            (C113 * C6700 + C31650 * C6701) * C1560 +
            (C113 * C6702 + C31650 * C6703) * C31781) *
               C9204) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C9794 + C9795 - C9810 - C9811) * C9203 + C11022 * C9204) *
               C31425 * C31726 +
           ((C726 - (C725 + C724) + C727) * C9202 +
            (C1059 - (C1036 + C1037) + C1060) * C9203 + C11023 * C9204) *
               C31425 * C31449) *
              C1987 +
          (((C9810 - (C9795 + C9794) + C9811) * C9202 +
            (C9812 - (C9801 + C9800) + C9813) * C9203 +
            (C11008 - (C11009 + C11010) + C11011) * C9204) *
               C31425 * C31726 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C2342 + C2343 - C2358 - C2359) * C9203 +
            (C11012 + C11013 - C11024 - C11025) * C9204) *
               C31425 * C31449) *
              C1988 +
          ((C11022 * C9202 + (C11010 + C11009 - C11008 - C11011) * C9203 +
            (C10847 * C717 + C10848 * C31740 -
             (C113 * C6543 + C31650 * C6547) * C718 -
             (C113 * C6549 + C31650 * C6552) * C31530) *
                C9204) *
               C31425 * C31726 +
           (C11023 * C9202 + (C11024 - (C11013 + C11012) + C11025) * C9203 +
            ((C113 * C11001 + C31650 * C11002) * C718 -
             ((C113 * C2182 + C31650 * C2189) * C31740 +
              (C113 * C2171 + C31650 * C2181) * C717) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C9204) *
               C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C717 +
                 (C113 * C123 + C31650 * C136) * C31740 -
                 (C113 * C308 + C31650 * C318) * C718 -
                 (C113 * C319 + C31650 * C338) * C31530) *
                    C31664 * C104 +
                (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
                   C302 +
               ((C726 - (C725 + C724) + C727) * C31664 * C104 +
                (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
                   C303 +
               (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
                (C736 + C737 - C748 - C749) * C31664 * C106) *
                   C31765) *
                  C31741 +
              ((((C113 * C1013 + C31650 * C1018) * C718 -
                 ((C113 * C537 + C31650 * C554) * C31740 +
                  (C113 * C524 + C31650 * C538) * C717) +
                 (C113 * C1019 + C31650 * C1028) * C31530) *
                    C31664 * C104 +
                (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 +
                C1067 * C106) *
                   C302 +
               ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
                (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
                (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
                   C303 +
               (C1067 * C104 +
                (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
                ((C113 * C1017 + C31650 * C1026) * C718 -
                 (C864 * C31740 + C865 * C717) +
                 (C113 * C1027 + C31650 * C1032) * C31530) *
                    C31664 * C106) *
                   C31765) *
                  C31572) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C1557 +
                (C113 * C123 + C31650 * C136) * C1551 -
                (C113 * C308 + C31650 * C318) * C1558 -
                (C113 * C319 + C31650 * C338) * C1552 +
                (C113 * C309 + C31650 * C320) * C1559 +
                (C113 * C321 + C31650 * C339) * C1553 -
                (C113 * C1283 + C31650 * C1289) * C1560 -
                (C113 * C1290 + C31650 * C1301) * C31781) *
                   C31664 * C104 +
               (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                   C31664 * C105 +
               (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
                   C31664 * C106) *
                  C31439 * C31741 +
              (((C113 * C1013 + C31650 * C1018) * C1558 -
                ((C113 * C537 + C31650 * C554) * C1551 +
                 (C113 * C524 + C31650 * C538) * C1557) +
                (C113 * C1019 + C31650 * C1028) * C1552 -
                (C113 * C1417 + C31650 * C1426) * C1559 -
                (C113 * C1427 + C31650 * C1444) * C1553 +
                (C113 * C1865 + C31650 * C1868) * C1560 +
                (C113 * C1869 + C31650 * C1874) * C31781) *
                   C31664 * C104 +
               (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
                C1760 * C1559 - C1761 * C1553 +
                (C113 * C1866 + C31650 * C1870) * C1560 +
                (C113 * C1871 + C31650 * C1875) * C31781) *
                   C31664 * C105 +
               (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
                C1762 * C1559 - C1763 * C1553 +
                (C113 * C1867 + C31650 * C1872) * C1560 +
                (C113 * C1873 + C31650 * C1876) * C31781) *
                   C31664 * C106) *
                  C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
              C31439 * C2459 +
          (((C113 * C1013 + C31650 * C1018) * C718 -
            ((C113 * C537 + C31650 * C554) * C31740 +
             (C113 * C524 + C31650 * C538) * C717) +
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C31664 * C104 +
           (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
              C31439 * C2460 +
          (((C113 * C526 + C31650 * C541) * C717 +
            (C113 * C542 + C31650 * C556) * C31740 -
            (C113 * C1420 + C31650 * C1432) * C718 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C31664 * C104 +
           (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
           (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
              C31439 * C2461 +
          (((C113 * C2581 + C31650 * C2584) * C718 -
            ((C113 * C2177 + C31650 * C2187) * C31740 +
             (C113 * C2169 + C31650 * C2178) * C717) +
            (C113 * C2585 + C31650 * C2590) * C31530) *
               C31664 * C104 +
           ((C113 * C2582 + C31650 * C2586) * C718 -
            (C2477 * C31740 + C2476 * C717) +
            (C113 * C2587 + C31650 * C2591) * C31530) *
               C31664 * C105 +
           ((C113 * C2583 + C31650 * C2588) * C718 -
            (C2479 * C31740 + C2478 * C717) +
            (C113 * C2589 + C31650 * C2592) * C31530) *
               C31664 * C106) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C31741 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1558 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1551 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1557) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1552 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1559 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C1553 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C1560 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31439 * C2459 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C718 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31740 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C717) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31530) *
              C31664 * C31425 * C31439 * C2460 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C717 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31740 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C718 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31530) *
              C31664 * C31425 * C31439 * C2461 +
          ((C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6546 +
            C5041 * C6904 + C5037 * C6905) *
               C718 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31740 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C717) +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6545 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31530) *
              C31664 * C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C9794 + C9795 - C9810 - C9811) * C9203 +
            (C9800 + C9801 - C9812 - C9813) * C9204) *
               C31425 * C302 +
           ((C726 - (C725 + C724) + C727) * C9202 +
            (C1059 - (C1036 + C1037) + C1060) * C9203 +
            (C2358 - (C2343 + C2342) + C2359) * C9204) *
               C31425 * C303 +
           (C750 * C9202 + (C1043 + C1042 - C1061 - C1062) * C9203 +
            (C2348 + C2349 - C2360 - C2361) * C9204) *
               C31425 * C31765) *
              C31741 +
          (((C9810 - (C9795 + C9794) + C9811) * C9202 +
            (C9812 - (C9801 + C9800) + C9813) * C9203 +
            ((C113 * C2581 + C31650 * C2584) * C718 -
             (C9443 * C31740 + C9444 * C717) +
             (C113 * C2585 + C31650 * C2590) * C31530) *
                C9204) *
               C31425 * C302 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C2342 + C2343 - C2358 - C2359) * C9203 +
            (C2476 * C717 + C2477 * C31740 -
             (C113 * C2582 + C31650 * C2586) * C718 -
             (C113 * C2587 + C31650 * C2591) * C31530) *
                C9204) *
               C31425 * C303 +
           (C1066 * C9202 + (C2360 - (C2349 + C2348) + C2361) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C718 -
             (C2479 * C31740 + C2478 * C717) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
            C10522) *
               C9203 +
           (C10507 + C10508 - C10509 - C10510 + C10511 + C10512 - C10523 -
            C10524) *
               C9204) *
              C31425 * C31439 * C31741 +
          ((C10499 - (C10498 + C10497) + C10500 - C10501 - C10502 + C10521 +
            C10522) *
               C9202 +
           (C10509 - (C10508 + C10507) + C10510 - C10511 - C10512 + C10523 +
            C10524) *
               C9203 +
           (C10127 * C1558 - (C9443 * C1551 + C9444 * C1557) + C10128 * C1552 -
            C10129 * C1559 - C10130 * C1553 +
            (C113 * C6904 + C31650 * C6905) * C1560 +
            (C113 * C6906 + C31650 * C6907) * C31781) *
               C9204) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C9794 + C9795 - C9810 - C9811) * C9203 + C11022 * C9204) *
              C31425 * C31439 * C2459 +
          ((C9810 - (C9795 + C9794) + C9811) * C9202 +
           (C9812 - (C9801 + C9800) + C9813) * C9203 + C11249 * C9204) *
              C31425 * C31439 * C2460 +
          (C11022 * C9202 + (C11010 + C11009 - C11008 - C11011) * C9203 +
           (C11240 + C11241 - C11250 - C11251) * C9204) *
              C31425 * C31439 * C2461 +
          (C11249 * C9202 + (C11250 - (C11241 + C11240) + C11251) * C9203 +
           ((C113 * C11234 + C31650 * C11235) * C718 -
            (C10849 * C31740 + C10850 * C717) +
            (C113 * C11236 + C31650 * C11237) * C31530) *
               C9204) *
              C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C114 +
                (C113 * C123 + C31650 * C136) * C31467) *
                   C31664 * C104 +
               (C174 + C175) * C31664 * C105 + C187 * C106) *
                  C107 -
              (C188 * C106 + (C177 + C176) * C31664 * C105 +
               (C175 + C174) * C31664 * C104) *
                  C108 +
              (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                  C109 -
              ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
               C188 * C104) *
                  C110 +
              (C189 * C104 + (C183 + C182) * C31664 * C105 +
               ((C113 * C121 + C31650 * C134) * C114 +
                (C113 * C135 + C31650 * C142) * C31467) *
                   C31664 * C106) *
                  C111) *
             C31485 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C305 +
                (C113 * C123 + C31650 * C136) * C31808 -
                (C113 * C308 + C31650 * C318) * C306 -
                (C113 * C319 + C31650 * C338) * C31796 +
                (C113 * C309 + C31650 * C320) * C307 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
               C408 * C106) *
                  C302 +
              ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
               (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
               (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
                  C303 +
              (C408 * C104 +
               (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
               (C170 * C305 + C171 * C31808 -
                (C113 * C316 + C31650 * C334) * C306 -
                (C113 * C335 + C31650 * C346) * C31796 +
                (C113 * C317 + C31650 * C336) * C307 +
                (C113 * C337 + C31650 * C347) * C31771) *
                   C31664 * C106) *
                  C31765) *
             C31485 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C114 +
                 (C113 * C123 + C31650 * C136) * C31467) *
                    C31664 * C104 +
                (C174 + C175) * C31664 * C105 + C187 * C106) *
                   C302 -
               (C188 * C106 + (C177 + C176) * C31664 * C105 +
                (C175 + C174) * C31664 * C104) *
                   C303 +
               (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                   C31765) *
                  C31809 +
              (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
                (C602 + C603) * C31664 * C106) *
                   C303 -
               (C612 * C106 + (C599 + C598) * C31664 * C105 +
                ((C113 * C537 + C31650 * C554) * C31467 +
                 (C113 * C524 + C31650 * C538) * C114) *
                    C31664 * C104) *
                   C302 -
               (((C113 * C539 + C31650 * C555) * C31467 +
                 (C113 * C525 + C31650 * C540) * C114) *
                    C31664 * C106 +
                (C603 + C602) * C31664 * C105 + C612 * C104) *
                   C31765) *
                  C31798 +
              ((((C113 * C526 + C31650 * C541) * C114 +
                 (C113 * C542 + C31650 * C556) * C31467) *
                    C31664 * C104 +
                (C604 + C605) * C31664 * C105 + C613 * C106) *
                   C302 -
               ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
                (C605 + C604) * C31664 * C104) *
                   C303 +
               (C613 * C104 + (C609 + C608) * C31664 * C105 +
                ((C113 * C530 + C31650 * C549) * C114 +
                 (C113 * C550 + C31650 * C560) * C31467) *
                    C31664 * C106) *
                   C31765) *
                  C31774) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C1183 +
                (C113 * C123 + C31650 * C136) * C1177 -
                (C113 * C308 + C31650 * C318) * C1184 -
                (C113 * C319 + C31650 * C338) * C1178 +
                (C113 * C309 + C31650 * C320) * C1185 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
               C1210 * C106) *
                  C31805 +
              ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 *
                   C104 +
               (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 *
                   C105 +
               (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 *
                   C106) *
                  C31792 +
              (C1210 * C104 +
               (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
               (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
                (C113 * C317 + C31650 * C336) * C1185 +
                (C113 * C337 + C31650 * C347) * C31771) *
                   C31664 * C106) *
                  C31765) *
             C31485 -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C115 + C31650 * C122) * C1278 +
               (C113 * C123 + C31650 * C136) * C1272 -
               (C113 * C308 + C31650 * C318) * C1279 -
               (C113 * C319 + C31650 * C338) * C1273 +
               (C113 * C309 + C31650 * C320) * C1280 +
               (C113 * C321 + C31650 * C339) * C1274 -
               (C113 * C1283 + C31650 * C1289) * C1281 -
               (C113 * C1290 + C31650 * C1301) * C1275 +
               (C113 * C1284 + C31650 * C1291) * C1282 +
               (C113 * C1292 + C31650 * C1302) * C1276) *
                  C31664 * C104 +
              (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
               C381 * C1280 + C382 * C1274 -
               (C113 * C1285 + C31650 * C1293) * C1281 -
               (C113 * C1294 + C31650 * C1303) * C1275 +
               (C113 * C1286 + C31650 * C1295) * C1282 +
               (C113 * C1296 + C31650 * C1304) * C1276) *
                  C31664 * C105 +
              (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
               C386 * C1280 + C387 * C1274 -
               (C113 * C1287 + C31650 * C1297) * C1281 -
               (C113 * C1298 + C31650 * C1305) * C1275 +
               (C113 * C1288 + C31650 * C1299) * C1282 +
               (C113 * C1300 + C31650 * C1306) * C1276) *
                  C31664 * C106) *
             C31439 * C31485 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C1183 +
                (C113 * C123 + C31650 * C136) * C1177 -
                (C113 * C308 + C31650 * C318) * C1184 -
                (C113 * C319 + C31650 * C338) * C1178 +
                (C113 * C309 + C31650 * C320) * C1185 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
               C1210 * C106) *
                  C31439 * C31809 +
              (((C113 * C1013 + C31650 * C1018) * C1184 -
                ((C113 * C537 + C31650 * C554) * C1177 +
                 (C113 * C524 + C31650 * C538) * C1183) +
                (C113 * C1019 + C31650 * C1028) * C1178 -
                (C113 * C1417 + C31650 * C1426) * C1185 -
                (C113 * C1427 + C31650 * C1444) * C31771) *
                   C31664 * C104 +
               (C1052 * C1184 - (C587 * C1177 + C586 * C1183) + C1053 * C1178 -
                (C113 * C1418 + C31650 * C1428) * C1185 -
                (C113 * C1429 + C31650 * C1445) * C31771) *
                   C31664 * C105 +
               (C1054 * C1184 - (C589 * C1177 + C588 * C1183) + C1056 * C1178 -
                (C113 * C1419 + C31650 * C1430) * C1185 -
                (C113 * C1431 + C31650 * C1446) * C31771) *
                   C31664 * C106) *
                  C31439 * C31798 +
              (((C113 * C526 + C31650 * C541) * C1183 +
                (C113 * C542 + C31650 * C556) * C1177 -
                (C113 * C1420 + C31650 * C1432) * C1184 -
                (C113 * C1433 + C31650 * C1447) * C1178 +
                (C113 * C1421 + C31650 * C1434) * C1185 +
                (C113 * C1435 + C31650 * C1448) * C31771) *
                   C31664 * C104 +
               (C592 * C1183 + C593 * C1177 -
                (C113 * C1422 + C31650 * C1436) * C1184 -
                (C113 * C1437 + C31650 * C1449) * C1178 +
                (C113 * C1423 + C31650 * C1438) * C1185 +
                (C113 * C1439 + C31650 * C1450) * C31771) *
                   C31664 * C105 +
               (C594 * C1183 + C595 * C1177 -
                (C113 * C1424 + C31650 * C1440) * C1184 -
                (C113 * C1441 + C31650 * C1451) * C1178 +
                (C113 * C1425 + C31650 * C1442) * C1185 +
                (C113 * C1443 + C31650 * C1452) * C31771) *
                   C31664 * C106) *
                  C31439 * C31774) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C114 +
                 (C113 * C123 + C31650 * C136) * C31467) *
                    C31664 * C104 +
                (C174 + C175) * C31664 * C105 + C187 * C106) *
                   C31805 -
               (C188 * C106 + (C177 + C176) * C31664 * C105 +
                (C175 + C174) * C31664 * C104) *
                   C31792 +
               (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                   C31765) *
                  C1987 +
              (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
                C863 * C106) *
                   C31792 -
               (C612 * C106 + (C599 + C598) * C31664 * C105 +
                ((C113 * C537 + C31650 * C554) * C31467 +
                 (C113 * C524 + C31650 * C538) * C114) *
                    C31664 * C104) *
                   C31805 -
               ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
                C612 * C104) *
                   C31765) *
                  C1988 +
              ((((C113 * C526 + C31650 * C541) * C114 +
                 (C113 * C542 + C31650 * C556) * C31467) *
                    C31664 * C104 +
                (C604 + C605) * C31664 * C105 + C613 * C106) *
                   C31805 -
               ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
                (C605 + C604) * C31664 * C104) *
                   C31792 +
               (C613 * C104 + (C609 + C608) * C31664 * C105 +
                ((C113 * C530 + C31650 * C549) * C114 +
                 (C113 * C550 + C31650 * C560) * C31467) *
                    C31664 * C106) *
                   C31765) *
                  C31774) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C305 +
                (C113 * C123 + C31650 * C136) * C31808 -
                (C113 * C308 + C31650 * C318) * C306 -
                (C113 * C319 + C31650 * C338) * C31796 +
                (C113 * C309 + C31650 * C320) * C307 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
               C408 * C106) *
                  C31439 * C1987 +
              (((C113 * C1013 + C31650 * C1018) * C306 -
                ((C113 * C537 + C31650 * C554) * C31808 +
                 (C113 * C524 + C31650 * C538) * C305) +
                (C113 * C1019 + C31650 * C1028) * C31796 -
                (C113 * C1417 + C31650 * C1426) * C307 -
                (C113 * C1427 + C31650 * C1444) * C31771) *
                   C31664 * C104 +
               (C1052 * C306 - (C587 * C31808 + C586 * C305) + C1053 * C31796 -
                C1760 * C307 - C1761 * C31771) *
                   C31664 * C105 +
               (C1054 * C306 - (C589 * C31808 + C588 * C305) + C1056 * C31796 -
                C1762 * C307 - C1763 * C31771) *
                   C31664 * C106) *
                  C31439 * C1988 +
              (((C113 * C526 + C31650 * C541) * C305 +
                (C113 * C542 + C31650 * C556) * C31808 -
                (C113 * C1420 + C31650 * C1432) * C306 -
                (C113 * C1433 + C31650 * C1447) * C31796 +
                (C113 * C1421 + C31650 * C1434) * C307 +
                (C113 * C1435 + C31650 * C1448) * C31771) *
                   C31664 * C104 +
               (C592 * C305 + C593 * C31808 -
                (C113 * C1422 + C31650 * C1436) * C306 -
                (C113 * C1437 + C31650 * C1449) * C31796 +
                (C113 * C1423 + C31650 * C1438) * C307 +
                (C113 * C1439 + C31650 * C1450) * C31771) *
                   C31664 * C105 +
               (C594 * C305 + C595 * C31808 -
                (C113 * C1424 + C31650 * C1440) * C306 -
                (C113 * C1441 + C31650 * C1451) * C31796 +
                (C113 * C1425 + C31650 * C1442) * C307 +
                (C113 * C1443 + C31650 * C1452) * C31771) *
                   C31664 * C106) *
                  C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C113 * C115 + C31650 * C122) * C114 +
                                (C113 * C123 + C31650 * C136) * C31467) *
                                   C31664 * C104 +
                               (C174 + C175) * C31664 * C105 + C187 * C106) *
                                  C31439 * C2162 -
                              (C612 * C106 + (C599 + C598) * C31664 * C105 +
                               ((C113 * C537 + C31650 * C554) * C31467 +
                                (C113 * C524 + C31650 * C538) * C114) *
                                   C31664 * C104) *
                                  C31439 * C2163 +
                              (((C113 * C526 + C31650 * C541) * C114 +
                                (C113 * C542 + C31650 * C556) * C31467) *
                                   C31664 * C104 +
                               (C604 + C605) * C31664 * C105 + C613 * C106) *
                                  C31439 * C2164 -
                              (((C113 * C2173 + C31650 * C2185) * C31467 +
                                (C113 * C2167 + C31650 * C2174) * C114) *
                                   C31664 * C106 +
                               ((C113 * C2175 + C31650 * C2186) * C31467 +
                                (C113 * C2168 + C31650 * C2176) * C114) *
                                   C31664 * C105 +
                               ((C113 * C2177 + C31650 * C2187) * C31467 +
                                (C113 * C2169 + C31650 * C2178) * C114) *
                                   C31664 * C104) *
                                  C31439 * C2165 +
                              (((C113 * C2170 + C31650 * C2179) * C114 +
                                (C113 * C2180 + C31650 * C2188) * C31467) *
                                   C31664 * C104 +
                               ((C113 * C2171 + C31650 * C2181) * C114 +
                                (C113 * C2182 + C31650 * C2189) * C31467) *
                                   C31664 * C105 +
                               ((C113 * C2172 + C31650 * C2183) * C114 +
                                (C113 * C2184 + C31650 * C2190) * C31467) *
                                   C31664 * C106) *
                                  C31439 * C2166)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31809 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C303 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C302 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C31809 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1184 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1177 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1183) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1178 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1185 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C31798 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C1183 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C1177 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C1184 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C1178 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C1185 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C1987 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31792 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C1987 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C306 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31808 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C305) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31796 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C307 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C1988 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C305 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31808 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C306 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31796 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C307 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C5039 * C115 + C5035 * C122 + C5040 * C308 +
                                C5036 * C318 + C5041 * C309 + C5037 * C320) *
                                   C114 +
                               (C5039 * C123 + C5035 * C136 + C5040 * C319 +
                                C5036 * C338 + C5041 * C321 + C5037 * C339) *
                                   C31467) *
                                  C31664 * C31425 * C31439 * C2162 -
                              ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 +
                                C5036 * C1028 + C5039 * C537 + C5035 * C554) *
                                   C31467 +
                               (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 +
                                C5036 * C1018 + C5039 * C524 + C5035 * C538) *
                                   C114) *
                                  C31664 * C31425 * C31439 * C2163 +
                              ((C5039 * C526 + C5035 * C541 + C5040 * C1420 +
                                C5036 * C1432 + C5041 * C1421 + C5037 * C1434) *
                                   C114 +
                               (C5039 * C542 + C5035 * C556 + C5040 * C1433 +
                                C5036 * C1447 + C5041 * C1435 + C5037 * C1448) *
                                   C31467) *
                                  C31664 * C31425 * C31439 * C2164 -
                              ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 +
                                C5036 * C2590 + C5039 * C2177 + C5035 * C2187) *
                                   C31467 +
                               (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 +
                                C5036 * C2584 + C5039 * C2169 + C5035 * C2178) *
                                   C114) *
                                  C31664 * C31425 * C31439 * C2165 +
                              ((C5039 * C2170 + C5035 * C2179 + C5040 * C6543 +
                                C5036 * C6547 + C5041 * C6544 + C5037 * C6548) *
                                   C114 +
                               (C5039 * C2180 + C5035 * C2188 + C5040 * C6549 +
                                C5036 * C6552 + C5041 * C6550 + C5037 * C6553) *
                                   C31467) *
                                  C31664 * C31425 * C31439 * C2166)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C114 +
            (C113 * C537 + C31650 * C554) * C31467) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C114 +
            (C113 * C542 + C31650 * C556) * C31467) *
               C9204) *
              C31425 * C107 -
          ((C605 + C604) * C9204 + (C599 + C598) * C9203 +
           (C175 + C174) * C9202) *
              C31425 * C108 +
          (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
              C109 -
          ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
              C31425 * C110 +
          (C186 * C9202 + (C867 + C866) * C9203 +
           ((C113 * C530 + C31650 * C549) * C114 +
            (C113 * C550 + C31650 * C560) * C31467) *
               C9204) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C305 +
            (C113 * C537 + C31650 * C554) * C31808 -
            (C113 * C1013 + C31650 * C1018) * C306 -
            (C113 * C1019 + C31650 * C1028) * C31796 +
            (C113 * C1417 + C31650 * C1426) * C307 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
           (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
           (C2354 * C306 - (C593 * C31808 + C592 * C305) + C2355 * C31796 -
            (C113 * C1423 + C31650 * C1438) * C307 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C303 +
          (C407 * C9202 +
           (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C9203 +
           (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C302 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C303 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31765) *
              C31809 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C303 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C302 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31765) *
              C31798 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 +
            ((C113 * C2170 + C31650 * C2179) * C114 +
             (C113 * C2180 + C31650 * C2188) * C31467) *
                C9204) *
               C31425 * C302 -
           (((C113 * C2182 + C31650 * C2189) * C31467 +
             (C113 * C2171 + C31650 * C2181) * C114) *
                C9204 +
            (C2481 + C2480) * C9203 + C9434 * C9202) *
               C31425 * C303 +
           (C611 * C9202 + (C2482 + C2483) * C9203 +
            ((C113 * C2172 + C31650 * C2183) * C114 +
             (C113 * C2184 + C31650 * C2190) * C31467) *
                C9204) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C9439 * C1183 + C9440 * C1177 - C9806 * C1184 - C9807 * C1178 +
            (C113 * C1417 + C31650 * C1426) * C1185 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           (C9441 * C1183 + C9442 * C1177 - C9808 * C1184 - C9809 * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
           (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
           (C2354 * C1184 - (C593 * C1177 + C592 * C1183) + C2355 * C1178 -
            (C113 * C1423 + C31650 * C1438) * C1185 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C31792 +
          (C1209 * C9202 +
           (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C9203 +
           (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C9202 +
          (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
           (C113 * C1417 + C31650 * C1426) * C1280 +
           (C113 * C1427 + C31650 * C1444) * C1274 -
           (C113 * C1865 + C31650 * C1868) * C1281 -
           (C113 * C1869 + C31650 * C1874) * C1275 +
           (C113 * C5894 + C31650 * C5897) * C1282 +
           (C113 * C5898 + C31650 * C5903) * C1276) *
              C9203 +
          (C9441 * C1278 + C9442 * C1272 - C9808 * C1279 - C9809 * C1273 +
           (C113 * C1421 + C31650 * C1434) * C1280 +
           (C113 * C1435 + C31650 * C1448) * C1274 -
           (C113 * C5895 + C31650 * C5899) * C1281 -
           (C113 * C5900 + C31650 * C5904) * C1275 +
           (C113 * C5896 + C31650 * C5901) * C1282 +
           (C113 * C5902 + C31650 * C5905) * C1276) *
              C9204) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C9203 +
           C10142 * C9204) *
              C31425 * C31439 * C31809 +
          ((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C9202 +
           (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C9203 +
           (C10136 - (C10114 + C10115) + C10137 - C10138 - C10139) * C9204) *
              C31425 * C31439 * C31798 +
          (C10142 * C9202 +
           (C10115 + C10114 - C10136 - C10137 + C10138 + C10139) * C9203 +
           ((C113 * C2170 + C31650 * C2179) * C1183 +
            (C113 * C2180 + C31650 * C2188) * C1177 -
            (C113 * C6543 + C31650 * C6547) * C1184 -
            (C113 * C6549 + C31650 * C6552) * C1178 +
            (C113 * C6544 + C31650 * C6548) * C1185 +
            (C113 * C6550 + C31650 * C6553) * C31771) *
               C9204) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31805 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31792 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31765) *
              C1987 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C31792 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31805 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31765) *
              C1988 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 +
            ((C113 * C2170 + C31650 * C2179) * C114 +
             (C113 * C2180 + C31650 * C2188) * C31467) *
                C9204) *
               C31425 * C31805 -
           (((C113 * C2182 + C31650 * C2189) * C31467 +
             (C113 * C2171 + C31650 * C2181) * C114) *
                C9204 +
            (C2481 + C2480) * C9203 + C9434 * C9202) *
               C31425 * C31792 +
           (C611 * C9202 + (C2482 + C2483) * C9203 +
            ((C113 * C2172 + C31650 * C2183) * C114 +
             (C113 * C2184 + C31650 * C2190) * C31467) *
                C9204) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C9203 +
           C10767 * C9204) *
              C31425 * C31439 * C1987 +
          ((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C9202 +
           (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C9203 +
           (C10757 - (C10758 + C10759) + C10760 - C10761 - C10762) * C9204) *
              C31425 * C31439 * C1988 +
          (C10767 * C9202 +
           (C10759 + C10758 - C10757 - C10760 + C10761 + C10762) * C9203 +
           ((C113 * C2170 + C31650 * C2179) * C305 +
            (C113 * C2180 + C31650 * C2188) * C31808 -
            (C113 * C6543 + C31650 * C6547) * C306 -
            (C113 * C6549 + C31650 * C6552) * C31796 +
            (C113 * C6544 + C31650 * C6548) * C307 +
            (C113 * C6550 + C31650 * C6553) * C31771) *
               C9204) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C9202 +
           (C9445 + C9446) * C9203 + C9451 * C9204) *
              C31425 * C31439 * C2162 -
          (C10838 * C9204 + (C9448 + C9447) * C9203 + (C9446 + C9445) * C9202) *
              C31425 * C31439 * C2163 +
          (C9451 * C9202 + (C9450 + C9449) * C9203 + C10855 * C9204) * C31425 *
              C31439 * C2164 -
          ((C10853 + C10854) * C9204 + (C10852 + C10851) * C9203 +
           C10838 * C9202) *
              C31425 * C31439 * C2165 +
          (C10855 * C9202 + (C10854 + C10853) * C9203 +
           ((C113 * C10830 + C31650 * C10833) * C114 +
            (C113 * C10834 + C31650 * C10836) * C31467) *
               C9204) *
              C31425 * C31439 * C2166)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C114 +
                 (C113 * C123 + C31650 * C136) * C31467) *
                    C31664 * C104 +
                (C174 + C175) * C31664 * C105 + C187 * C106) *
                   C713 -
               (C188 * C106 + (C177 + C176) * C31664 * C105 +
                (C175 + C174) * C31664 * C104) *
                   C714 +
               (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                   C715 -
               ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
                C188 * C104) *
                   C31775) *
                  C31741 +
              (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
                C863 * C106) *
                   C714 -
               (C612 * C106 + (C599 + C598) * C31664 * C105 +
                ((C113 * C537 + C31650 * C554) * C31467 +
                 (C113 * C524 + C31650 * C538) * C114) *
                    C31664 * C104) *
                   C713 -
               ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
                C612 * C104) *
                   C715 +
               (C863 * C104 + (C867 + C866) * C31664 * C105 +
                ((C113 * C853 + C31650 * C854) * C114 +
                 (C113 * C855 + C31650 * C856) * C31467) *
                    C31664 * C106) *
                   C31775) *
                  C31572) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C1183 +
                 (C113 * C123 + C31650 * C136) * C1177 -
                 (C113 * C308 + C31650 * C318) * C1184 -
                 (C113 * C319 + C31650 * C338) * C1178 +
                 (C113 * C309 + C31650 * C320) * C1185 +
                 (C113 * C321 + C31650 * C339) * C31771) *
                    C31664 * C104 +
                (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 *
                    C105 +
                C1210 * C106) *
                   C31726 +
               ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 *
                    C104 +
                (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 *
                    C105 +
                (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 *
                    C106) *
                   C31449) *
                  C31741 +
              ((((C113 * C1013 + C31650 * C1018) * C1184 -
                 ((C113 * C537 + C31650 * C554) * C1177 +
                  (C113 * C524 + C31650 * C538) * C1183) +
                 (C113 * C1019 + C31650 * C1028) * C1178 -
                 (C113 * C1417 + C31650 * C1426) * C1185 -
                 (C113 * C1427 + C31650 * C1444) * C31771) *
                    C31664 * C104 +
                (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C31664 *
                    C105 +
                (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C31664 *
                    C106) *
                   C31726 +
               ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C31664 *
                    C104 +
                (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C31664 *
                    C105 +
                (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
                 (C113 * C1739 + C31650 * C1740) * C1185 +
                 (C113 * C1741 + C31650 * C1742) * C31771) *
                    C31664 * C106) *
                   C31449) *
                  C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31726 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31449) *
              C2459 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31449 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31726) *
              C2460 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31726 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31449) *
              C2461 +
          (((C2480 + C2481) * C31664 * C104 + (C2482 + C2483) * C31664 * C105 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C31664 * C106) *
               C31449 -
           ((C2483 + C2482) * C31664 * C106 + (C2481 + C2480) * C31664 * C105 +
            ((C113 * C2177 + C31650 * C2187) * C31467 +
             (C113 * C2169 + C31650 * C2178) * C114) *
                C31664 * C104) *
               C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C713 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C714 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C715 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C31741 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C714 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C713 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C715 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C1183 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C1177 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C1184 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C1178 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C1185 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C1184 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C1177 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C1183) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C1178 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C1185 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C1184 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C1177 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C1183) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C1178 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C1185 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C1183 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C1177 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C1184 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C1178 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C1185 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31726 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31449) *
              C2459 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31726) *
              C2460 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31726 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31449) *
              C2461 +
          (((C5039 * C2168 + C5035 * C2176 + C5040 * C2582 + C5036 * C2586 +
             C5041 * C6802 + C5037 * C6803) *
                C114 +
            (C5039 * C2175 + C5035 * C2186 + C5040 * C2587 + C5036 * C2591 +
             C5041 * C6804 + C5037 * C6805) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31467 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C114) *
               C31664 * C31425 * C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C713 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C714 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C715 -
           ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
               C31425 * C31775) *
              C31741 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C714 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C713 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C715 +
           (C858 * C9202 + (C609 + C608) * C9203 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C9204) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C9202 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C9203 +
            C10142 * C9204) *
               C31425 * C31726 +
           ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
            (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C9204) *
               C31425 * C31449) *
              C31741 +
          (((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C9202 +
            (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C9203 +
            (C10136 - (C10114 + C10115) + C10137 - C10138 - C10139) * C9204) *
               C31425 * C31726 +
           ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C9202 +
            (C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C9203 +
            (C2476 * C1183 + C2477 * C1177 -
             (C113 * C2582 + C31650 * C2586) * C1184 -
             (C113 * C2587 + C31650 * C2591) * C1178 +
             (C113 * C6802 + C31650 * C6803) * C1185 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31726 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31449) *
              C2459 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 + C11128 * C9204) *
               C31425 * C31449 -
           (C10838 * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31726) *
              C2460 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 + C10855 * C9204) * C31425 *
               C31726 -
           ((C11135 + C11136) * C9204 + (C2481 + C2480) * C9203 +
            C9434 * C9202) *
               C31425 * C31449) *
              C2461 +
          ((C11128 * C9202 + (C11136 + C11135) * C9203 +
            ((C113 * C11123 + C31650 * C11124) * C114 +
             (C113 * C11125 + C31650 * C11126) * C31467) *
                C9204) *
               C31425 * C31449 -
           ((C10853 + C10854) * C9204 + (C10852 + C10851) * C9203 +
            C10838 * C9202) *
               C31425 * C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C107 -
          (C188 * C106 + (C177 + C176) * C31664 * C105 +
           (C175 + C174) * C31664 * C104) *
              C108 +
          (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C109 -
          ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
           C188 * C104) *
              C110 +
          (C189 * C104 + (C183 + C182) * C31664 * C105 +
           ((C113 * C121 + C31650 * C134) * C114 +
            (C113 * C135 + C31650 * C142) * C31467) *
               C31664 * C106) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
           (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
           (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
              C303 +
          (C408 * C104 +
           (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
           (C170 * C305 + C171 * C31808 - (C113 * C316 + C31650 * C334) * C306 -
            (C113 * C335 + C31650 * C346) * C31796 +
            (C113 * C317 + C31650 * C336) * C307 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31805 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31792 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C1987 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31792 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31805 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31765) *
              C1988 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31805 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31792 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C31439 * C1987 +
          (((C113 * C1013 + C31650 * C1018) * C306 -
            ((C113 * C537 + C31650 * C554) * C31808 +
             (C113 * C524 + C31650 * C538) * C305) +
            (C113 * C1019 + C31650 * C1028) * C31796 -
            (C113 * C1417 + C31650 * C1426) * C307 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C306 - (C587 * C31808 + C586 * C305) + C1053 * C31796 -
            C1760 * C307 - C1761 * C31771) *
               C31664 * C105 +
           (C1054 * C306 - (C589 * C31808 + C588 * C305) + C1056 * C31796 -
            C1762 * C307 - C1763 * C31771) *
               C31664 * C106) *
              C31439 * C1988 +
          (((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C305 + C593 * C31808 -
            (C113 * C1422 + C31650 * C1436) * C306 -
            (C113 * C1437 + C31650 * C1449) * C31796 +
            (C113 * C1423 + C31650 * C1438) * C307 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C305 + C595 * C31808 -
            (C113 * C1424 + C31650 * C1440) * C306 -
            (C113 * C1441 + C31650 * C1451) * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C1987 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31792 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C1987 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C306 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31808 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C305) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31796 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C307 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C1988 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C305 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31808 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C306 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31796 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C307 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C114 +
            (C113 * C537 + C31650 * C554) * C31467) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C114 +
            (C113 * C542 + C31650 * C556) * C31467) *
               C9204) *
              C31425 * C107 -
          ((C605 + C604) * C9204 + (C599 + C598) * C9203 +
           (C175 + C174) * C9202) *
              C31425 * C108 +
          (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
              C109 -
          ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
              C31425 * C110 +
          (C186 * C9202 + (C867 + C866) * C9203 +
           ((C113 * C530 + C31650 * C549) * C114 +
            (C113 * C550 + C31650 * C560) * C31467) *
               C9204) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C305 +
            (C113 * C537 + C31650 * C554) * C31808 -
            (C113 * C1013 + C31650 * C1018) * C306 -
            (C113 * C1019 + C31650 * C1028) * C31796 +
            (C113 * C1417 + C31650 * C1426) * C307 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
           (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
           (C2354 * C306 - (C593 * C31808 + C592 * C305) + C2355 * C31796 -
            (C113 * C1423 + C31650 * C1438) * C307 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C303 +
          (C407 * C9202 +
           (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C9203 +
           (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C9439 * C1183 + C9440 * C1177 - C9806 * C1184 - C9807 * C1178 +
            (C113 * C1417 + C31650 * C1426) * C1185 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           (C9441 * C1183 + C9442 * C1177 - C9808 * C1184 - C9809 * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
           (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
           (C2354 * C1184 - (C593 * C1177 + C592 * C1183) + C2355 * C1178 -
            (C113 * C1423 + C31650 * C1438) * C1185 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C31792 +
          (C1209 * C9202 +
           (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C9203 +
           (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C9202 +
          (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
           (C113 * C1417 + C31650 * C1426) * C1280 +
           (C113 * C1427 + C31650 * C1444) * C1274 -
           (C113 * C1865 + C31650 * C1868) * C1281 -
           (C113 * C1869 + C31650 * C1874) * C1275 +
           (C113 * C5894 + C31650 * C5897) * C1282 +
           (C113 * C5898 + C31650 * C5903) * C1276) *
              C9203 +
          (C9441 * C1278 + C9442 * C1272 - C9808 * C1279 - C9809 * C1273 +
           (C113 * C1421 + C31650 * C1434) * C1280 +
           (C113 * C1435 + C31650 * C1448) * C1274 -
           (C113 * C5895 + C31650 * C5899) * C1281 -
           (C113 * C5900 + C31650 * C5904) * C1275 +
           (C113 * C5896 + C31650 * C5901) * C1282 +
           (C113 * C5902 + C31650 * C5905) * C1276) *
              C9204) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31805 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31792 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31765) *
              C1987 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C31792 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31805 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31765) *
              C1988 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 +
            ((C113 * C2170 + C31650 * C2179) * C114 +
             (C113 * C2180 + C31650 * C2188) * C31467) *
                C9204) *
               C31425 * C31805 -
           (((C113 * C2182 + C31650 * C2189) * C31467 +
             (C113 * C2171 + C31650 * C2181) * C114) *
                C9204 +
            (C2481 + C2480) * C9203 + C9434 * C9202) *
               C31425 * C31792 +
           (C611 * C9202 + (C2482 + C2483) * C9203 +
            ((C113 * C2172 + C31650 * C2183) * C114 +
             (C113 * C2184 + C31650 * C2190) * C31467) *
                C9204) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C9203 +
           C10767 * C9204) *
              C31425 * C31439 * C1987 +
          ((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C9202 +
           (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C9203 +
           (C10757 - (C10758 + C10759) + C10760 - C10761 - C10762) * C9204) *
              C31425 * C31439 * C1988 +
          (C10767 * C9202 +
           (C10759 + C10758 - C10757 - C10760 + C10761 + C10762) * C9203 +
           ((C113 * C2170 + C31650 * C2179) * C305 +
            (C113 * C2180 + C31650 * C2188) * C31808 -
            (C113 * C6543 + C31650 * C6547) * C306 -
            (C113 * C6549 + C31650 * C6552) * C31796 +
            (C113 * C6544 + C31650 * C6548) * C307 +
            (C113 * C6550 + C31650 * C6553) * C31771) *
               C9204) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C3124) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C31444 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31452 +
           (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
            (C736 + C737 - C748 - C749) * C31664 * C106) *
               C3124) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C31444 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31452 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C9794 + C9795 - C9810 - C9811) * C9203 + C11022 * C9204) *
               C31425 * C31444 +
           ((C726 - (C725 + C724) + C727) * C9202 +
            (C1059 - (C1036 + C1037) + C1060) * C9203 + C11023 * C9204) *
               C31425 * C31452 +
           (C750 * C9202 + (C1043 + C1042 - C1061 - C1062) * C9203 +
            (C2348 + C2349 - C2360 - C2361) * C9204) *
               C31425 * C3124) *
              C3562 +
          (((C9810 - (C9795 + C9794) + C9811) * C9202 +
            (C9812 - (C9801 + C9800) + C9813) * C9203 + C11249 * C9204) *
               C31425 * C31444 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C2342 + C2343 - C2358 - C2359) * C9203 +
            (C11012 + C11013 - C11024 - C11025) * C9204) *
               C31425 * C31452 +
           (C1066 * C9202 + (C2360 - (C2349 + C2348) + C2361) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C718 -
             (C2479 * C31740 + C2478 * C717) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31568 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C717 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31740 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C718 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C718 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C31740 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C717) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C2825 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31449) *
              C31568 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C2825 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31449) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C717 +
             (C113 * C542 + C31650 * C556) * C31740 -
             (C113 * C1420 + C31650 * C1432) * C718 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
            (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
               C2825 +
           ((C2358 - (C2343 + C2342) + C2359) * C31664 * C104 +
            (C2360 - (C2349 + C2348) + C2361) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C718 -
             (C596 * C31740 + C597 * C717) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C9794 + C9795 - C9810 - C9811) * C9203 + C11022 * C9204) *
               C31425 * C2825 +
           ((C726 - (C725 + C724) + C727) * C9202 +
            (C1059 - (C1036 + C1037) + C1060) * C9203 + C11023 * C9204) *
               C31425 * C31449) *
              C31568 +
          (((C9810 - (C9795 + C9794) + C9811) * C9202 +
            (C9812 - (C9801 + C9800) + C9813) * C9203 + C11249 * C9204) *
               C31425 * C2825 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C2342 + C2343 - C2358 - C2359) * C9203 +
            (C11012 + C11013 - C11024 - C11025) * C9204) *
               C31425 * C31449) *
              C31575 +
          ((C11022 * C9202 + (C11010 + C11009 - C11008 - C11011) * C9203 +
            (C11240 + C11241 - C11250 - C11251) * C9204) *
               C31425 * C2825 +
           (C11023 * C9202 + (C11024 - (C11013 + C11012) + C11025) * C9203 +
            ((C113 * C11001 + C31650 * C11002) * C718 -
             (C11133 * C31740 + C11134 * C717) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C9204) *
               C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C114 +
                 (C113 * C123 + C31650 * C136) * C31467) *
                    C31664 * C104 +
                (C174 + C175) * C31664 * C105 + C187 * C106) *
                   C31814 -
               (C188 * C106 + (C177 + C176) * C31664 * C105 +
                (C175 + C174) * C31664 * C104) *
                   C31807 +
               (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                   C31794 -
               ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
                C188 * C104) *
                   C31775) *
                  C3562 +
              (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
                C863 * C106) *
                   C31807 -
               (C612 * C106 + (C599 + C598) * C31664 * C105 +
                ((C113 * C537 + C31650 * C554) * C31467 +
                 (C113 * C524 + C31650 * C538) * C114) *
                    C31664 * C104) *
                   C31814 -
               ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
                C612 * C104) *
                   C31794 +
               (C863 * C104 + (C867 + C866) * C31664 * C105 +
                ((C113 * C853 + C31650 * C854) * C114 +
                 (C113 * C855 + C31650 * C856) * C31467) *
                    C31664 * C106) *
                   C31775) *
                  C31572) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C305 +
                 (C113 * C123 + C31650 * C136) * C31808 -
                 (C113 * C308 + C31650 * C318) * C306 -
                 (C113 * C319 + C31650 * C338) * C31796 +
                 (C113 * C309 + C31650 * C320) * C307 +
                 (C113 * C321 + C31650 * C339) * C31771) *
                    C31664 * C104 +
                (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
                C408 * C106) *
                   C2825 +
               ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
                (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
                (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
                   C31449) *
                  C3562 +
              ((((C113 * C1013 + C31650 * C1018) * C306 -
                 ((C113 * C537 + C31650 * C554) * C31808 +
                  (C113 * C524 + C31650 * C538) * C305) +
                 (C113 * C1019 + C31650 * C1028) * C31796 -
                 (C113 * C1417 + C31650 * C1426) * C307 -
                 (C113 * C1427 + C31650 * C1444) * C31771) *
                    C31664 * C104 +
                (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C31664 *
                    C105 +
                (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C31664 *
                    C106) *
                   C2825 +
               ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C31664 *
                    C104 +
                (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C31664 *
                    C105 +
                (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
                 (C113 * C1739 + C31650 * C1740) * C307 +
                 (C113 * C1741 + C31650 * C1742) * C31771) *
                    C31664 * C106) *
                   C31449) *
                  C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C2825 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31449) *
              C31816 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31449 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C2825) *
              C31813 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C2825 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31449) *
              C31804 +
          (((C2480 + C2481) * C31664 * C104 + (C2482 + C2483) * C31664 * C105 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C31664 * C106) *
               C31449 -
           ((C2483 + C2482) * C31664 * C106 + (C2481 + C2480) * C31664 * C105 +
            ((C113 * C2177 + C31650 * C2187) * C31467 +
             (C113 * C2169 + C31650 * C2178) * C114) *
                C31664 * C104) *
               C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31814 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31807 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31794 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C3562 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31807 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31814 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31794 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C305 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31808 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C306 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31796 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C307 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C306 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31808 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C305) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31796 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C307 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C306 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31808 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C305) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31796 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C307 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C305 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31808 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C306 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31796 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C307 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C2825 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31449) *
              C31816 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C2825) *
              C31813 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C2825 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31449) *
              C31804 +
          (((C5039 * C2168 + C5035 * C2176 + C5040 * C2582 + C5036 * C2586 +
             C5041 * C6802 + C5037 * C6803) *
                C114 +
            (C5039 * C2175 + C5035 * C2186 + C5040 * C2587 + C5036 * C2591 +
             C5041 * C6804 + C5037 * C6805) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31467 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C114) *
               C31664 * C31425 * C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31814 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31807 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31794 -
           ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
               C31425 * C31775) *
              C3562 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 + C11128 * C9204) *
               C31425 * C31807 -
           (C10838 * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31814 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31794 +
           (C858 * C9202 + (C609 + C608) * C9203 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C9204) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C9202 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C9203 +
            C10767 * C9204) *
               C31425 * C2825 +
           ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
            (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C9204) *
               C31425 * C31449) *
              C3562 +
          (((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C9202 +
            (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C9203 +
            (C10757 - (C10758 + C10759) + C10760 - C10761 - C10762) * C9204) *
               C31425 * C2825 +
           ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C9202 +
            (C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C9203 +
            (C2476 * C305 + C2477 * C31808 - C11020 * C306 - C11021 * C31796 +
             (C113 * C6802 + C31650 * C6803) * C307 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C2825 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31449) *
              C31816 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 + C11128 * C9204) *
               C31425 * C31449 -
           (C10838 * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C2825) *
              C31813 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 + C10855 * C9204) * C31425 *
               C2825 -
           ((C11135 + C11136) * C9204 + (C2481 + C2480) * C9203 +
            C9434 * C9202) *
               C31425 * C31449) *
              C31804 +
          ((C11128 * C9202 + (C11136 + C11135) * C9203 +
            ((C113 * C11123 + C31650 * C11124) * C114 +
             (C113 * C11125 + C31650 * C11126) * C31467) *
                C9204) *
               C31425 * C31449 -
           ((C10853 + C10854) * C9204 + (C10852 + C10851) * C9203 +
            C10838 * C9202) *
               C31425 * C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31444 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C3124) *
              C31568 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31452 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31444 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C3124) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31444 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31452 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C3124) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31444 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31452 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C3124) *
              C31568 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31452 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31444 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C3124) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31444 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31452 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C3124) *
              C4082)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31444 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31452 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C3124) *
              C31568 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 + C11128 * C9204) *
               C31425 * C31452 -
           (C10838 * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31444 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C3124) *
              C31575 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 + C10855 * C9204) * C31425 *
               C31444 -
           ((C11135 + C11136) * C9204 + (C2481 + C2480) * C9203 +
            C9434 * C9202) *
               C31425 * C31452 +
           (C611 * C9202 + (C2482 + C2483) * C9203 +
            ((C113 * C2172 + C31650 * C2183) * C114 +
             (C113 * C2184 + C31650 * C2190) * C31467) *
                C9204) *
               C31425 * C3124) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
            C408 * C106) *
               C2825 +
           ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
            (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
            (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
               C31449) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C306 -
             ((C113 * C537 + C31650 * C554) * C31808 +
              (C113 * C524 + C31650 * C538) * C305) +
             (C113 * C1019 + C31650 * C1028) * C31796 -
             (C113 * C1417 + C31650 * C1426) * C307 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C31664 * C105 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C31664 * C106) *
               C2825 +
           ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C31664 * C104 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C31664 * C105 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31814 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31807 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31794 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C3562 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31807 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31814 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31794 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31814 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31807 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31794 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C3562 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31807 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31814 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31794 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C305 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31808 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C306 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31796 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C307 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C306 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31808 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C305) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31796 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C307 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C306 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31808 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C305) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31796 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C307 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C305 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31808 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C306 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31796 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C307 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C31814 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C31807 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31794 -
           ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
               C31425 * C31775) *
              C3562 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 + C11128 * C9204) *
               C31425 * C31807 -
           (C10838 * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C31814 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31794 +
           (C858 * C9202 + (C609 + C608) * C9203 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C9204) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C9202 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C9203 +
            C10767 * C9204) *
               C31425 * C2825 +
           ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
            (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C9204) *
               C31425 * C31449) *
              C3562 +
          (((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C9202 +
            (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C9203 +
            (C10757 - (C10758 + C10759) + C10760 - C10761 - C10762) * C9204) *
               C31425 * C2825 +
           ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C9202 +
            (C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C9203 +
            (C2476 * C305 + C2477 * C31808 - C11020 * C306 - C11021 * C31796 +
             (C113 * C6802 + C31650 * C6803) * C307 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31726 +
          ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
               C31664 * C104 +
           (C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 + C1593) *
               C31664 * C105 +
           (C388 * C1558 - (C168 * C1551 + C169 * C1557) + C389 * C1552 -
            C390 * C1559 - C391 * C1553 +
            (C113 * C1561 + C31650 * C1562) * C1560 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
              C713 +
          ((C726 - (C725 + C724) + C727) * C31664 * C104 +
           (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
              C714 +
          (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
           (C736 + C737 - C748 - C749) * C31664 * C106) *
              C715 +
          (C753 * C104 + (C748 - (C737 + C736) + C749) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C718 -
            (C172 * C31740 + C173 * C717) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C713 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C718 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31740 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C717) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C717 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31740 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C718 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C715 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C718 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31740 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C717) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31726 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1558 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1551 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1557) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1552 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1559 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C1553 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C1560 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C9202 +
           (C9439 * C717 + C9440 * C31740 -
            (C113 * C1013 + C31650 * C1018) * C718 -
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C9203 +
           (C9441 * C717 + C9442 * C31740 -
            (C113 * C1420 + C31650 * C1432) * C718 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C9204) *
              C31425 * C713 +
          ((C726 - (C725 + C724) + C727) * C9202 +
           (C1059 - (C1036 + C1037) + C1060) * C9203 +
           (C2358 - (C2343 + C2342) + C2359) * C9204) *
              C31425 * C714 +
          (C750 * C9202 + (C1043 + C1042 - C1061 - C1062) * C9203 +
           (C2348 + C2349 - C2360 - C2361) * C9204) *
              C31425 * C715 +
          (C751 * C9202 + (C1063 - (C1047 + C1046) + C1064) * C9203 +
           ((C113 * C2337 + C31650 * C2338) * C718 -
            (C596 * C31740 + C597 * C717) +
            (C113 * C2339 + C31650 * C2340) * C31530) *
               C9204) *
              C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C9439 * C1557 + C9440 * C1551 - C9806 * C1558 - C9807 * C1552 +
            C10122 * C1559 + C10123 * C1553 -
            (C113 * C1865 + C31650 * C1868) * C1560 -
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C9203 +
           (C9441 * C1557 + C9442 * C1551 - C9808 * C1558 - C9809 * C1552 +
            C10125 * C1559 + C10126 * C1553 -
            (C113 * C5895 + C31650 * C5899) * C1560 -
            (C113 * C5900 + C31650 * C5904) * C31781) *
               C9204) *
              C31425 * C31726 +
          ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
               C9202 +
           (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
            C1760 * C1559 - C1761 * C1553 +
            (C113 * C1866 + C31650 * C1870) * C1560 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C9203 +
           (C2354 * C1558 - (C593 * C1551 + C592 * C1557) + C2355 * C1552 -
            (C113 * C1423 + C31650 * C1438) * C1559 -
            (C113 * C1439 + C31650 * C1450) * C1553 +
            (C113 * C6700 + C31650 * C6701) * C1560 +
            (C113 * C6702 + C31650 * C6703) * C31781) *
               C9204) *
              C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31439 * C31741 +
          (((C113 * C1013 + C31650 * C1018) * C1558 -
            ((C113 * C537 + C31650 * C554) * C1551 +
             (C113 * C524 + C31650 * C538) * C1557) +
            (C113 * C1019 + C31650 * C1028) * C1552 -
            (C113 * C1417 + C31650 * C1426) * C1559 -
            (C113 * C1427 + C31650 * C1444) * C1553 +
            (C113 * C1865 + C31650 * C1868) * C1560 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
            C1760 * C1559 - C1761 * C1553 +
            (C113 * C1866 + C31650 * C1870) * C1560 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
            C1762 * C1559 - C1763 * C1553 +
            (C113 * C1867 + C31650 * C1872) * C1560 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C302 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C303 +
           (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
            (C736 + C737 - C748 - C749) * C31664 * C106) *
               C31765) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C302 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C303 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C31741 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1558 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1551 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1557) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1552 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1559 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C1553 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C1560 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C9202 +
            (C9794 + C9795 - C9810 - C9811) * C9203 +
            (C9800 + C9801 - C9812 - C9813) * C9204) *
               C31425 * C302 +
           ((C726 - (C725 + C724) + C727) * C9202 +
            (C1059 - (C1036 + C1037) + C1060) * C9203 +
            (C2358 - (C2343 + C2342) + C2359) * C9204) *
               C31425 * C303 +
           (C750 * C9202 + (C1043 + C1042 - C1061 - C1062) * C9203 +
            (C2348 + C2349 - C2360 - C2361) * C9204) *
               C31425 * C31765) *
              C31741 +
          (((C9810 - (C9795 + C9794) + C9811) * C9202 +
            (C9812 - (C9801 + C9800) + C9813) * C9203 +
            ((C113 * C2581 + C31650 * C2584) * C718 -
             (C9443 * C31740 + C9444 * C717) +
             (C113 * C2585 + C31650 * C2590) * C31530) *
                C9204) *
               C31425 * C302 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C2342 + C2343 - C2358 - C2359) * C9203 +
            (C2476 * C717 + C2477 * C31740 -
             (C113 * C2582 + C31650 * C2586) * C718 -
             (C113 * C2587 + C31650 * C2591) * C31530) *
                C9204) *
               C31425 * C303 +
           (C1066 * C9202 + (C2360 - (C2349 + C2348) + C2361) * C9203 +
            ((C113 * C2583 + C31650 * C2588) * C718 -
             (C2479 * C31740 + C2478 * C717) +
             (C113 * C2589 + C31650 * C2592) * C31530) *
                C9204) *
               C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C9202 +
           (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
            C10522) *
               C9203 +
           (C10507 + C10508 - C10509 - C10510 + C10511 + C10512 - C10523 -
            C10524) *
               C9204) *
              C31425 * C31439 * C31741 +
          ((C10499 - (C10498 + C10497) + C10500 - C10501 - C10502 + C10521 +
            C10522) *
               C9202 +
           (C10509 - (C10508 + C10507) + C10510 - C10511 - C10512 + C10523 +
            C10524) *
               C9203 +
           (C10127 * C1558 - (C9443 * C1551 + C9444 * C1557) + C10128 * C1552 -
            C10129 * C1559 - C10130 * C1553 +
            (C113 * C6904 + C31650 * C6905) * C1560 +
            (C113 * C6906 + C31650 * C6907) * C31781) *
               C9204) *
              C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C114 +
                (C113 * C123 + C31650 * C136) * C31467) *
                   C31664 * C104 +
               (C174 + C175) * C31664 * C105 + C187 * C106) *
                  C107 -
              (C188 * C106 + (C177 + C176) * C31664 * C105 +
               (C175 + C174) * C31664 * C104) *
                  C108 +
              (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                  C109 -
              ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
               C188 * C104) *
                  C110 +
              (C189 * C104 + (C183 + C182) * C31664 * C105 +
               ((C113 * C121 + C31650 * C134) * C114 +
                (C113 * C135 + C31650 * C142) * C31467) *
                   C31664 * C106) *
                  C111) *
             C31485 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C305 +
                (C113 * C123 + C31650 * C136) * C31808 -
                (C113 * C308 + C31650 * C318) * C306 -
                (C113 * C319 + C31650 * C338) * C31796 +
                (C113 * C309 + C31650 * C320) * C307 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
               C408 * C106) *
                  C302 +
              ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
               (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
               (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
                  C303 +
              (C408 * C104 +
               (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
               (C170 * C305 + C171 * C31808 -
                (C113 * C316 + C31650 * C334) * C306 -
                (C113 * C335 + C31650 * C346) * C31796 +
                (C113 * C317 + C31650 * C336) * C307 +
                (C113 * C337 + C31650 * C347) * C31771) *
                   C31664 * C106) *
                  C31765) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C302 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C303 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C31809 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            (C602 + C603) * C31664 * C106) *
               C303 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C302 -
           (((C113 * C539 + C31650 * C555) * C31467 +
             (C113 * C525 + C31650 * C540) * C114) *
                C31664 * C106 +
            (C603 + C602) * C31664 * C105 + C612 * C104) *
               C31765) *
              C31798 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C302 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C303 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31439 * C31809 +
          (((C113 * C1013 + C31650 * C1018) * C1184 -
            ((C113 * C537 + C31650 * C554) * C1177 +
             (C113 * C524 + C31650 * C538) * C1183) +
            (C113 * C1019 + C31650 * C1028) * C1178 -
            (C113 * C1417 + C31650 * C1426) * C1185 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C1184 - (C587 * C1177 + C586 * C1183) + C1053 * C1178 -
            (C113 * C1418 + C31650 * C1428) * C1185 -
            (C113 * C1429 + C31650 * C1445) * C31771) *
               C31664 * C105 +
           (C1054 * C1184 - (C589 * C1177 + C588 * C1183) + C1056 * C1178 -
            (C113 * C1419 + C31650 * C1430) * C1185 -
            (C113 * C1431 + C31650 * C1446) * C31771) *
               C31664 * C106) *
              C31439 * C31798 +
          (((C113 * C526 + C31650 * C541) * C1183 +
            (C113 * C542 + C31650 * C556) * C1177 -
            (C113 * C1420 + C31650 * C1432) * C1184 -
            (C113 * C1433 + C31650 * C1447) * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C1183 + C593 * C1177 -
            (C113 * C1422 + C31650 * C1436) * C1184 -
            (C113 * C1437 + C31650 * C1449) * C1178 +
            (C113 * C1423 + C31650 * C1438) * C1185 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C1183 + C595 * C1177 -
            (C113 * C1424 + C31650 * C1440) * C1184 -
            (C113 * C1441 + C31650 * C1451) * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31809 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C303 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C302 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C31809 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1184 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1177 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1183) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1178 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1185 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C31798 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C1183 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C1177 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C1184 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C1178 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C1185 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C114 +
            (C113 * C537 + C31650 * C554) * C31467) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C114 +
            (C113 * C542 + C31650 * C556) * C31467) *
               C9204) *
              C31425 * C107 -
          ((C605 + C604) * C9204 + (C599 + C598) * C9203 +
           (C175 + C174) * C9202) *
              C31425 * C108 +
          (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
              C109 -
          ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
              C31425 * C110 +
          (C186 * C9202 + (C867 + C866) * C9203 +
           ((C113 * C530 + C31650 * C549) * C114 +
            (C113 * C550 + C31650 * C560) * C31467) *
               C9204) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C305 +
            (C113 * C537 + C31650 * C554) * C31808 -
            (C113 * C1013 + C31650 * C1018) * C306 -
            (C113 * C1019 + C31650 * C1028) * C31796 +
            (C113 * C1417 + C31650 * C1426) * C307 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
           (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
           (C2354 * C306 - (C593 * C31808 + C592 * C305) + C2355 * C31796 -
            (C113 * C1423 + C31650 * C1438) * C307 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C303 +
          (C407 * C9202 +
           (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C9203 +
           (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C302 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C303 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C31765) *
              C31809 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C303 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C302 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C31765) *
              C31798 +
          ((C9451 * C9202 + (C9450 + C9449) * C9203 +
            ((C113 * C2170 + C31650 * C2179) * C114 +
             (C113 * C2180 + C31650 * C2188) * C31467) *
                C9204) *
               C31425 * C302 -
           (((C113 * C2182 + C31650 * C2189) * C31467 +
             (C113 * C2171 + C31650 * C2181) * C114) *
                C9204 +
            (C2481 + C2480) * C9203 + C9434 * C9202) *
               C31425 * C303 +
           (C611 * C9202 + (C2482 + C2483) * C9203 +
            ((C113 * C2172 + C31650 * C2183) * C114 +
             (C113 * C2184 + C31650 * C2190) * C31467) *
                C9204) *
               C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C9439 * C1183 + C9440 * C1177 - C9806 * C1184 - C9807 * C1178 +
            (C113 * C1417 + C31650 * C1426) * C1185 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           (C9441 * C1183 + C9442 * C1177 - C9808 * C1184 - C9809 * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
           (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
           (C2354 * C1184 - (C593 * C1177 + C592 * C1183) + C2355 * C1178 -
            (C113 * C1423 + C31650 * C1438) * C1185 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C31792 +
          (C1209 * C9202 +
           (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C9203 +
           (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C9202 +
          (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
           (C113 * C1417 + C31650 * C1426) * C1280 +
           (C113 * C1427 + C31650 * C1444) * C1274 -
           (C113 * C1865 + C31650 * C1868) * C1281 -
           (C113 * C1869 + C31650 * C1874) * C1275 +
           (C113 * C5894 + C31650 * C5897) * C1282 +
           (C113 * C5898 + C31650 * C5903) * C1276) *
              C9203 +
          (C9441 * C1278 + C9442 * C1272 - C9808 * C1279 - C9809 * C1273 +
           (C113 * C1421 + C31650 * C1434) * C1280 +
           (C113 * C1435 + C31650 * C1448) * C1274 -
           (C113 * C5895 + C31650 * C5899) * C1281 -
           (C113 * C5900 + C31650 * C5904) * C1275 +
           (C113 * C5896 + C31650 * C5901) * C1282 +
           (C113 * C5902 + C31650 * C5905) * C1276) *
              C9204) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C9203 +
           C10142 * C9204) *
              C31425 * C31439 * C31809 +
          ((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C9202 +
           (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C9203 +
           (C10136 - (C10114 + C10115) + C10137 - C10138 - C10139) * C9204) *
              C31425 * C31439 * C31798 +
          (C10142 * C9202 +
           (C10115 + C10114 - C10136 - C10137 + C10138 + C10139) * C9203 +
           ((C113 * C2170 + C31650 * C2179) * C1183 +
            (C113 * C2180 + C31650 * C2188) * C1177 -
            (C113 * C6543 + C31650 * C6547) * C1184 -
            (C113 * C6549 + C31650 * C6552) * C1178 +
            (C113 * C6544 + C31650 * C6548) * C1185 +
            (C113 * C6550 + C31650 * C6553) * C31771) *
               C9204) *
              C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
            C1210 * C106) *
               C31726 +
           ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
            (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
            (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
               C31449) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C1184 -
             ((C113 * C537 + C31650 * C554) * C1177 +
              (C113 * C524 + C31650 * C538) * C1183) +
             (C113 * C1019 + C31650 * C1028) * C1178 -
             (C113 * C1417 + C31650 * C1426) * C1185 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C31664 * C105 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C31664 * C106) *
               C31726 +
           ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C31664 * C104 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C31664 * C105 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C713 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C714 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C715 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C31741 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C714 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C713 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C715 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C713 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C714 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C715 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C31741 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C714 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C713 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C715 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C1183 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C1177 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C1184 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C1178 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C1185 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C1184 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C1177 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C1183) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C1178 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C1185 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C1184 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C1177 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C1183) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C1178 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C1185 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C1183 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C1177 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C1184 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C1178 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C1185 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C9202 +
            (C9445 + C9446) * C9203 + C9451 * C9204) *
               C31425 * C713 -
           (C9434 * C9204 + (C599 + C598) * C9203 + (C175 + C174) * C9202) *
               C31425 * C714 +
           (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
               C715 -
           ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
               C31425 * C31775) *
              C31741 +
          (((C598 + C599) * C9202 + (C604 + C605) * C9203 +
            (C2480 + C2481) * C9204) *
               C31425 * C714 -
           ((C9449 + C9450) * C9204 + (C9448 + C9447) * C9203 +
            (C9446 + C9445) * C9202) *
               C31425 * C713 -
           ((C2483 + C2482) * C9204 + (C607 + C606) * C9203 + C610 * C9202) *
               C31425 * C715 +
           (C858 * C9202 + (C609 + C608) * C9203 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C9204) *
               C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C9202 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C9203 +
            C10142 * C9204) *
               C31425 * C31726 +
           ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
            (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C9204) *
               C31425 * C31449) *
              C31741 +
          (((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C9202 +
            (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C9203 +
            (C10136 - (C10114 + C10115) + C10137 - C10138 - C10139) * C9204) *
               C31425 * C31726 +
           ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C9202 +
            (C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C9203 +
            (C2476 * C1183 + C2477 * C1177 -
             (C113 * C2582 + C31650 * C2586) * C1184 -
             (C113 * C2587 + C31650 * C2591) * C1178 +
             (C113 * C6802 + C31650 * C6803) * C1185 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C9204) *
               C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
           (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
           (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
              C303 +
          (C408 * C104 +
           (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
           (C170 * C305 + C171 * C31808 - (C113 * C316 + C31650 * C334) * C306 -
            (C113 * C335 + C31650 * C346) * C31796 +
            (C113 * C317 + C31650 * C336) * C307 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C107 -
          (C188 * C106 + (C177 + C176) * C31664 * C105 +
           (C175 + C174) * C31664 * C104) *
              C108 +
          (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C109 -
          ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
           C188 * C104) *
              C110 +
          (C189 * C104 + (C183 + C182) * C31664 * C105 +
           ((C113 * C121 + C31650 * C134) * C114 +
            (C113 * C135 + C31650 * C142) * C31467) *
               C31664 * C106) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C114 +
            (C113 * C537 + C31650 * C554) * C31467) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C114 +
            (C113 * C542 + C31650 * C556) * C31467) *
               C9204) *
              C31425 * C107 -
          ((C605 + C604) * C9204 + (C599 + C598) * C9203 +
           (C175 + C174) * C9202) *
              C31425 * C108 +
          (C184 * C9202 + (C600 + C601) * C9203 + C611 * C9204) * C31425 *
              C109 -
          ((C608 + C609) * C9204 + (C603 + C602) * C9203 + C185 * C9202) *
              C31425 * C110 +
          (C186 * C9202 + (C867 + C866) * C9203 +
           ((C113 * C530 + C31650 * C549) * C114 +
            (C113 * C550 + C31650 * C560) * C31467) *
               C9204) *
              C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           ((C113 * C524 + C31650 * C538) * C305 +
            (C113 * C537 + C31650 * C554) * C31808 -
            (C113 * C1013 + C31650 * C1018) * C306 -
            (C113 * C1019 + C31650 * C1028) * C31796 +
            (C113 * C1417 + C31650 * C1426) * C307 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           ((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C9202 +
           (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C9203 +
           (C2354 * C306 - (C593 * C31808 + C592 * C305) + C2355 * C31796 -
            (C113 * C1423 + C31650 * C1438) * C307 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C303 +
          (C407 * C9202 +
           (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C9203 +
           (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C9202 +
           (C9439 * C1183 + C9440 * C1177 - C9806 * C1184 - C9807 * C1178 +
            (C113 * C1417 + C31650 * C1426) * C1185 +
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C9203 +
           (C9441 * C1183 + C9442 * C1177 - C9808 * C1184 - C9809 * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C9204) *
              C31425 * C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C9202 +
           (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C9203 +
           (C2354 * C1184 - (C593 * C1177 + C592 * C1183) + C2355 * C1178 -
            (C113 * C1423 + C31650 * C1438) * C1185 -
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C9204) *
              C31425 * C31792 +
          (C1209 * C9202 +
           (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C9203 +
           (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C9204) *
              C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C9202 +
          (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
           (C113 * C1417 + C31650 * C1426) * C1280 +
           (C113 * C1427 + C31650 * C1444) * C1274 -
           (C113 * C1865 + C31650 * C1868) * C1281 -
           (C113 * C1869 + C31650 * C1874) * C1275 +
           (C113 * C5894 + C31650 * C5897) * C1282 +
           (C113 * C5898 + C31650 * C5903) * C1276) *
              C9203 +
          (C9441 * C1278 + C9442 * C1272 - C9808 * C1279 - C9809 * C1273 +
           (C113 * C1421 + C31650 * C1434) * C1280 +
           (C113 * C1435 + C31650 * C1448) * C1274 -
           (C113 * C5895 + C31650 * C5899) * C1281 -
           (C113 * C5900 + C31650 * C5904) * C1275 +
           (C113 * C5896 + C31650 * C5901) * C1282 +
           (C113 * C5902 + C31650 * C5905) * C1276) *
              C9204) *
         C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C19339 +
            (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C19340) *
               C13647 +
           ((C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C19339 +
            (C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C19340) *
               C13648) *
              C31444 +
          (((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C19339 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C19340) *
               C13647 +
           ((C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C19339 +
            (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C19340) *
               C13648) *
              C31452 +
          ((C3151 * C19339 +
            (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C19340) *
               C13647 +
           ((C3143 + C3142 - C3141 - C3144 + C3145 + C3146) * C19339 +
            (C590 * C30451 + C591 * C31526 - C1057 * C30443 - C1058 * C31533 +
             (C113 * C1739 + C31650 * C1740) * C30457 +
             (C113 * C1741 + C31650 * C1742) * C3121) *
                C19340) *
               C13648) *
              C3124) *
         C31485) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C30451 +
              (C113 * C123 + C31650 * C136) * C31526 -
              (C113 * C308 + C31650 * C318) * C30443 -
              (C113 * C319 + C31650 * C338) * C31533 +
              (C113 * C309 + C31650 * C320) * C30457 +
              (C113 * C321 + C31650 * C339) * C3121) *
                 C19339 +
             (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C19340) *
                C13647 +
            ((C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C19339 +
             C22803 * C19340) *
                C13648) *
               C2825 +
           (((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C19339 +
             C22804 * C19340) *
                C13647 +
            ((C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C19339 +
             (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C19340) *
                C13648) *
               C31449) *
              C31741 +
          ((((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C19339 +
             (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C19340) *
                C13647 +
            (C22804 * C19339 +
             (C12030 - (C12031 + C12032) + C12033 - C12034 - C12035) * C19340) *
                C13648) *
               C2825 +
           ((C22803 * C19339 +
             (C12032 + C12031 - C12030 - C12033 + C12034 + C12035) * C19340) *
                C13647 +
            ((C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C19339 +
             (C594 * C30451 + C595 * C31526 - C2356 * C30443 - C2357 * C31533 +
              (C113 * C1425 + C31650 * C1442) * C30457 +
              (C113 * C1443 + C31650 * C1452) * C3121) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2827 +
             (C113 * C123 + C31650 * C136) * C31815 -
             (C113 * C308 + C31650 * C318) * C2828 -
             (C113 * C319 + C31650 * C338) * C31811 +
             (C113 * C309 + C31650 * C320) * C2829 +
             (C113 * C321 + C31650 * C339) * C31801 -
             (C113 * C1283 + C31650 * C1289) * C2830 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
             C13037) *
                C19340) *
               C13647 +
           ((C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                C19339 +
            (C22047 + C22048 - C22049 - C22050 + C22051 + C22052 - C22053 -
             C22054) *
                C19340) *
               C13648) *
              C2825 +
          (((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
                C19339 +
            (C22049 - (C22048 + C22047) + C22050 - C22051 - C22052 + C22053 +
             C22054) *
                C19340) *
               C13647 +
           ((C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 + C2847) *
                C19339 +
            (C1054 * C2828 - (C589 * C31815 + C588 * C2827) + C1056 * C31811 -
             C1762 * C2829 - C1763 * C31801 +
             (C113 * C1867 + C31650 * C1872) * C2830 +
             (C113 * C1873 + C31650 * C1876) * C31781) *
                C19340) *
               C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C11594 + C11595 - C11596 - C11597) * C19340) *
               C13647 +
           ((C2700 + C2701 - C2702 - C2703) * C19339 +
            (C2996 + C2995 - C2994 - C2997) * C19340) *
               C13648) *
              C31814 +
          (((C2702 - (C2701 + C2700) + C2703) * C19339 +
            (C2994 - (C2995 + C2996) + C2997) * C19340) *
               C13647 +
           ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
               C13648) *
              C31807 +
          ((C2720 * C19339 + (C3000 + C2999 - C2998 - C3001) * C19340) *
               C13647 +
           ((C2710 + C2709 - C2708 - C2711) * C19339 +
            (C3300 + C3301 - C3302 - C3303) * C19340) *
               C13648) *
              C31794 +
          ((C2721 * C19339 + (C3302 - (C3301 + C3300) + C3303) * C19340) *
               C13647 +
           ((C2714 - (C2713 + C2712) + C2715) * C19339 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C19340) *
               C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C2697 +
              (C113 * C123 + C31650 * C136) * C2691 -
              (C113 * C308 + C31650 * C318) * C2698 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C11594 + C11595 - C11596 - C11597) * C19340) *
                C13647 +
            ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
                C13648) *
               C2825 +
           (((C2702 - (C2701 + C2700) + C2703) * C19339 + C22256 * C19340) *
                C13647 +
            ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
                C13648) *
               C31449) *
              C31809 +
          ((((C11596 - (C11595 + C11594) + C11597) * C19339 +
             (C11600 - (C11599 + C11598) + C11601) * C19340) *
                C13647 +
            (C22256 * C19339 + C11614 * C19340) * C13648) *
               C2825 +
           ((C22255 * C19339 + C22257 * C19340) * C13647 +
            ((C3000 + C2999 - C2998 - C3001) * C19339 +
             (C3006 + C3007 - C3008 - C3009) * C19340) *
                C13648) *
               C31449) *
              C31798 +
          (((C11615 * C19339 + (C11605 + C11604 - C11603 - C11606) * C19340) *
                C13647 +
            (C22257 * C19339 + (C11607 + C11608 - C11609 - C11610) * C19340) *
                C13648) *
               C2825 +
           ((C11614 * C19339 + (C11609 - (C11608 + C11607) + C11610) * C19340) *
                C13647 +
            ((C3008 - (C3007 + C3006) + C3009) * C19339 +
             ((C113 * C2583 + C31650 * C2588) * C2698 -
              (C2479 * C2691 + C2478 * C2697) +
              (C113 * C2589 + C31650 * C2592) * C31530) *
                 C19340) *
                C13648) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C2697 +
              (C113 * C123 + C31650 * C136) * C2691 -
              (C113 * C308 + C31650 * C318) * C2698 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C11594 + C11595 - C11596 - C11597) * C19340) *
                C13647 +
            ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
                C13648) *
               C31444 +
           (((C2702 - (C2701 + C2700) + C2703) * C19339 + C22256 * C19340) *
                C13647 +
            ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
                C13648) *
               C31452 +
           ((C2720 * C19339 + C22600 * C19340) * C13647 +
            ((C2710 + C2709 - C2708 - C2711) * C19339 +
             (C3300 + C3301 - C3302 - C3303) * C19340) *
                C13648) *
               C3124) *
              C31741 +
          ((((C11596 - (C11595 + C11594) + C11597) * C19339 +
             (C11600 - (C11599 + C11598) + C11601) * C19340) *
                C13647 +
            (C22256 * C19339 + C11614 * C19340) * C13648) *
               C31444 +
           ((C22255 * C19339 + C22257 * C19340) * C13647 +
            (C22600 * C19339 + (C3006 + C3007 - C3008 - C3009) * C19340) *
                C13648) *
               C31452 +
           ((C3305 * C19339 + (C3008 - (C3007 + C3006) + C3009) * C19340) *
                C13647 +
            ((C3302 - (C3301 + C3300) + C3303) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C2698 -
              (C596 * C2691 + C597 * C2697) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C11594 + C11595 - C11596 - C11597) * C19340) *
               C13647 +
           ((C2700 + C2701 - C2702 - C2703) * C19339 +
            (C2996 + C2995 - C2994 - C2997) * C19340) *
               C13648) *
              C31814 +
          (((C2702 - (C2701 + C2700) + C2703) * C19339 +
            (C2994 - (C2995 + C2996) + C2997) * C19340) *
               C13647 +
           ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
               C13648) *
              C31807 +
          ((C2720 * C19339 + (C3000 + C2999 - C2998 - C3001) * C19340) *
               C13647 +
           ((C2710 + C2709 - C2708 - C2711) * C19339 +
            (C3300 + C3301 - C3302 - C3303) * C19340) *
               C13648) *
              C31794 +
          ((C2721 * C19339 + (C3302 - (C3301 + C3300) + C3303) * C19340) *
               C13647 +
           ((C2714 - (C2713 + C2712) + C2715) * C19339 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C19340) *
               C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2827 +
             (C113 * C123 + C31650 * C136) * C31815 -
             (C113 * C308 + C31650 * C318) * C2828 -
             (C113 * C319 + C31650 * C338) * C31811 +
             (C113 * C309 + C31650 * C320) * C2829 +
             (C113 * C321 + C31650 * C339) * C31801 -
             (C113 * C1283 + C31650 * C1289) * C2830 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
             C13037) *
                C19340) *
               C13647 +
           ((C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                C19339 +
            (C22047 + C22048 - C22049 - C22050 + C22051 + C22052 - C22053 -
             C22054) *
                C19340) *
               C13648) *
              C2825 +
          (((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
                C19339 +
            (C22049 - (C22048 + C22047) + C22050 - C22051 - C22052 + C22053 +
             C22054) *
                C19340) *
               C13647 +
           ((C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 + C2847) *
                C19339 +
            (C1054 * C2828 - (C589 * C31815 + C588 * C2827) + C1056 * C31811 -
             C1762 * C2829 - C1763 * C31801 +
             (C113 * C1867 + C31650 * C1872) * C2830 +
             (C113 * C1873 + C31650 * C1876) * C31781) *
                C19340) *
               C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C30451 +
              (C113 * C123 + C31650 * C136) * C31526 -
              (C113 * C308 + C31650 * C318) * C30443 -
              (C113 * C319 + C31650 * C338) * C31533 +
              (C113 * C309 + C31650 * C320) * C30457 +
              (C113 * C321 + C31650 * C339) * C3121) *
                 C19339 +
             (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C19340) *
                C13647 +
            ((C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C19339 +
             C22803 * C19340) *
                C13648) *
               C31726 +
           (((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C19339 +
             C22804 * C19340) *
                C13647 +
            ((C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C19339 +
             (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C19340) *
                C13648) *
               C31449) *
              C3562 +
          ((((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C19339 +
             (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C19340) *
                C13647 +
            (C22804 * C19339 +
             (C12030 - (C12031 + C12032) + C12033 - C12034 - C12035) * C19340) *
                C13648) *
               C31726 +
           ((C22803 * C19339 +
             (C12032 + C12031 - C12030 - C12033 + C12034 + C12035) * C19340) *
                C13647 +
            ((C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C19339 +
             (C594 * C30451 + C595 * C31526 - C2356 * C30443 - C2357 * C31533 +
              (C113 * C1425 + C31650 * C1442) * C30457 +
              (C113 * C1443 + C31650 * C1452) * C3121) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C19339 +
            (C12018 + C12019 - C12020 - C12021 + C12022 + C12023) * C19340) *
               C13647 +
           ((C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C19339 +
            C22803 * C19340) *
               C13648) *
              C31439 * C31568 +
          (((C12020 - (C12019 + C12018) + C12021 - C12022 - C12023) * C19339 +
            (C12026 - (C12025 + C12024) + C12027 - C12028 - C12029) * C19340) *
               C13647 +
           (C22804 * C19339 +
            (C12030 - (C12031 + C12032) + C12033 - C12034 - C12035) * C19340) *
               C13648) *
              C31439 * C31575 +
          ((C13563 * C19339 +
            (C13556 + C13555 - C13554 - C13557 + C13558 + C13559) * C19340) *
               C13647 +
           ((C12032 + C12031 - C12030 - C12033 + C12034 + C12035) * C19339 +
            (C2476 * C30451 + C2477 * C31526 - C11020 * C30443 -
             C11021 * C31533 + (C113 * C6802 + C31650 * C6803) * C30457 +
             (C113 * C6804 + C31650 * C6805) * C3121) *
                C19340) *
               C13648) *
              C31439 * C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2827 +
             (C113 * C123 + C31650 * C136) * C31815 -
             (C113 * C308 + C31650 * C318) * C2828 -
             (C113 * C319 + C31650 * C338) * C31811 +
             (C113 * C309 + C31650 * C320) * C2829 +
             (C113 * C321 + C31650 * C339) * C31801 -
             (C113 * C1283 + C31650 * C1289) * C2830 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
             C13037) *
                C19340) *
               C13647 +
           ((C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                C19339 +
            (C22047 + C22048 - C22049 - C22050 + C22051 + C22052 - C22053 -
             C22054) *
                C19340) *
               C13648) *
              C31439 * C3562 +
          (((C13032 - (C13031 + C13030) + C13033 - C13034 - C13035 + C13036 +
             C13037) *
                C19339 +
            (C13040 - (C13039 + C13038) + C13041 - C13042 - C13043 + C13044 +
             C13045) *
                C19340) *
               C13647 +
           ((C22049 - (C22048 + C22047) + C22050 - C22051 - C22052 + C22053 +
             C22054) *
                C19339 +
            (C2354 * C2828 - (C593 * C31815 + C592 * C2827) + C2355 * C31811 -
             C10395 * C2829 - C10396 * C31801 +
             (C113 * C6700 + C31650 * C6701) * C2830 +
             (C113 * C6702 + C31650 * C6703) * C31781) *
                C19340) *
               C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C2697 +
              (C113 * C123 + C31650 * C136) * C2691 -
              (C113 * C308 + C31650 * C318) * C2698 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C11594 + C11595 - C11596 - C11597) * C19340) *
                C13647 +
            ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
                C13648) *
               C31805 +
           (((C2702 - (C2701 + C2700) + C2703) * C19339 + C22256 * C19340) *
                C13647 +
            ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
                C13648) *
               C31792 +
           ((C2720 * C19339 + C22600 * C19340) * C13647 +
            ((C2710 + C2709 - C2708 - C2711) * C19339 +
             (C3300 + C3301 - C3302 - C3303) * C19340) *
                C13648) *
               C31765) *
              C3562 +
          ((((C11596 - (C11595 + C11594) + C11597) * C19339 +
             (C11600 - (C11599 + C11598) + C11601) * C19340) *
                C13647 +
            (C22256 * C19339 + C11614 * C19340) * C13648) *
               C31805 +
           ((C22255 * C19339 + C22257 * C19340) * C13647 +
            (C22600 * C19339 + (C3006 + C3007 - C3008 - C3009) * C19340) *
                C13648) *
               C31792 +
           ((C3305 * C19339 + (C3008 - (C3007 + C3006) + C3009) * C19340) *
                C13647 +
            ((C3302 - (C3301 + C3300) + C3303) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C2698 -
              (C596 * C2691 + C597 * C2697) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C11594 + C11595 - C11596 - C11597) * C19340) *
               C13647 +
           ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
               C13648) *
              C31439 * C31816 +
          (((C11596 - (C11595 + C11594) + C11597) * C19339 +
            (C11600 - (C11599 + C11598) + C11601) * C19340) *
               C13647 +
           (C22256 * C19339 + C11614 * C19340) * C13648) *
              C31439 * C31813 +
          ((C11615 * C19339 + (C11605 + C11604 - C11603 - C11606) * C19340) *
               C13647 +
           (C22257 * C19339 + (C11607 + C11608 - C11609 - C11610) * C19340) *
               C13648) *
              C31439 * C31804 +
          ((C13150 * C19339 + (C13147 - (C13146 + C13145) + C13148) * C19340) *
               C13647 +
           ((C11609 - (C11608 + C11607) + C11610) * C19339 +
            ((C113 * C11001 + C31650 * C11002) * C2698 -
             (C11133 * C2691 + C11134 * C2697) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C19340) *
               C13648) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C2697 +
              (C113 * C123 + C31650 * C136) * C2691 -
              (C113 * C308 + C31650 * C318) * C2698 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C11594 + C11595 - C11596 - C11597) * C19340) *
                C13647 +
            ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
                C13648) *
               C31726 +
           (((C2702 - (C2701 + C2700) + C2703) * C19339 + C22256 * C19340) *
                C13647 +
            ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
                C13648) *
               C31449) *
              C31568 +
          ((((C11596 - (C11595 + C11594) + C11597) * C19339 +
             (C11600 - (C11599 + C11598) + C11601) * C19340) *
                C13647 +
            (C22256 * C19339 + C11614 * C19340) * C13648) *
               C31726 +
           ((C22255 * C19339 + C22257 * C19340) * C13647 +
            (C22600 * C19339 + (C3006 + C3007 - C3008 - C3009) * C19340) *
                C13648) *
               C31449) *
              C31575 +
          (((C11615 * C19339 + (C11605 + C11604 - C11603 - C11606) * C19340) *
                C13647 +
            (C22257 * C19339 + (C11607 + C11608 - C11609 - C11610) * C19340) *
                C13648) *
               C31726 +
           ((C11614 * C19339 + (C11609 - (C11608 + C11607) + C11610) * C19340) *
                C13647 +
            ((C3008 - (C3007 + C3006) + C3009) * C19339 +
             ((C113 * C2583 + C31650 * C2588) * C2698 -
              (C2479 * C2691 + C2478 * C2697) +
              (C113 * C2589 + C31650 * C2592) * C31530) *
                 C19340) *
                C13648) *
               C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C2697 +
              (C113 * C123 + C31650 * C136) * C2691 -
              (C113 * C308 + C31650 * C318) * C2698 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C11594 + C11595 - C11596 - C11597) * C19340) *
                C13647 +
            ((C2700 + C2701 - C2702 - C2703) * C19339 + C22255 * C19340) *
                C13648) *
               C31805 +
           (((C2702 - (C2701 + C2700) + C2703) * C19339 + C22256 * C19340) *
                C13647 +
            ((C2706 - (C2705 + C2704) + C2707) * C19339 + C3305 * C19340) *
                C13648) *
               C31792 +
           ((C2720 * C19339 + C22600 * C19340) * C13647 +
            ((C2710 + C2709 - C2708 - C2711) * C19339 +
             (C3300 + C3301 - C3302 - C3303) * C19340) *
                C13648) *
               C31765) *
              C3562 +
          ((((C11596 - (C11595 + C11594) + C11597) * C19339 +
             (C11600 - (C11599 + C11598) + C11601) * C19340) *
                C13647 +
            (C22256 * C19339 + C11614 * C19340) * C13648) *
               C31805 +
           ((C22255 * C19339 + C22257 * C19340) * C13647 +
            (C22600 * C19339 + (C3006 + C3007 - C3008 - C3009) * C19340) *
                C13648) *
               C31792 +
           ((C3305 * C19339 + (C3008 - (C3007 + C3006) + C3009) * C19340) *
                C13647 +
            ((C3302 - (C3301 + C3300) + C3303) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C2698 -
              (C596 * C2691 + C597 * C2697) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2827 +
             (C113 * C123 + C31650 * C136) * C31815 -
             (C113 * C308 + C31650 * C318) * C2828 -
             (C113 * C319 + C31650 * C338) * C31811 +
             (C113 * C309 + C31650 * C320) * C2829 +
             (C113 * C321 + C31650 * C339) * C31801 -
             (C113 * C1283 + C31650 * C1289) * C2830 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C13030 + C13031 - C13032 - C13033 + C13034 + C13035 - C13036 -
             C13037) *
                C19340) *
               C13647 +
           ((C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
                C19339 +
            (C22047 + C22048 - C22049 - C22050 + C22051 + C22052 - C22053 -
             C22054) *
                C19340) *
               C13648) *
              C31439 * C3562 +
          (((C13032 - (C13031 + C13030) + C13033 - C13034 - C13035 + C13036 +
             C13037) *
                C19339 +
            (C13040 - (C13039 + C13038) + C13041 - C13042 - C13043 + C13044 +
             C13045) *
                C19340) *
               C13647 +
           ((C22049 - (C22048 + C22047) + C22050 - C22051 - C22052 + C22053 +
             C22054) *
                C19339 +
            (C2354 * C2828 - (C593 * C31815 + C592 * C2827) + C2355 * C31811 -
             C10395 * C2829 - C10396 * C31801 +
             (C113 * C6700 + C31650 * C6701) * C2830 +
             (C113 * C6702 + C31650 * C6703) * C31781) *
                C19340) *
               C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1557 +
             (C113 * C123 + C31650 * C136) * C1551 -
             (C113 * C308 + C31650 * C318) * C1558 -
             (C113 * C319 + C31650 * C338) * C1552 +
             (C113 * C309 + C31650 * C320) * C1559 +
             (C113 * C321 + C31650 * C339) * C1553 -
             (C113 * C1283 + C31650 * C1289) * C1560 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
             C10522) *
                C19340) *
               C13647 +
           ((C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                C19339 +
            (C20607 + C20608 - C20609 - C20610 + C20611 + C20612 - C20619 -
             C20620) *
                C19340) *
               C13648) *
              C31726 +
          (((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
                C19339 +
            (C20609 - (C20608 + C20607) + C20610 - C20611 - C20612 + C20619 +
             C20620) *
                C19340) *
               C13647 +
           ((C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 + C1593) *
                C19339 +
            (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
             C1762 * C1559 - C1763 * C1553 +
             (C113 * C1867 + C31650 * C1872) * C1560 +
             (C113 * C1873 + C31650 * C1876) * C31781) *
                C19340) *
               C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C9794 + C9795 - C9810 - C9811) * C19340) *
               C13647 +
           ((C724 + C725 - C726 - C727) * C19339 +
            (C1037 + C1036 - C1059 - C1060) * C19340) *
               C13648) *
              C713 +
          (((C726 - (C725 + C724) + C727) * C19339 +
            (C1059 - (C1036 + C1037) + C1060) * C19340) *
               C13647 +
           ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) * C13648) *
              C714 +
          ((C750 * C19339 + (C1043 + C1042 - C1061 - C1062) * C19340) * C13647 +
           ((C734 + C733 - C732 - C735) * C19339 +
            (C1046 + C1047 - C1063 - C1064) * C19340) *
               C13648) *
              C715 +
          ((C751 * C19339 + (C1063 - (C1047 + C1046) + C1064) * C19340) *
               C13647 +
           ((C748 - (C737 + C736) + C749) * C19339 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C19340) *
               C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C717 +
              (C113 * C123 + C31650 * C136) * C31740 -
              (C113 * C308 + C31650 * C318) * C718 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C9794 + C9795 - C9810 - C9811) * C19340) *
                C13647 +
            ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
               C31726 +
           (((C726 - (C725 + C724) + C727) * C19339 + C20101 * C19340) *
                C13647 +
            ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) *
                C13648) *
               C31449) *
              C1987 +
          ((((C9810 - (C9795 + C9794) + C9811) * C19339 +
             (C9812 - (C9801 + C9800) + C9813) * C19340) *
                C13647 +
            (C20101 * C19339 + C11023 * C19340) * C13648) *
               C31726 +
           ((C20100 * C19339 + C21525 * C19340) * C13647 +
            (C20102 * C19339 + (C2348 + C2349 - C2360 - C2361) * C19340) *
                C13648) *
               C31449) *
              C1988 +
          (((C11022 * C19339 + (C11010 + C11009 - C11008 - C11011) * C19340) *
                C13647 +
            (C21525 * C19339 + (C11012 + C11013 - C11024 - C11025) * C19340) *
                C13648) *
               C31726 +
           ((C11023 * C19339 + (C11024 - (C11013 + C11012) + C11025) * C19340) *
                C13647 +
            ((C2360 - (C2349 + C2348) + C2361) * C19339 +
             ((C113 * C2583 + C31650 * C2588) * C718 -
              (C2479 * C31740 + C2478 * C717) +
              (C113 * C2589 + C31650 * C2592) * C31530) *
                 C19340) *
                C13648) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1557 +
             (C113 * C123 + C31650 * C136) * C1551 -
             (C113 * C308 + C31650 * C318) * C1558 -
             (C113 * C319 + C31650 * C338) * C1552 +
             (C113 * C309 + C31650 * C320) * C1559 +
             (C113 * C321 + C31650 * C339) * C1553 -
             (C113 * C1283 + C31650 * C1289) * C1560 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
             C10522) *
                C19340) *
               C13647 +
           ((C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                C19339 +
            (C20607 + C20608 - C20609 - C20610 + C20611 + C20612 - C20619 -
             C20620) *
                C19340) *
               C13648) *
              C31439 * C31741 +
          (((C10499 - (C10498 + C10497) + C10500 - C10501 - C10502 + C10521 +
             C10522) *
                C19339 +
            (C10509 - (C10508 + C10507) + C10510 - C10511 - C10512 + C10523 +
             C10524) *
                C19340) *
               C13647 +
           ((C20609 - (C20608 + C20607) + C20610 - C20611 - C20612 + C20619 +
             C20620) *
                C19339 +
            (C2354 * C1558 - (C593 * C1551 + C592 * C1557) + C2355 * C1552 -
             C10395 * C1559 - C10396 * C1553 +
             (C113 * C6700 + C31650 * C6701) * C1560 +
             (C113 * C6702 + C31650 * C6703) * C31781) *
                C19340) *
               C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C717 +
              (C113 * C123 + C31650 * C136) * C31740 -
              (C113 * C308 + C31650 * C318) * C718 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C9794 + C9795 - C9810 - C9811) * C19340) *
                C13647 +
            ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
               C302 +
           (((C726 - (C725 + C724) + C727) * C19339 + C20101 * C19340) *
                C13647 +
            ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) *
                C13648) *
               C303 +
           ((C750 * C19339 + C20102 * C19340) * C13647 +
            ((C734 + C733 - C732 - C735) * C19339 +
             (C1046 + C1047 - C1063 - C1064) * C19340) *
                C13648) *
               C31765) *
              C31741 +
          ((((C9810 - (C9795 + C9794) + C9811) * C19339 +
             (C9812 - (C9801 + C9800) + C9813) * C19340) *
                C13647 +
            (C20101 * C19339 + C11023 * C19340) * C13648) *
               C302 +
           ((C20100 * C19339 + (C2342 + C2343 - C2358 - C2359) * C19340) *
                C13647 +
            (C20102 * C19339 + (C2348 + C2349 - C2360 - C2361) * C19340) *
                C13648) *
               C303 +
           ((C1066 * C19339 + (C2360 - (C2349 + C2348) + C2361) * C19340) *
                C13647 +
            ((C1063 - (C1047 + C1046) + C1064) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C718 -
              (C596 * C31740 + C597 * C717) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C9794 + C9795 - C9810 - C9811) * C19340) *
               C13647 +
           ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
              C31439 * C2459 +
          (((C9810 - (C9795 + C9794) + C9811) * C19339 +
            (C9812 - (C9801 + C9800) + C9813) * C19340) *
               C13647 +
           (C20101 * C19339 + C11023 * C19340) * C13648) *
              C31439 * C2460 +
          ((C11022 * C19339 + (C11010 + C11009 - C11008 - C11011) * C19340) *
               C13647 +
           (C21525 * C19339 + (C11012 + C11013 - C11024 - C11025) * C19340) *
               C13648) *
              C31439 * C2461 +
          ((C11249 * C19339 + (C11250 - (C11241 + C11240) + C11251) * C19340) *
               C13647 +
           ((C11024 - (C11013 + C11012) + C11025) * C19339 +
            ((C113 * C11001 + C31650 * C11002) * C718 -
             (C11133 * C31740 + C11134 * C717) +
             (C113 * C11003 + C31650 * C11004) * C31530) *
                C19340) *
               C13648) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C114 +
                 (C113 * C123 + C31650 * C136) * C31467) *
                    C19339 +
                (C9445 + C9446) * C19340) *
                   C13647 +
               ((C174 + C175) * C19339 + (C598 + C599) * C19340) * C13648) *
                  C107 -
              ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
               ((C599 + C598) * C19340 + (C175 + C174) * C19339) * C13647) *
                  C108 +
              ((C184 * C19339 + (C600 + C601) * C19340) * C13647 +
               ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
                  C109 -
              (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
               ((C603 + C602) * C19340 + C185 * C19339) * C13647) *
                  C110 +
              ((C186 * C19339 + (C867 + C866) * C19340) * C13647 +
               ((C183 + C182) * C19339 +
                ((C113 * C853 + C31650 * C854) * C114 +
                 (C113 * C855 + C31650 * C856) * C31467) *
                    C19340) *
                   C13648) *
                  C111) *
             C31485 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31650 * C122) * C305 +
                 (C113 * C123 + C31650 * C136) * C31808 -
                 (C113 * C308 + C31650 * C318) * C306 -
                 (C113 * C319 + C31650 * C338) * C31796 +
                 (C113 * C309 + C31650 * C320) * C307 +
                 (C113 * C321 + C31650 * C339) * C31771) *
                    C19339 +
                (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) *
                    C19340) *
                   C13647 +
               ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
                (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
                   C13648) *
                  C302 +
              (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
                (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19340) *
                   C13647 +
               ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
                (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
                   C13648) *
                  C303 +
              ((C407 * C19339 +
                (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19340) *
                   C13647 +
               ((C372 + C371 - C400 - C401 + C402 + C403) * C19339 +
                (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
                 (C113 * C1739 + C31650 * C1740) * C307 +
                 (C113 * C1741 + C31650 * C1742) * C31771) *
                    C19340) *
                   C13648) *
                  C31765) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C302 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C303 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31765) *
              C31809 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C303 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C302 -
           (((C608 + C609) * C19340 + (C603 + C602) * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31765) *
              C31798 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C302 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            ((C2481 + C2480) * C19340 + C9434 * C19339) * C13647) *
               C303 +
           ((C611 * C19339 + (C2482 + C2483) * C19340) * C13647 +
            ((C609 + C608) * C19339 +
             ((C113 * C2463 + C31650 * C2464) * C114 +
              (C113 * C2465 + C31650 * C2466) * C31467) *
                 C19340) *
                C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31805 +
          (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19340) *
               C13647 +
           ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
               C13648) *
              C31792 +
          ((C1209 * C19339 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19340) *
               C13647 +
           ((C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C19339 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1278 +
            (C113 * C123 + C31650 * C136) * C1272 -
            (C113 * C308 + C31650 * C318) * C1279 -
            (C113 * C319 + C31650 * C338) * C1273 +
            (C113 * C309 + C31650 * C320) * C1280 +
            (C113 * C321 + C31650 * C339) * C1274 -
            (C113 * C1283 + C31650 * C1289) * C1281 -
            (C113 * C1290 + C31650 * C1301) * C1275 +
            (C113 * C1284 + C31650 * C1291) * C1282 +
            (C113 * C1292 + C31650 * C1302) * C1276) *
               C19339 +
           (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
            C10122 * C1280 + C10123 * C1274 - C10517 * C1281 - C10518 * C1275 +
            (C113 * C5894 + C31650 * C5897) * C1282 +
            (C113 * C5898 + C31650 * C5903) * C1276) *
               C19340) *
              C13647 +
          ((C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
            C381 * C1280 + C382 * C1274 - C1586 * C1281 - C1587 * C1275 +
            (C113 * C1286 + C31650 * C1295) * C1282 +
            (C113 * C1296 + C31650 * C1304) * C1276) *
               C19339 +
           (C586 * C1278 + C587 * C1272 - C1052 * C1279 - C1053 * C1273 +
            C1760 * C1280 + C1761 * C1274 -
            (C113 * C1866 + C31650 * C1870) * C1281 -
            (C113 * C1871 + C31650 * C1875) * C1275 +
            (C113 * C6154 + C31650 * C6155) * C1282 +
            (C113 * C6156 + C31650 * C6157) * C1276) *
               C19340) *
              C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31439 * C31809 +
          (((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C19339 +
            (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C19340) *
               C13647 +
           ((C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19339 +
            (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C19340) *
               C13648) *
              C31439 * C31798 +
          ((C10142 * C19339 +
            (C10115 + C10114 - C10136 - C10137 + C10138 + C10139) * C19340) *
               C13647 +
           ((C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C19339 +
            (C2476 * C1183 + C2477 * C1177 - C11020 * C1184 - C11021 * C1178 +
             (C113 * C6802 + C31650 * C6803) * C1185 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C19340) *
               C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31805 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31792 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31765) *
              C1987 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31792 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31805 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31765) *
              C1988 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C31805 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            ((C2481 + C2480) * C19340 + C9434 * C19339) * C13647) *
               C31792 +
           ((C611 * C19339 + (C2482 + C2483) * C19340) * C13647 +
            ((C609 + C608) * C19339 +
             ((C113 * C2463 + C31650 * C2464) * C114 +
              (C113 * C2465 + C31650 * C2466) * C31467) *
                 C19340) *
                C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
               C13647 +
           ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
            (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
               C13648) *
              C31439 * C1987 +
          (((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C19339 +
            (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C19340) *
               C13647 +
           ((C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19339 +
            (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C19340) *
               C13648) *
              C31439 * C1988 +
          ((C10767 * C19339 +
            (C10759 + C10758 - C10757 - C10760 + C10761 + C10762) * C19340) *
               C13647 +
           ((C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C19339 +
            (C2476 * C305 + C2477 * C31808 - C11020 * C306 - C11021 * C31796 +
             (C113 * C6802 + C31650 * C6803) * C307 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C19340) *
               C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C19339 +
            (C9445 + C9446) * C19340) *
               C13647 +
           ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
              C31439 * C2162 -
          ((C9434 * C19340 + C19635 * C19339) * C13648 +
           ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
              C31439 * C2163 +
          ((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
           (C19637 * C19339 + C11128 * C19340) * C13648) *
              C31439 * C2164 -
          (((C11135 + C11136) * C19340 + (C2481 + C2480) * C19339) * C13648 +
           ((C10852 + C10851) * C19340 + C10838 * C19339) * C13647) *
              C31439 * C2165 +
          ((C10855 * C19339 + (C10854 + C10853) * C19340) * C13647 +
           ((C11136 + C11135) * C19339 +
            ((C113 * C11123 + C31650 * C11124) * C114 +
             (C113 * C11125 + C31650 * C11126) * C31467) *
                C19340) *
               C13648) *
              C31439 * C2166)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C1183 +
              (C113 * C123 + C31650 * C136) * C1177 -
              (C113 * C308 + C31650 * C318) * C1184 -
              (C113 * C319 + C31650 * C338) * C1178 +
              (C113 * C309 + C31650 * C320) * C1185 +
              (C113 * C321 + C31650 * C339) * C31771) *
                 C19339 +
             (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
                C13647 +
            ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
             C20823 * C19340) *
                C13648) *
               C31726 +
           (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
             C20824 * C19340) *
                C13647 +
            ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
             (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
                C13648) *
               C31449) *
              C31741 +
          ((((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C19339 +
             (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C19340) *
                C13647 +
            (C20824 * C19339 +
             (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C19340) *
                C13648) *
               C31726 +
           ((C20823 * C19339 +
             (C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C19340) *
                C13647 +
            ((C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19339 +
             (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
              (C113 * C1425 + C31650 * C1442) * C1185 +
              (C113 * C1443 + C31650 * C1452) * C31771) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C713 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C714 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C715 -
           (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
            (C19899 * C19340 + C185 * C19339) * C13647) *
               C31775) *
              C31741 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C714 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C713 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C715 +
           ((C858 * C19339 + (C609 + C608) * C19340) * C13647 +
            ((C867 + C866) * C19339 + ((C113 * C530 + C31650 * C549) * C114 +
                                       (C113 * C550 + C31650 * C560) * C31467) *
                                          C19340) *
                C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31726 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31449) *
              C2459 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31449 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31726) *
              C2460 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C31726 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            (C21656 * C19340 + C9434 * C19339) * C13647) *
               C31449) *
              C2461 +
          (((C11128 * C19339 + (C11136 + C11135) * C19340) * C13647 +
            ((C2482 + C2483) * C19339 +
             ((C113 * C2172 + C31650 * C2183) * C114 +
              (C113 * C2184 + C31650 * C2190) * C31467) *
                 C19340) *
                C13648) *
               C31449 -
           (((C11135 + C11136) * C19340 + C21656 * C19339) * C13648 +
            ((C10852 + C10851) * C19340 + C10838 * C19339) * C13647) *
               C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
               C13647 +
           ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
            (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
               C13648) *
              C302 +
          (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19340) *
               C13647 +
           ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
               C13648) *
              C303 +
          ((C407 * C19339 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19340) *
               C13647 +
           ((C372 + C371 - C400 - C401 + C402 + C403) * C19339 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C19339 +
            (C9445 + C9446) * C19340) *
               C13647 +
           ((C174 + C175) * C19339 + (C598 + C599) * C19340) * C13648) *
              C107 -
          ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
           ((C599 + C598) * C19340 + (C175 + C174) * C19339) * C13647) *
              C108 +
          ((C184 * C19339 + (C600 + C601) * C19340) * C13647 +
           ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
              C109 -
          (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
           ((C603 + C602) * C19340 + C185 * C19339) * C13647) *
              C110 +
          ((C186 * C19339 + (C867 + C866) * C19340) * C13647 +
           ((C183 + C182) * C19339 + ((C113 * C853 + C31650 * C854) * C114 +
                                      (C113 * C855 + C31650 * C856) * C31467) *
                                         C19340) *
               C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31805 +
          (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19340) *
               C13647 +
           ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
               C13648) *
              C31792 +
          ((C1209 * C19339 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19340) *
               C13647 +
           ((C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C19339 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1278 +
            (C113 * C123 + C31650 * C136) * C1272 -
            (C113 * C308 + C31650 * C318) * C1279 -
            (C113 * C319 + C31650 * C338) * C1273 +
            (C113 * C309 + C31650 * C320) * C1280 +
            (C113 * C321 + C31650 * C339) * C1274 -
            (C113 * C1283 + C31650 * C1289) * C1281 -
            (C113 * C1290 + C31650 * C1301) * C1275 +
            (C113 * C1284 + C31650 * C1291) * C1282 +
            (C113 * C1292 + C31650 * C1302) * C1276) *
               C19339 +
           (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
            C10122 * C1280 + C10123 * C1274 - C10517 * C1281 - C10518 * C1275 +
            (C113 * C5894 + C31650 * C5897) * C1282 +
            (C113 * C5898 + C31650 * C5903) * C1276) *
               C19340) *
              C13647 +
          ((C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
            C381 * C1280 + C382 * C1274 - C1586 * C1281 - C1587 * C1275 +
            (C113 * C1286 + C31650 * C1295) * C1282 +
            (C113 * C1296 + C31650 * C1304) * C1276) *
               C19339 +
           (C586 * C1278 + C587 * C1272 - C1052 * C1279 - C1053 * C1273 +
            C1760 * C1280 + C1761 * C1274 -
            (C113 * C1866 + C31650 * C1870) * C1281 -
            (C113 * C1871 + C31650 * C1875) * C1275 +
            (C113 * C6154 + C31650 * C6155) * C1282 +
            (C113 * C6156 + C31650 * C6157) * C1276) *
               C19340) *
              C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31805 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31792 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31765) *
              C1987 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31792 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31805 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31765) *
              C1988 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C31805 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            ((C2481 + C2480) * C19340 + C9434 * C19339) * C13647) *
               C31792 +
           ((C611 * C19339 + (C2482 + C2483) * C19340) * C13647 +
            ((C609 + C608) * C19339 +
             ((C113 * C2463 + C31650 * C2464) * C114 +
              (C113 * C2465 + C31650 * C2466) * C31467) *
                 C19340) *
                C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
               C13647 +
           ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
            (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
               C13648) *
              C31439 * C1987 +
          (((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C19339 +
            (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C19340) *
               C13647 +
           ((C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19339 +
            (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C19340) *
               C13648) *
              C31439 * C1988 +
          ((C10767 * C19339 +
            (C10759 + C10758 - C10757 - C10760 + C10761 + C10762) * C19340) *
               C13647 +
           ((C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C19339 +
            (C2476 * C305 + C2477 * C31808 - C11020 * C306 - C11021 * C31796 +
             (C113 * C6802 + C31650 * C6803) * C307 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C19340) *
               C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C717 +
              (C113 * C123 + C31650 * C136) * C31740 -
              (C113 * C308 + C31650 * C318) * C718 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C9794 + C9795 - C9810 - C9811) * C19340) *
                C13647 +
            ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
               C31444 +
           (((C726 - (C725 + C724) + C727) * C19339 + C20101 * C19340) *
                C13647 +
            ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) *
                C13648) *
               C31452 +
           ((C750 * C19339 + C20102 * C19340) * C13647 +
            ((C734 + C733 - C732 - C735) * C19339 +
             (C1046 + C1047 - C1063 - C1064) * C19340) *
                C13648) *
               C3124) *
              C3562 +
          ((((C9810 - (C9795 + C9794) + C9811) * C19339 +
             (C9812 - (C9801 + C9800) + C9813) * C19340) *
                C13647 +
            (C20101 * C19339 + C11023 * C19340) * C13648) *
               C31444 +
           ((C20100 * C19339 + C21525 * C19340) * C13647 +
            (C20102 * C19339 + (C2348 + C2349 - C2360 - C2361) * C19340) *
                C13648) *
               C31452 +
           ((C1066 * C19339 + (C2360 - (C2349 + C2348) + C2361) * C19340) *
                C13647 +
            ((C1063 - (C1047 + C1046) + C1064) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C718 -
              (C596 * C31740 + C597 * C717) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C3124) *
              C31572)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C717 +
              (C113 * C123 + C31650 * C136) * C31740 -
              (C113 * C308 + C31650 * C318) * C718 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C9794 + C9795 - C9810 - C9811) * C19340) *
                C13647 +
            ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
               C2825 +
           (((C726 - (C725 + C724) + C727) * C19339 + C20101 * C19340) *
                C13647 +
            ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) *
                C13648) *
               C31449) *
              C31568 +
          ((((C9810 - (C9795 + C9794) + C9811) * C19339 +
             (C9812 - (C9801 + C9800) + C9813) * C19340) *
                C13647 +
            (C20101 * C19339 + C11023 * C19340) * C13648) *
               C2825 +
           ((C20100 * C19339 + C21525 * C19340) * C13647 +
            (C20102 * C19339 + (C2348 + C2349 - C2360 - C2361) * C19340) *
                C13648) *
               C31449) *
              C31575 +
          (((C11022 * C19339 + (C11010 + C11009 - C11008 - C11011) * C19340) *
                C13647 +
            (C21525 * C19339 + (C11012 + C11013 - C11024 - C11025) * C19340) *
                C13648) *
               C2825 +
           ((C11023 * C19339 + (C11024 - (C11013 + C11012) + C11025) * C19340) *
                C13647 +
            ((C2360 - (C2349 + C2348) + C2361) * C19339 +
             ((C113 * C2583 + C31650 * C2588) * C718 -
              (C2479 * C31740 + C2478 * C717) +
              (C113 * C2589 + C31650 * C2592) * C31530) *
                 C19340) *
                C13648) *
               C31449) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C305 +
              (C113 * C123 + C31650 * C136) * C31808 -
              (C113 * C308 + C31650 * C318) * C306 -
              (C113 * C319 + C31650 * C338) * C31796 +
              (C113 * C309 + C31650 * C320) * C307 +
              (C113 * C321 + C31650 * C339) * C31771) *
                 C19339 +
             (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
                C13647 +
            ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
             C23137 * C19340) *
                C13648) *
               C2825 +
           (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
             C23138 * C19340) *
                C13647 +
            ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
             (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
                C13648) *
               C31449) *
              C3562 +
          ((((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C19339 +
             (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C19340) *
                C13647 +
            (C23138 * C19339 +
             (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C19340) *
                C13648) *
               C2825 +
           ((C23137 * C19339 +
             (C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C19340) *
                C13647 +
            ((C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19339 +
             (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
              (C113 * C1425 + C31650 * C1442) * C307 +
              (C113 * C1443 + C31650 * C1452) * C31771) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31814 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31807 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31794 -
           (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
            (C19899 * C19340 + C185 * C19339) * C13647) *
               C31775) *
              C3562 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31807 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31814 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31794 +
           ((C858 * C19339 + (C609 + C608) * C19340) * C13647 +
            ((C867 + C866) * C19339 + ((C113 * C530 + C31650 * C549) * C114 +
                                       (C113 * C550 + C31650 * C560) * C31467) *
                                          C19340) *
                C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C2825 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31449) *
              C31816 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31449 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C2825) *
              C31813 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C2825 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            (C21656 * C19340 + C9434 * C19339) * C13647) *
               C31449) *
              C31804 +
          (((C11128 * C19339 + (C11136 + C11135) * C19340) * C13647 +
            ((C2482 + C2483) * C19339 +
             ((C113 * C2172 + C31650 * C2183) * C114 +
              (C113 * C2184 + C31650 * C2190) * C31467) *
                 C19340) *
                C13648) *
               C31449 -
           (((C11135 + C11136) * C19340 + C21656 * C19339) * C13648 +
            ((C10852 + C10851) * C19340 + C10838 * C19339) * C13647) *
               C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31444 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31452 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C3124) *
              C31568 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31452 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31444 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C3124) *
              C31575 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C31444 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            (C21656 * C19340 + C9434 * C19339) * C13647) *
               C31452 +
           ((C611 * C19339 + (C2482 + C2483) * C19340) * C13647 +
            ((C609 + C608) * C19339 +
             ((C113 * C2463 + C31650 * C2464) * C114 +
              (C113 * C2465 + C31650 * C2466) * C31467) *
                 C19340) *
                C13648) *
               C3124) *
              C4082)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C31814 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C31807 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31794 -
           (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
            (C19899 * C19340 + C185 * C19339) * C13647) *
               C31775) *
              C3562 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C31807 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C31814 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31794 +
           ((C858 * C19339 + (C609 + C608) * C19340) * C13647 +
            ((C867 + C866) * C19339 + ((C113 * C530 + C31650 * C549) * C114 +
                                       (C113 * C550 + C31650 * C560) * C31467) *
                                          C19340) *
                C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C305 +
              (C113 * C123 + C31650 * C136) * C31808 -
              (C113 * C308 + C31650 * C318) * C306 -
              (C113 * C319 + C31650 * C338) * C31796 +
              (C113 * C309 + C31650 * C320) * C307 +
              (C113 * C321 + C31650 * C339) * C31771) *
                 C19339 +
             (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
                C13647 +
            ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
             C23137 * C19340) *
                C13648) *
               C2825 +
           (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
             C23138 * C19340) *
                C13647 +
            ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
             (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
                C13648) *
               C31449) *
              C3562 +
          ((((C10747 - (C10746 + C10745) + C10748 - C10749 - C10750) * C19339 +
             (C10753 - (C10752 + C10751) + C10754 - C10755 - C10756) * C19340) *
                C13647 +
            (C23138 * C19339 +
             (C12280 - (C12281 + C12282) + C12283 - C12284 - C12285) * C19340) *
                C13648) *
               C2825 +
           ((C23137 * C19339 +
             (C12282 + C12281 - C12280 - C12283 + C12284 + C12285) * C19340) *
                C13647 +
            ((C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19339 +
             (C594 * C305 + C595 * C31808 - C2356 * C306 - C2357 * C31796 +
              (C113 * C1425 + C31650 * C1442) * C307 +
              (C113 * C1443 + C31650 * C1452) * C31771) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C19339 +
            (C9794 + C9795 - C9810 - C9811) * C19340) *
               C13647 +
           ((C724 + C725 - C726 - C727) * C19339 +
            (C1037 + C1036 - C1059 - C1060) * C19340) *
               C13648) *
              C713 +
          (((C726 - (C725 + C724) + C727) * C19339 +
            (C1059 - (C1036 + C1037) + C1060) * C19340) *
               C13647 +
           ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) * C13648) *
              C714 +
          ((C750 * C19339 + (C1043 + C1042 - C1061 - C1062) * C19340) * C13647 +
           ((C734 + C733 - C732 - C735) * C19339 +
            (C1046 + C1047 - C1063 - C1064) * C19340) *
               C13648) *
              C715 +
          ((C751 * C19339 + (C1063 - (C1047 + C1046) + C1064) * C19340) *
               C13647 +
           ((C748 - (C737 + C736) + C749) * C19339 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C19340) *
               C13648) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1557 +
             (C113 * C123 + C31650 * C136) * C1551 -
             (C113 * C308 + C31650 * C318) * C1558 -
             (C113 * C319 + C31650 * C338) * C1552 +
             (C113 * C309 + C31650 * C320) * C1559 +
             (C113 * C321 + C31650 * C339) * C1553 -
             (C113 * C1283 + C31650 * C1289) * C1560 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
             C10522) *
                C19340) *
               C13647 +
           ((C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                C19339 +
            (C20607 + C20608 - C20609 - C20610 + C20611 + C20612 - C20619 -
             C20620) *
                C19340) *
               C13648) *
              C31726 +
          (((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
                C19339 +
            (C20609 - (C20608 + C20607) + C20610 - C20611 - C20612 + C20619 +
             C20620) *
                C19340) *
               C13647 +
           ((C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 + C1593) *
                C19339 +
            (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
             C1762 * C1559 - C1763 * C1553 +
             (C113 * C1867 + C31650 * C1872) * C1560 +
             (C113 * C1873 + C31650 * C1876) * C31781) *
                C19340) *
               C13648) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C717 +
              (C113 * C123 + C31650 * C136) * C31740 -
              (C113 * C308 + C31650 * C318) * C718 -
              (C113 * C319 + C31650 * C338) * C31530) *
                 C19339 +
             (C9794 + C9795 - C9810 - C9811) * C19340) *
                C13647 +
            ((C724 + C725 - C726 - C727) * C19339 + C20100 * C19340) * C13648) *
               C302 +
           (((C726 - (C725 + C724) + C727) * C19339 + C20101 * C19340) *
                C13647 +
            ((C730 - (C729 + C728) + C731) * C19339 + C1066 * C19340) *
                C13648) *
               C303 +
           ((C750 * C19339 + C20102 * C19340) * C13647 +
            ((C734 + C733 - C732 - C735) * C19339 +
             (C1046 + C1047 - C1063 - C1064) * C19340) *
                C13648) *
               C31765) *
              C31741 +
          ((((C9810 - (C9795 + C9794) + C9811) * C19339 +
             (C9812 - (C9801 + C9800) + C9813) * C19340) *
                C13647 +
            (C20101 * C19339 + C11023 * C19340) * C13648) *
               C302 +
           ((C20100 * C19339 + (C2342 + C2343 - C2358 - C2359) * C19340) *
                C13647 +
            (C20102 * C19339 + (C2348 + C2349 - C2360 - C2361) * C19340) *
                C13648) *
               C303 +
           ((C1066 * C19339 + (C2360 - (C2349 + C2348) + C2361) * C19340) *
                C13647 +
            ((C1063 - (C1047 + C1046) + C1064) * C19339 +
             ((C113 * C2337 + C31650 * C2338) * C718 -
              (C596 * C31740 + C597 * C717) +
              (C113 * C2339 + C31650 * C2340) * C31530) *
                 C19340) *
                C13648) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1557 +
             (C113 * C123 + C31650 * C136) * C1551 -
             (C113 * C308 + C31650 * C318) * C1558 -
             (C113 * C319 + C31650 * C338) * C1552 +
             (C113 * C309 + C31650 * C320) * C1559 +
             (C113 * C321 + C31650 * C339) * C1553 -
             (C113 * C1283 + C31650 * C1289) * C1560 -
             (C113 * C1290 + C31650 * C1301) * C31781) *
                C19339 +
            (C10497 + C10498 - C10499 - C10500 + C10501 + C10502 - C10521 -
             C10522) *
                C19340) *
               C13647 +
           ((C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
                C19339 +
            (C20607 + C20608 - C20609 - C20610 + C20611 + C20612 - C20619 -
             C20620) *
                C19340) *
               C13648) *
              C31439 * C31741 +
          (((C10499 - (C10498 + C10497) + C10500 - C10501 - C10502 + C10521 +
             C10522) *
                C19339 +
            (C10509 - (C10508 + C10507) + C10510 - C10511 - C10512 + C10523 +
             C10524) *
                C19340) *
               C13647 +
           ((C20609 - (C20608 + C20607) + C20610 - C20611 - C20612 + C20619 +
             C20620) *
                C19339 +
            (C2354 * C1558 - (C593 * C1551 + C592 * C1557) + C2355 * C1552 -
             C10395 * C1559 - C10396 * C1553 +
             (C113 * C6700 + C31650 * C6701) * C1560 +
             (C113 * C6702 + C31650 * C6703) * C31781) *
                C19340) *
               C13648) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
               C13647 +
           ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
            (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
               C13648) *
              C302 +
          (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19340) *
               C13647 +
           ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
               C13648) *
              C303 +
          ((C407 * C19339 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19340) *
               C13647 +
           ((C372 + C371 - C400 - C401 + C402 + C403) * C19339 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C19339 +
            (C9445 + C9446) * C19340) *
               C13647 +
           ((C174 + C175) * C19339 + (C598 + C599) * C19340) * C13648) *
              C107 -
          ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
           ((C599 + C598) * C19340 + (C175 + C174) * C19339) * C13647) *
              C108 +
          ((C184 * C19339 + (C600 + C601) * C19340) * C13647 +
           ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
              C109 -
          (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
           ((C603 + C602) * C19340 + C185 * C19339) * C13647) *
              C110 +
          ((C186 * C19339 + (C867 + C866) * C19340) * C13647 +
           ((C183 + C182) * C19339 + ((C113 * C853 + C31650 * C854) * C114 +
                                      (C113 * C855 + C31650 * C856) * C31467) *
                                         C19340) *
               C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C302 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C303 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C31765) *
              C31809 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C303 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C302 -
           (((C608 + C609) * C19340 + (C603 + C602) * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C31765) *
              C31798 +
          (((C9451 * C19339 + (C9450 + C9449) * C19340) * C13647 +
            (C19637 * C19339 + C11128 * C19340) * C13648) *
               C302 -
           (((C2483 + C2482) * C19340 + C19638 * C19339) * C13648 +
            ((C2481 + C2480) * C19340 + C9434 * C19339) * C13647) *
               C303 +
           ((C611 * C19339 + (C2482 + C2483) * C19340) * C13647 +
            ((C609 + C608) * C19339 +
             ((C113 * C2463 + C31650 * C2464) * C114 +
              (C113 * C2465 + C31650 * C2466) * C31467) *
                 C19340) *
                C13648) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31805 +
          (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19340) *
               C13647 +
           ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
               C13648) *
              C31792 +
          ((C1209 * C19339 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19340) *
               C13647 +
           ((C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C19339 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1278 +
            (C113 * C123 + C31650 * C136) * C1272 -
            (C113 * C308 + C31650 * C318) * C1279 -
            (C113 * C319 + C31650 * C338) * C1273 +
            (C113 * C309 + C31650 * C320) * C1280 +
            (C113 * C321 + C31650 * C339) * C1274 -
            (C113 * C1283 + C31650 * C1289) * C1281 -
            (C113 * C1290 + C31650 * C1301) * C1275 +
            (C113 * C1284 + C31650 * C1291) * C1282 +
            (C113 * C1292 + C31650 * C1302) * C1276) *
               C19339 +
           (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
            C10122 * C1280 + C10123 * C1274 - C10517 * C1281 - C10518 * C1275 +
            (C113 * C5894 + C31650 * C5897) * C1282 +
            (C113 * C5898 + C31650 * C5903) * C1276) *
               C19340) *
              C13647 +
          ((C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
            C381 * C1280 + C382 * C1274 - C1586 * C1281 - C1587 * C1275 +
            (C113 * C1286 + C31650 * C1295) * C1282 +
            (C113 * C1296 + C31650 * C1304) * C1276) *
               C19339 +
           (C586 * C1278 + C587 * C1272 - C1052 * C1279 - C1053 * C1273 +
            C1760 * C1280 + C1761 * C1274 -
            (C113 * C1866 + C31650 * C1870) * C1281 -
            (C113 * C1871 + C31650 * C1875) * C1275 +
            (C113 * C6154 + C31650 * C6155) * C1282 +
            (C113 * C6156 + C31650 * C6157) * C1276) *
               C19340) *
              C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31439 * C31809 +
          (((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C19339 +
            (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C19340) *
               C13647 +
           ((C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19339 +
            (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C19340) *
               C13648) *
              C31439 * C31798 +
          ((C10142 * C19339 +
            (C10115 + C10114 - C10136 - C10137 + C10138 + C10139) * C19340) *
               C13647 +
           ((C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C19339 +
            (C2476 * C1183 + C2477 * C1177 - C11020 * C1184 - C11021 * C1178 +
             (C113 * C6802 + C31650 * C6803) * C1185 +
             (C113 * C6804 + C31650 * C6805) * C31771) *
                C19340) *
               C13648) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C114 +
              (C113 * C123 + C31650 * C136) * C31467) *
                 C19339 +
             (C9445 + C9446) * C19340) *
                C13647 +
            ((C174 + C175) * C19339 + C19634 * C19340) * C13648) *
               C713 -
           ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
            (C19635 * C19340 + (C175 + C174) * C19339) * C13647) *
               C714 +
           ((C184 * C19339 + C19636 * C19340) * C13647 +
            ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
               C715 -
           (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
            (C19899 * C19340 + C185 * C19339) * C13647) *
               C31775) *
              C31741 +
          (((C19634 * C19339 + C19637 * C19340) * C13647 +
            (C19636 * C19339 + C611 * C19340) * C13648) *
               C714 -
           ((C9434 * C19340 + C19635 * C19339) * C13648 +
            ((C9448 + C9447) * C19340 + (C9446 + C9445) * C19339) * C13647) *
               C713 -
           (((C608 + C609) * C19340 + C19899 * C19339) * C13648 +
            (C19638 * C19340 + C610 * C19339) * C13647) *
               C715 +
           ((C858 * C19339 + (C609 + C608) * C19340) * C13647 +
            ((C867 + C866) * C19339 + ((C113 * C530 + C31650 * C549) * C114 +
                                       (C113 * C550 + C31650 * C560) * C31467) *
                                          C19340) *
                C13648) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31650 * C122) * C1183 +
              (C113 * C123 + C31650 * C136) * C1177 -
              (C113 * C308 + C31650 * C318) * C1184 -
              (C113 * C319 + C31650 * C338) * C1178 +
              (C113 * C309 + C31650 * C320) * C1185 +
              (C113 * C321 + C31650 * C339) * C31771) *
                 C19339 +
             (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
                C13647 +
            ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
             C20823 * C19340) *
                C13648) *
               C31726 +
           (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
             C20824 * C19340) *
                C13647 +
            ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
             (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
                C13648) *
               C31449) *
              C31741 +
          ((((C10098 - (C10097 + C10096) + C10099 - C10131 - C10132) * C19339 +
             (C10106 - (C10105 + C10104) + C10107 - C10134 - C10135) * C19340) *
                C13647 +
            (C20824 * C19339 +
             (C10387 - (C10388 + C10389) + C10390 - C10397 - C10398) * C19340) *
                C13648) *
               C31726 +
           ((C20823 * C19339 +
             (C10389 + C10388 - C10387 - C10390 + C10397 + C10398) * C19340) *
                C13647 +
            ((C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19339 +
             (C594 * C1183 + C595 * C1177 - C2356 * C1184 - C2357 * C1178 +
              (C113 * C1425 + C31650 * C1442) * C1185 +
              (C113 * C1443 + C31650 * C1452) * C31771) *
                 C19340) *
                C13648) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C19339 +
            (C9445 + C9446) * C19340) *
               C13647 +
           ((C174 + C175) * C19339 + (C598 + C599) * C19340) * C13648) *
              C107 -
          ((C610 * C19340 + (C177 + C176) * C19339) * C13648 +
           ((C599 + C598) * C19340 + (C175 + C174) * C19339) * C13647) *
              C108 +
          ((C184 * C19339 + (C600 + C601) * C19340) * C13647 +
           ((C179 + C178) * C19339 + C858 * C19340) * C13648) *
              C109 -
          (((C866 + C867) * C19340 + (C181 + C180) * C19339) * C13648 +
           ((C603 + C602) * C19340 + C185 * C19339) * C13647) *
              C110 +
          ((C186 * C19339 + (C867 + C866) * C19340) * C13647 +
           ((C183 + C182) * C19339 + ((C113 * C853 + C31650 * C854) * C114 +
                                      (C113 * C855 + C31650 * C856) * C31467) *
                                         C19340) *
               C13648) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10745 + C10746 - C10747 - C10748 + C10749 + C10750) * C19340) *
               C13647 +
           ((C349 + C350 - C392 - C393 + C394 + C395) * C19339 +
            (C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C19340) *
               C13648) *
              C302 +
          (((C392 - (C350 + C349) + C393 - C394 - C395) * C19339 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C19340) *
               C13647 +
           ((C396 - (C360 + C359) + C397 - C398 - C399) * C19339 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C19340) *
               C13648) *
              C303 +
          ((C407 * C19339 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C19340) *
               C13647 +
           ((C372 + C371 - C400 - C401 + C402 + C403) * C19339 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C19339 +
            (C10096 + C10097 - C10098 - C10099 + C10131 + C10132) * C19340) *
               C13647 +
           ((C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C19339 +
            (C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C19340) *
               C13648) *
              C31805 +
          (((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C19339 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C19340) *
               C13647 +
           ((C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C19339 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C19340) *
               C13648) *
              C31792 +
          ((C1209 * C19339 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C19340) *
               C13647 +
           ((C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C19339 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C19340) *
               C13648) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1278 +
            (C113 * C123 + C31650 * C136) * C1272 -
            (C113 * C308 + C31650 * C318) * C1279 -
            (C113 * C319 + C31650 * C338) * C1273 +
            (C113 * C309 + C31650 * C320) * C1280 +
            (C113 * C321 + C31650 * C339) * C1274 -
            (C113 * C1283 + C31650 * C1289) * C1281 -
            (C113 * C1290 + C31650 * C1301) * C1275 +
            (C113 * C1284 + C31650 * C1291) * C1282 +
            (C113 * C1292 + C31650 * C1302) * C1276) *
               C19339 +
           (C9439 * C1278 + C9440 * C1272 - C9806 * C1279 - C9807 * C1273 +
            C10122 * C1280 + C10123 * C1274 - C10517 * C1281 - C10518 * C1275 +
            (C113 * C5894 + C31650 * C5897) * C1282 +
            (C113 * C5898 + C31650 * C5903) * C1276) *
               C19340) *
              C13647 +
          ((C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
            C381 * C1280 + C382 * C1274 - C1586 * C1281 - C1587 * C1275 +
            (C113 * C1286 + C31650 * C1295) * C1282 +
            (C113 * C1296 + C31650 * C1304) * C1276) *
               C19339 +
           (C586 * C1278 + C587 * C1272 - C1052 * C1279 - C1053 * C1273 +
            C1760 * C1280 + C1761 * C1274 -
            (C113 * C1866 + C31650 * C1870) * C1281 -
            (C113 * C1871 + C31650 * C1875) * C1275 +
            (C113 * C6154 + C31650 * C6155) * C1282 +
            (C113 * C6156 + C31650 * C6157) * C1276) *
               C19340) *
              C13648) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C31664 * C104 +
           (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
           C3152 * C106) *
              C31444 +
          ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
           (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
           (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
              C31452 +
          (C3152 * C104 +
           (C3143 + C3142 - C3141 - C3144 + C3145 + C3146) * C31664 * C105 +
           (C170 * C30451 + C171 * C31526 - C744 * C30443 - C745 * C31533 +
            (C113 * C317 + C31650 * C336) * C30457 +
            (C113 * C337 + C31650 * C347) * C3121) *
               C31664 * C106) *
              C3124) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C30451 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31526 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C30443 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31533 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C30457 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C3121) *
              C31664 * C31425 * C31444 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C30443 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31526 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C30451) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31533 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C30457 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C3121) *
              C31664 * C31425 * C31452 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C30451 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31526 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C30443 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31533 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C30457 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C3121) *
              C31664 * C31425 * C3124) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C31664 * C104 +
            (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
            C3152 * C106) *
               C2825 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
            (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
            (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
               C31449) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C30443 -
             ((C113 * C537 + C31650 * C554) * C31526 +
              (C113 * C524 + C31650 * C538) * C30451) +
             (C113 * C1019 + C31650 * C1028) * C31533 -
             (C113 * C1417 + C31650 * C1426) * C30457 -
             (C113 * C1427 + C31650 * C1444) * C3121) *
                C31664 * C104 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
            (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
               C2825 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C31664 * C104 +
            (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C31664 * C105 +
            (C590 * C30451 + C591 * C31526 - C1057 * C30443 - C1058 * C31533 +
             (C113 * C1739 + C31650 * C1740) * C30457 +
             (C113 * C1741 + C31650 * C1742) * C3121) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C30451 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31526 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C30443 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31533 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C30457 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C3121) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C30443 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31526 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C30451) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31533 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C30457 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C30443 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31526 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C30451) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31533 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C30457 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C3121) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C30451 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31526 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C30443 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31533 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C30457 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C2825 +
          ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
               C31664 * C104 +
           (C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 + C2847) *
               C31664 * C105 +
           (C388 * C2828 - (C168 * C31815 + C169 * C2827) + C389 * C31811 -
            C390 * C2829 - C391 * C31801 +
            (C113 * C1561 + C31650 * C1562) * C2830 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
              C31814 +
          ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
           (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
              C31807 +
          (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
           (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
              C31794 +
          (C2723 * C104 + (C2714 - (C2713 + C2712) + C2715) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C2698 -
            (C172 * C2691 + C173 * C2697) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C2825 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31449) *
              C31809 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 +
            (C2998 - (C2999 + C3000) + C3001) * C31664 * C106) *
               C2825 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C590 * C2697 + C591 * C2691 - C1057 * C2698 - C1058 * C31530) *
                C31664 * C106) *
               C31449) *
              C31798 +
          ((((C113 * C526 + C31650 * C541) * C2697 +
             (C113 * C542 + C31650 * C556) * C2691 -
             (C113 * C1420 + C31650 * C1432) * C2698 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
            (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
               C2825 +
           ((C3004 - (C3003 + C3002) + C3005) * C31664 * C104 +
            (C3008 - (C3007 + C3006) + C3009) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C2698 -
             (C596 * C2691 + C597 * C2697) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31814 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2698 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C2691 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2697) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C31807 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C2697 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C2691 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C2698 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C31794 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C2698 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C2691 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C2697) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C2825 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2828 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31815 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2827) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31811 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C2829 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31801 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C2830 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31809 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C2697 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C2691 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C2698 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C2698 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C2691 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C2697) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31444 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31452 +
           (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
            (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
               C3124) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31444 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31452 +
           (C3306 * C104 + (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
              C31814 +
          ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
           (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
              C31807 +
          (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
           (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
              C31794 +
          (C2723 * C104 + (C2714 - (C2713 + C2712) + C2715) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C2698 -
            (C172 * C2691 + C173 * C2697) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C2825 +
          ((C2834 - (C2833 + C2832) + C2835 - C2836 - C2837 + C2838 + C2839) *
               C31664 * C104 +
           (C2842 - (C2841 + C2840) + C2843 - C2844 - C2845 + C2846 + C2847) *
               C31664 * C105 +
           (C388 * C2828 - (C168 * C31815 + C169 * C2827) + C389 * C31811 -
            C390 * C2829 - C391 * C31801 +
            (C113 * C1561 + C31650 * C1562) * C2830 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31814 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2698 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C2691 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2697) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C31807 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C2697 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C2691 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C2698 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C31794 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C2698 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C2691 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C2697) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C2825 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C2828 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31815 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C2827) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31811 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C2829 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31801 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C2830 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C30451 +
             (C113 * C123 + C31650 * C136) * C31526 -
             (C113 * C308 + C31650 * C318) * C30443 -
             (C113 * C319 + C31650 * C338) * C31533 +
             (C113 * C309 + C31650 * C320) * C30457 +
             (C113 * C321 + C31650 * C339) * C3121) *
                C31664 * C104 +
            (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
            C3152 * C106) *
               C31726 +
           ((C3131 - (C3130 + C3129) + C3132 - C3133 - C3134) * C31664 * C104 +
            (C3137 - (C3136 + C3135) + C3138 - C3139 - C3140) * C31664 * C105 +
            (C3141 - (C3142 + C3143) + C3144 - C3145 - C3146) * C31664 * C106) *
               C31449) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C30443 -
             ((C113 * C537 + C31650 * C554) * C31526 +
              (C113 * C524 + C31650 * C538) * C30451) +
             (C113 * C1019 + C31650 * C1028) * C31533 -
             (C113 * C1417 + C31650 * C1426) * C30457 -
             (C113 * C1427 + C31650 * C1444) * C3121) *
                C31664 * C104 +
            (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
            (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
               C31726 +
           ((C3455 + C3454 - C3453 - C3456 + C3457 + C3458) * C31664 * C104 +
            (C3461 + C3460 - C3459 - C3462 + C3463 + C3464) * C31664 * C105 +
            (C590 * C30451 + C591 * C31526 - C1057 * C30443 - C1058 * C31533 +
             (C113 * C1739 + C31650 * C1740) * C30457 +
             (C113 * C1741 + C31650 * C1742) * C3121) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C30451 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31526 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C30443 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31533 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C30457 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C3121) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C30443 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31526 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C30451) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31533 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C30457 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C3121) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C30443 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31526 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C30451) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31533 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C30457 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C3121) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C30451 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31526 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C30443 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31533 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C30457 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C3121) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C30451 +
            (C113 * C123 + C31650 * C136) * C31526 -
            (C113 * C308 + C31650 * C318) * C30443 -
            (C113 * C319 + C31650 * C338) * C31533 +
            (C113 * C309 + C31650 * C320) * C30457 +
            (C113 * C321 + C31650 * C339) * C3121) *
               C31664 * C104 +
           (C3129 + C3130 - C3131 - C3132 + C3133 + C3134) * C31664 * C105 +
           C3152 * C106) *
              C31439 * C31568 +
          (((C113 * C1013 + C31650 * C1018) * C30443 -
            ((C113 * C537 + C31650 * C554) * C31526 +
             (C113 * C524 + C31650 * C538) * C30451) +
            (C113 * C1019 + C31650 * C1028) * C31533 -
            (C113 * C1417 + C31650 * C1426) * C30457 -
            (C113 * C1427 + C31650 * C1444) * C3121) *
               C31664 * C104 +
           (C3453 - (C3454 + C3455) + C3456 - C3457 - C3458) * C31664 * C105 +
           (C3459 - (C3460 + C3461) + C3462 - C3463 - C3464) * C31664 * C106) *
              C31439 * C31575 +
          (((C113 * C526 + C31650 * C541) * C30451 +
            (C113 * C542 + C31650 * C556) * C31526 -
            (C113 * C1420 + C31650 * C1432) * C30443 -
            (C113 * C1433 + C31650 * C1447) * C31533 +
            (C113 * C1421 + C31650 * C1434) * C30457 +
            (C113 * C1435 + C31650 * C1448) * C3121) *
               C31664 * C104 +
           (C592 * C30451 + C593 * C31526 - C2354 * C30443 - C2355 * C31533 +
            (C113 * C1423 + C31650 * C1438) * C30457 +
            (C113 * C1439 + C31650 * C1450) * C3121) *
               C31664 * C105 +
           (C594 * C30451 + C595 * C31526 - C2356 * C30443 - C2357 * C31533 +
            (C113 * C1425 + C31650 * C1442) * C30457 +
            (C113 * C1443 + C31650 * C1452) * C3121) *
               C31664 * C106) *
              C31439 * C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C30451 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31526 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C30443 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31533 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C30457 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C3121) *
              C31664 * C31425 * C31439 * C31568 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C30443 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31526 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C30451) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31533 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C30457 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C3121) *
              C31664 * C31425 * C31439 * C31575 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C30451 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31526 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C30443 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31533 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C30457 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C3121) *
              C31664 * C31425 * C31439 * C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C31439 * C3562 +
          (((C113 * C1013 + C31650 * C1018) * C2828 -
            ((C113 * C537 + C31650 * C554) * C31815 +
             (C113 * C524 + C31650 * C538) * C2827) +
            (C113 * C1019 + C31650 * C1028) * C31811 -
            (C113 * C1417 + C31650 * C1426) * C2829 -
            (C113 * C1427 + C31650 * C1444) * C31801 +
            (C113 * C1865 + C31650 * C1868) * C2830 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C2828 - (C587 * C31815 + C586 * C2827) + C1053 * C31811 -
            C1760 * C2829 - C1761 * C31801 +
            (C113 * C1866 + C31650 * C1870) * C2830 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C2828 - (C589 * C31815 + C588 * C2827) + C1056 * C31811 -
            C1762 * C2829 - C1763 * C31801 +
            (C113 * C1867 + C31650 * C1872) * C2830 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31805 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31792 +
           (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
            (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
               C31765) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31805 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31792 +
           (C3306 * C104 + (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2697 +
            (C113 * C123 + C31650 * C136) * C2691 -
            (C113 * C308 + C31650 * C318) * C2698 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
              C31439 * C31816 +
          (((C113 * C1013 + C31650 * C1018) * C2698 -
            ((C113 * C537 + C31650 * C554) * C2691 +
             (C113 * C524 + C31650 * C538) * C2697) +
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C31664 * C104 +
           (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
              C31439 * C31813 +
          (((C113 * C526 + C31650 * C541) * C2697 +
            (C113 * C542 + C31650 * C556) * C2691 -
            (C113 * C1420 + C31650 * C1432) * C2698 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C31664 * C104 +
           (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
           (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
              C31439 * C31804 +
          (((C113 * C2581 + C31650 * C2584) * C2698 -
            ((C113 * C2177 + C31650 * C2187) * C2691 +
             (C113 * C2169 + C31650 * C2178) * C2697) +
            (C113 * C2585 + C31650 * C2590) * C31530) *
               C31664 * C104 +
           ((C113 * C2582 + C31650 * C2586) * C2698 -
            (C2477 * C2691 + C2476 * C2697) +
            (C113 * C2587 + C31650 * C2591) * C31530) *
               C31664 * C105 +
           ((C113 * C2583 + C31650 * C2588) * C2698 -
            (C2479 * C2691 + C2478 * C2697) +
            (C113 * C2589 + C31650 * C2592) * C31530) *
               C31664 * C106) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C3562 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2828 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31815 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2827) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31811 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C2829 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31801 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C2830 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2697 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C2691 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2698 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31439 * C31816 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2698 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C2691 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2697) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31530) *
              C31664 * C31425 * C31439 * C31813 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C2697 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C2691 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C2698 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31530) *
              C31664 * C31425 * C31439 * C31804 +
          ((C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6546 +
            C5041 * C6904 + C5037 * C6905) *
               C2698 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C2691 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C2697) +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6545 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31530) *
              C31664 * C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31726 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31449) *
              C31568 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31726 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31449) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C2697 +
             (C113 * C542 + C31650 * C556) * C2691 -
             (C113 * C1420 + C31650 * C1432) * C2698 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C3002 + C3003 - C3004 - C3005) * C31664 * C105 +
            (C3006 + C3007 - C3008 - C3009) * C31664 * C106) *
               C31726 +
           ((C3004 - (C3003 + C3002) + C3005) * C31664 * C104 +
            (C3008 - (C3007 + C3006) + C3009) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C2698 -
             (C596 * C2691 + C597 * C2697) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31568 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C2697 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C2691 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C2698 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C2698 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C2691 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C2697) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C2697 +
             (C113 * C123 + C31650 * C136) * C2691 -
             (C113 * C308 + C31650 * C318) * C2698 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C2700 + C2701 - C2702 - C2703) * C31664 * C105 + C2722 * C106) *
               C31805 +
           ((C2702 - (C2701 + C2700) + C2703) * C31664 * C104 +
            (C2706 - (C2705 + C2704) + C2707) * C31664 * C105 + C2723 * C106) *
               C31792 +
           (C2722 * C104 + (C2710 + C2709 - C2708 - C2711) * C31664 * C105 +
            (C2712 + C2713 - C2714 - C2715) * C31664 * C106) *
               C31765) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C2698 -
             ((C113 * C537 + C31650 * C554) * C2691 +
              (C113 * C524 + C31650 * C538) * C2697) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C2994 - (C2995 + C2996) + C2997) * C31664 * C105 + C3306 * C106) *
               C31805 +
           ((C2996 + C2995 - C2994 - C2997) * C31664 * C104 +
            (C3000 + C2999 - C2998 - C3001) * C31664 * C105 +
            (C3300 + C3301 - C3302 - C3303) * C31664 * C106) *
               C31792 +
           (C3306 * C104 + (C3302 - (C3301 + C3300) + C3303) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C2698 -
             (C864 * C2691 + C865 * C2697) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C2827 +
            (C113 * C123 + C31650 * C136) * C31815 -
            (C113 * C308 + C31650 * C318) * C2828 -
            (C113 * C319 + C31650 * C338) * C31811 +
            (C113 * C309 + C31650 * C320) * C2829 +
            (C113 * C321 + C31650 * C339) * C31801 -
            (C113 * C1283 + C31650 * C1289) * C2830 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C2832 + C2833 - C2834 - C2835 + C2836 + C2837 - C2838 - C2839) *
               C31664 * C105 +
           (C2840 + C2841 - C2842 - C2843 + C2844 + C2845 - C2846 - C2847) *
               C31664 * C106) *
              C31439 * C3562 +
          (((C113 * C1013 + C31650 * C1018) * C2828 -
            ((C113 * C537 + C31650 * C554) * C31815 +
             (C113 * C524 + C31650 * C538) * C2827) +
            (C113 * C1019 + C31650 * C1028) * C31811 -
            (C113 * C1417 + C31650 * C1426) * C2829 -
            (C113 * C1427 + C31650 * C1444) * C31801 +
            (C113 * C1865 + C31650 * C1868) * C2830 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C2828 - (C587 * C31815 + C586 * C2827) + C1053 * C31811 -
            C1760 * C2829 - C1761 * C31801 +
            (C113 * C1866 + C31650 * C1870) * C2830 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C2828 - (C589 * C31815 + C588 * C2827) + C1056 * C31811 -
            C1762 * C2829 - C1763 * C31801 +
            (C113 * C1867 + C31650 * C1872) * C2830 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C2697 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C2691 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C2698 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C2698 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C2691 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C2697) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C2697 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C2691 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C2698 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C2698 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C2691 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C2697) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31805 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C2697 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C2691 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C2698 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31792 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C2698 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C2691 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C2697) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C2827 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31815 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C2828 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31811 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C2829 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31801 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C2830 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C3562 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C2828 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31815 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C2827) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31811 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C2829 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31801 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C2830 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31726 +
          ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
               C31664 * C104 +
           (C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 + C1593) *
               C31664 * C105 +
           (C388 * C1558 - (C168 * C1551 + C169 * C1557) + C389 * C1552 -
            C390 * C1559 - C391 * C1553 +
            (C113 * C1561 + C31650 * C1562) * C1560 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
              C713 +
          ((C726 - (C725 + C724) + C727) * C31664 * C104 +
           (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
              C714 +
          (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
           (C736 + C737 - C748 - C749) * C31664 * C106) *
              C715 +
          (C753 * C104 + (C748 - (C737 + C736) + C749) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C718 -
            (C172 * C31740 + C173 * C717) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C31726 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31449) *
              C1987 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C31726 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31449) *
              C1988 +
          ((((C113 * C526 + C31650 * C541) * C717 +
             (C113 * C542 + C31650 * C556) * C31740 -
             (C113 * C1420 + C31650 * C1432) * C718 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
            (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
               C31726 +
           ((C2358 - (C2343 + C2342) + C2359) * C31664 * C104 +
            (C2360 - (C2349 + C2348) + C2361) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C718 -
             (C596 * C31740 + C597 * C717) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C713 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C718 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31740 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C717) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C717 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31740 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C718 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C715 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C718 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31740 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C717) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31726 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1558 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1551 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1557) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1552 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1559 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C1553 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C1560 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C1987 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C717 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31740 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C718 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C31726 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C718 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C31740 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C717) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31439 * C31741 +
          (((C113 * C1013 + C31650 * C1018) * C1558 -
            ((C113 * C537 + C31650 * C554) * C1551 +
             (C113 * C524 + C31650 * C538) * C1557) +
            (C113 * C1019 + C31650 * C1028) * C1552 -
            (C113 * C1417 + C31650 * C1426) * C1559 -
            (C113 * C1427 + C31650 * C1444) * C1553 +
            (C113 * C1865 + C31650 * C1868) * C1560 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
            C1760 * C1559 - C1761 * C1553 +
            (C113 * C1866 + C31650 * C1870) * C1560 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
            C1762 * C1559 - C1763 * C1553 +
            (C113 * C1867 + C31650 * C1872) * C1560 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C302 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C303 +
           (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
            (C736 + C737 - C748 - C749) * C31664 * C106) *
               C31765) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C302 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C303 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
              C31439 * C2459 +
          (((C113 * C1013 + C31650 * C1018) * C718 -
            ((C113 * C537 + C31650 * C554) * C31740 +
             (C113 * C524 + C31650 * C538) * C717) +
            (C113 * C1019 + C31650 * C1028) * C31530) *
               C31664 * C104 +
           (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
              C31439 * C2460 +
          (((C113 * C526 + C31650 * C541) * C717 +
            (C113 * C542 + C31650 * C556) * C31740 -
            (C113 * C1420 + C31650 * C1432) * C718 -
            (C113 * C1433 + C31650 * C1447) * C31530) *
               C31664 * C104 +
           (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
           (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
              C31439 * C2461 +
          (((C113 * C2581 + C31650 * C2584) * C718 -
            ((C113 * C2177 + C31650 * C2187) * C31740 +
             (C113 * C2169 + C31650 * C2178) * C717) +
            (C113 * C2585 + C31650 * C2590) * C31530) *
               C31664 * C104 +
           ((C113 * C2582 + C31650 * C2586) * C718 -
            (C2477 * C31740 + C2476 * C717) +
            (C113 * C2587 + C31650 * C2591) * C31530) *
               C31664 * C105 +
           ((C113 * C2583 + C31650 * C2588) * C718 -
            (C2479 * C31740 + C2478 * C717) +
            (C113 * C2589 + C31650 * C2592) * C31530) *
               C31664 * C106) *
              C31439 * C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C31741 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1558 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1551 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1557) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1552 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1559 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C1553 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C1560 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C31439 * C2459 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C718 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31740 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C717) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31530) *
              C31664 * C31425 * C31439 * C2460 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C717 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31740 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C718 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31530) *
              C31664 * C31425 * C31439 * C2461 +
          ((C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6546 +
            C5041 * C6904 + C5037 * C6905) *
               C718 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31740 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C717) +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6545 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31530) *
              C31664 * C31425 * C31439 * C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C114 +
                (C113 * C123 + C31650 * C136) * C31467) *
                   C31664 * C104 +
               (C174 + C175) * C31664 * C105 + C187 * C106) *
                  C107 -
              (C188 * C106 + (C177 + C176) * C31664 * C105 +
               (C175 + C174) * C31664 * C104) *
                  C108 +
              (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
                  C109 -
              ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
               C188 * C104) *
                  C110 +
              (C189 * C104 + (C183 + C182) * C31664 * C105 +
               ((C113 * C121 + C31650 * C134) * C114 +
                (C113 * C135 + C31650 * C142) * C31467) *
                   C31664 * C106) *
                  C111) *
             C31485 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31650 * C122) * C305 +
                (C113 * C123 + C31650 * C136) * C31808 -
                (C113 * C308 + C31650 * C318) * C306 -
                (C113 * C319 + C31650 * C338) * C31796 +
                (C113 * C309 + C31650 * C320) * C307 +
                (C113 * C321 + C31650 * C339) * C31771) *
                   C31664 * C104 +
               (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
               C408 * C106) *
                  C302 +
              ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
               (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
               (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
                  C303 +
              (C408 * C104 +
               (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
               (C170 * C305 + C171 * C31808 -
                (C113 * C316 + C31650 * C334) * C306 -
                (C113 * C335 + C31650 * C346) * C31796 +
                (C113 * C317 + C31650 * C336) * C307 +
                (C113 * C337 + C31650 * C347) * C31771) *
                   C31664 * C106) *
                  C31765) *
             C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C302 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C303 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C31809 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            (C602 + C603) * C31664 * C106) *
               C303 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C302 -
           (((C113 * C539 + C31650 * C555) * C31467 +
             (C113 * C525 + C31650 * C540) * C114) *
                C31664 * C106 +
            (C603 + C602) * C31664 * C105 + C612 * C104) *
               C31765) *
              C31798 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C302 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C303 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31439 * C31809 +
          (((C113 * C1013 + C31650 * C1018) * C1184 -
            ((C113 * C537 + C31650 * C554) * C1177 +
             (C113 * C524 + C31650 * C538) * C1183) +
            (C113 * C1019 + C31650 * C1028) * C1178 -
            (C113 * C1417 + C31650 * C1426) * C1185 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C1184 - (C587 * C1177 + C586 * C1183) + C1053 * C1178 -
            (C113 * C1418 + C31650 * C1428) * C1185 -
            (C113 * C1429 + C31650 * C1445) * C31771) *
               C31664 * C105 +
           (C1054 * C1184 - (C589 * C1177 + C588 * C1183) + C1056 * C1178 -
            (C113 * C1419 + C31650 * C1430) * C1185 -
            (C113 * C1431 + C31650 * C1446) * C31771) *
               C31664 * C106) *
              C31439 * C31798 +
          (((C113 * C526 + C31650 * C541) * C1183 +
            (C113 * C542 + C31650 * C556) * C1177 -
            (C113 * C1420 + C31650 * C1432) * C1184 -
            (C113 * C1433 + C31650 * C1447) * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C1183 + C593 * C1177 -
            (C113 * C1422 + C31650 * C1436) * C1184 -
            (C113 * C1437 + C31650 * C1449) * C1178 +
            (C113 * C1423 + C31650 * C1438) * C1185 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C1183 + C595 * C1177 -
            (C113 * C1424 + C31650 * C1440) * C1184 -
            (C113 * C1441 + C31650 * C1451) * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31805 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31792 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C1987 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31792 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31805 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31765) *
              C1988 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31805 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31792 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C31439 * C1987 +
          (((C113 * C1013 + C31650 * C1018) * C306 -
            ((C113 * C537 + C31650 * C554) * C31808 +
             (C113 * C524 + C31650 * C538) * C305) +
            (C113 * C1019 + C31650 * C1028) * C31796 -
            (C113 * C1417 + C31650 * C1426) * C307 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C306 - (C587 * C31808 + C586 * C305) + C1053 * C31796 -
            C1760 * C307 - C1761 * C31771) *
               C31664 * C105 +
           (C1054 * C306 - (C589 * C31808 + C588 * C305) + C1056 * C31796 -
            C1762 * C307 - C1763 * C31771) *
               C31664 * C106) *
              C31439 * C1988 +
          (((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C305 + C593 * C31808 -
            (C113 * C1422 + C31650 * C1436) * C306 -
            (C113 * C1437 + C31650 * C1449) * C31796 +
            (C113 * C1423 + C31650 * C1438) * C307 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C305 + C595 * C31808 -
            (C113 * C1424 + C31650 * C1440) * C306 -
            (C113 * C1441 + C31650 * C1451) * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C31439 * C2162 -
          (C612 * C106 + (C599 + C598) * C31664 * C105 +
           ((C113 * C537 + C31650 * C554) * C31467 +
            (C113 * C524 + C31650 * C538) * C114) *
               C31664 * C104) *
              C31439 * C2163 +
          (((C113 * C526 + C31650 * C541) * C114 +
            (C113 * C542 + C31650 * C556) * C31467) *
               C31664 * C104 +
           (C604 + C605) * C31664 * C105 + C613 * C106) *
              C31439 * C2164 -
          (((C113 * C2173 + C31650 * C2185) * C31467 +
            (C113 * C2167 + C31650 * C2174) * C114) *
               C31664 * C106 +
           ((C113 * C2175 + C31650 * C2186) * C31467 +
            (C113 * C2168 + C31650 * C2176) * C114) *
               C31664 * C105 +
           ((C113 * C2177 + C31650 * C2187) * C31467 +
            (C113 * C2169 + C31650 * C2178) * C114) *
               C31664 * C104) *
              C31439 * C2165 +
          (((C113 * C2170 + C31650 * C2179) * C114 +
            (C113 * C2180 + C31650 * C2188) * C31467) *
               C31664 * C104 +
           ((C113 * C2171 + C31650 * C2181) * C114 +
            (C113 * C2182 + C31650 * C2189) * C31467) *
               C31664 * C105 +
           ((C113 * C2172 + C31650 * C2183) * C114 +
            (C113 * C2184 + C31650 * C2190) * C31467) *
               C31664 * C106) *
              C31439 * C2166)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31809 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C303 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C302 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C31809 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1184 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1177 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1183) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1178 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1185 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C31798 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C1183 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C1177 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C1184 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C1178 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C1185 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C1987 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31792 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C1987 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C306 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31808 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C305) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31796 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C307 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C1988 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C305 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31808 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C306 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31796 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C307 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C31439 * C2162 -
          ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C537 + C5035 * C554) *
               C31467 +
           (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C524 + C5035 * C538) *
               C114) *
              C31664 * C31425 * C31439 * C2163 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C114 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31467) *
              C31664 * C31425 * C31439 * C2164 -
          ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2177 + C5035 * C2187) *
               C31467 +
           (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2169 + C5035 * C2178) *
               C114) *
              C31664 * C31425 * C31439 * C2165 +
          ((C5039 * C2170 + C5035 * C2179 + C5040 * C6543 + C5036 * C6547 +
            C5041 * C6544 + C5037 * C6548) *
               C114 +
           (C5039 * C2180 + C5035 * C2188 + C5040 * C6549 + C5036 * C6552 +
            C5041 * C6550 + C5037 * C6553) *
               C31467) *
              C31664 * C31425 * C31439 * C2166)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
            C1210 * C106) *
               C31726 +
           ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
            (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
            (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
               C31449) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C1184 -
             ((C113 * C537 + C31650 * C554) * C1177 +
              (C113 * C524 + C31650 * C538) * C1183) +
             (C113 * C1019 + C31650 * C1028) * C1178 -
             (C113 * C1417 + C31650 * C1426) * C1185 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C31664 * C105 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C31664 * C106) *
               C31726 +
           ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C31664 * C104 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C31664 * C105 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C713 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C714 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C715 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C31741 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C714 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C713 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C715 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31726 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31449) *
              C2459 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31449 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31726) *
              C2460 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31726 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31449) *
              C2461 +
          (((C2480 + C2481) * C31664 * C104 + (C2482 + C2483) * C31664 * C105 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C31664 * C106) *
               C31449 -
           ((C2483 + C2482) * C31664 * C106 + (C2481 + C2480) * C31664 * C105 +
            ((C113 * C2177 + C31650 * C2187) * C31467 +
             (C113 * C2169 + C31650 * C2178) * C114) *
                C31664 * C104) *
               C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C713 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C714 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C715 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C31741 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C714 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C713 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C715 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C1183 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C1177 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C1184 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C1178 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C1185 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C1184 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C1177 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C1183) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C1178 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C1185 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C1184 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C1177 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C1183) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C1178 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C1185 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C1183 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C1177 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C1184 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C1178 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C1185 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31726 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31449) *
              C2459 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31726) *
              C2460 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31726 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31449) *
              C2461 +
          (((C5039 * C2168 + C5035 * C2176 + C5040 * C2582 + C5036 * C2586 +
             C5041 * C6802 + C5037 * C6803) *
                C114 +
            (C5039 * C2175 + C5035 * C2186 + C5040 * C2587 + C5036 * C2591 +
             C5041 * C6804 + C5037 * C6805) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31467 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C114) *
               C31664 * C31425 * C31726) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
           (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
           (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
              C303 +
          (C408 * C104 +
           (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
           (C170 * C305 + C171 * C31808 - (C113 * C316 + C31650 * C334) * C306 -
            (C113 * C335 + C31650 * C346) * C31796 +
            (C113 * C317 + C31650 * C336) * C307 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C107 -
          (C188 * C106 + (C177 + C176) * C31664 * C105 +
           (C175 + C174) * C31664 * C104) *
              C108 +
          (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C109 -
          ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
           C188 * C104) *
              C110 +
          (C189 * C104 + (C183 + C182) * C31664 * C105 +
           ((C113 * C121 + C31650 * C134) * C114 +
            (C113 * C135 + C31650 * C142) * C31467) *
               C31664 * C106) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31805 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31792 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C1987 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31792 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31805 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31765) *
              C1988 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31805 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31792 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C31439 * C1987 +
          (((C113 * C1013 + C31650 * C1018) * C306 -
            ((C113 * C537 + C31650 * C554) * C31808 +
             (C113 * C524 + C31650 * C538) * C305) +
            (C113 * C1019 + C31650 * C1028) * C31796 -
            (C113 * C1417 + C31650 * C1426) * C307 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C306 - (C587 * C31808 + C586 * C305) + C1053 * C31796 -
            C1760 * C307 - C1761 * C31771) *
               C31664 * C105 +
           (C1054 * C306 - (C589 * C31808 + C588 * C305) + C1056 * C31796 -
            C1762 * C307 - C1763 * C31771) *
               C31664 * C106) *
              C31439 * C1988 +
          (((C113 * C526 + C31650 * C541) * C305 +
            (C113 * C542 + C31650 * C556) * C31808 -
            (C113 * C1420 + C31650 * C1432) * C306 -
            (C113 * C1433 + C31650 * C1447) * C31796 +
            (C113 * C1421 + C31650 * C1434) * C307 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C305 + C593 * C31808 -
            (C113 * C1422 + C31650 * C1436) * C306 -
            (C113 * C1437 + C31650 * C1449) * C31796 +
            (C113 * C1423 + C31650 * C1438) * C307 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C305 + C595 * C31808 -
            (C113 * C1424 + C31650 * C1440) * C306 -
            (C113 * C1441 + C31650 * C1451) * C31796 +
            (C113 * C1425 + C31650 * C1442) * C307 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C1987 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31792 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C1988 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31805 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31792 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C1987 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C306 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31808 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C305) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C31796 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C307 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C1988 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C305 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C31808 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C306 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C31796 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C307 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C31444 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31452 +
           (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
            (C736 + C737 - C748 - C749) * C31664 * C106) *
               C3124) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C31444 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31452 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C3124) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C31444 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31452 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C3124) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C2825 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C31449) *
              C31568 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C2825 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C31449) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C717 +
             (C113 * C542 + C31650 * C556) * C31740 -
             (C113 * C1420 + C31650 * C1432) * C718 -
             (C113 * C1433 + C31650 * C1447) * C31530) *
                C31664 * C104 +
            (C2342 + C2343 - C2358 - C2359) * C31664 * C105 +
            (C2348 + C2349 - C2360 - C2361) * C31664 * C106) *
               C2825 +
           ((C2358 - (C2343 + C2342) + C2359) * C31664 * C104 +
            (C2360 - (C2349 + C2348) + C2361) * C31664 * C105 +
            ((C113 * C2337 + C31650 * C2338) * C718 -
             (C596 * C31740 + C597 * C717) +
             (C113 * C2339 + C31650 * C2340) * C31530) *
                C31664 * C106) *
               C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31568 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C31449) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C717 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31740 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
             C5039 * C1420 + C5035 * C1432) *
                C718 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
             C5039 * C1433 + C5035 * C1447) *
                C31530) *
               C31664 * C31425 * C2825 +
           ((C5039 * C1422 + C5035 * C1436 + C5040 * C1423 + C5036 * C1438 +
             C5041 * C6700 + C5037 * C6701) *
                C718 -
            ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
              C5039 * C544 + C5035 * C557) *
                 C31740 +
             (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
              C5039 * C527 + C5035 * C543) *
                 C717) +
            (C5039 * C1437 + C5035 * C1449 + C5040 * C1439 + C5036 * C1450 +
             C5041 * C6702 + C5037 * C6703) *
                C31530) *
               C31664 * C31425 * C31449) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
            C408 * C106) *
               C2825 +
           ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
            (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
            (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
               C31449) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C306 -
             ((C113 * C537 + C31650 * C554) * C31808 +
              (C113 * C524 + C31650 * C538) * C305) +
             (C113 * C1019 + C31650 * C1028) * C31796 -
             (C113 * C1417 + C31650 * C1426) * C307 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C31664 * C105 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C31664 * C106) *
               C2825 +
           ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C31664 * C104 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C31664 * C105 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31814 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31807 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31794 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C3562 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31807 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31814 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31794 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C2825 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31449) *
              C31816 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31449 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C2825) *
              C31813 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C2825 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31449) *
              C31804 +
          (((C2480 + C2481) * C31664 * C104 + (C2482 + C2483) * C31664 * C105 +
            ((C113 * C2463 + C31650 * C2464) * C114 +
             (C113 * C2465 + C31650 * C2466) * C31467) *
                C31664 * C106) *
               C31449 -
           ((C2483 + C2482) * C31664 * C106 + (C2481 + C2480) * C31664 * C105 +
            ((C113 * C2177 + C31650 * C2187) * C31467 +
             (C113 * C2169 + C31650 * C2178) * C114) *
                C31664 * C104) *
               C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31814 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31807 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31794 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C3562 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31807 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31814 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31794 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C305 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31808 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C306 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31796 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C307 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C306 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31808 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C305) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31796 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C307 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C306 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31808 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C305) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31796 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C307 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C305 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31808 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C306 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31796 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C307 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C2825 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31449) *
              C31816 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C2825) *
              C31813 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C2825 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31449) *
              C31804 +
          (((C5039 * C2168 + C5035 * C2176 + C5040 * C2582 + C5036 * C2586 +
             C5041 * C6802 + C5037 * C6803) *
                C114 +
            (C5039 * C2175 + C5035 * C2186 + C5040 * C2587 + C5036 * C2591 +
             C5041 * C6804 + C5037 * C6805) *
                C31467) *
               C31664 * C31425 * C31449 -
           ((C5041 * C6545 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
             C5039 * C2177 + C5035 * C2187) *
                C31467 +
            (C5041 * C6542 + C5037 * C6546 + C5040 * C2581 + C5036 * C2584 +
             C5039 * C2169 + C5035 * C2178) *
                C114) *
               C31664 * C31425 * C2825) *
              C31787)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31444 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31452 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C3124) *
              C31568 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31452 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31444 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C3124) *
              C31575 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C31444 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C31452 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C3124) *
              C4082)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31444 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31452 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C3124) *
              C31568 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31452 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31444 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C3124) *
              C31575 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C31444 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C31452 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C3124) *
              C4082)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C31814 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C31807 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31794 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C3562 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C31807 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C31814 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C31794 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C305 +
             (C113 * C123 + C31650 * C136) * C31808 -
             (C113 * C308 + C31650 * C318) * C306 -
             (C113 * C319 + C31650 * C338) * C31796 +
             (C113 * C309 + C31650 * C320) * C307 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
            C408 * C106) *
               C2825 +
           ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
            (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
            (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
               C31449) *
              C3562 +
          ((((C113 * C1013 + C31650 * C1018) * C306 -
             ((C113 * C537 + C31650 * C554) * C31808 +
              (C113 * C524 + C31650 * C538) * C305) +
             (C113 * C1019 + C31650 * C1028) * C31796 -
             (C113 * C1417 + C31650 * C1426) * C307 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C3711 - (C3712 + C3713) + C3714 - C3715 - C3716) * C31664 * C105 +
            (C3717 - (C3718 + C3719) + C3720 - C3721 - C3722) * C31664 * C106) *
               C2825 +
           ((C3713 + C3712 - C3711 - C3714 + C3715 + C3716) * C31664 * C104 +
            (C3719 + C3718 - C3717 - C3720 + C3721 + C3722) * C31664 * C105 +
            (C590 * C305 + C591 * C31808 - C1057 * C306 - C1058 * C31796 +
             (C113 * C1739 + C31650 * C1740) * C307 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C31814 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C31807 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31794 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C3562 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C31807 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C31814 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31794 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C305 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31808 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C306 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31796 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C307 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C306 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31808 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C305) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31796 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C307 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C3562 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C306 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31808 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C305) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31796 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C307 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C2825 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C305 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31808 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C306 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31796 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C307 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C717 +
            (C113 * C123 + C31650 * C136) * C31740 -
            (C113 * C308 + C31650 * C318) * C718 -
            (C113 * C319 + C31650 * C338) * C31530) *
               C31664 * C104 +
           (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
              C713 +
          ((C726 - (C725 + C724) + C727) * C31664 * C104 +
           (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
              C714 +
          (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
           (C736 + C737 - C748 - C749) * C31664 * C106) *
              C715 +
          (C753 * C104 + (C748 - (C737 + C736) + C749) * C31664 * C105 +
           ((C113 * C719 + C31650 * C720) * C718 -
            (C172 * C31740 + C173 * C717) +
            (C113 * C721 + C31650 * C722) * C31530) *
               C31664 * C106) *
              C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31726 +
          ((C1568 - (C1567 + C1566) + C1569 - C1570 - C1571 + C1590 + C1591) *
               C31664 * C104 +
           (C1578 - (C1577 + C1576) + C1579 - C1580 - C1581 + C1592 + C1593) *
               C31664 * C105 +
           (C388 * C1558 - (C168 * C1551 + C169 * C1557) + C389 * C1552 -
            C390 * C1559 - C391 * C1553 +
            (C113 * C1561 + C31650 * C1562) * C1560 +
            (C113 * C1563 + C31650 * C1564) * C31781) *
               C31664 * C106) *
              C31449) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C717 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31740 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C718 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31530) *
              C31664 * C31425 * C713 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C718 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31740 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C717) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31530) *
              C31664 * C31425 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C717 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31740 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C718 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31530) *
              C31664 * C31425 * C715 +
          ((C5039 * C314 + C5035 * C330 + C5040 * C315 + C5036 * C332 +
            C5041 * C1561 + C5037 * C1562) *
               C718 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31740 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C717) +
           (C5039 * C331 + C5035 * C344 + C5040 * C333 + C5036 * C345 +
            C5041 * C1563 + C5037 * C1564) *
               C31530) *
              C31664 * C31425 * C31775) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31726 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1558 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1551 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1557) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1552 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1559 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C1553 +
           (C5039 * C1285 + C5035 * C1293 + C5040 * C1286 + C5036 * C1295 +
            C5041 * C6004 + C5037 * C6005) *
               C1560 +
           (C5039 * C1294 + C5035 * C1303 + C5040 * C1296 + C5036 * C1304 +
            C5041 * C6006 + C5037 * C6007) *
               C31781) *
              C31664 * C31425 * C31449) *
         C31485) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C717 +
             (C113 * C123 + C31650 * C136) * C31740 -
             (C113 * C308 + C31650 * C318) * C718 -
             (C113 * C319 + C31650 * C338) * C31530) *
                C31664 * C104 +
            (C724 + C725 - C726 - C727) * C31664 * C105 + C752 * C106) *
               C302 +
           ((C726 - (C725 + C724) + C727) * C31664 * C104 +
            (C730 - (C729 + C728) + C731) * C31664 * C105 + C753 * C106) *
               C303 +
           (C752 * C104 + (C734 + C733 - C732 - C735) * C31664 * C105 +
            (C736 + C737 - C748 - C749) * C31664 * C106) *
               C31765) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C718 -
             ((C113 * C537 + C31650 * C554) * C31740 +
              (C113 * C524 + C31650 * C538) * C717) +
             (C113 * C1019 + C31650 * C1028) * C31530) *
                C31664 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31664 * C105 + C1067 * C106) *
               C302 +
           ((C1037 + C1036 - C1059 - C1060) * C31664 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31664 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31664 * C106) *
               C303 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31664 * C105 +
            ((C113 * C1017 + C31650 * C1026) * C718 -
             (C864 * C31740 + C865 * C717) +
             (C113 * C1027 + C31650 * C1032) * C31530) *
                C31664 * C106) *
               C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1557 +
            (C113 * C123 + C31650 * C136) * C1551 -
            (C113 * C308 + C31650 * C318) * C1558 -
            (C113 * C319 + C31650 * C338) * C1552 +
            (C113 * C309 + C31650 * C320) * C1559 +
            (C113 * C321 + C31650 * C339) * C1553 -
            (C113 * C1283 + C31650 * C1289) * C1560 -
            (C113 * C1290 + C31650 * C1301) * C31781) *
               C31664 * C104 +
           (C1566 + C1567 - C1568 - C1569 + C1570 + C1571 - C1590 - C1591) *
               C31664 * C105 +
           (C1576 + C1577 - C1578 - C1579 + C1580 + C1581 - C1592 - C1593) *
               C31664 * C106) *
              C31439 * C31741 +
          (((C113 * C1013 + C31650 * C1018) * C1558 -
            ((C113 * C537 + C31650 * C554) * C1551 +
             (C113 * C524 + C31650 * C538) * C1557) +
            (C113 * C1019 + C31650 * C1028) * C1552 -
            (C113 * C1417 + C31650 * C1426) * C1559 -
            (C113 * C1427 + C31650 * C1444) * C1553 +
            (C113 * C1865 + C31650 * C1868) * C1560 +
            (C113 * C1869 + C31650 * C1874) * C31781) *
               C31664 * C104 +
           (C1052 * C1558 - (C587 * C1551 + C586 * C1557) + C1053 * C1552 -
            C1760 * C1559 - C1761 * C1553 +
            (C113 * C1866 + C31650 * C1870) * C1560 +
            (C113 * C1871 + C31650 * C1875) * C31781) *
               C31664 * C105 +
           (C1054 * C1558 - (C589 * C1551 + C588 * C1557) + C1056 * C1552 -
            C1762 * C1559 - C1763 * C1553 +
            (C113 * C1867 + C31650 * C1872) * C1560 +
            (C113 * C1873 + C31650 * C1876) * C31781) *
               C31664 * C106) *
              C31439 * C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C717 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31740 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C718 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C718 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C31740 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C717) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C717 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31740 -
            (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
             C5039 * C312 + C5035 * C326) *
                C718 -
            (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
             C5039 * C327 + C5035 * C342) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C718 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C31740 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C717) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C31530) *
               C31664 * C31425 * C302 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C717 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31740 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C718 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C31530) *
               C31664 * C31425 * C303 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1419 + C5036 * C1430 +
             C5041 * C1867 + C5037 * C1872) *
                C718 -
            ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
              C5039 * C534 + C5035 * C552) *
                 C31740 +
             (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
              C5039 * C522 + C5035 * C533) *
                 C717) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1431 + C5036 * C1446 +
             C5041 * C1873 + C5037 * C1876) *
                C31530) *
               C31664 * C31425 * C31765) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1557 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1551 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1558 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1552 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1559 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C1553 -
           (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
            C5039 * C1283 + C5035 * C1289) *
               C1560 -
           (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
            C5039 * C1290 + C5035 * C1301) *
               C31781) *
              C31664 * C31425 * C31439 * C31741 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1558 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1551 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1557) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1552 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1559 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C1553 +
           (C5039 * C1865 + C5035 * C1868 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C6256 + C5037 * C6257) *
               C1560 +
           (C5039 * C1869 + C5035 * C1874 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C6258 + C5037 * C6259) *
               C31781) *
              C31664 * C31425 * C31439 * C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
           (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
           (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
              C303 +
          (C408 * C104 +
           (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
           (C170 * C305 + C171 * C31808 - (C113 * C316 + C31650 * C334) * C306 -
            (C113 * C335 + C31650 * C346) * C31796 +
            (C113 * C317 + C31650 * C336) * C307 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C107 -
          (C188 * C106 + (C177 + C176) * C31664 * C105 +
           (C175 + C174) * C31664 * C104) *
              C108 +
          (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C109 -
          ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
           C188 * C104) *
              C110 +
          (C189 * C104 + (C183 + C182) * C31664 * C105 +
           ((C113 * C121 + C31650 * C134) * C114 +
            (C113 * C135 + C31650 * C142) * C31467) *
               C31664 * C106) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C302 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C303 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) *
               C31765) *
              C31809 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            (C602 + C603) * C31664 * C106) *
               C303 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C302 -
           (((C113 * C539 + C31650 * C555) * C31467 +
             (C113 * C525 + C31650 * C540) * C114) *
                C31664 * C106 +
            (C603 + C602) * C31664 * C105 + C612 * C104) *
               C31765) *
              C31798 +
          ((((C113 * C526 + C31650 * C541) * C114 +
             (C113 * C542 + C31650 * C556) * C31467) *
                C31664 * C104 +
            (C604 + C605) * C31664 * C105 + C613 * C106) *
               C302 -
           ((C608 + C609) * C31664 * C106 + (C607 + C606) * C31664 * C105 +
            (C605 + C604) * C31664 * C104) *
               C303 +
           (C613 * C104 + (C609 + C608) * C31664 * C105 +
            ((C113 * C530 + C31650 * C549) * C114 +
             (C113 * C550 + C31650 * C560) * C31467) *
                C31664 * C106) *
               C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31439 * C31809 +
          (((C113 * C1013 + C31650 * C1018) * C1184 -
            ((C113 * C537 + C31650 * C554) * C1177 +
             (C113 * C524 + C31650 * C538) * C1183) +
            (C113 * C1019 + C31650 * C1028) * C1178 -
            (C113 * C1417 + C31650 * C1426) * C1185 -
            (C113 * C1427 + C31650 * C1444) * C31771) *
               C31664 * C104 +
           (C1052 * C1184 - (C587 * C1177 + C586 * C1183) + C1053 * C1178 -
            (C113 * C1418 + C31650 * C1428) * C1185 -
            (C113 * C1429 + C31650 * C1445) * C31771) *
               C31664 * C105 +
           (C1054 * C1184 - (C589 * C1177 + C588 * C1183) + C1056 * C1178 -
            (C113 * C1419 + C31650 * C1430) * C1185 -
            (C113 * C1431 + C31650 * C1446) * C31771) *
               C31664 * C106) *
              C31439 * C31798 +
          (((C113 * C526 + C31650 * C541) * C1183 +
            (C113 * C542 + C31650 * C556) * C1177 -
            (C113 * C1420 + C31650 * C1432) * C1184 -
            (C113 * C1433 + C31650 * C1447) * C1178 +
            (C113 * C1421 + C31650 * C1434) * C1185 +
            (C113 * C1435 + C31650 * C1448) * C31771) *
               C31664 * C104 +
           (C592 * C1183 + C593 * C1177 -
            (C113 * C1422 + C31650 * C1436) * C1184 -
            (C113 * C1437 + C31650 * C1449) * C1178 +
            (C113 * C1423 + C31650 * C1438) * C1185 +
            (C113 * C1439 + C31650 * C1450) * C31771) *
               C31664 * C105 +
           (C594 * C1183 + C595 * C1177 -
            (C113 * C1424 + C31650 * C1440) * C1184 -
            (C113 * C1441 + C31650 * C1451) * C1178 +
            (C113 * C1425 + C31650 * C1442) * C1185 +
            (C113 * C1443 + C31650 * C1452) * C31771) *
               C31664 * C106) *
              C31439 * C31774)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31809 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C303 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C302 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C31765) *
              C31798 +
          (((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
             C5041 * C1421 + C5037 * C1434) *
                C114 +
            (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
             C5041 * C1435 + C5037 * C1448) *
                C31467) *
               C31664 * C31425 * C302 -
           ((C5041 * C1439 + C5037 * C1450 + C5040 * C1437 + C5036 * C1449 +
             C5039 * C544 + C5035 * C557) *
                C31467 +
            (C5041 * C1423 + C5037 * C1438 + C5040 * C1422 + C5036 * C1436 +
             C5039 * C527 + C5035 * C543) *
                C114) *
               C31664 * C31425 * C303 +
           ((C5039 * C528 + C5035 * C545 + C5040 * C1424 + C5036 * C1440 +
             C5041 * C1425 + C5037 * C1442) *
                C114 +
            (C5039 * C546 + C5035 * C558 + C5040 * C1441 + C5036 * C1451 +
             C5041 * C1443 + C5037 * C1452) *
                C31467) *
               C31664 * C31425 * C31765) *
              C31774)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31439 * C31809 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
            C5041 * C1865 + C5037 * C1868) *
               C1184 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C1177 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C1183) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
            C5041 * C1869 + C5037 * C1874) *
               C1178 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
            C5039 * C1417 + C5035 * C1426) *
               C1185 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
            C5039 * C1427 + C5035 * C1444) *
               C31771) *
              C31664 * C31425 * C31439 * C31798 +
          ((C5039 * C526 + C5035 * C541 + C5040 * C1420 + C5036 * C1432 +
            C5041 * C1421 + C5037 * C1434) *
               C1183 +
           (C5039 * C542 + C5035 * C556 + C5040 * C1433 + C5036 * C1447 +
            C5041 * C1435 + C5037 * C1448) *
               C1177 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1421 + C5036 * C1434 +
            C5039 * C1420 + C5035 * C1432) *
               C1184 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1435 + C5036 * C1448 +
            C5039 * C1433 + C5035 * C1447) *
               C1178 +
           (C5039 * C1421 + C5035 * C1434 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C5896 + C5037 * C5901) *
               C1185 +
           (C5039 * C1435 + C5035 * C1448 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C5902 + C5037 * C5905) *
               C31771) *
              C31664 * C31425 * C31439 * C31774)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C114 +
             (C113 * C123 + C31650 * C136) * C31467) *
                C31664 * C104 +
            (C174 + C175) * C31664 * C105 + C187 * C106) *
               C713 -
           (C188 * C106 + (C177 + C176) * C31664 * C105 +
            (C175 + C174) * C31664 * C104) *
               C714 +
           (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C715 -
           ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
            C188 * C104) *
               C31775) *
              C31741 +
          (((C598 + C599) * C31664 * C104 + (C600 + C601) * C31664 * C105 +
            C863 * C106) *
               C714 -
           (C612 * C106 + (C599 + C598) * C31664 * C105 +
            ((C113 * C537 + C31650 * C554) * C31467 +
             (C113 * C524 + C31650 * C538) * C114) *
                C31664 * C104) *
               C713 -
           ((C866 + C867) * C31664 * C106 + (C603 + C602) * C31664 * C105 +
            C612 * C104) *
               C715 +
           (C863 * C104 + (C867 + C866) * C31664 * C105 +
            ((C113 * C853 + C31650 * C854) * C114 +
             (C113 * C855 + C31650 * C856) * C31467) *
                C31664 * C106) *
               C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31650 * C122) * C1183 +
             (C113 * C123 + C31650 * C136) * C1177 -
             (C113 * C308 + C31650 * C318) * C1184 -
             (C113 * C319 + C31650 * C338) * C1178 +
             (C113 * C309 + C31650 * C320) * C1185 +
             (C113 * C321 + C31650 * C339) * C31771) *
                C31664 * C104 +
            (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
            C1210 * C106) *
               C31726 +
           ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
            (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
            (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
               C31449) *
              C31741 +
          ((((C113 * C1013 + C31650 * C1018) * C1184 -
             ((C113 * C537 + C31650 * C554) * C1177 +
              (C113 * C524 + C31650 * C538) * C1183) +
             (C113 * C1019 + C31650 * C1028) * C1178 -
             (C113 * C1417 + C31650 * C1426) * C1185 -
             (C113 * C1427 + C31650 * C1444) * C31771) *
                C31664 * C104 +
            (C1744 - (C1745 + C1746) + C1747 - C1764 - C1765) * C31664 * C105 +
            (C1752 - (C1753 + C1754) + C1755 - C1766 - C1767) * C31664 * C106) *
               C31726 +
           ((C1746 + C1745 - C1744 - C1747 + C1764 + C1765) * C31664 * C104 +
            (C1754 + C1753 - C1752 - C1755 + C1766 + C1767) * C31664 * C105 +
            (C590 * C1183 + C591 * C1177 - C1057 * C1184 - C1058 * C1178 +
             (C113 * C1739 + C31650 * C1740) * C1185 +
             (C113 * C1741 + C31650 * C1742) * C31771) *
                C31664 * C106) *
               C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C31467) *
               C31664 * C31425 * C713 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31467 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31664 * C31425 * C714 +
           ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
             C5041 * C313 + C5037 * C328) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
             C5041 * C329 + C5037 * C343) *
                C31467) *
               C31664 * C31425 * C715 -
           ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
             C5039 * C128 + C5035 * C139) *
                C31467 +
            (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31664 * C31425 * C31775) *
              C31741 +
          (((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C114 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C31467) *
               C31664 * C31425 * C714 -
           ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C537 + C5035 * C554) *
                C31467 +
            (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C524 + C5035 * C538) *
                C114) *
               C31664 * C31425 * C713 -
           ((C5041 * C1431 + C5037 * C1446 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C534 + C5035 * C552) *
                C31467 +
            (C5041 * C1419 + C5037 * C1430 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C522 + C5035 * C533) *
                C114) *
               C31664 * C31425 * C715 +
           ((C5039 * C523 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
             C5041 * C1739 + C5037 * C1740) *
                C114 +
            (C5039 * C536 + C5035 * C553 + C5040 * C1025 + C5036 * C1031 +
             C5041 * C1741 + C5037 * C1742) *
                C31467) *
               C31664 * C31425 * C31775) *
              C31572)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
             C5041 * C309 + C5037 * C320) *
                C1183 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
             C5041 * C321 + C5037 * C339) *
                C1177 -
            (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
             C5039 * C308 + C5035 * C318) *
                C1184 -
            (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
             C5039 * C319 + C5035 * C338) *
                C1178 +
            (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
             C5041 * C1284 + C5037 * C1291) *
                C1185 +
            (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
             C5041 * C1292 + C5037 * C1302) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
             C5041 * C1285 + C5037 * C1293) *
                C1184 -
            ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
              C5039 * C125 + C5035 * C137) *
                 C1177 +
             (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
              C5039 * C116 + C5035 * C124) *
                 C1183) +
            (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
             C5041 * C1294 + C5037 * C1303) *
                C1178 -
            (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
             C5039 * C311 + C5035 * C324) *
                C1185 -
            (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
             C5039 * C325 + C5035 * C341) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31741 +
          (((C5039 * C1013 + C5035 * C1018 + C5040 * C1417 + C5036 * C1426 +
             C5041 * C1865 + C5037 * C1868) *
                C1184 -
            ((C5041 * C1427 + C5037 * C1444 + C5040 * C1019 + C5036 * C1028 +
              C5039 * C537 + C5035 * C554) *
                 C1177 +
             (C5041 * C1417 + C5037 * C1426 + C5040 * C1013 + C5036 * C1018 +
              C5039 * C524 + C5035 * C538) *
                 C1183) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1427 + C5036 * C1444 +
             C5041 * C1869 + C5037 * C1874) *
                C1178 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1865 + C5036 * C1868 +
             C5039 * C1417 + C5035 * C1426) *
                C1185 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1869 + C5036 * C1874 +
             C5039 * C1427 + C5035 * C1444) *
                C31771) *
               C31664 * C31425 * C31726 +
           ((C5039 * C521 + C5035 * C531 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1418 + C5037 * C1428) *
                C1183 +
            (C5039 * C532 + C5035 * C551 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1429 + C5037 * C1445) *
                C1177 -
            (C5041 * C1866 + C5037 * C1870 + C5040 * C1418 + C5036 * C1428 +
             C5039 * C1014 + C5035 * C1020) *
                C1184 -
            (C5041 * C1871 + C5037 * C1875 + C5040 * C1429 + C5036 * C1445 +
             C5039 * C1021 + C5035 * C1029) *
                C1178 +
            (C5039 * C1418 + C5035 * C1428 + C5040 * C1866 + C5036 * C1870 +
             C5041 * C6154 + C5037 * C6155) *
                C1185 +
            (C5039 * C1429 + C5035 * C1445 + C5040 * C1871 + C5036 * C1875 +
             C5041 * C6156 + C5037 * C6157) *
                C31771) *
               C31664 * C31425 * C31449) *
              C31572)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C114 +
            (C113 * C123 + C31650 * C136) * C31467) *
               C31664 * C104 +
           (C174 + C175) * C31664 * C105 + C187 * C106) *
              C107 -
          (C188 * C106 + (C177 + C176) * C31664 * C105 +
           (C175 + C174) * C31664 * C104) *
              C108 +
          (C187 * C104 + (C179 + C178) * C31664 * C105 + C189 * C106) * C109 -
          ((C182 + C183) * C31664 * C106 + (C181 + C180) * C31664 * C105 +
           C188 * C104) *
              C110 +
          (C189 * C104 + (C183 + C182) * C31664 * C105 +
           ((C113 * C121 + C31650 * C134) * C114 +
            (C113 * C135 + C31650 * C142) * C31467) *
               C31664 * C106) *
              C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C305 +
            (C113 * C123 + C31650 * C136) * C31808 -
            (C113 * C308 + C31650 * C318) * C306 -
            (C113 * C319 + C31650 * C338) * C31796 +
            (C113 * C309 + C31650 * C320) * C307 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C349 + C350 - C392 - C393 + C394 + C395) * C31664 * C105 +
           C408 * C106) *
              C302 +
          ((C392 - (C350 + C349) + C393 - C394 - C395) * C31664 * C104 +
           (C396 - (C360 + C359) + C397 - C398 - C399) * C31664 * C105 +
           (C400 - (C371 + C372) + C401 - C402 - C403) * C31664 * C106) *
              C303 +
          (C408 * C104 +
           (C372 + C371 - C400 - C401 + C402 + C403) * C31664 * C105 +
           (C170 * C305 + C171 * C31808 - (C113 * C316 + C31650 * C334) * C306 -
            (C113 * C335 + C31650 * C346) * C31796 +
            (C113 * C317 + C31650 * C336) * C307 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31650 * C122) * C1183 +
            (C113 * C123 + C31650 * C136) * C1177 -
            (C113 * C308 + C31650 * C318) * C1184 -
            (C113 * C319 + C31650 * C338) * C1178 +
            (C113 * C309 + C31650 * C320) * C1185 +
            (C113 * C321 + C31650 * C339) * C31771) *
               C31664 * C104 +
           (C1187 + C1188 - C1189 - C1190 + C1191 + C1192) * C31664 * C105 +
           C1210 * C106) *
              C31805 +
          ((C1189 - (C1188 + C1187) + C1190 - C1191 - C1192) * C31664 * C104 +
           (C1195 - (C1194 + C1193) + C1196 - C1197 - C1198) * C31664 * C105 +
           (C1199 - (C1200 + C1201) + C1202 - C1203 - C1204) * C31664 * C106) *
              C31792 +
          (C1210 * C104 +
           (C1201 + C1200 - C1199 - C1202 + C1203 + C1204) * C31664 * C105 +
           (C170 * C1183 + C171 * C1177 - C744 * C1184 - C745 * C1178 +
            (C113 * C317 + C31650 * C336) * C1185 +
            (C113 * C337 + C31650 * C347) * C31771) *
               C31664 * C106) *
              C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31650 * C122) * C1278 +
           (C113 * C123 + C31650 * C136) * C1272 -
           (C113 * C308 + C31650 * C318) * C1279 -
           (C113 * C319 + C31650 * C338) * C1273 +
           (C113 * C309 + C31650 * C320) * C1280 +
           (C113 * C321 + C31650 * C339) * C1274 -
           (C113 * C1283 + C31650 * C1289) * C1281 -
           (C113 * C1290 + C31650 * C1301) * C1275 +
           (C113 * C1284 + C31650 * C1291) * C1282 +
           (C113 * C1292 + C31650 * C1302) * C1276) *
              C31664 * C104 +
          (C164 * C1278 + C165 * C1272 - C379 * C1279 - C380 * C1273 +
           C381 * C1280 + C382 * C1274 -
           (C113 * C1285 + C31650 * C1293) * C1281 -
           (C113 * C1294 + C31650 * C1303) * C1275 +
           (C113 * C1286 + C31650 * C1295) * C1282 +
           (C113 * C1296 + C31650 * C1304) * C1276) *
              C31664 * C105 +
          (C166 * C1278 + C167 * C1272 - C384 * C1279 - C385 * C1273 +
           C386 * C1280 + C387 * C1274 -
           (C113 * C1287 + C31650 * C1297) * C1281 -
           (C113 * C1298 + C31650 * C1305) * C1275 +
           (C113 * C1288 + C31650 * C1299) * C1282 +
           (C113 * C1300 + C31650 * C1306) * C1276) *
              C31664 * C106) *
         C31439 * C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31467) *
              C31664 * C31425 * C107 -
          ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
            C5039 * C125 + C5035 * C137) *
               C31467 +
           (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31664 * C31425 * C108 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31467) *
              C31664 * C31425 * C109 -
          ((C5041 * C333 + C5037 * C345 + C5040 * C331 + C5036 * C344 +
            C5039 * C128 + C5035 * C139) *
               C31467 +
           (C5041 * C315 + C5037 * C332 + C5040 * C314 + C5036 * C330 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31664 * C31425 * C110 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C316 + C5036 * C334 +
            C5041 * C317 + C5037 * C336) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C335 + C5036 * C346 +
            C5041 * C337 + C5037 * C347) *
               C31467) *
              C31664 * C31425 * C111) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C305 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C31808 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C306 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C31796 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C307 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C302 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C306 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C31808 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C305) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C31796 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C307 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C305 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C31808 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C306 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C31796 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C307 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
            C5041 * C309 + C5037 * C320) *
               C1183 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
            C5041 * C321 + C5037 * C339) *
               C1177 -
           (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
            C5039 * C308 + C5035 * C318) *
               C1184 -
           (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
            C5039 * C319 + C5035 * C338) *
               C1178 +
           (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
            C5041 * C1284 + C5037 * C1291) *
               C1185 +
           (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
            C5041 * C1292 + C5037 * C1302) *
               C31771) *
              C31664 * C31425 * C31805 +
          ((C5039 * C310 + C5035 * C322 + C5040 * C311 + C5036 * C324 +
            C5041 * C1285 + C5037 * C1293) *
               C1184 -
           ((C5041 * C325 + C5037 * C341 + C5040 * C323 + C5036 * C340 +
             C5039 * C125 + C5035 * C137) *
                C1177 +
            (C5041 * C311 + C5037 * C324 + C5040 * C310 + C5036 * C322 +
             C5039 * C116 + C5035 * C124) *
                C1183) +
           (C5039 * C323 + C5035 * C340 + C5040 * C325 + C5036 * C341 +
            C5041 * C1294 + C5037 * C1303) *
               C1178 -
           (C5041 * C1286 + C5037 * C1295 + C5040 * C1285 + C5036 * C1293 +
            C5039 * C311 + C5035 * C324) *
               C1185 -
           (C5041 * C1296 + C5037 * C1304 + C5040 * C1294 + C5036 * C1303 +
            C5039 * C325 + C5035 * C341) *
               C31771) *
              C31664 * C31425 * C31792 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C312 + C5036 * C326 +
            C5041 * C313 + C5037 * C328) *
               C1183 +
           (C5039 * C127 + C5035 * C138 + C5040 * C327 + C5036 * C342 +
            C5041 * C329 + C5037 * C343) *
               C1177 -
           (C5041 * C1287 + C5037 * C1297 + C5040 * C313 + C5036 * C328 +
            C5039 * C312 + C5035 * C326) *
               C1184 -
           (C5041 * C1298 + C5037 * C1305 + C5040 * C329 + C5036 * C343 +
            C5039 * C327 + C5035 * C342) *
               C1178 +
           (C5039 * C313 + C5035 * C328 + C5040 * C1287 + C5036 * C1297 +
            C5041 * C1288 + C5037 * C1299) *
               C1185 +
           (C5039 * C329 + C5035 * C343 + C5040 * C1298 + C5036 * C1305 +
            C5041 * C1300 + C5037 * C1306) *
               C31771) *
              C31664 * C31425 * C31765) *
         C31485) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C308 + C5036 * C318 +
           C5041 * C309 + C5037 * C320) *
              C1278 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C338 +
           C5041 * C321 + C5037 * C339) *
              C1272 -
          (C5041 * C1283 + C5037 * C1289 + C5040 * C309 + C5036 * C320 +
           C5039 * C308 + C5035 * C318) *
              C1279 -
          (C5041 * C1290 + C5037 * C1301 + C5040 * C321 + C5036 * C339 +
           C5039 * C319 + C5035 * C338) *
              C1273 +
          (C5039 * C309 + C5035 * C320 + C5040 * C1283 + C5036 * C1289 +
           C5041 * C1284 + C5037 * C1291) *
              C1280 +
          (C5039 * C321 + C5035 * C339 + C5040 * C1290 + C5036 * C1301 +
           C5041 * C1292 + C5037 * C1302) *
              C1274 -
          (C5041 * C5776 + C5037 * C5778 + C5040 * C1284 + C5036 * C1291 +
           C5039 * C1283 + C5035 * C1289) *
              C1281 -
          (C5041 * C5779 + C5037 * C5782 + C5040 * C1292 + C5036 * C1302 +
           C5039 * C1290 + C5035 * C1301) *
              C1275 +
          (C5039 * C1284 + C5035 * C1291 + C5040 * C5776 + C5036 * C5778 +
           C5041 * C5777 + C5037 * C5780) *
              C1282 +
          (C5039 * C1292 + C5035 * C1302 + C5040 * C5779 + C5036 * C5782 +
           C5041 * C5781 + C5037 * C5783) *
              C1276) *
         C31664 * C31425 * C31439 * C31485) /
            (p * q * std::sqrt(p + q));
}
