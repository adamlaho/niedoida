/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AC_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_13_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30239 = ce * de;
    const double C30238 = ce + de;
    const double C30237 = 0 * de;
    const double C30236 = zC - zD;
    const double C30277 = 0 * ce;
    const double C30272 = 0 * de;
    const double C30271 = 0 * de;
    const double C30322 = 0 * de;
    const double C30368 = ae * be;
    const double C30367 = ae + be;
    const double C30366 = 0 * be;
    const double C30365 = yA - yB;
    const double C30388 = zP - zQ;
    const double C30387 = yP - yQ;
    const double C30386 = p + q;
    const double C30385 = p * q;
    const double C30397 = bs[4];
    const double C30395 = xP - xQ;
    const double C30403 = bs[5];
    const double C30410 = bs[6];
    const double C30422 = bs[7];
    const double C30441 = bs[3];
    const double C30886 = bs[2];
    const double C115 = bs[0];
    const double C31260 = xA - xB;
    const double C31274 = xC - xD;
    const double C31303 = yC - yD;
    const double C31499 = zA - zB;
    const double C30240 = std::pow(C30238, 2);
    const double C30255 = 2 * C30238;
    const double C30273 = C30237 / C30238;
    const double C30241 = C30239 * C30236;
    const double C30274 = C30236 * C30237;
    const double C31321 = std::pow(C30236, 2);
    const double C31404 = C30236 * de;
    const double C31402 = C30236 * ce;
    const double C30284 = C30277 / C30238;
    const double C30279 = C30236 * C30272;
    const double C30323 = C30322 / C30238;
    const double C30369 = std::pow(C30367, 2);
    const double C30398 = C30238 * C30367;
    const double C136 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (yP - yQ) * (zP - zQ) * ae * ce) /
                         C30238) /
                        C30367;
    const double C137 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (yP - yQ) * (zP - zQ) * ae * ce) /
                         C30238) /
                        C30367;
    const double C31563 = 2 * C30367;
    const double C30370 = C30368 * C30365;
    const double C31486 = std::pow(C30365, 2);
    const double C31594 = C30365 * ae;
    const double C30436 = C30388 * ce;
    const double C30613 = std::pow(C30388, 2);
    const double C30390 = C30387 * C30388;
    const double C30483 = C30387 * ae;
    const double C30537 = std::pow(C30387, 2);
    const double C30389 = 2 * C30385;
    const double C30404 = std::pow(C30395, 2);
    const double C31261 = std::pow(C31260, 2);
    const double C31562 = C31260 * ae;
    const double C31277 = C31274 * de;
    const double C31276 = C31274 * ce;
    const double C31275 = std::pow(C31274, 2);
    const double C31304 = std::pow(C31303, 2);
    const double C31362 = C31303 * de;
    const double C31360 = C31303 * ce;
    const double C31500 = std::pow(C31499, 2);
    const double C31595 = C31499 * ae;
    const double C30242 = 2 * C30240;
    const double C31574 = 4 * C30240;
    const double C31289 = std::pow(C30255, -1);
    const double C31575 = C30240 * C30255;
    const double C31571 = std::pow(C30255, -2);
    const double C30282 = C30274 / C30238;
    const double C31322 = C31321 * C30239;
    const double C31578 = std::pow(C31402, 2);
    const double C30285 = C30279 / C30238;
    const double C30371 = 2 * C30369;
    const double C31598 = std::pow(C31563, -2);
    const double C31596 = std::pow(C31563, -1);
    const double C31487 = C31486 * C30368;
    const double C30442 = C30441 * C30436;
    const double C30445 = C30397 * C30436;
    const double C30449 = C30403 * C30436;
    const double C30456 = C30410 * C30436;
    const double C30469 = C30422 * C30436;
    const double C30392 = C30390 * ae;
    const double C30484 = C30441 * C30483;
    const double C30488 = C30397 * C30483;
    const double C30493 = C30403 * C30483;
    const double C30500 = C30410 * C30483;
    const double C30511 = C30422 * C30483;
    const double C30391 = C30389 / C30386;
    const double C122 = (-(bs[1] * C30483 * C30389) / C30386) / C30367;
    const double C123 = (bs[1] * C30436 * C30389) / (C30386 * C30238);
    const double C116 = -(C30395 * bs[1] * C30389) / C30386;
    const double C307 = -(C30387 * bs[1] * C30389) / C30386;
    const double C513 = -(C30388 * bs[1] * C30389) / C30386;
    const double C31262 = C31261 * C30368;
    const double C31564 = std::pow(C31276, 2);
    const double C31278 = C31275 * C30239;
    const double C31305 = C31304 * C30239;
    const double C31576 = std::pow(C31360, 2);
    const double C31501 = C31500 * C30368;
    const double C30276 = C30237 / C30242;
    const double C30281 = C30272 / C30242;
    const double C30280 = C30271 / C30242;
    const double C31607 = C30238 * C31574;
    const double C31608 = 4 * C31575;
    const double C30286 = 0 - C30282;
    const double C31323 = C31322 / C30238;
    const double C30289 = 0 - C30285;
    const double C31488 = C31487 / C30367;
    const double C30393 = C30392 * ce;
    const double C30396 = std::pow(C30391, 4);
    const double C30402 = -C30391;
    const double C30409 = std::pow(C30391, 6);
    const double C30885 = std::pow(C30391, 2);
    const double C124 =
        (C30395 * std::pow(C30391, 2) * bs[2] * C30483) / C30367;
    const double C125 =
        -(C30395 * std::pow(C30391, 2) * bs[2] * C30436) / C30238;
    const double C319 =
        -(C30387 * std::pow(C30391, 2) * bs[2] * C30436) / C30238;
    const double C320 =
        (C30387 * std::pow(C30391, 2) * bs[2] * C30483) / C30367 -
        (ae * bs[1] * C30389) / (C30386 * C30367);
    const double C31263 = C31262 / C30367;
    const double C31279 = C31278 / C30238;
    const double C31306 = C31305 / C30238;
    const double C31502 = C31501 / C30367;
    const double C30290 = C30286 * ce;
    const double C31324 = -C31323;
    const double C30293 = C30289 * ce;
    const double C31489 = -C31488;
    const double C30399 = C30397 * C30393;
    const double C30406 = C30403 * C30393;
    const double C30412 = C30410 * C30393;
    const double C30425 = C30422 * C30393;
    const double C138 =
        (-(std::pow(C30391, 4) * bs[4] * C30393 * std::pow(xP - xQ, 2)) /
         C30238) /
            C30367 -
        (std::pow(-C30391, 3) * bs[3] * C30393) / (C30238 * C30367);
    const double C30446 = C30396 * C30445;
    const double C30489 = C30396 * C30488;
    const double C30526 = C30397 * C30396;
    const double C30405 = std::pow(C30402, 5);
    const double C30421 = std::pow(C30402, 7);
    const double C30440 = std::pow(C30402, 3);
    const double C337 =
        (-(C30387 * std::pow(C30402, 3) * bs[3] * C30393) / C30238) / C30367 -
        (ae * std::pow(C30391, 2) * bs[2] * C30436) / C30398;
    const double C30458 = C30409 * C30456;
    const double C30502 = C30409 * C30500;
    const double C30580 = C30410 * C30409;
    const double C30887 = C30886 * C30885;
    const double C523 = (C30388 * C30885 * C30886 * C30483) / C30367;
    const double C524 = (ce * bs[1] * C30389) / (C30386 * C30238) -
                        (C30388 * C30885 * C30886 * C30436) / C30238;
    const double C31264 = -C31263;
    const double C31280 = -C31279;
    const double C31307 = -C31306;
    const double C31503 = -C31502;
    const double C30294 = C30290 / C30238;
    const double C31325 = std::exp(C31324);
    const double C30297 = C30293 / C30238;
    const double C31490 = std::exp(C31489);
    const double C30400 = C30396 * C30399;
    const double C30413 = C30409 * C30412;
    const double C30447 = C30395 * C30446;
    const double C30536 = ae * C30446;
    const double C30534 = C30387 * C30446;
    const double C31006 = C30388 * C30446;
    const double C30490 = C30395 * C30489;
    const double C30591 = C30489 * ce;
    const double C30612 = C30388 * C30489;
    const double C30951 = C30387 * C30489;
    const double C30567 = C30395 * C30526;
    const double C30573 = C30387 * C30526;
    const double C30709 = C30526 * ce;
    const double C30807 = C30388 * C30526;
    const double C30893 = C30526 * C30404;
    const double C30954 = C30526 * C30537;
    const double C31009 = C30526 * C30613;
    const double C31046 = C30526 * ae;
    const double C30407 = C30405 * C30406;
    const double C30450 = C30405 * C30449;
    const double C30494 = C30405 * C30493;
    const double C30528 = C30403 * C30405;
    const double C30427 = C30421 * C30425;
    const double C30472 = C30421 * C30469;
    const double C30513 = C30421 * C30511;
    const double C30443 = C30440 * C30442;
    const double C30485 = C30440 * C30484;
    const double C30565 = C30441 * C30440;
    const double C543 =
        (-(C30388 * C30440 * C30441 * C30393) / C30238) / C30367 -
        (std::pow(C30391, 2) * bs[2] * C30387 * ae * ce) / C30398;
    const double C30460 = C30458 * C30404;
    const double C30468 = C30395 * C30458;
    const double C30635 = C30458 * C30537;
    const double C30659 = ae * C30458;
    const double C30657 = C30387 * C30458;
    const double C30718 = C30388 * C30458;
    const double C30503 = C30502 * C30404;
    const double C30510 = C30395 * C30502;
    const double C30717 = C30502 * ce;
    const double C30715 = C30388 * C30502;
    const double C30809 = C30502 * C30613;
    const double C31057 = C30387 * C30502;
    const double C30581 = C30580 * C30404;
    const double C30723 = C30387 * C30580;
    const double C30722 = C30580 * C30537;
    const double C30779 = C30395 * C30580;
    const double C30815 = C30580 * C30613;
    const double C117 = C30887 * C30404 - (bs[1] * C30389) / C30386;
    const double C306 = C30387 * C30395 * C30887;
    const double C308 = C30887 * C30537 - (bs[1] * C30389) / C30386;
    const double C514 = C30887 * C30613 - (bs[1] * C30389) / C30386;
    const double C515 = C30388 * C30395 * C30887;
    const double C1013 = C30388 * C30387 * C30887;
    const double C31265 = std::exp(C31264);
    const double C31281 = std::exp(C31280);
    const double C31308 = std::exp(C31307);
    const double C31504 = std::exp(C31503);
    const double C30298 = C30294 - C30281;
    const double C30243 = C30241 * C31325;
    const double C114 = -(2 * ce * de * (zC - zD) * C31325) / (ce + de);
    const double C31403 = C31325 / C30255;
    const double C31405 = C31325 * C31402;
    const double C31412 = C31289 * C31325;
    const double C31588 = C31325 * C31404;
    const double C31614 = C31571 * C31325;
    const double C31612 = C31325 * C31578;
    const double C30301 = C30297 - C30280;
    const double C151 = C31490 * C138;
    const double C147 = C31490 * C137;
    const double C145 = C31490 * C124;
    const double C9427 = C31490 * C523;
    const double C30372 = C30370 * C31490;
    const double C113 = -(2 * ae * be * (yA - yB) * C31490) / (ae + be);
    const double C31628 = C31490 * C31594;
    const double C5035 =
        (C31490 * std::pow(C31594, 2)) / C30369 + C31490 / C31563;
    const double C5037 = C31598 * C31490;
    const double C13452 = C31596 * C31490;
    const double C139 =
        (-2 * C30395 * C30400) / C30398 +
        C30395 *
            ((-(std::pow(-C30391, 5) * bs[5] * C30393 * std::pow(C30395, 2)) /
              C30238) /
                 C30367 -
             C30400 / C30398);
    const double C336 =
        (-(C30387 * C30395 * C30400) / C30238) / C30367 -
        (ae * C30395 * std::pow(C30402, 3) * bs[3] * C30436) / C30398;
    const double C30414 = C30413 * C30404;
    const double C30423 = C30413 / C30398;
    const double C30420 = C30395 * C30413;
    const double C30633 = C30387 * C30413;
    const double C30689 = C30388 * C30413;
    const double C30539 = C30536 / C30398;
    const double C30593 = C30591 / C30398;
    const double C30900 = 2 * C30567;
    const double C30961 = C30387 * C30567;
    const double C30960 = C30567 * ae;
    const double C31018 = C30388 * C30567;
    const double C31017 = C30567 * ce;
    const double C31048 = 2 * C30573;
    const double C31047 = C30573 * ae;
    const double C31101 = C30388 * C30573;
    const double C31100 = C30573 * ce;
    const double C31122 = 2 * C30807;
    const double C31121 = C30807 * ce;
    const double C30411 = C30407 / C30398;
    const double C30531 = C30395 * C30407;
    const double C30535 = C30387 * C30407;
    const double C30590 = C30388 * C30407;
    const double C140 =
        3 * ((-(C30407 * C30404) / C30238) / C30367 - C30400 / C30398) +
        C30395 * ((-2 * C30395 * C30407) / C30398 +
                  C30395 * ((-(std::pow(C30391, 6) * bs[6] * C30393 * C30404) /
                             C30238) /
                                C30367 -
                            C30407 / C30398));
    const double C335 =
        C30387 * ((-(C30407 * C30404) / C30238) / C30367 - C30400 / C30398) -
        (ae * (C30396 * C30397 * C30436 * C30404 +
               std::pow(C30402, 3) * bs[3] * C30436)) /
            C30398;
    const double C339 =
        (-(ae * C30387 * C30447) / C30238) / C30367 -
        (C30395 * C30400) / C30398 +
        C30387 * ((-(C30387 * C30395 * C30407) / C30238) / C30367 -
                  (ae * C30447) / C30398);
    const double C546 =
        (-(C30388 * C30490 * ce) / C30238) / C30367 -
        (C30395 * C30400) / C30398 +
        C30388 * ((-(C30388 * C30395 * C30407) / C30238) / C30367 -
                  (C30490 * ce) / C30398);
    const double C1029 =
        C30387 * ((-(C30388 * C30395 * C30407) / C30238) / C30367 -
                  (C30490 * ce) / C30398) -
        (ae * (C30388 * C30447 + C30395 * C30441 * C30440 * ce)) / C30398;
    const double C30451 = C30450 * C30404;
    const double C30455 = C30395 * C30450;
    const double C30540 = C30450 * C30537;
    const double C30634 = ae * C30450;
    const double C30632 = C30387 * C30450;
    const double C30708 = C30388 * C30450;
    const double C30495 = C30494 * C30404;
    const double C30499 = C30395 * C30494;
    const double C30614 = C30494 * C30613;
    const double C30690 = C30494 * ce;
    const double C30688 = C30388 * C30494;
    const double C31045 = C30387 * C30494;
    const double C30569 = C30528 * C30404;
    const double C30576 = C30395 * C30528;
    const double C30692 = C30387 * C30528;
    const double C30691 = C30528 * C30537;
    const double C30720 = C30388 * C30528;
    const double C30719 = C30528 * ce;
    const double C30808 = C30528 * C30613;
    const double C31058 = C30528 * ae;
    const double C30428 = C30427 * C30404;
    const double C30658 = C30387 * C30427;
    const double C30716 = C30388 * C30427;
    const double C30751 = C30395 * C30427;
    const double C30474 = C30472 * C30404;
    const double C30661 = C30472 * C30537;
    const double C30753 = C30395 * C30472;
    const double C30514 = C30513 * C30404;
    const double C30816 = C30513 * C30613;
    const double C30824 = C30395 * C30513;
    const double C338 = (-(ae * C30387 * C30443) / C30238) / C30367 -
                        (C30440 * C30441 * C30393) / C30398 +
                        C30387 * ((-(C30387 * C30400) / C30238) / C30367 -
                                  (ae * C30443) / C30398);
    const double C1271 =
        2 * ((-(C30387 * C30400) / C30238) / C30367 - (ae * C30443) / C30398) -
        (ae * (C30446 * std::pow(C30387, 2) + C30443)) / C30398 +
        C30387 *
            ((-(ae * C30387 * C30446) / C30238) / C30367 - C30400 / C30398 +
             C30387 * ((-(C30387 * C30407) / C30238) / C30367 -
                       (ae * C30446) / C30398));
    const double C127 =
        -(C30443 * C30404 + std::pow(C30391, 2) * bs[2] * C30436) / C30238;
    const double C128 = (-2 * C30395 * C30443) / C30238 -
                        (C30395 * (C30446 * C30404 + C30443)) / C30238;
    const double C315 = -(C30387 * (C30446 * C30404 + C30443)) / C30238;
    const double C317 = -(C30387 * C30395 * C30443) / C30238;
    const double C322 = -(C30443 * C30537 + C30885 * C30886 * C30436) / C30238;
    const double C324 = -(C30447 * C30537 + C30395 * C30443) / C30238;
    const double C526 = -(C30388 * (C30388 * C30443 + C30887 * ce) +
                          C30885 * C30886 * C30436 + C30388 * C30887 * ce) /
                        C30238;
    const double C528 =
        -(C30388 * C30395 * C30443 + C30395 * C30887 * ce) / C30238;
    const double C1019 =
        -(C30388 * C30387 * C30443 + C30387 * C30887 * ce) / C30238;
    const double C1261 = (-2 * C30387 * C30443) / C30238 -
                         (C30387 * (C30446 * C30537 + C30443)) / C30238;
    const double C544 = (-(C30388 * C30485 * ce) / C30238) / C30367 -
                        (C30440 * C30441 * C30393) / C30398 +
                        C30388 * ((-(C30388 * C30400) / C30238) / C30367 -
                                  (C30485 * ce) / C30398);
    const double C545 = (-(C30388 * C30395 * C30400) / C30238) / C30367 -
                        (C30395 * C30485 * ce) / C30398;
    const double C547 =
        C30388 * ((-(C30407 * C30404) / C30238) / C30367 - C30400 / C30398) -
        ((C30485 + C30489 * C30404) * ce) / C30398;
    const double C1028 =
        C30387 *
            ((-(C30388 * C30400) / C30238) / C30367 - (C30485 * ce) / C30398) -
        (ae * (C30388 * C30443 + bs[2] * std::pow(C30391, 2) * ce)) / C30398;
    const double C126 =
        (std::pow(C30391, 2) * bs[2] * C30483 + C30485 * C30404) / C30367;
    const double C129 =
        (2 * C30395 * C30485 + C30395 * (C30485 + C30489 * C30404)) / C30367;
    const double C318 =
        (C30387 * C30395 * C30485 + C30395 * bs[2] * std::pow(C30391, 2) * ae) /
        C30367;
    const double C321 =
        (C30885 * C30886 * C30483 + C30387 * (C30387 * C30485 + C30887 * ae) +
         C30387 * C30887 * ae) /
        C30367;
    const double C525 = (C30885 * C30886 * C30483 + C30485 * C30613) / C30367;
    const double C527 = (C30388 * C30395 * C30485) / C30367;
    const double C529 = (C30395 * C30485 + C30490 * C30613) / C30367;
    const double C531 = (C30388 * (C30485 + C30489 * C30404)) / C30367;
    const double C1018 = (C30388 * (C30387 * C30485 + C30887 * ae)) / C30367;
    const double C2153 =
        (2 * C30388 * C30485 + C30388 * (C30485 + C30489 * C30613)) / C30367;
    const double C1412 =
        C30387 *
            ((-(C30388 * C30489 * ce) / C30238) / C30367 - C30400 / C30398 +
             C30388 * ((-(C30388 * C30407) / C30238) / C30367 -
                       (C30489 * ce) / C30398)) -
        (ae * (C30388 * (C30388 * C30446 + C30565 * ce) + C30443 +
               C30388 * C30565 * ce)) /
            C30398;
    const double C1415 =
        (-(C30388 * C30400) / C30238) / C30367 - (C30485 * ce) / C30398 -
        (ae * (C30388 * C30534 + C30387 * C30565 * ce)) / C30398 +
        C30387 * (C30387 * ((-(C30388 * C30407) / C30238) / C30367 -
                            (C30489 * ce) / C30398) -
                  (ae * (C30388 * C30446 + C30565 * ce)) / C30398);
    const double C30890 = C30395 * C30565;
    const double C30894 = C30565 + C30893;
    const double C30953 = C30387 * C30565;
    const double C30952 = C30565 * ae;
    const double C30956 = C30565 + C30954;
    const double C31008 = C30388 * C30565;
    const double C31007 = C30565 * ce;
    const double C31011 = C30565 + C31009;
    const double C316 = (C30387 * (C30485 + C30489 * C30404) +
                         (bs[2] * std::pow(C30391, 2) + C30565 * C30404) * ae) /
                        C30367;
    const double C532 = -(C30388 * (C30446 * C30404 + C30443) +
                          (C30887 + C30565 * C30404) * ce) /
                        C30238;
    const double C1262 =
        (2 * (C30387 * C30485 + C30887 * ae) +
         C30387 * (C30485 + C30387 * (C30387 * C30489 + C30565 * ae) +
                   C30387 * C30565 * ae) +
         (C30887 + C30565 * C30537) * ae) /
        C30367;
    const double C1401 = -(C30388 * (C30446 * C30537 + C30443) +
                           (C30887 + C30565 * C30537) * ce) /
                         C30238;
    const double C2154 = (-2 * (C30388 * C30443 + C30887 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30446 + C30565 * ce) +
                                    C30443 + C30388 * C30565 * ce)) /
                             C30238 -
                         ((C30887 + C30565 * C30613) * ce) / C30238;
    const double C118 =
        2 * C30395 * C30887 + C30395 * (C30887 + C30565 * C30404);
    const double C305 = C30387 * (C30887 + C30565 * C30404);
    const double C517 = C30388 * (C30887 + C30565 * C30404);
    const double C1253 =
        2 * C30387 * C30887 + C30387 * (C30887 + C30565 * C30537);
    const double C1388 = C30388 * (C30887 + C30565 * C30537);
    const double C2147 =
        2 * C30388 * C30887 + C30388 * (C30887 + C30565 * C30613);
    const double C9429 = C31490 * C543;
    const double C30461 = C30460 + C30450;
    const double C30471 = -2 * C30468;
    const double C30549 = C30468 * C30537;
    const double C30752 = ae * C30468;
    const double C30749 = C30387 * C30468;
    const double C30777 = C30388 * C30468;
    const double C30640 = C30635 + C30450;
    const double C30665 = C30659 / C30398;
    const double C30667 = -2 * C30657;
    const double C30663 = ae * C30657;
    const double C30793 = C30388 * C30657;
    const double C30504 = C30494 + C30503;
    const double C30512 = 2 * C30510;
    const double C30619 = C30510 * C30613;
    const double C30776 = C30510 * ce;
    const double C30821 = C30388 * C30510;
    const double C31079 = C30387 * C30510;
    const double C30726 = C30717 / C30398;
    const double C30724 = C30715 * ce;
    const double C30845 = 2 * C30715;
    const double C30811 = C30494 + C30809;
    const double C30582 = C30528 + C30581;
    const double C30814 = C30723 * C30613;
    const double C30729 = C30528 + C30722;
    const double C30783 = C30779 * C30537;
    const double C30823 = C30387 * C30779;
    const double C30852 = C30779 * C30613;
    const double C30818 = C30528 + C30815;
    const double C31597 = C31265 * C31562;
    const double C104 =
        (C31265 * std::pow(C31562, 2)) / C30369 + C31265 / C31563;
    const double C106 = C31598 * C31265;
    const double C13454 = C31596 * C31265;
    const double C31283 = C31281 * C31276;
    const double C31282 = C31281 / C30255;
    const double C31291 = C31289 * C31281;
    const double C31567 = C31281 * C31277;
    const double C31605 = C31571 * C31281;
    const double C31599 = C31281 * C31564;
    const double C31361 = C31308 / C30255;
    const double C31363 = C31308 * C31360;
    const double C31370 = C31289 * C31308;
    const double C31582 = C31308 * C31362;
    const double C31611 = C31571 * C31308;
    const double C31609 = C31308 * C31576;
    const double C31629 = C31504 * C31595;
    const double C9202 =
        (C31504 * std::pow(C31595, 2)) / C30369 + C31504 / C31563;
    const double C9204 = C31598 * C31504;
    const double C19146 = C31596 * C31504;
    const double C30303 = C30298 / C30255;
    const double C30302 = C30236 * C30298;
    const double C30256 = 2 * C30243;
    const double C30278 = C30243 / C30240;
    const double C512 = ((0 * ce) / C30238 - C30243 / C30240) / (2 * C30238) +
                        (0 * ce) / C30238;
    const double C831 =
        ((C31325 - (C30236 * 2 * C30243) / C30238) * ce) / C30238 -
        C30237 / C30242;
    const double C832 = (0 * ce) / C30238 - C30243 / C30240;
    const double C1935 = (C31325 * std::pow(C31404, 2)) / C30240 + C31403;
    const double C31406 = C31405 * C31404;
    const double C31411 = C31405 / C30242;
    const double C31581 = C31405 / C30238;
    const double C31579 = C31289 * C31405;
    const double C511 =
        (((C31325 - (C30236 * 2 * C30243) / C30238) * ce) / C30238 -
         C30237 / C30242) /
            (2 * C30238) +
        ((C30236 * ((0 * ce) / C30238 - C30243 / C30240) + C31412) * ce) /
            C30238;
    const double C31413 = C31412 * C31404;
    const double C31592 = C31402 * C31412;
    const double C31591 = 2 * C31412;
    const double C31627 = C31412 / C31574;
    const double C2141 = C31412 / C31608;
    const double C4043 = C31412 / C30255;
    const double C31623 = C31588 / C30238;
    const double C1936 = (-2 * C31289 * C31588) / C30238;
    const double C31637 = C31612 / C30240;
    const double C30307 = C30301 + C30273;
    const double C5041 = ((0 * ae) / C30367 - C30372 / C30369) / (2 * C30367) +
                         (0 * ae) / C30367;
    const double C13455 =
        ((C31490 - (C30365 * 2 * C30372) / C30367) * ae) / C30367 -
        C30366 / C30371;
    const double C13456 = (0 * ae) / C30367 - C30372 / C30369;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C352 = C113 * C306;
    const double C556 = C113 * C515;
    const double C9430 = C113 * C514;
    const double C9428 = C113 * C524;
    const double C9426 = C113 * C513;
    const double C9786 = C113 * C1013;
    const double C5036 = (2 * C31596 * C31628) / C30367;
    const double C13451 = C31628 / C30367;
    const double C5040 =
        (((C31490 - (C30365 * 2 * C30372) / C30367) * ae) / C30367 -
         C30366 / C30371) /
            (2 * C30367) +
        ((C30365 * ((0 * ae) / C30367 - C30372 / C30369) + C13452) * ae) /
            C30367;
    const double C153 = C31490 * C139;
    const double C351 = C31490 * C336;
    const double C13465 = C13452 * C336;
    const double C30415 = C30414 / C30238;
    const double C30424 = -2 * C30420;
    const double C30547 = C30387 * C30420;
    const double C30598 = C30388 * C30420;
    const double C30750 = C30420 / C30398;
    const double C30637 = C30633 / C30238;
    const double C30694 = C30689 / C30238;
    const double C1416 =
        (-(C30388 * C30489 * ce) / C30238) / C30367 - C30400 / C30398 +
        C30388 *
            ((-(C30388 * C30407) / C30238) / C30367 - (C30489 * ce) / C30398) -
        (ae * (C30388 * (C30388 * C30387 * C30450 + C30573 * ce) + C30534 +
               C30388 * C30573 * ce)) /
            C30398 +
        C30387 *
            (C30387 * ((-(C30388 * C30494 * ce) / C30238) / C30367 - C30411 +
                       C30388 * ((-(C30388 * C30413) / C30238) / C30367 -
                                 (C30494 * ce) / C30398)) -
             (ae * (C30388 * (C30388 * C30450 + C30526 * ce) + C30446 +
                    C30388 * C30526 * ce)) /
                 C30398);
    const double C30538 = C30535 / C30238;
    const double C30592 = C30590 / C30238;
    const double C159 = C31490 * C140;
    const double C347 = C31490 * C335;
    const double C13467 = C13452 * C335;
    const double C357 = C31490 * C339;
    const double C13653 = C13452 * C339;
    const double C563 = C31490 * C546;
    const double C1039 = C31490 * C1029;
    const double C13851 = C13452 * C1029;
    const double C30452 = C30451 + C30446;
    const double C30457 = -2 * C30455;
    const double C30548 = ae * C30455;
    const double C30546 = C30387 * C30455;
    const double C1270 =
        2 * ((-(C30387 * C30531) / C30238) / C30367 - (ae * C30447) / C30398) -
        (ae * (C30455 * std::pow(C30387, 2) + C30447)) / C30398 +
        C30387 *
            ((-(ae * C30387 * C30455) / C30238) / C30367 - C30531 / C30398 +
             C30387 * ((-(C30387 * C30420) / C30238) / C30367 -
                       (ae * C30455) / C30398));
    const double C31016 = C30388 * C30455;
    const double C1259 = (-2 * C30387 * C30447) / C30238 -
                         (C30387 * (C30455 * C30537 + C30447)) / C30238;
    const double C30542 = C30540 + C30446;
    const double C30638 = C30634 / C30398;
    const double C30639 = -2 * C30632;
    const double C30636 = ae * C30632;
    const double C31099 = C30388 * C30632;
    const double C30710 = C30708 + C30709;
    const double C30496 = C30489 + C30495;
    const double C30501 = 2 * C30499;
    const double C30599 = C30499 * ce;
    const double C30618 = C30388 * C30499;
    const double C1413 =
        C30387 *
            ((-(C30388 * C30499 * ce) / C30238) / C30367 - C30531 / C30398 +
             C30388 * ((-(C30388 * C30420) / C30238) / C30367 -
                       (C30499 * ce) / C30398)) -
        (ae * (C30388 * (C30388 * C30455 + C30567 * ce) + C30447 +
               C30388 * C30567 * ce)) /
            C30398;
    const double C30959 = C30387 * C30499;
    const double C2157 =
        (2 * C30388 * C30490 + C30388 * (C30490 + C30499 * C30613)) / C30367;
    const double C30615 = C30489 + C30614;
    const double C30695 = C30690 / C30398;
    const double C30693 = C30688 * ce;
    const double C30840 = 2 * C30688;
    const double C31050 = C31045 + C31046;
    const double C30570 = C30526 + C30569;
    const double C30577 = C30387 * C30576;
    const double C30586 = 2 * C30576;
    const double C30778 = C30576 * ce;
    const double C30851 = C30388 * C30576;
    const double C30962 = C30576 * C30537;
    const double C31019 = C30576 * C30613;
    const double C31080 = C30576 * ae;
    const double C30721 = 2 * C30692;
    const double C30794 = C30692 * ce;
    const double C30813 = C30388 * C30692;
    const double C31059 = C30692 * ae;
    const double C31102 = C30692 * C30613;
    const double C30696 = C30526 + C30691;
    const double C30728 = C30720 * ce;
    const double C30861 = 2 * C30720;
    const double C30727 = C30718 + C30719;
    const double C30810 = C30526 + C30808;
    const double C31063 = C31057 + C31058;
    const double C30429 = C30428 / C30238;
    const double C30664 = C30658 / C30238;
    const double C30725 = C30716 / C30238;
    const double C30755 = C30387 * C30751;
    const double C30775 = C30388 * C30751;
    const double C30475 = C30474 + C30458;
    const double C30668 = C30661 + C30458;
    const double C30758 = C30753 * C30537;
    const double C30515 = C30502 + C30514;
    const double C30819 = C30502 + C30816;
    const double C30853 = C30824 * C30613;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C346 = C113 * C315;
    const double C350 = C113 * C317;
    const double C356 = C113 * C324;
    const double C9432 = C113 * C526;
    const double C558 = C113 * C528;
    const double C9788 = C113 * C1019;
    const double C9433 = C31490 * C544;
    const double C559 = C31490 * C545;
    const double C569 = C31490 * C547;
    const double C9789 = C31490 * C1028;
    const double C25037 = C13452 * C1028;
    const double C149 = C31490 * C126;
    const double C155 = C31490 * C129;
    const double C353 = C31490 * C318;
    const double C13461 = C13452 * C318;
    const double C9431 = C31490 * C525;
    const double C557 = C31490 * C527;
    const double C561 = C31490 * C529;
    const double C567 = C31490 * C531;
    const double C9787 = C31490 * C1018;
    const double C25033 = C13452 * C1018;
    const double C9435 = C31490 * C2153;
    const double C9793 = C31490 * C1412;
    const double C25047 = C13452 * C1412;
    const double C10087 = C31490 * C1415;
    const double C25517 = C13452 * C1415;
    const double C323 =
        (C30395 * C30485 + C30387 * (C30387 * C30490 + C30890 * ae) +
         C30387 * C30890 * ae) /
        C30367;
    const double C530 = -(C30388 * (C30388 * C30447 + C30890 * ce) +
                          C30395 * C30443 + C30388 * C30890 * ce) /
                        C30238;
    const double C1020 = (C30388 * (C30387 * C30490 + C30890 * ae)) / C30367;
    const double C1021 =
        -(C30388 * C30387 * C30447 + C30387 * C30890 * ce) / C30238;
    const double C1260 =
        (2 * (C30387 * C30490 + C30890 * ae) +
         C30387 * (C30490 + C30387 * (C30387 * C30499 + C30567 * ae) +
                   C30387 * C30567 * ae) +
         (C30890 + C30567 * C30537) * ae) /
        C30367;
    const double C1405 = -(C30388 * (C30455 * C30537 + C30447) +
                           (C30890 + C30567 * C30537) * ce) /
                         C30238;
    const double C2158 = (-2 * (C30388 * C30447 + C30890 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30455 + C30567 * ce) +
                                    C30447 + C30388 * C30567 * ce)) /
                             C30238 -
                         ((C30890 + C30567 * C30613) * ce) / C30238;
    const double C309 = C30395 * C30887 + C30890 * C30537;
    const double C516 = C30395 * C30887 + C30890 * C30613;
    const double C1014 = C30388 * C30387 * C30890;
    const double C1252 =
        2 * C30387 * C30890 + C30387 * (C30890 + C30567 * C30537);
    const double C1386 = C30387 * C30890 + C30961 * C30613;
    const double C1390 = C30388 * (C30890 + C30567 * C30537);
    const double C2149 =
        2 * C30388 * C30890 + C30388 * (C30890 + C30567 * C30613);
    const double C119 = 3 * (C30887 + C30565 * C30404) +
                        C30395 * (2 * C30890 + C30395 * C30894);
    const double C310 = C30887 + C30565 * C30404 + C30894 * C30537;
    const double C311 = C30387 * (2 * C30890 + C30395 * C30894);
    const double C518 = C30887 + C30565 * C30404 + C30894 * C30613;
    const double C519 = C30388 * (2 * C30890 + C30395 * C30894);
    const double C1015 = C30388 * C30387 * C30894;
    const double C1395 = -(C30388 * (C30388 * C30534 + C30953 * ce) +
                           C30387 * C30443 + C30388 * C30953 * ce) /
                         C30238;
    const double C2585 = (-2 * (C30388 * C30534 + C30953 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30632 + C30573 * ce) +
                                    C30534 + C30388 * C30573 * ce)) /
                             C30238 -
                         ((C30953 + C30573 * C30613) * ce) / C30238;
    const double C1385 = C30387 * C30887 + C30953 * C30613;
    const double C2581 =
        2 * C30388 * C30953 + C30388 * (C30953 + C30573 * C30613);
    const double C30955 = C30951 + C30952;
    const double C1254 = 3 * (C30887 + C30565 * C30537) +
                         C30387 * (2 * C30953 + C30387 * C30956);
    const double C1389 = C30887 + C30565 * C30537 + C30956 * C30613;
    const double C1813 = C30388 * (2 * C30953 + C30387 * C30956);
    const double C31010 = C31006 + C31007;
    const double C2148 = 3 * (C30887 + C30565 * C30613) +
                         C30388 * (2 * C31008 + C30388 * C31011);
    const double C349 = C31490 * C316;
    const double C13471 = C13452 * C316;
    const double C568 = C113 * C532;
    const double C10086 = C113 * C1401;
    const double C9436 = C113 * C2154;
    const double C154 = C113 * C118;
    const double C348 = C113 * C305;
    const double C566 = C113 * C517;
    const double C10084 = C113 * C1388;
    const double C9434 = C113 * C2147;
    const double C30462 = C30395 * C30461;
    const double C30467 = -3 * C30461;
    const double C30559 = ae * C30461;
    const double C30557 = C30387 * C30461;
    const double C31026 = C30388 * C30461;
    const double C30473 = C30471 / C30238;
    const double C30552 = C30549 + C30455;
    const double C30756 = C30752 / C30398;
    const double C30757 = -2 * C30749;
    const double C30754 = ae * C30749;
    const double C31142 = C30388 * C30749;
    const double C30644 = C30387 * C30640;
    const double C30660 = -3 * C30640;
    const double C30656 = ae * C30640;
    const double C31106 = C30388 * C30640;
    const double C30672 = C30667 / C30238;
    const double C30670 = C30663 / C30238;
    const double C30505 = C30395 * C30504;
    const double C30509 = 3 * C30504;
    const double C30607 = C30504 * ce;
    const double C30623 = C30388 * C30504;
    const double C30967 = C30387 * C30504;
    const double C30620 = C30499 + C30619;
    const double C30781 = C30776 / C30398;
    const double C30825 = C30821 * ce;
    const double C30857 = 2 * C30821;
    const double C30730 = C30724 / C30238;
    const double C30834 = C30811 * ce;
    const double C30841 = C30388 * C30811;
    const double C30844 = 3 * C30811;
    const double C30583 = C30387 * C30582;
    const double C30587 = C30395 * C30582;
    const double C30970 = C30582 * C30537;
    const double C31029 = C30582 * C30613;
    const double C30817 = C30692 + C30814;
    const double C30733 = C30387 * C30729;
    const double C31109 = C30729 * C30613;
    const double C30786 = C30576 + C30783;
    const double C31145 = C30823 * C30613;
    const double C30854 = C30576 + C30852;
    const double C30862 = C30388 * C30818;
    const double C105 = (2 * C31596 * C31597) / C30367;
    const double C13453 = C31597 / C30367;
    const double C31284 = C31283 * C31277;
    const double C31290 = C31283 / C30242;
    const double C31568 = C31289 * C31283;
    const double C31566 = C31283 / C30238;
    const double C302 = (C31281 * std::pow(C31277, 2)) / C30240 + C31282;
    const double C31292 = C31291 * C31277;
    const double C31572 = C31276 * C31291;
    const double C31570 = 2 * C31291;
    const double C31615 = C31291 / C31574;
    const double C112 = C31291 / C31608;
    const double C3074 = C31291 / C30255;
    const double C31601 = C31567 / C30238;
    const double C303 = (-2 * C31289 * C31567) / C30238;
    const double C31630 = C31599 / C30240;
    const double C1177 = (C31308 * std::pow(C31362, 2)) / C30240 + C31361;
    const double C31364 = C31363 * C31362;
    const double C31369 = C31363 / C30242;
    const double C31580 = C31363 / C30238;
    const double C31577 = C31289 * C31363;
    const double C31371 = C31370 * C31362;
    const double C31586 = C31360 * C31370;
    const double C31585 = 2 * C31370;
    const double C31621 = C31370 / C31574;
    const double C1249 = C31370 / C31608;
    const double C3071 = C31370 / C30255;
    const double C31617 = C31582 / C30238;
    const double C1178 = (-2 * C31289 * C31582) / C30238;
    const double C31635 = C31609 / C30240;
    const double C9203 = (2 * C31596 * C31629) / C30367;
    const double C19145 = C31629 / C30367;
    const double C30308 = C30302 + 0;
    const double C30275 = C30236 * C30256;
    const double C1939 =
        ((-C30237 / C30238) / C30255 -
         ((C31325 - (C30236 * C30256) / C30238) * de) / C30238) /
            C30255 -
        ((C30236 * ((-C30256 / C30238) / C30255 - (0 * de) / C30238) + C31412) *
         de) /
            C30238;
    const double C1940 =
        ((-C30256 / C30238) / C30255 - (0 * de) / C30238) / C30255 -
        (0 * de) / C30238;
    const double C3468 = (-C30256 / C30238) / C30255 - (0 * de) / C30238;
    const double C30288 = C30284 - C30278;
    const double C31407 = C31406 / C30240;
    const double C510 =
        (((0 - (C30236 * C30237) / C30238) * ce) / C30238 - (0 * de) / C30242) /
            (2 * C30238) +
        ((C30236 * (((C31325 - (C30236 * 2 * C30243) / C30238) * ce) / C30238 -
                    C30237 / C30242) +
          C31581) *
         ce) /
            C30238 +
        (0 * ce) / C30238 - C30243 / C30240;
    const double C31613 = 2 * C31579;
    const double C31414 = C31413 / C30238;
    const double C31626 = C31592 / C30242;
    const double C31642 = C31581 - C31623;
    const double C3465 = -C31623;
    const double C31649 = C31637 + C31403;
    const double C30311 = C30307 / C30255;
    const double C13478 = C13455 * C128;
    const double C13474 = C13455 * C118;
    const double C13472 = C13455 * C117;
    const double C13468 = C13455 * C127;
    const double C13462 = C13455 * C125;
    const double C13458 = C13455 * C116;
    const double C13672 = C13455 * C315;
    const double C13668 = C13455 * C305;
    const double C13664 = C13455 * C324;
    const double C13658 = C13455 * C306;
    const double C13654 = C13455 * C317;
    const double C13866 = C13455 * C532;
    const double C13862 = C13455 * C517;
    const double C13852 = C13455 * C528;
    const double C13848 = C13455 * C515;
    const double C25044 = C13455 * C526;
    const double C25040 = C13455 * C514;
    const double C25038 = C13455 * C524;
    const double C25034 = C13455 * C513;
    const double C25514 = C13455 * C1019;
    const double C25510 = C13455 * C1013;
    const double C25910 = C13455 * C1401;
    const double C25906 = C13455 * C1388;
    const double C26778 = C13455 * C2154;
    const double C26774 = C13455 * C2147;
    const double C13470 = C13456 * C305;
    const double C13466 = C13456 * C315;
    const double C13464 = C13456 * C317;
    const double C13460 = C13456 * C306;
    const double C13652 = C13456 * C324;
    const double C25036 = C13456 * C1019;
    const double C25032 = C13456 * C1013;
    const double C25516 = C13456 * C1401;
    const double C25512 = C13456 * C1388;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C9439 = C9428 + C9429;
    const double C9438 = C9426 + C9427;
    const double C13485 = C13451 * C140;
    const double C13479 = C13451 * C139;
    const double C13475 = C13451 * C129;
    const double C13473 = C13451 * C126;
    const double C13469 = C13451 * C138;
    const double C13463 = C13451 * C137;
    const double C13459 = C13451 * C124;
    const double C13673 = C13451 * C335;
    const double C13669 = C13451 * C316;
    const double C13665 = C13451 * C339;
    const double C13659 = C13451 * C318;
    const double C13655 = C13451 * C336;
    const double C13867 = C13451 * C547;
    const double C13863 = C13451 * C531;
    const double C13859 = C13451 * C546;
    const double C13855 = C13451 * C529;
    const double C13853 = C13451 * C545;
    const double C13849 = C13451 * C527;
    const double C14377 = C13451 * C1029;
    const double C25045 = C13451 * C544;
    const double C25041 = C13451 * C525;
    const double C25039 = C13451 * C543;
    const double C25035 = C13451 * C523;
    const double C25515 = C13451 * C1028;
    const double C25511 = C13451 * C1018;
    const double C25911 = C13451 * C1415;
    const double C25903 = C13451 * C1412;
    const double C26775 = C13451 * C2153;
    const double C5039 =
        (((0 - (C30365 * C30366) / C30367) * ae) / C30367 - (0 * be) / C30371) /
            (2 * C30367) +
        ((C30365 * (((C31490 - (C30365 * 2 * C30372) / C30367) * ae) / C30367 -
                    C30366 / C30371) +
          C13451) *
         ae) /
            C30367 +
        (0 * ae) / C30367 - C30372 / C30369;
    const double C30416 = -C30415;
    const double C30426 = C30424 / C30398;
    const double C30550 = C30547 / C30238;
    const double C30600 = C30598 / C30238;
    const double C30642 = -C30637;
    const double C30698 = -C30694;
    const double C10091 = C31490 * C1416;
    const double C25917 = C13451 * C1416;
    const double C25901 = C13452 * C1416;
    const double C30541 = -C30538;
    const double C30594 = -C30592;
    const double C131 =
        (-3 * (C30446 * C30404 + C30443)) / C30238 +
        C30395 * ((-2 * C30447) / C30238 - (C30395 * C30452) / C30238);
    const double C326 = -(C30452 * C30537 + C30446 * C30404 + C30443) / C30238;
    const double C328 =
        C30387 * ((-2 * C30447) / C30238 - (C30395 * C30452) / C30238);
    const double C534 = -(C30388 * (C30388 * C30452 + C30894 * ce) +
                          C30446 * C30404 + C30443 + C30388 * C30894 * ce) /
                        C30238;
    const double C536 =
        C30388 * ((-2 * C30447) / C30238 - (C30395 * C30452) / C30238) -
        ((2 * C30890 + C30395 * C30894) * ce) / C30238;
    const double C1023 =
        -(C30388 * C30387 * C30452 + C30387 * C30894 * ce) / C30238;
    const double C1257 = (-2 * C30387 * C30452) / C30238 -
                         (C30387 * (C30461 * C30537 + C30452)) / C30238;
    const double C30459 = C30457 / C30238;
    const double C30551 = C30548 / C30398;
    const double C1417 =
        (-(C30388 * C30531) / C30238) / C30367 - (C30490 * ce) / C30398 -
        (ae * (C30388 * C30546 + C30387 * C30567 * ce)) / C30398 +
        C30387 * (C30387 * ((-(C30388 * C30420) / C30238) / C30367 -
                            (C30499 * ce) / C30398) -
                  (ae * (C30388 * C30455 + C30567 * ce)) / C30398);
    const double C1397 = -(C30388 * (C30388 * C30546 + C30961 * ce) +
                           C30387 * C30447 + C30388 * C30961 * ce) /
                         C30238;
    const double C1535 = C31490 * C1270;
    const double C13667 = C13452 * C1270;
    const double C14903 = C13451 * C1270;
    const double C31020 = C31016 + C31017;
    const double C1534 = C113 * C1259;
    const double C13666 = C13456 * C1259;
    const double C14902 = C13455 * C1259;
    const double C1264 =
        (-3 * (C30446 * C30537 + C30443)) / C30238 +
        C30387 * ((-2 * C30534) / C30238 - (C30387 * C30542) / C30238);
    const double C1403 = -(C30388 * (C30388 * C30542 + C30956 * ce) +
                           C30446 * C30537 + C30443 + C30388 * C30956 * ce) /
                         C30238;
    const double C1817 =
        C30388 * ((-2 * C30534) / C30238 - (C30387 * C30542) / C30238) -
        ((2 * C30953 + C30387 * C30956) * ce) / C30238;
    const double C30643 = C30639 / C30238;
    const double C30641 = C30636 / C30238;
    const double C31103 = C31099 + C31100;
    const double C30711 = ae * C30710;
    const double C31120 = C30388 * C30710;
    const double C31129 = -2 * C30710;
    const double C130 = (3 * (C30485 + C30489 * C30404) +
                         C30395 * (2 * C30490 + C30395 * C30496)) /
                        C30367;
    const double C325 =
        (C30485 + C30489 * C30404 + C30387 * (C30387 * C30496 + C30894 * ae) +
         C30387 * C30894 * ae) /
        C30367;
    const double C327 = (C30387 * (2 * C30490 + C30395 * C30496) +
                         (2 * C30890 + C30395 * C30894) * ae) /
                        C30367;
    const double C533 = (C30485 + C30489 * C30404 + C30496 * C30613) / C30367;
    const double C535 = (C30388 * (2 * C30490 + C30395 * C30496)) / C30367;
    const double C1022 = (C30388 * (C30387 * C30496 + C30894 * ae)) / C30367;
    const double C2161 =
        (2 * C30388 * C30496 + C30388 * (C30496 + C30504 * C30613)) / C30367;
    const double C30601 = C30599 / C30398;
    const double C2329 = C31490 * C1413;
    const double C13861 = C13452 * C1413;
    const double C15823 = C13451 * C1413;
    const double C30963 = C30959 + C30960;
    const double C2463 = C31490 * C2157;
    const double C15961 = C13451 * C2157;
    const double C2155 = (3 * (C30485 + C30489 * C30613) +
                          C30388 * (2 * C30612 + C30388 * C30615)) /
                         C30367;
    const double C30697 = C30693 / C30238;
    const double C31052 = C30387 * C31050;
    const double C31056 = 2 * C31050;
    const double C30901 = C30395 * C30570;
    const double C30906 = 3 * C30570;
    const double C30969 = C30387 * C30570;
    const double C30968 = C30570 * ae;
    const double C31028 = C30388 * C30570;
    const double C31027 = C30570 * ce;
    const double C1258 =
        (2 * (C30387 * C30496 + C30894 * ae) +
         C30387 * (C30496 + C30387 * (C30387 * C30504 + C30570 * ae) +
                   C30387 * C30570 * ae) +
         (C30894 + C30570 * C30537) * ae) /
        C30367;
    const double C1409 = -(C30388 * (C30461 * C30537 + C30452) +
                           (C30894 + C30570 * C30537) * ce) /
                         C30238;
    const double C2162 = (-2 * (C30388 * C30452 + C30894 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30461 + C30570 * ce) +
                                    C30452 + C30388 * C30570 * ce)) /
                             C30238 -
                         ((C30894 + C30570 * C30613) * ce) / C30238;
    const double C1251 =
        2 * C30387 * C30894 + C30387 * (C30894 + C30570 * C30537);
    const double C1392 = C30388 * (C30894 + C30570 * C30537);
    const double C2151 =
        2 * C30388 * C30894 + C30388 * (C30894 + C30570 * C30613);
    const double C1418 =
        (-(C30388 * C30499 * ce) / C30238) / C30367 - C30531 / C30398 +
        C30388 *
            ((-(C30388 * C30420) / C30238) / C30367 - (C30499 * ce) / C30398) -
        (ae * (C30388 * (C30388 * C30387 * C30468 + C30577 * ce) + C30546 +
               C30388 * C30577 * ce)) /
            C30398 +
        C30387 * (C30387 * ((-(C30388 * C30510 * ce) / C30238) / C30367 -
                            C30420 / C30398 +
                            C30388 * ((-(C30388 * C30395 * C30427) / C30238) /
                                          C30367 -
                                      (C30510 * ce) / C30398)) -
                  (ae * (C30388 * (C30388 * C30468 + C30576 * ce) + C30455 +
                         C30388 * C30576 * ce)) /
                      C30398);
    const double C31082 = 2 * C30577;
    const double C31081 = C30577 * ae;
    const double C31144 = C30388 * C30577;
    const double C31143 = C30577 * ce;
    const double C2587 = (-2 * (C30388 * C30546 + C30961 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30749 + C30577 * ce) +
                                    C30546 + C30388 * C30577 * ce)) /
                             C30238 -
                         ((C30961 + C30577 * C30613) * ce) / C30238;
    const double C2582 =
        2 * C30388 * C30961 + C30388 * (C30961 + C30577 * C30613);
    const double C30782 = C30777 + C30778;
    const double C31152 = 2 * C30851;
    const double C31151 = C30851 * ce;
    const double C30964 = C30567 + C30962;
    const double C31021 = C30567 + C31019;
    const double C31084 = C31079 + C31080;
    const double C30797 = C30793 + C30794;
    const double C31163 = 2 * C30813;
    const double C31162 = C30813 * ce;
    const double C31104 = C30573 + C31102;
    const double C31049 = C30387 * C30696;
    const double C31061 = 3 * C30696;
    const double C31060 = C30696 * ae;
    const double C31108 = C30388 * C30696;
    const double C31107 = C30696 * ce;
    const double C6546 = (-2 * (C30388 * C30542 + C30956 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30640 + C30696 * ce) +
                                    C30542 + C30388 * C30696 * ce)) /
                             C30238 -
                         ((C30956 + C30696 * C30613) * ce) / C30238;
    const double C6542 =
        2 * C30388 * C30956 + C30388 * (C30956 + C30696 * C30613);
    const double C30732 = C30388 * C30727;
    const double C30796 = ae * C30727;
    const double C31123 = C30388 * C30810;
    const double C31132 = 3 * C30810;
    const double C31131 = C30810 * ce;
    const double C31065 = C30387 * C31063;
    const double C31158 = C31063 * C30613;
    const double C30430 = -C30429;
    const double C30671 = -C30664;
    const double C30731 = -C30725;
    const double C30760 = C30755 / C30238;
    const double C30780 = C30775 / C30238;
    const double C30476 = C30395 * C30475;
    const double C30560 = C30475 * C30537;
    const double C30673 = C30387 * C30668;
    const double C30762 = C30758 + C30468;
    const double C30516 = C30395 * C30515;
    const double C30624 = C30515 * C30613;
    const double C30846 = C30388 * C30819;
    const double C30855 = C30510 + C30853;
    const double C167 = C150 + C151;
    const double C168 = C152 + C153;
    const double C370 = C346 + C347;
    const double C372 = C350 + C351;
    const double C375 = C356 + C357;
    const double C9441 = C9432 + C9433;
    const double C585 = C558 + C559;
    const double C9795 = C9788 + C9789;
    const double C166 = C148 + C149;
    const double C373 = C352 + C353;
    const double C9440 = C9430 + C9431;
    const double C584 = C556 + C557;
    const double C9794 = C9786 + C9787;
    const double C355 = C31490 * C323;
    const double C13661 = C13451 * C323;
    const double C13657 = C13452 * C323;
    const double C562 = C113 * C530;
    const double C13858 = C13455 * C530;
    const double C1035 = C31490 * C1020;
    const double C13847 = C13452 * C1020;
    const double C14373 = C13451 * C1020;
    const double C1038 = C113 * C1021;
    const double C13850 = C13456 * C1021;
    const double C14376 = C13455 * C1021;
    const double C1537 = C31490 * C1260;
    const double C13663 = C13452 * C1260;
    const double C14907 = C13451 * C1260;
    const double C1700 = C113 * C1405;
    const double C14378 = C13456 * C1405;
    const double C15112 = C13455 * C1405;
    const double C2464 = C113 * C2158;
    const double C15964 = C13455 * C2158;
    const double C354 = C113 * C309;
    const double C13660 = C13455 * C309;
    const double C13656 = C13456 * C309;
    const double C560 = C113 * C516;
    const double C13854 = C13455 * C516;
    const double C1034 = C113 * C1014;
    const double C13846 = C13456 * C1014;
    const double C14372 = C13455 * C1014;
    const double C1536 = C113 * C1252;
    const double C13662 = C13456 * C1252;
    const double C14906 = C13455 * C1252;
    const double C2326 = C113 * C1386;
    const double C13856 = C13456 * C1386;
    const double C15818 = C13455 * C1386;
    const double C1698 = C113 * C1390;
    const double C14374 = C13456 * C1390;
    const double C15108 = C13455 * C1390;
    const double C2462 = C113 * C2149;
    const double C15960 = C13455 * C2149;
    const double C156 = C113 * C119;
    const double C13488 = C13455 * C119;
    const double C358 = C113 * C310;
    const double C13682 = C13455 * C310;
    const double C13670 = C13456 * C310;
    const double C362 = C113 * C311;
    const double C13476 = C13456 * C311;
    const double C14030 = C13455 * C311;
    const double C570 = C113 * C518;
    const double C13872 = C13455 * C518;
    const double C574 = C113 * C519;
    const double C14168 = C13455 * C519;
    const double C1040 = C113 * C1015;
    const double C13864 = C13456 * C1015;
    const double C14382 = C13455 * C1015;
    const double C9792 = C113 * C1395;
    const double C25046 = C13456 * C1395;
    const double C25902 = C13455 * C1395;
    const double C10082 = C113 * C2585;
    const double C26776 = C13456 * C2585;
    const double C27254 = C13455 * C2585;
    const double C9790 = C113 * C1385;
    const double C25042 = C13456 * C1385;
    const double C25898 = C13455 * C1385;
    const double C10080 = C113 * C2581;
    const double C26772 = C13456 * C2581;
    const double C27250 = C13455 * C2581;
    const double C1263 =
        (3 * (C30485 + C30387 * C30955 + C30953 * ae) +
         C30387 * (2 * C30955 +
                   C30387 * (C30489 + C30387 * (C30387 * C30494 + C30526 * ae) +
                             C30573 * ae) +
                   C30956 * ae) +
         (2 * C30953 + C30387 * C30956) * ae) /
        C30367;
    const double C1394 =
        (C30387 * C30485 + C30887 * ae + C30955 * C30613) / C30367;
    const double C1400 =
        (C30388 * (C30485 + C30387 * C30955 + C30953 * ae)) / C30367;
    const double C1402 =
        (C30485 + C30387 * C30955 + C30953 * ae +
         (C30489 + C30387 * (C30387 * C30494 + C30526 * ae) + C30573 * ae) *
             C30613) /
        C30367;
    const double C1816 =
        (C30388 * (2 * C30955 +
                   C30387 * (C30489 + C30387 * (C30387 * C30494 + C30526 * ae) +
                             C30573 * ae) +
                   C30956 * ae)) /
        C30367;
    const double C2584 =
        (2 * C30388 * C30955 +
         C30388 * (C30955 + (C30387 * C30494 + C30526 * ae) * C30613)) /
        C30367;
    const double C6547 =
        (3 * (C30955 + C31050 * C30613) +
         C30388 * (2 * C30388 * C31050 + C30388 * (C31050 + C31063 * C30613))) /
        C30367;
    const double C10088 = C113 * C1389;
    const double C25912 = C13455 * C1389;
    const double C25896 = C13456 * C1389;
    const double C10452 = C113 * C1813;
    const double C25904 = C13456 * C1813;
    const double C26386 = C13455 * C1813;
    const double C2156 =
        (-3 * (C30388 * C31010 + C30443 + C31008 * ce)) / C30238 +
        C30388 * ((-2 * C31010) / C30238 -
                  (C30388 * (C30388 * C30710 + C30446 + C30807 * ce)) / C30238 -
                  (C31011 * ce) / C30238) -
        ((2 * C31008 + C30388 * C31011) * ce) / C30238;
    const double C10754 = C113 * C2148;
    const double C26780 = C13455 * C2148;
    const double C590 = C568 + C569;
    const double C10099 = C10086 + C10087;
    const double C169 = C154 + C155;
    const double C371 = C348 + C349;
    const double C589 = C566 + C567;
    const double C9442 = C9434 + C9435;
    const double C30463 = C30462 / C30238;
    const double C30470 = C30467 / C30238;
    const double C30561 = C30559 / C30398;
    const double C1266 =
        (-3 * (C30455 * C30537 + C30447)) / C30238 +
        C30387 * ((-2 * C30546) / C30238 - (C30387 * C30552) / C30238);
    const double C30761 = C30757 / C30238;
    const double C30759 = C30754 / C30238;
    const double C30647 = C30644 / C30238;
    const double C30666 = C30660 / C30238;
    const double C30662 = C30656 / C30398;
    const double C30674 = -C30670;
    const double C30506 = C30501 + C30505;
    const double C30608 = C30607 / C30398;
    const double C2159 = (3 * (C30490 + C30499 * C30613) +
                          C30388 * (2 * C30618 + C30388 * C30620)) /
                         C30367;
    const double C30826 = C30825 / C30238;
    const double C30734 = -C30730;
    const double C30836 = C30834 / C30398;
    const double C30842 = C30840 + C30841;
    const double C30588 = C30586 + C30587;
    const double C30972 = C30570 + C30970;
    const double C31031 = C30570 + C31029;
    const double C31164 = C30388 * C30817;
    const double C30737 = C30721 + C30733;
    const double C31111 = C30696 + C31109;
    const double C31083 = C30387 * C30786;
    const double C31147 = C30577 + C31145;
    const double C31153 = C30388 * C30854;
    const double C30863 = C30861 + C30862;
    const double C31285 = C31284 / C30240;
    const double C31602 = 2 * C31568;
    const double C31293 = C31292 / C30238;
    const double C31606 = C31572 / C30242;
    const double C31631 = C31566 - C31601;
    const double C2799 = -C31601;
    const double C31645 = C31630 + C31282;
    const double C31365 = C31364 / C30240;
    const double C31610 = 2 * C31577;
    const double C31372 = C31371 / C30238;
    const double C31620 = C31586 / C30242;
    const double C31639 = C31580 - C31617;
    const double C2691 = -C31617;
    const double C31648 = C31635 + C31361;
    const double C30312 = C30308 * de;
    const double C30283 = C30275 / C30238;
    const double C30292 = C30236 * C30288;
    const double C30321 = C30288 / C30255;
    const double C31408 = C31403 - C31407;
    const double C31638 = C31613 / C30238;
    const double C31415 = C31411 - C31414;
    const double C31652 = C31642 / C30255;
    const double C1938 =
        ((-(0 * de) / C30238) / C30255 -
         ((0 - (C30236 * C30237) / C30238) * de) / C30238) /
            C30255 -
        ((C30236 * ((-C30237 / C30238) / C30255 -
                    ((C31325 - (C30236 * C30256) / C30238) * de) / C30238) +
          C3465) *
         de) /
            C30238 +
        (-C30256 / C30238) / C30255 - (0 * de) / C30238;
    const double C13496 = C13470 + C13471;
    const double C13494 = C13466 + C13467;
    const double C13493 = C13464 + C13465;
    const double C13491 = C13460 + C13461;
    const double C13684 = C13652 + C13653;
    const double C25050 = C25036 + C25037;
    const double C25048 = C25032 + C25033;
    const double C25521 = C25516 + C25517;
    const double C175 = C165 * C31325;
    const double C555 = C165 * C31649;
    const double C839 = C165 * C31581;
    const double C1943 = C165 * C1935;
    const double C3471 = C165 * C3465;
    const double C174 = C164 * C114;
    const double C554 = C164 * C510;
    const double C838 = C164 * C831;
    const double C13500 = C13478 + C13479;
    const double C13498 = C13474 + C13475;
    const double C13497 = C13472 + C13473;
    const double C13495 = C13468 + C13469;
    const double C13492 = C13462 + C13463;
    const double C13490 = C13458 + C13459;
    const double C13694 = C13672 + C13673;
    const double C13692 = C13668 + C13669;
    const double C13690 = C13664 + C13665;
    const double C13687 = C13658 + C13659;
    const double C13685 = C13654 + C13655;
    const double C13888 = C13866 + C13867;
    const double C13886 = C13862 + C13863;
    const double C13881 = C13852 + C13853;
    const double C13879 = C13848 + C13849;
    const double C25054 = C25044 + C25045;
    const double C25052 = C25040 + C25041;
    const double C25051 = C25038 + C25039;
    const double C25049 = C25034 + C25035;
    const double C25520 = C25514 + C25515;
    const double C25518 = C25510 + C25511;
    const double C25927 = C25910 + C25911;
    const double C26789 = C26774 + C26775;
    const double C30417 = C30416 / C30367;
    const double C30553 = -C30550;
    const double C30602 = -C30600;
    const double C30646 = C30642 / C30367;
    const double C30700 = C30698 / C30367;
    const double C30543 = C30541 / C30367;
    const double C30595 = C30594 / C30367;
    const double C158 = C113 * C131;
    const double C13484 = C13455 * C131;
    const double C360 = C113 * C326;
    const double C13678 = C13455 * C326;
    const double C13674 = C13456 * C326;
    const double C364 = C113 * C328;
    const double C13480 = C13456 * C328;
    const double C14026 = C13455 * C328;
    const double C572 = C113 * C534;
    const double C13876 = C13455 * C534;
    const double C578 = C113 * C536;
    const double C14172 = C13455 * C536;
    const double C1044 = C113 * C1023;
    const double C13868 = C13456 * C1023;
    const double C14386 = C13455 * C1023;
    const double C1530 = C113 * C1257;
    const double C13676 = C13456 * C1257;
    const double C1701 = C31490 * C1417;
    const double C14379 = C13452 * C1417;
    const double C15113 = C13451 * C1417;
    const double C2328 = C113 * C1397;
    const double C13860 = C13456 * C1397;
    const double C15822 = C13455 * C1397;
    const double C1540 = C1534 + C1535;
    const double C13691 = C13666 + C13667;
    const double C14909 = C14902 + C14903;
    const double C10090 = C113 * C1403;
    const double C25916 = C13455 * C1403;
    const double C25900 = C13456 * C1403;
    const double C10454 = C113 * C1817;
    const double C25908 = C13456 * C1817;
    const double C26390 = C13455 * C1817;
    const double C30645 = -C30641;
    const double C30712 = C30711 / C30398;
    const double C31124 = C31120 + C30446;
    const double C31134 = C31129 / C30238;
    const double C157 = C31490 * C130;
    const double C13489 = C13451 * C130;
    const double C359 = C31490 * C325;
    const double C13683 = C13451 * C325;
    const double C13671 = C13452 * C325;
    const double C363 = C31490 * C327;
    const double C13477 = C13452 * C327;
    const double C14031 = C13451 * C327;
    const double C571 = C31490 * C533;
    const double C13873 = C13451 * C533;
    const double C575 = C31490 * C535;
    const double C14169 = C13451 * C535;
    const double C1041 = C31490 * C1022;
    const double C13865 = C13452 * C1022;
    const double C14383 = C13451 * C1022;
    const double C2473 = C31490 * C2161;
    const double C1396 =
        (C30387 * C30490 + C30890 * ae + C30963 * C30613) / C30367;
    const double C1404 =
        (C30388 * (C30490 + C30387 * C30963 + C30961 * ae)) / C30367;
    const double C1406 =
        (C30490 + C30387 * C30963 + C30961 * ae +
         (C30499 + C30387 * (C30387 * C30510 + C30576 * ae) + C30577 * ae) *
             C30613) /
        C30367;
    const double C2586 =
        (2 * C30388 * C30963 +
         C30388 * (C30963 + (C30387 * C30510 + C30576 * ae) * C30613)) /
        C30367;
    const double C10755 = C31490 * C2155;
    const double C26781 = C13451 * C2155;
    const double C30699 = -C30697;
    const double C31053 = C30489 + C31052;
    const double C30902 = C30900 + C30901;
    const double C1399 = -(C30388 * (C30388 * C30557 + C30969 * ce) +
                           C30387 * C30452 + C30388 * C30969 * ce) /
                         C30238;
    const double C2589 =
        (-2 * (C30388 * C30557 + C30969 * ce)) / C30238 -
        (C30388 * (C30388 * (C30388 * C30387 * C30475 + C30583 * ce) + C30557 +
                   C30388 * C30583 * ce)) /
            C30238 -
        ((C30969 + C30583 * C30613) * ce) / C30238;
    const double C1387 = C30387 * C30894 + C30969 * C30613;
    const double C2583 =
        2 * C30388 * C30969 + C30388 * (C30969 + C30583 * C30613);
    const double C30971 = C30967 + C30968;
    const double C31030 = C31026 + C31027;
    const double C1533 = C31490 * C1258;
    const double C13681 = C13452 * C1258;
    const double C1706 = C113 * C1409;
    const double C14384 = C13456 * C1409;
    const double C2474 = C113 * C2162;
    const double C1532 = C113 * C1251;
    const double C13680 = C13456 * C1251;
    const double C1704 = C113 * C1392;
    const double C14380 = C13456 * C1392;
    const double C2472 = C113 * C2151;
    const double C10351 = C31490 * C1418;
    const double C15821 = C13452 * C1418;
    const double C31146 = C31142 + C31143;
    const double C10918 = C113 * C2587;
    const double C15962 = C13456 * C2587;
    const double C10916 = C113 * C2582;
    const double C15958 = C13456 * C2582;
    const double C30785 = ae * C30782;
    const double C31150 = C30388 * C30782;
    const double C1265 =
        (3 * (C30490 + C30387 * C30963 + C30961 * ae) +
         C30387 * (2 * C30963 +
                   C30387 * (C30499 + C30387 * (C30387 * C30510 + C30576 * ae) +
                             C30577 * ae) +
                   C30964 * ae) +
         (2 * C30961 + C30387 * C30964) * ae) /
        C30367;
    const double C1407 = -(C30388 * (C30388 * C30552 + C30964 * ce) +
                           C30455 * C30537 + C30447 + C30388 * C30964 * ce) /
                         C30238;
    const double C1818 =
        (C30388 * (2 * C30963 +
                   C30387 * (C30499 + C30387 * (C30387 * C30510 + C30576 * ae) +
                             C30577 * ae) +
                   C30964 * ae)) /
        C30367;
    const double C1819 =
        C30388 * ((-2 * C30546) / C30238 - (C30387 * C30552) / C30238) -
        ((2 * C30961 + C30387 * C30964) * ce) / C30238;
    const double C1255 = 3 * (C30890 + C30567 * C30537) +
                         C30387 * (2 * C30961 + C30387 * C30964);
    const double C1391 = C30890 + C30567 * C30537 + C30964 * C30613;
    const double C1814 = C30388 * (2 * C30961 + C30387 * C30964);
    const double C6802 =
        2 * C30388 * C30964 + C30388 * (C30964 + C30786 * C30613);
    const double C2160 =
        (-3 * (C30388 * C31020 + C30447 + C31018 * ce)) / C30238 +
        C30388 * ((-2 * C31020) / C30238 -
                  (C30388 * (C30388 * C30782 + C30455 + C30851 * ce)) / C30238 -
                  (C31021 * ce) / C30238) -
        ((2 * C31018 + C30388 * C31021) * ce) / C30238;
    const double C2150 = 3 * (C30890 + C30567 * C30613) +
                         C30388 * (2 * C31018 + C30388 * C31021);
    const double C31086 = C30387 * C31084;
    const double C10912 =
        (3 * (C30963 + C31084 * C30613) +
         C30388 *
             (2 * C30388 * C31084 +
              C30388 * (C31084 + (C30387 * C30824 + C30779 * ae) * C30613))) /
        C30367;
    const double C30799 = ae * C30797;
    const double C31161 = C30388 * C30797;
    const double C6549 =
        (-3 * (C30388 * C31103 + C30534 + C31101 * ce)) / C30238 +
        C30388 * ((-2 * C31103) / C30238 -
                  (C30388 * (C30388 * C30797 + C30632 + C30813 * ce)) / C30238 -
                  (C31104 * ce) / C30238) -
        ((2 * C31101 + C30388 * C31104) * ce) / C30238;
    const double C6543 = 3 * (C30953 + C30573 * C30613) +
                         C30388 * (2 * C31101 + C30388 * C31104);
    const double C31051 = C31048 + C31049;
    const double C31110 = C31106 + C31107;
    const double C10094 = C113 * C6546;
    const double C27256 = C13456 * C6546;
    const double C10092 = C113 * C6542;
    const double C27252 = C13456 * C6542;
    const double C30736 = C30732 + C30450;
    const double C30798 = C30796 / C30398;
    const double C31125 = C31122 + C31123;
    const double C31136 = C31131 / C30238;
    const double C31066 = C30494 + C31065;
    const double C31159 = C31050 + C31158;
    const double C30431 = C30430 / C30367;
    const double C30675 = C30671 / C30367;
    const double C30735 = C30731 / C30367;
    const double C30764 = -C30760;
    const double C30784 = -C30780;
    const double C30477 = C30476 / C30238;
    const double C30562 = C30560 + C30461;
    const double C30676 = C30673 / C30238;
    const double C30765 = C30387 * C30762;
    const double C6804 = (-2 * (C30388 * C30552 + C30964 * ce)) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30762 + C30786 * ce) +
                                    C30552 + C30388 * C30786 * ce)) /
                             C30238 -
                         ((C30964 + C30786 * C30613) * ce) / C30238;
    const double C30517 = C30512 + C30516;
    const double C30625 = C30504 + C30624;
    const double C30847 = C30845 + C30846;
    const double C30858 = C30388 * C30855;
    const double C177 = C167 * C31325;
    const double C565 = C167 * C31649;
    const double C843 = C167 * C31581;
    const double C1949 = C167 * C1935;
    const double C3475 = C167 * C3465;
    const double C178 = C168 * C31325;
    const double C576 = C168 * C31649;
    const double C847 = C168 * C31581;
    const double C1955 = C168 * C1935;
    const double C3479 = C168 * C3465;
    const double C382 = C370 * C31325;
    const double C1042 = C370 * C31581;
    const double C2331 = C370 * C1935;
    const double C2955 = C370 * C31649;
    const double C3645 = C370 * C3465;
    const double C384 = C372 * C31325;
    const double C1036 = C372 * C31581;
    const double C2323 = C372 * C1935;
    const double C2949 = C372 * C31649;
    const double C3641 = C372 * C3465;
    const double C387 = C375 * C31325;
    const double C1697 = C375 * C31581;
    const double C3649 = C375 * C3465;
    const double C841 = C585 * C31412;
    const double C1945 = C585 * C1936;
    const double C3473 = C585 * C31412;
    const double C19149 = C585 * C31325;
    const double C19457 = C585 * C31649;
    const double C19731 = C585 * C31581;
    const double C20931 = C585 * C1935;
    const double C22763 = C585 * C3465;
    const double C176 = C166 * C114;
    const double C564 = C166 * C510;
    const double C842 = C166 * C831;
    const double C385 = C373 * C114;
    const double C1037 = C373 * C831;
    const double C2950 = C373 * C510;
    const double C597 = C584 * C511;
    const double C840 = C584 * C832;
    const double C1944 = C584 * C1939;
    const double C3472 = C584 * C3468;
    const double C19148 = C584 * C114;
    const double C19456 = C584 * C510;
    const double C19730 = C584 * C831;
    const double C587 = C562 + C563;
    const double C13884 = C13858 + C13859;
    const double C1053 = C1038 + C1039;
    const double C13880 = C13850 + C13851;
    const double C14390 = C14376 + C14377;
    const double C374 = C354 + C355;
    const double C13688 = C13660 + C13661;
    const double C13686 = C13656 + C13657;
    const double C586 = C560 + C561;
    const double C13882 = C13854 + C13855;
    const double C1052 = C1034 + C1035;
    const double C13878 = C13846 + C13847;
    const double C14388 = C14372 + C14373;
    const double C1541 = C1536 + C1537;
    const double C13689 = C13662 + C13663;
    const double C14911 = C14906 + C14907;
    const double C2476 = C2462 + C2463;
    const double C15967 = C15960 + C15961;
    const double C9797 = C9792 + C9793;
    const double C25055 = C25046 + C25047;
    const double C25923 = C25902 + C25903;
    const double C9791 = C31490 * C1394;
    const double C25043 = C13452 * C1394;
    const double C25899 = C13451 * C1394;
    const double C10085 = C31490 * C1400;
    const double C25513 = C13452 * C1400;
    const double C25907 = C13451 * C1400;
    const double C10089 = C31490 * C1402;
    const double C25913 = C13451 * C1402;
    const double C25897 = C13452 * C1402;
    const double C10453 = C31490 * C1816;
    const double C25905 = C13452 * C1816;
    const double C26387 = C13451 * C1816;
    const double C10081 = C31490 * C2584;
    const double C26773 = C13452 * C2584;
    const double C27251 = C13451 * C2584;
    const double C11133 = C31490 * C6547;
    const double C26783 = C13452 * C6547;
    const double C10756 = C113 * C2156;
    const double C26784 = C13455 * C2156;
    const double C845 = C590 * C31412;
    const double C1951 = C590 * C1936;
    const double C3477 = C590 * C31412;
    const double C19150 = C590 * C31325;
    const double C19463 = C590 * C31649;
    const double C19735 = C590 * C31581;
    const double C20937 = C590 * C1935;
    const double C22767 = C590 * C3465;
    const double C179 = C169 * C114;
    const double C577 = C169 * C510;
    const double C848 = C169 * C831;
    const double C383 = C371 * C114;
    const double C1043 = C371 * C831;
    const double C2956 = C371 * C510;
    const double C601 = C589 * C511;
    const double C844 = C589 * C832;
    const double C1950 = C589 * C1939;
    const double C3476 = C589 * C3468;
    const double C19151 = C589 * C114;
    const double C19464 = C589 * C510;
    const double C19736 = C589 * C831;
    const double C30464 = C30459 - C30463;
    const double C14900 = C13456 * C1266;
    const double C30763 = -C30759;
    const double C30650 = C30643 - C30647;
    const double C30677 = C30674 / C30367;
    const double C133 = (4 * (2 * C30490 + C30395 * C30496) +
                         C30395 * (3 * C30496 + C30395 * C30506)) /
                        C30367;
    const double C537 =
        (2 * C30490 + C30395 * C30496 + C30506 * C30613) / C30367;
    const double C539 = (C30388 * (3 * C30496 + C30395 * C30506)) / C30367;
    const double C11025 = C31490 * C2159;
    const double C30827 = -C30826;
    const double C30738 = C30734 / C30367;
    const double C10747 = (4 * (2 * C30612 + C30388 * C30615) +
                           C30388 * (3 * C30615 + C30388 * C30842)) /
                          C30367;
    const double C30907 = C30395 * C30588;
    const double C31034 = C30387 * C30588;
    const double C1256 = 3 * (C30894 + C30570 * C30537) +
                         C30387 * (2 * C30969 + C30387 * C30972);
    const double C1393 = C30894 + C30570 * C30537 + C30972 * C30613;
    const double C1815 = C30388 * (2 * C30969 + C30387 * C30972);
    const double C2152 = 3 * (C30894 + C30570 * C30613) +
                         C30388 * (2 * C31028 + C30388 * C31031);
    const double C31166 = C31163 + C31164;
    const double C31062 = C30387 * C30737;
    const double C6544 = 3 * (C30956 + C30696 * C30613) +
                         C30388 * (2 * C31108 + C30388 * C31111);
    const double C31085 = C31082 + C31083;
    const double C10911 = 3 * (C30961 + C30577 * C30613) +
                          C30388 * (2 * C31144 + C30388 * C31147);
    const double C31155 = C31152 + C31153;
    const double C31133 = C30388 * C30863;
    const double C31286 = C31282 - C31285;
    const double C31632 = C31602 / C30238;
    const double C31294 = C31290 - C31293;
    const double C31646 = C31631 / C30255;
    const double C31366 = C31361 - C31365;
    const double C31636 = C31610 / C30238;
    const double C31373 = C31369 - C31372;
    const double C31650 = C31639 / C30255;
    const double C30314 = C30312 / C30238;
    const double C30287 = C31325 - C30283;
    const double C30296 = C30292 + C31412;
    const double C30324 = C30321 - C30323;
    const double C4061 = C168 * C31408;
    const double C4055 = C167 * C31408;
    const double C4049 = C165 * C31408;
    const double C4225 = C370 * C31408;
    const double C4219 = C372 * C31408;
    const double C23465 = C590 * C31408;
    const double C23459 = C585 * C31408;
    const double C31589 = C31408 * C31402;
    const double C31625 = C31591 + C31408;
    const double C602 = C590 * C31638;
    const double C598 = C585 * C31638;
    const double C4057 = C590 * C31415;
    const double C4051 = C585 * C31415;
    const double C31593 = C31415 / C30255;
    const double C31590 = C31415 * C31402;
    const double C2443 = C31652 - (C31408 * C31404) / C30238;
    const double C1956 = C169 * C1938;
    const double C1948 = C166 * C1938;
    const double C1942 = C164 * C1938;
    const double C2332 = C371 * C1938;
    const double C2324 = C373 * C1938;
    const double C20938 = C589 * C1938;
    const double C20930 = C584 * C1938;
    const double C30418 = C30417 - C30411;
    const double C30554 = C30553 / C30367;
    const double C30603 = C30602 / C30367;
    const double C30649 = C30646 - C30638;
    const double C30702 = C30700 - C30695;
    const double C30544 = C30543 - C30539;
    const double C30596 = C30595 - C30593;
    const double C171 = C158 + C159;
    const double C13503 = C13484 + C13485;
    const double C1709 = C1700 + C1701;
    const double C14391 = C14378 + C14379;
    const double C15117 = C15112 + C15113;
    const double C2339 = C2328 + C2329;
    const double C13885 = C13860 + C13861;
    const double C15827 = C15822 + C15823;
    const double C1544 = C1540 * C31325;
    const double C10101 = C10090 + C10091;
    const double C25930 = C25916 + C25917;
    const double C25922 = C25900 + C25901;
    const double C30648 = C30645 / C30367;
    const double C31126 = C31124 + C31121;
    const double C170 = C156 + C157;
    const double C13505 = C13488 + C13489;
    const double C376 = C358 + C359;
    const double C13699 = C13682 + C13683;
    const double C13693 = C13670 + C13671;
    const double C378 = C362 + C363;
    const double C13499 = C13476 + C13477;
    const double C14035 = C14030 + C14031;
    const double C591 = C570 + C571;
    const double C13891 = C13872 + C13873;
    const double C593 = C574 + C575;
    const double C14175 = C14168 + C14169;
    const double C1054 = C1040 + C1041;
    const double C13887 = C13864 + C13865;
    const double C14393 = C14382 + C14383;
    const double C2327 = C31490 * C1396;
    const double C13857 = C13452 * C1396;
    const double C15819 = C13451 * C1396;
    const double C1699 = C31490 * C1404;
    const double C14375 = C13452 * C1404;
    const double C15109 = C13451 * C1404;
    const double C10349 = C31490 * C1406;
    const double C15817 = C13452 * C1406;
    const double C10917 = C31490 * C2586;
    const double C15959 = C13452 * C2586;
    const double C10762 = C10754 + C10755;
    const double C26792 = C26780 + C26781;
    const double C30701 = C30699 / C30367;
    const double C31054 = C31053 + C31047;
    const double C330 =
        (2 * C30490 + C30395 * C30496 +
         C30387 * (C30387 * C30506 + C30902 * ae) + C30387 * C30902 * ae) /
        C30367;
    const double C332 = (C30387 * (3 * C30496 + C30395 * C30506) +
                         (3 * C30894 + C30395 * C30902) * ae) /
                        C30367;
    const double C1024 = (C30388 * (C30387 * C30506 + C30902 * ae)) / C30367;
    const double C120 = 4 * (2 * C30890 + C30395 * C30894) +
                        C30395 * (3 * C30894 + C30395 * C30902);
    const double C312 = 2 * C30890 + C30395 * C30894 + C30902 * C30537;
    const double C313 = C30387 * (3 * C30894 + C30395 * C30902);
    const double C520 = 2 * C30890 + C30395 * C30894 + C30902 * C30613;
    const double C521 = C30388 * (3 * C30894 + C30395 * C30902);
    const double C1016 = C30388 * C30387 * C30902;
    const double C1525 =
        2 * C30387 * C30902 + C30387 * (C30902 + C30588 * C30537);
    const double C1691 = C30388 * (C30902 + C30588 * C30537);
    const double C2451 =
        2 * C30388 * C30902 + C30388 * (C30902 + C30588 * C30613);
    const double C2336 = C113 * C1399;
    const double C13874 = C13456 * C1399;
    const double C2334 = C113 * C1387;
    const double C13870 = C13456 * C1387;
    const double C1267 =
        (3 * (C30496 + C30387 * C30971 + C30969 * ae) +
         C30387 * (2 * C30971 +
                   C30387 * (C30504 + C30387 * (C30387 * C30515 + C30582 * ae) +
                             C30583 * ae) +
                   C30972 * ae) +
         (2 * C30969 + C30387 * C30972) * ae) /
        C30367;
    const double C1398 =
        (C30387 * C30496 + C30894 * ae + C30971 * C30613) / C30367;
    const double C1408 =
        (C30388 * (C30496 + C30387 * C30971 + C30969 * ae)) / C30367;
    const double C1410 =
        (C30496 + C30387 * C30971 + C30969 * ae +
         (C30504 + C30387 * (C30387 * C30515 + C30582 * ae) + C30583 * ae) *
             C30613) /
        C30367;
    const double C1820 =
        (C30388 * (2 * C30971 +
                   C30387 * (C30504 + C30387 * (C30387 * C30515 + C30582 * ae) +
                             C30583 * ae) +
                   C30972 * ae)) /
        C30367;
    const double C2588 =
        (2 * C30388 * C30971 +
         C30388 * (C30971 + (C30387 * C30515 + C30582 * ae) * C30613)) /
        C30367;
    const double C2164 =
        (-3 * (C30388 * C31030 + C30452 + C31028 * ce)) / C30238 +
        C30388 * ((-2 * C31030) / C30238 -
                  (C30388 * (C30388 * (C30388 * C30475 + C30582 * ce) + C30461 +
                             C30388 * C30582 * ce)) /
                      C30238 -
                  (C31031 * ce) / C30238) -
        ((2 * C31028 + C30388 * C31031) * ce) / C30238;
    const double C1539 = C1532 + C1533;
    const double C13698 = C13680 + C13681;
    const double C2478 = C2472 + C2473;
    const double C10913 =
        (-3 * (C30388 * C31146 + C30546 + C31144 * ce)) / C30238 +
        C30388 * ((-2 * C31146) / C30238 -
                  (C30388 * (C30388 * (C30388 * C30387 * C30753 + C30823 * ce) +
                             C30749 + C30388 * C30823 * ce)) /
                      C30238 -
                  (C31147 * ce) / C30238) -
        ((2 * C31144 + C30388 * C31147) * ce) / C30238;
    const double C30788 = C30785 / C30398;
    const double C31154 = C31150 + C30455;
    const double C14905 = C13452 * C1265;
    const double C10350 = C113 * C1407;
    const double C15820 = C13456 * C1407;
    const double C15107 = C13452 * C1818;
    const double C20451 = C31490 * C1818;
    const double C15110 = C13456 * C1819;
    const double C20448 = C113 * C1819;
    const double C14904 = C13456 * C1255;
    const double C10348 = C113 * C1391;
    const double C15816 = C13456 * C1391;
    const double C15106 = C13456 * C1814;
    const double C20450 = C113 * C1814;
    const double C11026 = C113 * C2160;
    const double C11024 = C113 * C2150;
    const double C31087 = C30499 + C31086;
    const double C30801 = C30799 / C30398;
    const double C31165 = C31161 + C30632;
    const double C11134 = C113 * C6549;
    const double C26786 = C13456 * C6549;
    const double C11132 = C113 * C6543;
    const double C26782 = C13456 * C6543;
    const double C5776 = 4 * (2 * C30953 + C30387 * C30956) +
                         C30387 * (3 * C30956 + C30387 * C31051);
    const double C5894 = 2 * C30953 + C30387 * C30956 + C31051 * C30613;
    const double C5895 = C30388 * (3 * C30956 + C30387 * C31051);
    const double C6904 =
        2 * C30388 * C31051 + C30388 * (C31051 + C30737 * C30613);
    const double C6550 =
        (-3 * (C30388 * C31110 + C30542 + C31108 * ce)) / C30238 +
        C30388 * ((-2 * C31110) / C30238 -
                  (C30388 * (C30388 * (C30388 * C30668 + C30729 * ce) + C30640 +
                             C30388 * C30729 * ce)) /
                      C30238 -
                  (C31111 * ce) / C30238) -
        ((2 * C31108 + C30388 * C31111) * ce) / C30238;
    const double C30740 = C30736 + C30728;
    const double C10745 = 4 * (2 * C31008 + C30388 * C31011) +
                          C30388 * (3 * C31011 + C30388 * C31125);
    const double C31067 = C31066 + C31059;
    const double C11128 =
        (4 * (2 * C30388 * C31050 + C30388 * C31159) +
         C30388 * (3 * C31159 + C30388 * (2 * C30388 * C31063 +
                                          C30388 * (C31063 + (C30387 * C30513 +
                                                              C30580 * ae) *
                                                                 C30613)))) /
        C30367;
    const double C30432 = C30431 - C30423;
    const double C30678 = C30675 - C30665;
    const double C30739 = C30735 - C30726;
    const double C30767 = C30764 / C30367;
    const double C30787 = C30784 / C30367;
    const double C30478 = C30473 - C30477;
    const double C1268 =
        (-3 * (C30461 * C30537 + C30452)) / C30238 +
        C30387 * ((-2 * C30557) / C30238 - (C30387 * C30562) / C30238);
    const double C1411 = -(C30388 * (C30388 * C30562 + C30972 * ce) +
                           C30461 * C30537 + C30452 + C30388 * C30972 * ce) /
                         C30238;
    const double C1821 =
        C30388 * ((-2 * C30557) / C30238 - (C30387 * C30562) / C30238) -
        ((2 * C30969 + C30387 * C30972) * ce) / C30238;
    const double C30679 = C30672 - C30676;
    const double C30768 = C30765 / C30238;
    const double C30518 = C30395 * C30517;
    const double C1526 =
        (2 * (C30387 * C30506 + C30902 * ae) +
         C30387 * (C30506 + C30387 * (C30387 * C30517 + C30588 * ae) +
                   C30387 * C30588 * ae) +
         (C30902 + C30588 * C30537) * ae) /
        C30367;
    const double C1692 =
        (C30388 * (C30506 + C30387 * (C30387 * C30517 + C30588 * ae) +
                   C30387 * C30588 * ae)) /
        C30367;
    const double C2318 = (C30387 * C30506 + C30902 * ae +
                          (C30387 * C30517 + C30588 * ae) * C30613) /
                         C30367;
    const double C2452 =
        (2 * C30388 * C30506 + C30388 * (C30506 + C30517 * C30613)) / C30367;
    const double C2163 = (3 * (C30496 + C30504 * C30613) +
                          C30388 * (2 * C30623 + C30388 * C30625)) /
                         C30367;
    const double C30848 = C30388 * C30847;
    const double C30859 = C30857 + C30858;
    const double C184 = C176 + C177;
    const double C588 = C564 + C565;
    const double C856 = C842 + C843;
    const double C600 = C587 * C31614;
    const double C1947 = C587 * C31614;
    const double C4053 = C587 * C4043;
    const double C19459 = C587 * C31638;
    const double C19733 = C587 * C31412;
    const double C20933 = C587 * C1936;
    const double C22765 = C587 * C31412;
    const double C23461 = C587 * C31415;
    const double C1060 = C1053 * C31412;
    const double C2325 = C1053 * C1936;
    const double C2951 = C1053 * C31638;
    const double C3643 = C1053 * C31412;
    const double C4221 = C1053 * C31415;
    const double C19302 = C1053 * C31325;
    const double C19937 = C1053 * C31581;
    const double C21365 = C1053 * C1935;
    const double C22093 = C1053 * C31649;
    const double C22969 = C1053 * C3465;
    const double C23665 = C1053 * C31408;
    const double C386 = C374 * C114;
    const double C1696 = C374 * C831;
    const double C599 = C586 * C512;
    const double C1946 = C586 * C1940;
    const double C19458 = C586 * C511;
    const double C19732 = C586 * C832;
    const double C20932 = C586 * C1939;
    const double C22764 = C586 * C3468;
    const double C1059 = C1052 * C832;
    const double C2322 = C1052 * C1939;
    const double C2948 = C1052 * C511;
    const double C3640 = C1052 * C3468;
    const double C19303 = C1052 * C114;
    const double C19938 = C1052 * C831;
    const double C21366 = C1052 * C1938;
    const double C22094 = C1052 * C510;
    const double C1545 = C1541 * C114;
    const double C19460 = C2476 * C512;
    const double C20934 = C2476 * C1940;
    const double C9796 = C9790 + C9791;
    const double C25053 = C25042 + C25043;
    const double C25921 = C25898 + C25899;
    const double C10098 = C10084 + C10085;
    const double C25519 = C25512 + C25513;
    const double C25925 = C25906 + C25907;
    const double C10100 = C10088 + C10089;
    const double C25928 = C25912 + C25913;
    const double C25920 = C25896 + C25897;
    const double C10460 = C10452 + C10453;
    const double C25924 = C25904 + C25905;
    const double C26394 = C26386 + C26387;
    const double C10096 = C10080 + C10081;
    const double C26788 = C26772 + C26773;
    const double C27258 = C27250 + C27251;
    const double C185 = C178 + C179;
    const double C857 = C847 + C848;
    const double C394 = C382 + C383;
    const double C1055 = C1042 + C1043;
    const double C132 =
        4 * ((-2 * C30447) / C30238 - (C30395 * C30452) / C30238) +
        C30395 * ((-3 * C30452) / C30238 + C30395 * C30464);
    const double C329 =
        (-2 * C30447) / C30238 - (C30395 * C30452) / C30238 + C30464 * C30537;
    const double C331 = C30387 * ((-3 * C30452) / C30238 + C30395 * C30464);
    const double C538 = (-2 * C30447) / C30238 - (C30395 * C30452) / C30238 +
                        C30388 * (C30388 * C30464 - (C30902 * ce) / C30238) -
                        (C30388 * C30902 * ce) / C30238;
    const double C540 = C30388 * ((-3 * C30452) / C30238 + C30395 * C30464) -
                        ((3 * C30894 + C30395 * C30902) * ce) / C30238;
    const double C1025 =
        C30388 * C30387 * C30464 - (C30387 * C30902 * ce) / C30238;
    const double C30766 = C30763 / C30367;
    const double C5778 =
        4 * ((-2 * C30534) / C30238 - (C30387 * C30542) / C30238) +
        C30387 * ((-3 * C30542) / C30238 + C30387 * C30650);
    const double C5898 = (-2 * C30534) / C30238 - (C30387 * C30542) / C30238 +
                         C30388 * (C30388 * C30650 - (C31051 * ce) / C30238) -
                         (C30388 * C31051 * ce) / C30238;
    const double C5900 = C30388 * ((-3 * C30542) / C30238 + C30387 * C30650) -
                         ((3 * C30956 + C30387 * C31051) * ce) / C30238;
    const double C30680 = C30677 - C30423;
    const double C163 = C31490 * C133;
    const double C581 = C31490 * C537;
    const double C853 = C31490 * C539;
    const double C30828 = C30827 / C30367;
    const double C30741 = C30738 - C30423;
    const double C10759 = C31490 * C10747;
    const double C30908 = C30906 + C30907;
    const double C2317 = C30387 * C30902 + C31034 * C30613;
    const double C11127 = 4 * (2 * C31101 + C30388 * C31104) +
                          C30388 * (3 * C31104 + C30388 * C31166);
    const double C31064 = C31061 + C31062;
    const double C6004 = 4 * (2 * C30961 + C30387 * C30964) +
                         C30387 * (3 * C30964 + C30387 * C31085);
    const double C6154 = C30388 * (3 * C30964 + C30387 * C31085);
    const double C6700 = 2 * C30961 + C30387 * C30964 + C31085 * C30613;
    const double C11019 = 4 * (2 * C31018 + C30388 * C31021) +
                          C30388 * (3 * C31021 + C30388 * C31155);
    const double C31137 = C31132 + C31133;
    const double C31565 = C31286 * C31276;
    const double C31604 = C31570 + C31286;
    const double C31573 = C31294 / C30255;
    const double C31569 = C31294 * C31276;
    const double C713 = C31646 - (C31286 * C31277) / C30238;
    const double C31583 = C31366 * C31360;
    const double C31619 = C31585 + C31366;
    const double C31587 = C31373 / C30255;
    const double C31584 = C31373 * C31360;
    const double C1519 = C31650 - (C31366 * C31362) / C30238;
    const double C30316 = C30311 - C30314;
    const double C30291 = C30287 * ce;
    const double C3467 = (-C30273) / C30255 - (C30287 * de) / C30238;
    const double C30300 = C30296 * de;
    const double C4052 = C586 * C30324;
    const double C23462 = C2476 * C30324;
    const double C2146 =
        (C30324 / C30255 + (0 * ce) / C30238) / C30255 - (0 * de) / C30238;
    const double C2450 = C30324 / C30255 - (0 * de) / C30238;
    const double C3760 = C30324 / C30255 + (0 * ce) / C30238;
    const double C31622 = C31589 / C30238;
    const double C31643 = C31625 / C30255;
    const double C31644 = C31626 + C31593;
    const double C2445 = C31593 - C31413 / C30242;
    const double C31624 = C31590 / C30238;
    const double C2467 = C167 * C2443;
    const double C2457 = C165 * C2443;
    const double C21501 = C585 * C2443;
    const double C1960 = C1948 + C1949;
    const double C141 =
        4 * ((-2 * C30395 * C30407) / C30398 + C30395 * C30418) +
        C30395 * (3 * C30418 + C30395 * ((-2 * C30395 * C30413) / C30398 +
                                         C30395 * ((-(std::pow(C30402, 7) *
                                                      bs[7] * C30393 * C30404) /
                                                    C30238) /
                                                       C30367 -
                                                   C30413 / C30398)));
    const double C340 = (-(C30407 * C30404) / C30238) / C30367 -
                        C30400 / C30398 - (ae * C30387 * C30452) / C30398 +
                        C30387 * (C30387 * C30418 - (ae * C30452) / C30398);
    const double C341 =
        (((-2 * C30447) / C30238 - (C30395 * C30452) / C30238) * ae) / C30367 +
        C30387 * ((-2 * C30395 * C30407) / C30398 + C30395 * C30418);
    const double C548 = (-(C30407 * C30404) / C30238) / C30367 -
                        C30400 / C30398 - (C30388 * C30496 * ce) / C30398 +
                        C30388 * (C30388 * C30418 - (C30496 * ce) / C30398);
    const double C549 =
        C30388 * ((-2 * C30395 * C30407) / C30398 + C30395 * C30418) -
        ((2 * C30490 + C30395 * C30496) * ce) / C30398;
    const double C1030 =
        C30387 * (C30388 * C30418 - (C30496 * ce) / C30398) -
        (ae * (C30388 * C30452 +
               (C30441 * C30440 + C30397 * C30396 * C30404) * ce)) /
            C30398;
    const double C30555 = C30554 - C30551;
    const double C30604 = C30603 - C30601;
    const double C30652 = C30387 * C30649;
    const double C30655 = 2 * C30649;
    const double C30704 = C30388 * C30702;
    const double C30707 = C30387 * C30702;
    const double C30833 = 2 * C30702;
    const double C1272 =
        3 * ((-(ae * C30534) / C30238) / C30367 - C30400 / C30398 +
             C30387 * C30544) +
        (((-2 * C30534) / C30238 - (C30387 * C30542) / C30238) * ae) / C30367 +
        C30387 *
            (2 * C30544 - (ae * C30542) / C30398 +
             C30387 * ((-(ae * C30387 * C30450) / C30238) / C30367 - C30411 +
                       C30387 * ((-(C30387 * C30413) / C30238) / C30367 -
                                 (ae * C30450) / C30398)));
    const double C1822 =
        2 * (C30387 * C30596 -
             (ae * (C30388 * C30446 + C30565 * ce)) / C30398) -
        (ae * (C30388 * C30542 + (C30565 + C30526 * C30537) * ce)) / C30398 +
        C30387 *
            (C30596 - (ae * (C30388 * C30387 * C30450 + C30573 * ce)) / C30398 +
             C30387 * (C30387 * ((-(C30388 * C30413) / C30238) / C30367 -
                                 (C30494 * ce) / C30398) -
                       (ae * (C30388 * C30450 + C30526 * ce)) / C30398));
    const double C2165 =
        2 * ((-(C30388 * C30400) / C30238) / C30367 - (C30485 * ce) / C30398) -
        ((C30485 + C30489 * std::pow(C30388, 2)) * ce) / C30398 +
        C30388 * ((-(C30388 * C30489 * ce) / C30238) / C30367 -
                  C30400 / C30398 + C30388 * C30596);
    const double C2166 =
        3 * ((-(C30612 * ce) / C30238) / C30367 - C30400 / C30398 +
             C30388 * C30596) -
        ((2 * C30612 + C30388 * C30615) * ce) / C30398 +
        C30388 *
            (2 * C30596 - (C30615 * ce) / C30398 +
             C30388 * ((-(C30388 * C30494 * ce) / C30238) / C30367 - C30411 +
                       C30388 * ((-(C30388 * C30413) / C30238) / C30367 -
                                 (C30494 * ce) / C30398)));
    const double C2590 =
        (((-2 * (C30388 * C30446 + C30565 * ce)) / C30238 -
          (C30388 * (C30388 * (C30388 * C30450 + C30526 * ce) + C30446 +
                     C30388 * C30526 * ce)) /
              C30238 -
          ((C30565 + C30526 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (2 * C30596 - (C30615 * ce) / C30398 +
             C30388 * ((-(C30388 * C30494 * ce) / C30238) / C30367 - C30411 +
                       C30388 * ((-(C30388 * C30413) / C30238) / C30367 -
                                 (C30494 * ce) / C30398)));
    const double C181 = C171 * C31325;
    const double C851 = C171 * C31581;
    const double C3483 = C171 * C3465;
    const double C1713 = C1709 * C31412;
    const double C3651 = C1709 * C31412;
    const double C19305 = C1709 * C31325;
    const double C20651 = C1709 * C31581;
    const double C22973 = C1709 * C3465;
    const double C2343 = C2339 * C31614;
    const double C2953 = C2339 * C31614;
    const double C4223 = C2339 * C4043;
    const double C19939 = C2339 * C31412;
    const double C21367 = C2339 * C1936;
    const double C22095 = C2339 * C31638;
    const double C22971 = C2339 * C31412;
    const double C23667 = C2339 * C31415;
    const double C30651 = C30648 - C30411;
    const double C180 = C170 * C114;
    const double C850 = C170 * C831;
    const double C388 = C376 * C114;
    const double C1702 = C376 * C831;
    const double C390 = C378 * C114;
    const double C1046 = C378 * C831;
    const double C603 = C591 * C512;
    const double C1952 = C591 * C1940;
    const double C4058 = C591 * C30324;
    const double C19462 = C591 * C511;
    const double C19734 = C591 * C832;
    const double C20936 = C591 * C1939;
    const double C22766 = C591 * C3468;
    const double C605 = C593 * C511;
    const double C846 = C593 * C832;
    const double C1954 = C593 * C1939;
    const double C3478 = C593 * C3468;
    const double C19152 = C593 * C114;
    const double C19738 = C593 * C831;
    const double C1061 = C1054 * C832;
    const double C2330 = C1054 * C1939;
    const double C2954 = C1054 * C511;
    const double C3644 = C1054 * C3468;
    const double C19306 = C1054 * C114;
    const double C19940 = C1054 * C831;
    const double C2338 = C2326 + C2327;
    const double C13883 = C13856 + C13857;
    const double C15825 = C15818 + C15819;
    const double C1708 = C1698 + C1699;
    const double C14389 = C14374 + C14375;
    const double C15115 = C15108 + C15109;
    const double C10920 = C10916 + C10917;
    const double C15966 = C15958 + C15959;
    const double C30703 = C30701 - C30411;
    const double C5779 =
        (4 * (2 * C30955 + C30387 * C31054 + C30956 * ae) +
         C30387 *
             (3 * C31054 +
              C30387 *
                  (2 * C31050 +
                   C30387 * (C30494 + C30387 * (C30387 * C30502 + C30528 * ae) +
                             C30692 * ae) +
                   C30696 * ae) +
              C31051 * ae) +
         (3 * C30956 + C30387 * C31051) * ae) /
        C30367;
    const double C369 = C31490 * C330;
    const double C14029 = C13452 * C330;
    const double C726 = C31490 * C332;
    const double C13487 = C13452 * C332;
    const double C1049 = C31490 * C1024;
    const double C14167 = C13452 * C1024;
    const double C162 = C113 * C120;
    const double C368 = C113 * C312;
    const double C14028 = C13456 * C312;
    const double C725 = C113 * C313;
    const double C13486 = C13456 * C313;
    const double C580 = C113 * C520;
    const double C852 = C113 * C521;
    const double C1048 = C113 * C1016;
    const double C14166 = C13456 * C1016;
    const double C2335 = C31490 * C1398;
    const double C13871 = C13452 * C1398;
    const double C1705 = C31490 * C1408;
    const double C14381 = C13452 * C1408;
    const double C1543 = C1539 * C114;
    const double C19466 = C2478 * C512;
    const double C20940 = C2478 * C1940;
    const double C23468 = C2478 * C30324;
    const double C31156 = C31154 + C31151;
    const double C10353 = C10350 + C10351;
    const double C15826 = C15820 + C15821;
    const double C14910 = C14904 + C14905;
    const double C10352 = C10348 + C10349;
    const double C15824 = C15816 + C15817;
    const double C15114 = C15106 + C15107;
    const double C20453 = C20450 + C20451;
    const double C11028 = C11024 + C11025;
    const double C31088 = C31087 + C31081;
    const double C30803 = C30702 - C30801;
    const double C31167 = C31165 + C31162;
    const double C11136 = C11132 + C11133;
    const double C26793 = C26782 + C26783;
    const double C10456 = C113 * C5894;
    const double C25914 = C13456 * C5894;
    const double C26388 = C13456 * C5895;
    const double C30743 = ae * C30740;
    const double C31130 = C30388 * C30740;
    const double C10748 =
        4 * ((-2 * C31010) / C30238 - (C30388 * C31126) / C30238 -
             (C31011 * ce) / C30238) +
        C30388 *
            ((-3 * C31126) / C30238 +
             C30388 * ((-2 * C30710) / C30238 - (C30388 * C30740) / C30238 -
                       (C30810 * ce) / C30238) -
             (C31125 * ce) / C30238) -
        ((3 * C31011 + C30388 * C31125) * ce) / C30238;
    const double C10758 = C113 * C10745;
    const double C31068 = C30387 * C31067;
    const double C6545 =
        (2 * C30388 * C31054 + C30388 * (C31054 + C31067 * C30613)) / C30367;
    const double C6548 =
        (3 * (C31054 + C31067 * C30613) +
         C30388 *
             (2 * C30388 * C31067 +
              C30388 *
                  (C31067 + (C30502 + C30387 * (C30387 * C30513 + C30580 * ae) +
                             C30723 * ae) *
                                C30613))) /
        C30367;
    const double C30433 = C30395 * C30432;
    const double C30558 = C30387 * C30432;
    const double C30606 = C30388 * C30432;
    const double C1269 =
        2 * (C30387 * C30418 - (ae * C30452) / C30398) -
        (ae * (C30461 * std::pow(C30387, 2) + C30452)) / C30398 +
        C30387 * (C30418 - (ae * C30387 * C30461) / C30398 +
                  C30387 * (C30387 * C30432 - (ae * C30461) / C30398));
    const double C1414 =
        C30387 * (C30418 - (C30388 * C30504 * ce) / C30398 +
                  C30388 * (C30388 * C30432 - (C30504 * ce) / C30398)) -
        (ae * (C30388 * (C30388 * C30461 + C30570 * ce) + C30452 +
               C30388 * C30570 * ce)) /
            C30398;
    const double C1419 =
        C30388 * C30418 - (C30496 * ce) / C30398 -
        (ae * (C30388 * C30557 + C30387 * C30570 * ce)) / C30398 +
        C30387 * (C30387 * (C30388 * C30432 - (C30504 * ce) / C30398) -
                  (ae * (C30388 * C30461 + C30570 * ce)) / C30398);
    const double C1420 =
        C30418 - (C30388 * C30504 * ce) / C30398 +
        C30388 * (C30388 * C30432 - (C30504 * ce) / C30398) -
        (ae * (C30388 * (C30388 * C30387 * C30475 + C30583 * ce) + C30557 +
               C30388 * C30583 * ce)) /
            C30398 +
        C30387 * (C30387 * (C30432 - (C30388 * C30515 * ce) / C30398 +
                            C30388 * (C30388 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398) -
                                      (C30515 * ce) / C30398)) -
                  (ae * (C30388 * (C30388 * C30475 + C30582 * ce) + C30461 +
                         C30388 * C30582 * ce)) /
                      C30398);
    const double C30681 = C30387 * C30678;
    const double C30742 = C30388 * C30739;
    const double C30795 = C30387 * C30739;
    const double C30770 = C30767 - C30756;
    const double C30789 = C30787 - C30781;
    const double C30479 = C30395 * C30478;
    const double C1527 =
        2 * C30387 * C30464 + C30387 * (C30464 + C30478 * C30537);
    const double C1693 = C30388 * (C30464 + C30478 * C30537) -
                         ((C30902 + C30588 * C30537) * ce) / C30238;
    const double C2319 =
        C30387 * C30464 +
        C30388 * (C30388 * C30387 * C30478 - (C31034 * ce) / C30238) -
        (C30388 * C31034 * ce) / C30238;
    const double C2453 =
        2 * (C30388 * C30464 - (C30902 * ce) / C30238) +
        C30388 * (C30464 + C30388 * (C30388 * C30478 - (C30588 * ce) / C30238) -
                  (C30388 * C30588 * ce) / C30238) -
        ((C30902 + C30588 * C30613) * ce) / C30238;
    const double C30682 = C30387 * C30679;
    const double C6906 =
        2 * (C30388 * C30650 - (C31051 * ce) / C30238) +
        C30388 * (C30650 + C30388 * (C30388 * C30679 - (C30737 * ce) / C30238) -
                  (C30388 * C30737 * ce) / C30238) -
        ((C31051 + C30737 * C30613) * ce) / C30238;
    const double C30771 = C30761 - C30768;
    const double C30519 = C30509 + C30518;
    const double C30849 = C30844 + C30848;
    const double C11020 = (4 * (2 * C30618 + C30388 * C30620) +
                           C30388 * (3 * C30620 + C30388 * C30859)) /
                          C30367;
    const double C187 = C184 * C31504;
    const double C609 = C588 - C601;
    const double C860 = C856 - C844;
    const double C188 = C185 * C31504;
    const double C396 = C394 * C31504;
    const double C160 = C113 * C132;
    const double C366 = C113 * C329;
    const double C14024 = C13456 * C329;
    const double C723 = C113 * C331;
    const double C13482 = C13456 * C331;
    const double C582 = C113 * C538;
    const double C854 = C113 * C540;
    const double C1050 = C113 * C1025;
    const double C14170 = C13456 * C1025;
    const double C30769 = C30766 - C30750;
    const double C10458 = C113 * C5898;
    const double C25918 = C13456 * C5898;
    const double C26392 = C13456 * C5900;
    const double C30829 = C30828 - C30750;
    const double C121 = 5 * (3 * C30894 + C30395 * C30902) +
                        C30395 * (4 * C30902 + C30395 * C30908);
    const double C314 = 3 * C30894 + C30395 * C30902 + C30908 * C30537;
    const double C522 = 3 * C30894 + C30395 * C30902 + C30908 * C30613;
    const double C717 = C30387 * (4 * C30902 + C30395 * C30908);
    const double C833 = C30388 * (4 * C30902 + C30395 * C30908);
    const double C1017 = C30388 * C30387 * C30908;
    const double C5777 = 5 * (3 * C30956 + C30387 * C31051) +
                         C30387 * (4 * C31051 + C30387 * C31064);
    const double C5896 = 3 * C30956 + C30387 * C31051 + C31064 * C30613;
    const double C6256 = C30388 * (4 * C31051 + C30387 * C31064);
    const double C10746 = 5 * (3 * C31011 + C30388 * C31125) +
                          C30388 * (4 * C31125 + C30388 * C31137);
    const double C31600 = C31565 / C30238;
    const double C31633 = C31604 / C30255;
    const double C31634 = C31606 + C31573;
    const double C715 = C31573 - C31292 / C30242;
    const double C31603 = C31569 / C30238;
    const double C31616 = C31583 / C30238;
    const double C31640 = C31619 / C30255;
    const double C31641 = C31620 + C31587;
    const double C1521 = C31587 - C31371 / C30242;
    const double C31618 = C31584 / C30238;
    const double C30295 = C30291 / C30238;
    const double C3482 = C170 * C3467;
    const double C3480 = C169 * C3467;
    const double C3474 = C166 * C3467;
    const double C3470 = C164 * C3467;
    const double C3652 = C376 * C3467;
    const double C3648 = C374 * C3467;
    const double C3646 = C371 * C3467;
    const double C3642 = C373 * C3467;
    const double C3925 = C378 * C3467;
    const double C22770 = C593 * C3467;
    const double C22768 = C589 * C3467;
    const double C22762 = C584 * C3467;
    const double C22970 = C1052 * C3467;
    const double C23308 = C1054 * C3467;
    const double C30306 = C30300 / C30238;
    const double C2482 = C2478 * C2450;
    const double C2480 = C2476 * C2450;
    const double C3776 = C2478 * C3760;
    const double C3768 = C2476 * C3760;
    const double C31656 = C31622 + C31652;
    const double C2444 = C31643 - (C31415 * C31404) / C30238;
    const double C3767 = C587 * C31644;
    const double C2140 = C31644 / C30255 - C31413 / C31607;
    const double C2461 = C587 * C2445;
    const double C31653 = C31624 + C31643;
    const double C1961 = C1960 - C1950;
    const double C161 = C31490 * C141;
    const double C361 = C31490 * C340;
    const double C13679 = C13451 * C340;
    const double C13675 = C13452 * C340;
    const double C365 = C31490 * C341;
    const double C13481 = C13452 * C341;
    const double C14027 = C13451 * C341;
    const double C573 = C31490 * C548;
    const double C13877 = C13451 * C548;
    const double C579 = C31490 * C549;
    const double C14173 = C13451 * C549;
    const double C1045 = C31490 * C1030;
    const double C13869 = C13452 * C1030;
    const double C14387 = C13451 * C1030;
    const double C1273 =
        3 * ((-(ae * C30546) / C30238) / C30367 - C30531 / C30398 +
             C30387 * C30555) +
        (((-2 * C30546) / C30238 - (C30387 * C30552) / C30238) * ae) / C30367 +
        C30387 * (2 * C30555 - (ae * C30552) / C30398 +
                  C30387 * ((-(ae * C30387 * C30468) / C30238) / C30367 -
                            C30420 / C30398 +
                            C30387 * ((-(C30387 * C30395 * C30427) / C30238) /
                                          C30367 -
                                      (ae * C30468) / C30398)));
    const double C1823 =
        2 * (C30387 * C30604 -
             (ae * (C30388 * C30455 + C30567 * ce)) / C30398) -
        (ae * (C30388 * C30552 + (C30567 + C30576 * C30537) * ce)) / C30398 +
        C30387 *
            (C30604 - (ae * (C30388 * C30387 * C30468 + C30577 * ce)) / C30398 +
             C30387 *
                 (C30387 * ((-(C30388 * C30395 * C30427) / C30238) / C30367 -
                            (C30510 * ce) / C30398) -
                  (ae * (C30388 * C30468 + C30576 * ce)) / C30398));
    const double C2167 =
        2 * ((-(C30388 * C30531) / C30238) / C30367 - (C30490 * ce) / C30398) -
        ((C30490 + C30499 * C30613) * ce) / C30398 +
        C30388 * ((-(C30388 * C30499 * ce) / C30238) / C30367 -
                  C30531 / C30398 + C30388 * C30604);
    const double C2168 =
        3 * ((-(C30618 * ce) / C30238) / C30367 - C30531 / C30398 +
             C30388 * C30604) -
        ((2 * C30618 + C30388 * C30620) * ce) / C30398 +
        C30388 * (2 * C30604 - (C30620 * ce) / C30398 +
                  C30388 * ((-(C30388 * C30510 * ce) / C30238) / C30367 -
                            C30420 / C30398 +
                            C30388 * ((-(C30388 * C30395 * C30427) / C30238) /
                                          C30367 -
                                      (C30510 * ce) / C30398)));
    const double C2591 =
        (((-2 * (C30388 * C30455 + C30567 * ce)) / C30238 -
          (C30388 * (C30388 * (C30388 * C30468 + C30576 * ce) + C30455 +
                     C30388 * C30576 * ce)) /
              C30238 -
          ((C30567 + C30576 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 * (2 * C30604 - (C30620 * ce) / C30398 +
                  C30388 * ((-(C30388 * C30510 * ce) / C30238) / C30367 -
                            C30420 / C30398 +
                            C30388 * ((-(C30388 * C30395 * C30427) / C30238) /
                                          C30367 -
                                      (C30510 * ce) / C30398)));
    const double C30669 = C30655 - C30662;
    const double C30713 = C30707 - C30712;
    const double C30837 = C30833 - C30836;
    const double C10455 = C31490 * C1822;
    const double C25909 = C13452 * C1822;
    const double C26391 = C13451 * C1822;
    const double C9437 = C31490 * C2165;
    const double C26779 = C13451 * C2165;
    const double C10757 = C31490 * C2166;
    const double C26785 = C13451 * C2166;
    const double C10083 = C31490 * C2590;
    const double C26777 = C13452 * C2590;
    const double C27255 = C13451 * C2590;
    const double C30653 = C30651 + C30652;
    const double C186 = C180 + C181;
    const double C861 = C846 - C857;
    const double C1065 = C1061 - C1055;
    const double C2342 = C2338 * C1940;
    const double C2952 = C2338 * C512;
    const double C4222 = C2338 * C30324;
    const double C19936 = C2338 * C832;
    const double C21364 = C2338 * C1939;
    const double C22092 = C2338 * C511;
    const double C22968 = C2338 * C3468;
    const double C1712 = C1708 * C832;
    const double C3650 = C1708 * C3468;
    const double C19304 = C1708 * C114;
    const double C20650 = C1708 * C831;
    const double C22972 = C1708 * C3467;
    const double C21368 = C10920 * C1940;
    const double C22096 = C10920 * C512;
    const double C23668 = C10920 * C30324;
    const double C30705 = C30703 + C30704;
    const double C173 = C162 + C163;
    const double C381 = C368 + C369;
    const double C14034 = C14028 + C14029;
    const double C729 = C725 + C726;
    const double C13504 = C13486 + C13487;
    const double C595 = C580 + C581;
    const double C858 = C852 + C853;
    const double C1057 = C1048 + C1049;
    const double C14174 = C14166 + C14167;
    const double C2340 = C2334 + C2335;
    const double C13890 = C13870 + C13871;
    const double C1710 = C1704 + C1705;
    const double C14392 = C14380 + C14381;
    const double C11021 =
        4 * ((-2 * C31020) / C30238 - (C30388 * C31156) / C30238 -
             (C31021 * ce) / C30238) +
        C30388 *
            ((-3 * C31156) / C30238 +
             C30388 * ((-2 * C30782) / C30238 -
                       (C30388 * (C30388 * (C30388 * C30753 + C30779 * ce) +
                                  C30468 + C30388 * C30779 * ce)) /
                           C30238 -
                       (C30854 * ce) / C30238) -
             (C31155 * ce) / C30238) -
        ((3 * C31021 + C30388 * C31155) * ce) / C30238;
    const double C20653 = C10353 * C31412;
    const double C22975 = C10353 * C31412;
    const double C20652 = C10352 * C832;
    const double C22974 = C10352 * C3468;
    const double C20455 = C20453 * C114;
    const double C21506 = C11028 * C2450;
    const double C23112 = C11028 * C3760;
    const double C6005 =
        (4 * (2 * C30963 + C30387 * C31088 + C30964 * ae) +
         C30387 *
             (3 * C31088 +
              C30387 *
                  (2 * C31084 +
                   C30387 * (C30510 + C30387 * (C30387 * C30824 + C30779 * ae) +
                             C30823 * ae) +
                   C30786 * ae) +
              C31085 * ae) +
         (3 * C30964 + C30387 * C31085) * ae) /
        C30367;
    const double C6155 =
        (C30388 *
         (3 * C31088 +
          C30387 *
              (2 * C31084 +
               C30387 * (C30510 + C30387 * (C30387 * C30824 + C30779 * ae) +
                         C30823 * ae) +
               C30786 * ae) +
          C31085 * ae)) /
        C30367;
    const double C6701 =
        (2 * C30963 + C30387 * C31088 + C30964 * ae +
         (2 * C31084 +
          C30387 * (C30510 + C30387 * (C30387 * C30824 + C30779 * ae) +
                    C30823 * ae) +
          C30786 * ae) *
             C30613) /
        C30367;
    const double C6803 =
        (2 * C30388 * C31088 +
         C30388 * (C31088 + (C30510 + C30387 * (C30387 * C30824 + C30779 * ae) +
                             C30823 * ae) *
                                C30613)) /
        C30367;
    const double C11129 =
        4 * ((-2 * C31103) / C30238 - (C30388 * C31167) / C30238 -
             (C31104 * ce) / C30238) +
        C30388 *
            ((-3 * C31167) / C30238 +
             C30388 *
                 ((-2 * C30797) / C30238 -
                  (C30388 * (C30388 * (C30388 * C30387 * C30472 + C30723 * ce) +
                             C30657 + C30388 * C30723 * ce)) /
                      C30238 -
                  (C30817 * ce) / C30238) -
             (C31166 * ce) / C30238) -
        ((3 * C31104 + C30388 * C31166) * ce) / C30238;
    const double C30745 = C30743 / C30398;
    const double C31135 = C31130 / C30238;
    const double C10760 = C113 * C10748;
    const double C10764 = C10758 + C10759;
    const double C31069 = C31056 + C31068;
    const double C10093 = C31490 * C6545;
    const double C27253 = C13452 * C6545;
    const double C30434 = C30426 + C30433;
    const double C30563 = C30558 - C30561;
    const double C30609 = C30606 - C30608;
    const double C1531 = C31490 * C1269;
    const double C13677 = C13452 * C1269;
    const double C2337 = C31490 * C1414;
    const double C13875 = C13452 * C1414;
    const double C1707 = C31490 * C1419;
    const double C14385 = C13452 * C1419;
    const double C30683 = C30680 + C30681;
    const double C30744 = C30741 + C30742;
    const double C30800 = C30795 - C30798;
    const double C30772 = C30387 * C30770;
    const double C30790 = C30387 * C30789;
    const double C30822 = C30388 * C30789;
    const double C30480 = C30470 + C30479;
    const double C30684 = C30666 + C30682;
    const double C6006 =
        4 * ((-2 * C30546) / C30238 - (C30387 * C30552) / C30238) +
        C30387 * ((-3 * C30552) / C30238 + C30387 * C30771);
    const double C6156 = C30388 * ((-3 * C30552) / C30238 + C30387 * C30771) -
                         ((3 * C30964 + C30387 * C31085) * ce) / C30238;
    const double C6702 = (-2 * C30546) / C30238 - (C30387 * C30552) / C30238 +
                         C30388 * (C30388 * C30771 - (C31085 * ce) / C30238) -
                         (C30388 * C31085 * ce) / C30238;
    const double C134 = (5 * (3 * C30496 + C30395 * C30506) +
                         C30395 * (4 * C30506 + C30395 * C30519)) /
                        C30367;
    const double C333 =
        (3 * C30496 + C30395 * C30506 +
         C30387 * (C30387 * C30519 + C30908 * ae) + C30387 * C30908 * ae) /
        C30367;
    const double C541 =
        (3 * C30496 + C30395 * C30506 + C30519 * C30613) / C30367;
    const double C718 = (C30387 * (4 * C30506 + C30395 * C30519) +
                         (4 * C30902 + C30395 * C30908) * ae) /
                        C30367;
    const double C834 = (C30388 * (4 * C30506 + C30395 * C30519)) / C30367;
    const double C1026 = (C30388 * (C30387 * C30519 + C30908 * ae)) / C30367;
    const double C10749 = (5 * (3 * C30615 + C30388 * C30842) +
                           C30388 * (4 * C30842 + C30388 * C30849)) /
                          C30367;
    const double C610 = C609 - C602;
    const double C864 = C860 - C845;
    const double C31654 = C31600 + C31646;
    const double C714 = C31633 - (C31294 * C31277) / C30238;
    const double C111 = C31634 / C30255 - C31292 / C31607;
    const double C31647 = C31603 + C31633;
    const double C31655 = C31616 + C31650;
    const double C1520 = C31640 - (C31373 * C31362) / C30238;
    const double C1248 = C31641 / C30255 - C31371 / C31607;
    const double C31651 = C31618 + C31640;
    const double C30299 = C30295 - C30276;
    const double C3487 = C3479 + C3480;
    const double C3486 = C3474 + C3475;
    const double C3924 = C3645 + C3646;
    const double C3771 = C167 * C31656;
    const double C3763 = C165 * C31656;
    const double C23107 = C585 * C31656;
    const double C2137 =
        (C31649 + 2 * C31408) / C30255 - (C31656 * C31404) / C30238;
    const double C2469 = C590 * C2444;
    const double C2459 = C585 * C2444;
    const double C21503 = C587 * C2444;
    const double C3773 = C590 * C31653;
    const double C3765 = C585 * C31653;
    const double C23109 = C587 * C31653;
    const double C2138 =
        (C31638 + 2 * C31415 + C31656) / C30255 - (C31653 * C31404) / C30238;
    const double C2139 = (C31614 + C31412 / C30238 + C31653) / C30255 -
                         (C31644 * C31404) / C30238;
    const double C1962 = C1961 - C1951;
    const double C172 = C160 + C161;
    const double C377 = C360 + C361;
    const double C13697 = C13678 + C13679;
    const double C13695 = C13674 + C13675;
    const double C379 = C364 + C365;
    const double C13501 = C13480 + C13481;
    const double C14033 = C14026 + C14027;
    const double C592 = C572 + C573;
    const double C13893 = C13876 + C13877;
    const double C594 = C578 + C579;
    const double C14177 = C14172 + C14173;
    const double C1056 = C1044 + C1045;
    const double C13889 = C13868 + C13869;
    const double C14395 = C14386 + C14387;
    const double C14901 = C13452 * C1273;
    const double C15111 = C13452 * C1823;
    const double C20449 = C31490 * C1823;
    const double C2465 = C31490 * C2167;
    const double C15965 = C13451 * C2167;
    const double C11027 = C31490 * C2168;
    const double C10919 = C31490 * C2591;
    const double C15963 = C13452 * C2591;
    const double C5904 =
        3 * (C30596 - (ae * (C30388 * C30632 + C30573 * ce)) / C30398 +
             C30387 * C30713) +
        ((C30388 * C30650 - ((2 * C30573 + C30387 * C30696) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (2 * C30713 - (ae * (C30388 * C30640 + C30696 * ce)) / C30398 +
             C30387 *
                 (C30702 - (ae * (C30388 * C30657 + C30692 * ce)) / C30398 +
                  C30387 * (C30387 * ((-(C30388 * C30427) / C30238) / C30367 -
                                      (C30502 * ce) / C30398) -
                            (ae * (C30388 * C30458 + C30528 * ce)) / C30398)));
    const double C10461 = C10454 + C10455;
    const double C25926 = C25908 + C25909;
    const double C26396 = C26390 + C26391;
    const double C9443 = C9436 + C9437;
    const double C26791 = C26778 + C26779;
    const double C10763 = C10756 + C10757;
    const double C26794 = C26784 + C26785;
    const double C10097 = C10082 + C10083;
    const double C26790 = C26776 + C26777;
    const double C27260 = C27254 + C27255;
    const double C5782 =
        4 * (2 * C30544 - (ae * C30542) / C30398 + C30387 * C30653) +
        (((-3 * C30542) / C30238 + C30387 * C30650) * ae) / C30367 +
        C30387 *
            (3 * C30653 + (C30650 * ae) / C30367 +
             C30387 *
                 (2 * C30649 - (ae * C30640) / C30398 +
                  C30387 *
                      ((-(ae * C30387 * C30458) / C30238) / C30367 - C30423 +
                       C30387 * ((-(C30387 * C30427) / C30238) / C30367 -
                                 (ae * C30458) / C30398))));
    const double C189 = C186 * C31504;
    const double C5903 =
        2 * (C30387 * C30705 - (ae * (C30388 * (C30388 * C30450 + C30526 * ce) +
                                      C30446 + C30388 * C30526 * ce)) /
                                   C30398) -
        (ae * (C30388 * (C30388 * C30640 + C30696 * ce) + C30542 +
               C30388 * C30696 * ce)) /
            C30398 +
        C30387 *
            (C30705 -
             (ae * (C30388 * (C30388 * C30657 + C30692 * ce) + C30632 +
                    C30388 * C30692 * ce)) /
                 C30398 +
             C30387 *
                 (C30387 *
                      ((-(C30388 * C30502 * ce) / C30238) / C30367 - C30423 +
                       C30388 * ((-(C30388 * C30427) / C30238) / C30367 -
                                 (C30502 * ce) / C30398)) -
                  (ae * (C30388 * (C30388 * C30458 + C30528 * ce) + C30450 +
                         C30388 * C30528 * ce)) /
                      C30398));
    const double C183 = C173 * C114;
    const double C393 = C381 * C114;
    const double C731 = C729 * C114;
    const double C607 = C595 * C512;
    const double C1958 = C595 * C1940;
    const double C4064 = C595 * C30324;
    const double C19740 = C595 * C832;
    const double C22772 = C595 * C3468;
    const double C862 = C858 * C832;
    const double C3484 = C858 * C3468;
    const double C19155 = C858 * C114;
    const double C1063 = C1057 * C832;
    const double C3927 = C1057 * C3468;
    const double C19599 = C1057 * C114;
    const double C2344 = C2340 * C1940;
    const double C2958 = C2340 * C512;
    const double C4228 = C2340 * C30324;
    const double C19942 = C2340 * C832;
    const double C23310 = C2340 * C3468;
    const double C1714 = C1710 * C832;
    const double C3654 = C1710 * C3468;
    const double C19309 = C1710 * C114;
    const double C31138 = C31134 - C31135;
    const double C31070 = C31069 + C31060;
    const double C10102 = C10092 + C10093;
    const double C27259 = C27252 + C27253;
    const double C142 =
        5 * (3 * C30418 + C30395 * C30434) +
        C30395 * (4 * C30434 +
                  C30395 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))));
    const double C342 = (-2 * C30395 * C30407) / C30398 + C30395 * C30418 +
                        (C30387 * C30464 * ae) / C30367 +
                        C30387 * ((C30464 * ae) / C30367 + C30387 * C30434);
    const double C343 =
        (((-3 * C30452) / C30238 + C30395 * C30464) * ae) / C30367 +
        C30387 * (3 * C30418 + C30395 * C30434);
    const double C550 = (-2 * C30395 * C30407) / C30398 + C30395 * C30418 -
                        (C30388 * C30506 * ce) / C30398 +
                        C30388 * (C30388 * C30434 - (C30506 * ce) / C30398);
    const double C551 = C30388 * (3 * C30418 + C30395 * C30434) -
                        ((3 * C30496 + C30395 * C30506) * ce) / C30398;
    const double C552 =
        3 * C30418 + C30395 * C30434 - (C30388 * C30519 * ce) / C30398 +
        C30388 * (C30388 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))) -
                  (C30519 * ce) / C30398);
    const double C836 =
        C30388 * (4 * C30434 +
                  C30395 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398)))) -
        ((4 * C30506 + C30395 * C30519) * ce) / C30398;
    const double C1031 =
        ((C30388 * C30464 - ((2 * C30395 * C30526 +
                              C30395 * (C30526 + C30403 * C30405 * C30404)) *
                             ce) /
                                C30238) *
         ae) /
            C30367 +
        C30387 * (C30388 * C30434 - (C30506 * ce) / C30398);
    const double C1528 =
        2 * ((C30464 * ae) / C30367 + C30387 * C30434) +
        ((C30464 + C30478 * C30537) * ae) / C30367 +
        C30387 * (C30434 + (C30387 * C30478 * ae) / C30367 +
                  C30387 * ((C30478 * ae) / C30367 +
                            C30387 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))));
    const double C1694 =
        C30388 * C30434 - (C30506 * ce) / C30398 +
        ((C30388 * C30387 * C30478 - (C30387 * C30588 * ce) / C30238) * ae) /
            C30367 +
        C30387 * (((C30388 * C30478 - (C30588 * ce) / C30238) * ae) / C30367 +
                  C30387 * (C30388 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398)) -
                            (C30517 * ce) / C30398));
    const double C2320 =
        ((C30464 + C30388 * (C30388 * C30478 - (C30588 * ce) / C30238) -
          (C30388 * C30588 * ce) / C30238) *
         ae) /
            C30367 +
        C30387 * (C30434 - (C30388 * C30517 * ce) / C30398 +
                  C30388 * (C30388 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398)) -
                            (C30517 * ce) / C30398));
    const double C2454 =
        2 * (C30388 * C30434 - (C30506 * ce) / C30398) -
        ((C30506 + C30517 * C30613) * ce) / C30398 +
        C30388 * (C30434 - (C30388 * C30517 * ce) / C30398 +
                  C30388 * (C30388 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398)) -
                            (C30517 * ce) / C30398));
    const double C1274 =
        3 * (C30418 - (ae * C30557) / C30398 + C30387 * C30563) +
        (((-2 * C30557) / C30238 - (C30387 * C30562) / C30238) * ae) / C30367 +
        C30387 * (2 * C30563 - (ae * C30562) / C30398 +
                  C30387 * (C30432 - (ae * C30387 * C30475) / C30398 +
                            C30387 * (C30387 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398) -
                                      (ae * C30475) / C30398)));
    const double C1824 =
        2 * (C30387 * C30609 -
             (ae * (C30388 * C30461 + C30570 * ce)) / C30398) -
        (ae * (C30388 * C30562 + (C30570 + C30582 * C30537) * ce)) / C30398 +
        C30387 *
            (C30609 - (ae * (C30388 * C30387 * C30475 + C30583 * ce)) / C30398 +
             C30387 * (C30387 * (C30388 * ((-(std::pow(C30391, 8) * bs[8] *
                                              C30393 * C30404) /
                                            C30238) /
                                               C30367 -
                                           C30427 / C30398) -
                                 (C30515 * ce) / C30398) -
                       (ae * (C30388 * C30475 + C30582 * ce)) / C30398));
    const double C2169 =
        2 * (C30388 * C30418 - (C30496 * ce) / C30398) -
        ((C30496 + C30504 * C30613) * ce) / C30398 +
        C30388 * (C30418 - (C30388 * C30504 * ce) / C30398 + C30388 * C30609);
    const double C2170 =
        3 * (C30418 - (C30623 * ce) / C30398 + C30388 * C30609) -
        ((2 * C30623 + C30388 * C30625) * ce) / C30398 +
        C30388 * (2 * C30609 - (C30625 * ce) / C30398 +
                  C30388 * (C30432 - (C30388 * C30515 * ce) / C30398 +
                            C30388 * (C30388 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398) -
                                      (C30515 * ce) / C30398)));
    const double C2592 =
        (((-2 * (C30388 * C30461 + C30570 * ce)) / C30238 -
          (C30388 * (C30388 * (C30388 * C30475 + C30582 * ce) + C30461 +
                     C30388 * C30582 * ce)) /
              C30238 -
          ((C30570 + C30582 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 * (2 * C30609 - (C30625 * ce) / C30398 +
                  C30388 * (C30432 - (C30388 * C30515 * ce) / C30398 +
                            C30388 * (C30388 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398) -
                                      (C30515 * ce) / C30398)));
    const double C1538 = C1530 + C1531;
    const double C13696 = C13676 + C13677;
    const double C2341 = C2336 + C2337;
    const double C13892 = C13874 + C13875;
    const double C1711 = C1706 + C1707;
    const double C14394 = C14384 + C14385;
    const double C30685 = C30387 * C30683;
    const double C30746 = C30387 * C30744;
    const double C30835 = C30388 * C30744;
    const double C6551 =
        2 * C30596 - (C30615 * ce) / C30398 + C30388 * C30705 +
        (((-2 * (C30388 * C30632 + C30573 * ce)) / C30238 -
          (C30388 * (C30388 * C30797 + C30632 + C30388 * C30692 * ce)) /
              C30238 -
          ((C30573 + C30692 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            ((((-2 * C30710) / C30238 - (C30388 * C30740) / C30238 -
               ((C30526 + C30528 * C30613) * ce) / C30238) *
              ae) /
                 C30367 +
             C30387 * (2 * C30702 - ((C30494 + C30502 * C30613) * ce) / C30398 +
                       C30388 * C30744));
    const double C6552 =
        (((-3 * (C30388 * C30710 + C30446 + C30807 * ce)) / C30238 +
          C30388 * ((-2 * C30710) / C30238 - (C30388 * C30740) / C30238 -
                    (C30810 * ce) / C30238) -
          ((2 * C30807 + C30388 * C30810) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (3 * C30705 - ((2 * C30688 + C30388 * C30811) * ce) / C30398 +
             C30388 * (2 * C30702 - (C30811 * ce) / C30398 + C30388 * C30744));
    const double C6553 =
        3 * C30705 - ((2 * C30688 + C30388 * C30811) * ce) / C30398 +
        C30388 * (2 * C30702 - (C30811 * ce) / C30398 + C30388 * C30744) +
        (((-3 * (C30388 * C30797 + C30632 + C30813 * ce)) / C30238 +
          C30388 *
              ((-2 * C30797) / C30238 -
               (C30388 * (C30388 * (C30388 * C30387 * C30472 + C30723 * ce) +
                          C30657 + C30388 * C30723 * ce)) /
                   C30238 -
               (C30817 * ce) / C30238) -
          ((2 * C30813 + C30388 * C30817) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            ((((-3 * C30740) / C30238 +
               C30388 * ((-2 * C30727) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30472 + C30580 * ce) +
                                    C30458 + C30388 * C30580 * ce)) /
                             C30238 -
                         (C30818 * ce) / C30238) -
               ((2 * C30720 + C30388 * C30818) * ce) / C30238) *
              ae) /
                 C30367 +
             C30387 *
                 (3 * C30744 - ((2 * C30715 + C30388 * C30819) * ce) / C30398 +
                  C30388 *
                      (2 * C30739 - (C30819 * ce) / C30398 +
                       C30388 * ((-(C30388 * C30513 * ce) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30388 * ((-(C30388 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (C30513 * ce) / C30398)))));
    const double C30802 = C30387 * C30800;
    const double C30773 = C30769 + C30772;
    const double C30791 = C30790 - C30788;
    const double C30830 = C30829 + C30822;
    const double C344 =
        3 * C30418 + C30395 * C30434 + (C30387 * C30480 * ae) / C30367 +
        C30387 * ((C30480 * ae) / C30367 +
                  C30387 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))));
    const double C720 =
        ((4 * C30464 + C30395 * C30480) * ae) / C30367 +
        C30387 * (4 * C30434 +
                  C30395 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))));
    const double C1032 =
        ((C30388 * C30480 -
          ((3 * (C30526 + C30528 * C30404) +
            C30395 * (2 * C30395 * C30528 +
                      C30395 * (C30528 + C30410 * C30409 * C30404))) *
           ce) /
              C30238) *
         ae) /
            C30367 +
        C30387 * (C30388 * (3 * C30432 +
                            C30395 * ((-2 * C30395 * C30427) / C30398 +
                                      C30395 * ((-(std::pow(C30391, 8) * bs[8] *
                                                   C30393 * C30404) /
                                                 C30238) /
                                                    C30367 -
                                                C30427 / C30398))) -
                  (C30519 * ce) / C30398);
    const double C135 = 5 * ((-3 * C30452) / C30238 + C30395 * C30464) +
                        C30395 * (4 * C30464 + C30395 * C30480);
    const double C334 =
        (-3 * C30452) / C30238 + C30395 * C30464 + C30480 * C30537;
    const double C542 = (-3 * C30452) / C30238 + C30395 * C30464 +
                        C30388 * (C30388 * C30480 - (C30908 * ce) / C30238) -
                        (C30388 * C30908 * ce) / C30238;
    const double C719 = C30387 * (4 * C30464 + C30395 * C30480);
    const double C835 = C30388 * (4 * C30464 + C30395 * C30480) -
                        ((4 * C30902 + C30395 * C30908) * ce) / C30238;
    const double C1027 =
        C30388 * C30387 * C30480 - (C30387 * C30908 * ce) / C30238;
    const double C5781 = 5 * ((-3 * C30542) / C30238 + C30387 * C30650) +
                         C30387 * (4 * C30650 + C30387 * C30684);
    const double C5902 = (-3 * C30542) / C30238 + C30387 * C30650 +
                         C30388 * (C30388 * C30684 - (C31064 * ce) / C30238) -
                         (C30388 * C31064 * ce) / C30238;
    const double C6258 = C30388 * (4 * C30650 + C30387 * C30684) -
                         ((4 * C31051 + C30387 * C31064) * ce) / C30238;
    const double C611 = C610 + C603;
    const double C866 = C864 * C31504;
    const double C108 =
        (C31645 + 2 * C31286) / C30255 - (C31654 * C31277) / C30238;
    const double C109 =
        (C31632 + 2 * C31294 + C31654) / C30255 - (C31647 * C31277) / C30238;
    const double C110 = (C31605 + C31291 / C30238 + C31647) / C30255 -
                        (C31634 * C31277) / C30238;
    const double C1245 =
        (C31648 + 2 * C31366) / C30255 - (C31655 * C31362) / C30238;
    const double C1246 =
        (C31636 + 2 * C31373 + C31655) / C30255 - (C31651 * C31362) / C30238;
    const double C1247 = (C31611 + C31370 / C30238 + C31651) / C30255 -
                         (C31641 * C31362) / C30238;
    const double C30305 = C30299 / C30255;
    const double C30304 = C30236 * C30299;
    const double C3489 = C3478 - C3487;
    const double C3488 = C3486 - C3476;
    const double C3929 = C3644 - C3924;
    const double C1963 = C1962 + C1952;
    const double C182 = C172 * C31325;
    const double C389 = C377 * C31325;
    const double C1703 = C377 * C31581;
    const double C3653 = C377 * C3465;
    const double C391 = C379 * C31325;
    const double C1047 = C379 * C31581;
    const double C3926 = C379 * C3465;
    const double C604 = C592 * C31614;
    const double C1953 = C592 * C31614;
    const double C2471 = C592 * C2445;
    const double C3775 = C592 * C31644;
    const double C4059 = C592 * C4043;
    const double C19465 = C592 * C31638;
    const double C19737 = C592 * C31412;
    const double C20939 = C592 * C1936;
    const double C22769 = C592 * C31412;
    const double C23467 = C592 * C31415;
    const double C606 = C594 * C31638;
    const double C849 = C594 * C31412;
    const double C1957 = C594 * C1936;
    const double C3481 = C594 * C31412;
    const double C4063 = C594 * C31415;
    const double C19153 = C594 * C31325;
    const double C19739 = C594 * C31581;
    const double C22771 = C594 * C3465;
    const double C1062 = C1056 * C31412;
    const double C2333 = C1056 * C1936;
    const double C2957 = C1056 * C31638;
    const double C3647 = C1056 * C31412;
    const double C4227 = C1056 * C31415;
    const double C19307 = C1056 * C31325;
    const double C19941 = C1056 * C31581;
    const double C23309 = C1056 * C3465;
    const double C14908 = C14900 + C14901;
    const double C15116 = C15110 + C15111;
    const double C20452 = C20448 + C20449;
    const double C2477 = C2464 + C2465;
    const double C15969 = C15964 + C15965;
    const double C11029 = C11026 + C11027;
    const double C10921 = C10918 + C10919;
    const double C15968 = C15962 + C15963;
    const double C26393 = C13452 * C5904;
    const double C10459 = C31490 * C5903;
    const double C25919 = C13452 * C5903;
    const double C31139 = C31138 - C31136;
    const double C5780 =
        (5 * (3 * C31054 + C30387 * C31070 + C31051 * ae) +
         C30387 * (4 * C31070 +
                   C30387 * (3 * C31067 +
                             C30387 * (2 * C31063 +
                                       C30387 * (C30502 +
                                                 C30387 * (C30387 * C30513 +
                                                           C30580 * ae) +
                                                 C30723 * ae) +
                                       C30729 * ae) +
                             C30737 * ae) +
                   C31064 * ae) +
         (4 * C31051 + C30387 * C31064) * ae) /
        C30367;
    const double C5897 =
        (2 * C30955 + C30387 * C31054 + C30956 * ae + C31070 * C30613) / C30367;
    const double C5899 =
        (C30388 * (3 * C31054 + C30387 * C31070 + C31051 * ae)) / C30367;
    const double C5901 =
        (3 * C31054 + C30387 * C31070 + C31051 * ae +
         (3 * C31067 +
          C30387 *
              (2 * C31063 +
               C30387 * (C30502 + C30387 * (C30387 * C30513 + C30580 * ae) +
                         C30723 * ae) +
               C30729 * ae) +
          C30737 * ae) *
             C30613) /
        C30367;
    const double C6257 =
        (C30388 *
         (4 * C31070 +
          C30387 *
              (3 * C31067 +
               C30387 * (2 * C31063 +
                         C30387 * (C30502 +
                                   C30387 * (C30387 * C30513 + C30580 * ae) +
                                   C30723 * ae) +
                         C30729 * ae) +
               C30737 * ae) +
          C31064 * ae)) /
        C30367;
    const double C6905 =
        (2 * C30388 * C31070 +
         C30388 *
             (C31070 +
              (2 * C31063 +
               C30387 * (C30502 + C30387 * (C30387 * C30513 + C30580 * ae) +
                         C30723 * ae) +
               C30729 * ae) *
                  C30613)) /
        C30367;
    const double C367 = C31490 * C342;
    const double C14025 = C13452 * C342;
    const double C724 = C31490 * C343;
    const double C13483 = C13452 * C343;
    const double C583 = C31490 * C550;
    const double C855 = C31490 * C551;
    const double C1051 = C31490 * C1031;
    const double C14171 = C13452 * C1031;
    const double C2475 = C31490 * C2169;
    const double C1542 = C1538 * C31325;
    const double C2345 = C2341 * C31614;
    const double C2959 = C2341 * C31614;
    const double C4229 = C2341 * C4043;
    const double C19943 = C2341 * C31412;
    const double C23311 = C2341 * C31412;
    const double C1715 = C1711 * C31412;
    const double C3655 = C1711 * C31412;
    const double C19308 = C1711 * C31325;
    const double C30686 = C30669 + C30685;
    const double C30747 = C30746 - C30745;
    const double C30838 = C30837 + C30835;
    const double C10095 = C31490 * C6551;
    const double C27257 = C13452 * C6551;
    const double C11135 = C31490 * C6552;
    const double C26787 = C13452 * C6552;
    const double C30804 = C30803 + C30802;
    const double C6007 =
        4 * (2 * C30555 - (ae * C30552) / C30398 + C30387 * C30773) +
        (((-3 * C30552) / C30238 + C30387 * C30771) * ae) / C30367 +
        C30387 *
            (3 * C30773 + (C30771 * ae) / C30367 +
             C30387 *
                 (2 * C30770 - (ae * C30762) / C30398 +
                  C30387 * ((-(ae * C30387 * C30753) / C30238) / C30367 -
                            C30751 / C30398 +
                            C30387 * ((-(C30387 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (ae * C30753) / C30398))));
    const double C6157 =
        3 * (C30604 - (ae * (C30388 * C30749 + C30577 * ce)) / C30398 +
             C30387 * C30791) +
        ((C30388 * C30771 - ((2 * C30577 + C30387 * C30786) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (2 * C30791 - (ae * (C30388 * C30762 + C30786 * ce)) / C30398 +
             C30387 *
                 (C30789 -
                  (ae * (C30388 * C30387 * C30753 + C30387 * C30779 * ce)) /
                      C30398 +
                  C30387 * (C30387 * ((-(C30388 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30395 * C30513 * ce) / C30398) -
                            (ae * (C30388 * C30753 + C30779 * ce)) / C30398)));
    const double C6703 =
        2 * (C30387 * C30830 -
             (ae * (C30388 * C30782 + C30455 + C30388 * C30576 * ce)) /
                 C30398) -
        (ae * (C30388 * (C30388 * C30762 + C30786 * ce) + C30552 +
               C30388 * C30786 * ce)) /
            C30398 +
        C30387 *
            (C30830 -
             (ae * (C30388 * (C30388 * C30387 * C30753 + C30823 * ce) + C30749 +
                    C30388 * C30823 * ce)) /
                 C30398 +
             C30387 *
                 (C30387 * ((-(C30388 * C30824 * ce) / C30238) / C30367 -
                            C30751 / C30398 +
                            C30388 * ((-(C30388 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30824 * ce) / C30398)) -
                  (ae * (C30388 * (C30388 * C30753 + C30779 * ce) + C30468 +
                         C30388 * C30779 * ce)) /
                      C30398));
    const double C6805 =
        2 * C30604 - (C30620 * ce) / C30398 + C30388 * C30830 +
        (((-2 * (C30388 * C30749 + C30577 * ce)) / C30238 -
          (C30388 * (C30388 * (C30388 * C30387 * C30753 + C30823 * ce) +
                     C30749 + C30388 * C30823 * ce)) /
              C30238 -
          ((C30577 + C30823 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            ((((-2 * C30782) / C30238 -
               (C30388 * (C30388 * (C30388 * C30753 + C30779 * ce) + C30468 +
                          C30388 * C30779 * ce)) /
                   C30238 -
               ((C30576 + C30779 * C30613) * ce) / C30238) *
              ae) /
                 C30367 +
             C30387 *
                 (2 * C30789 - ((C30510 + C30824 * C30613) * ce) / C30398 +
                  C30388 * ((-(C30388 * C30824 * ce) / C30238) / C30367 -
                            C30751 / C30398 +
                            C30388 * ((-(C30388 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30824 * ce) / C30398))));
    const double C10914 =
        (((-3 * (C30388 * C30782 + C30455 + C30851 * ce)) / C30238 +
          C30388 * ((-2 * C30782) / C30238 -
                    (C30388 * (C30388 * (C30388 * C30753 + C30779 * ce) +
                               C30468 + C30388 * C30779 * ce)) /
                        C30238 -
                    (C30854 * ce) / C30238) -
          ((2 * C30851 + C30388 * C30854) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (3 * C30830 - ((2 * C30821 + C30388 * C30855) * ce) / C30398 +
             C30388 *
                 (2 * C30789 - (C30855 * ce) / C30398 +
                  C30388 * ((-(C30388 * C30824 * ce) / C30238) / C30367 -
                            C30751 / C30398 +
                            C30388 * ((-(C30388 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30824 * ce) / C30398))));
    const double C11022 =
        4 * (2 * C30604 - (C30620 * ce) / C30398 + C30388 * C30830) -
        ((3 * C30620 + C30388 * C30859) * ce) / C30398 +
        C30388 *
            (3 * C30830 - (C30859 * ce) / C30398 +
             C30388 *
                 (2 * C30789 - (C30855 * ce) / C30398 +
                  C30388 * ((-(C30388 * C30824 * ce) / C30238) / C30367 -
                            C30751 / C30398 +
                            C30388 * ((-(C30388 * C30395 * std::pow(C30391, 8) *
                                         bs[8] * C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30824 * ce) / C30398))));
    const double C30310 = C30305 - C30306;
    const double C30309 = C30304 + C31581;
    const double C3490 = C3488 - C3477;
    const double C395 = C388 + C389;
    const double C722 = C390 + C391;
    const double C612 = C611 + C604;
    const double C1964 = C1963 + C1953;
    const double C865 = C861 + C849;
    const double C3491 = C3489 + C3481;
    const double C1066 = C1065 + C1062;
    const double C3930 = C3929 + C3647;
    const double C20454 = C20452 * C31325;
    const double C2481 = C2477 * C31627;
    const double C3769 = C2477 * C31627;
    const double C19461 = C2477 * C31614;
    const double C20935 = C2477 * C31614;
    const double C21505 = C2477 * C2445;
    const double C23111 = C2477 * C31644;
    const double C23463 = C2477 * C4043;
    const double C21507 = C11029 * C31627;
    const double C23113 = C11029 * C31627;
    const double C21369 = C10921 * C31614;
    const double C22097 = C10921 * C31614;
    const double C23669 = C10921 * C4043;
    const double C26397 = C26392 + C26393;
    const double C10463 = C10458 + C10459;
    const double C25931 = C25918 + C25919;
    const double C10750 =
        5 * ((-3 * C31126) / C30238 + C30388 * C31139 -
             (C31125 * ce) / C30238) +
        C30388 *
            (4 * C31139 +
             C30388 * ((-3 * C30740) / C30238 +
                       C30388 * ((-2 * C30727) / C30238 -
                                 (C30388 *
                                  (C30388 * (C30388 * C30472 + C30580 * ce) +
                                   C30458 + C30388 * C30580 * ce)) /
                                     C30238 -
                                 (C30818 * ce) / C30238) -
                       (C30863 * ce) / C30238) -
             (C31137 * ce) / C30238) -
        ((4 * C31125 + C30388 * C31137) * ce) / C30238;
    const double C10457 = C31490 * C5897;
    const double C25915 = C13452 * C5897;
    const double C26389 = C13452 * C5899;
    const double C380 = C366 + C367;
    const double C14032 = C14024 + C14025;
    const double C728 = C723 + C724;
    const double C13502 = C13482 + C13483;
    const double C596 = C582 + C583;
    const double C859 = C854 + C855;
    const double C1058 = C1050 + C1051;
    const double C14176 = C14170 + C14171;
    const double C2479 = C2474 + C2475;
    const double C5783 =
        5 * (3 * C30653 + (C30650 * ae) / C30367 + C30387 * C30686) +
        ((4 * C30650 + C30387 * C30684) * ae) / C30367 +
        C30387 *
            (4 * C30686 + (C30684 * ae) / C30367 +
             C30387 *
                 (3 * C30683 + (C30679 * ae) / C30367 +
                  C30387 *
                      (2 * C30678 - (ae * C30668) / C30398 +
                       C30387 * ((-(ae * C30387 * C30472) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30387 * ((-(C30387 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (ae * C30472) / C30398)))));
    const double C5905 =
        3 * (C30705 -
             (ae * (C30388 * (C30388 * C30657 + C30692 * ce) + C30632 +
                    C30388 * C30692 * ce)) /
                 C30398 +
             C30387 * C30747) +
        ((C30650 + C30388 * (C30388 * C30679 - (C30737 * ce) / C30238) -
          (C30388 * C30737 * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (2 * C30747 -
             (ae * (C30388 * (C30388 * C30668 + C30729 * ce) + C30640 +
                    C30388 * C30729 * ce)) /
                 C30398 +
             C30387 *
                 (C30744 -
                  (ae * (C30388 * (C30388 * C30387 * C30472 + C30723 * ce) +
                         C30657 + C30388 * C30723 * ce)) /
                      C30398 +
                  C30387 *
                      (C30387 * ((-(C30388 * C30513 * ce) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30388 * ((-(C30388 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (C30513 * ce) / C30398)) -
                       (ae * (C30388 * (C30388 * C30472 + C30580 * ce) +
                              C30458 + C30388 * C30580 * ce)) /
                           C30398)));
    const double C6907 =
        2 * ((((-2 * C30710) / C30238 - (C30388 * C30740) / C30238 -
               (C30810 * ce) / C30238) *
              ae) /
                 C30367 +
             C30387 * C30838) +
        (((-2 * (C30388 * C30640 + C30696 * ce)) / C30238 -
          (C30388 * (C30388 * (C30388 * C30668 + C30729 * ce) + C30640 +
                     C30388 * C30729 * ce)) /
              C30238 -
          ((C30696 + C30729 * C30613) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (C30838 +
             (((-2 * C30797) / C30238 -
               (C30388 * (C30388 * (C30388 * C30387 * C30472 + C30723 * ce) +
                          C30657 + C30388 * C30723 * ce)) /
                   C30238 -
               (C30817 * ce) / C30238) *
              ae) /
                 C30367 +
             C30387 *
                 ((((-2 * C30727) / C30238 -
                    (C30388 * (C30388 * (C30388 * C30472 + C30580 * ce) +
                               C30458 + C30388 * C30580 * ce)) /
                        C30238 -
                    (C30818 * ce) / C30238) *
                   ae) /
                      C30367 +
                  C30387 *
                      (2 * C30739 - (C30819 * ce) / C30398 +
                       C30388 * ((-(C30388 * C30513 * ce) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30388 * ((-(C30388 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (C30513 * ce) / C30398)))));
    const double C10751 =
        4 * (2 * C30596 - (C30615 * ce) / C30398 + C30388 * C30705) -
        ((3 * C30615 + C30388 * C30842) * ce) / C30398 +
        C30388 * (3 * C30705 - (C30842 * ce) / C30398 + C30388 * C30838);
    const double C10752 =
        5 * (3 * C30705 - (C30842 * ce) / C30398 + C30388 * C30838) -
        ((4 * C30842 + C30388 * C30849) * ce) / C30398 +
        C30388 *
            (4 * C30838 - (C30849 * ce) / C30398 +
             C30388 *
                 (3 * C30744 - (C30847 * ce) / C30398 +
                  C30388 *
                      (2 * C30739 - (C30819 * ce) / C30398 +
                       C30388 * ((-(C30388 * C30513 * ce) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30388 * ((-(C30388 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (C30513 * ce) / C30398)))));
    const double C11130 =
        ((4 * ((-2 * C30710) / C30238 - (C30388 * C30740) / C30238 -
               (C30810 * ce) / C30238) +
          C30388 *
              ((-3 * C30740) / C30238 +
               C30388 * ((-2 * C30727) / C30238 -
                         (C30388 * (C30388 * (C30388 * C30472 + C30580 * ce) +
                                    C30458 + C30388 * C30580 * ce)) /
                             C30238 -
                         (C30818 * ce) / C30238) -
               (C30863 * ce) / C30238) -
          ((3 * C30810 + C30388 * C30863) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (4 * C30838 - (C30849 * ce) / C30398 +
             C30388 *
                 (3 * C30744 - (C30847 * ce) / C30398 +
                  C30388 *
                      (2 * C30739 - (C30819 * ce) / C30398 +
                       C30388 * ((-(C30388 * C30513 * ce) / C30238) / C30367 -
                                 C30427 / C30398 +
                                 C30388 * ((-(C30388 * std::pow(C30391, 8) *
                                              bs[8] * C30393) /
                                            C30238) /
                                               C30367 -
                                           (C30513 * ce) / C30398)))));
    const double C10103 = C10094 + C10095;
    const double C27261 = C27256 + C27257;
    const double C11137 = C11134 + C11135;
    const double C26795 = C26786 + C26787;
    const double C6259 =
        4 * (2 * C30713 - (ae * (C30388 * C30640 + C30696 * ce)) / C30398 +
             C30387 * C30804) +
        ((C30388 * C30684 - ((3 * C30696 + C30387 * C30737) * ce) / C30238) *
         ae) /
            C30367 +
        C30387 *
            (3 * C30804 +
             ((C30388 * C30679 - (C30737 * ce) / C30238) * ae) / C30367 +
             C30387 *
                 (2 * C30800 - (ae * (C30388 * C30668 + C30729 * ce)) / C30398 +
                  C30387 *
                      (C30739 -
                       (ae * (C30388 * C30387 * C30472 + C30723 * ce)) /
                           C30398 +
                       C30387 *
                           (C30387 * ((-(C30388 * std::pow(C30391, 8) * bs[8] *
                                         C30393) /
                                       C30238) /
                                          C30367 -
                                      (C30513 * ce) / C30398) -
                            (ae * (C30388 * C30472 + C30580 * ce)) / C30398))));
    const double C4060 = C593 * C30310;
    const double C4056 = C589 * C30310;
    const double C4050 = C584 * C30310;
    const double C4224 = C1054 * C30310;
    const double C4218 = C1052 * C30310;
    const double C23464 = C591 * C30310;
    const double C23460 = C586 * C30310;
    const double C23664 = C2338 * C30310;
    const double C2145 =
        (C30310 / C30255 + ((C30236 * C30324 + C4043) * ce) / C30238) / C30255 -
        ((C30236 * (C30324 / C30255 + (0 * ce) / C30238) + C31627) * de) /
            C30238;
    const double C2449 =
        C30310 / C30255 - ((C30236 * C30324 + C4043) * de) / C30238;
    const double C3759 =
        C30310 / C30255 + ((C30236 * C30324 + C4043) * ce) / C30238;
    const double C30313 = C30309 * de;
    const double C3492 = C3490 * C31504;
    const double C397 = C395 * C31504;
    const double C727 = C722 * C31504;
    const double C613 = C612 * C31504;
    const double C1965 = C1964 * C31504;
    const double C867 = C865 * C31504;
    const double C3493 = C3491 * C31504;
    const double C1067 = C1066 * C31504;
    const double C3931 = C3930 * C31504;
    const double C10462 = C10456 + C10457;
    const double C25929 = C25914 + C25915;
    const double C26395 = C26388 + C26389;
    const double C392 = C380 * C31325;
    const double C730 = C728 * C31325;
    const double C608 = C596 * C31614;
    const double C1959 = C596 * C31614;
    const double C4065 = C596 * C4043;
    const double C19741 = C596 * C31412;
    const double C22773 = C596 * C31412;
    const double C863 = C859 * C31412;
    const double C3485 = C859 * C31412;
    const double C19154 = C859 * C31325;
    const double C1064 = C1058 * C31412;
    const double C3928 = C1058 * C31412;
    const double C19598 = C1058 * C31325;
    const double C2483 = C2479 * C31627;
    const double C3777 = C2479 * C31627;
    const double C19467 = C2479 * C31614;
    const double C20941 = C2479 * C31614;
    const double C23469 = C2479 * C4043;
    const double C10761 = C31490 * C10751;
    const double C2470 = C591 * C2449;
    const double C2460 = C586 * C2449;
    const double C21504 = C2476 * C2449;
    const double C3774 = C591 * C3759;
    const double C3766 = C586 * C3759;
    const double C23110 = C2476 * C3759;
    const double C30315 = C30313 / C30238;
    const double C10765 = C10760 + C10761;
    const double C30317 = C30303 - C30315;
    const double C30318 = C30317 + C30288;
    const double C4062 = C169 * C30318;
    const double C4054 = C166 * C30318;
    const double C4048 = C164 * C30318;
    const double C4226 = C371 * C30318;
    const double C4220 = C373 * C30318;
    const double C23466 = C589 * C30318;
    const double C23458 = C584 * C30318;
    const double C23666 = C1052 * C30318;
    const double C2142 =
        (((((0 - (C30236 * C30271) / C30238) * ce) / C30238 -
           (0 * de) / C30242 + (2 * C30272) / C30238) /
              C30255 -
          ((C30236 * C30307 + 0) * de) / C30238 + C30281 - C30294) /
             C30255 +
         ((C30236 * C30316 + 0) * ce) / C30238) /
            C30255 -
        ((C30236 * (C30316 / C30255 +
                    ((C30236 * C30318 + C31408) * ce) / C30238 + C30310) +
          C31656) *
         de) /
            C30238 +
        C30318 / C30255 + ((C30236 * C30310 + C31415) * ce) / C30238 +
        2 * (C30288 / C30255 - (0 * de) / C30238);
    const double C2143 =
        (C30316 / C30255 + ((C30236 * C30318 + C31408) * ce) / C30238 +
         C30310) /
            C30255 -
        ((C30236 * (C30318 / C30255 +
                    ((C30236 * C30310 + C31415) * ce) / C30238 + 2 * C30324) +
          C31653) *
         de) /
            C30238 +
        2 * (C30310 / C30255 + ((C30236 * C30324 + C4043) * ce) / C30238);
    const double C2144 =
        (C30318 / C30255 + ((C30236 * C30310 + C31415) * ce) / C30238 +
         2 * C30324) /
            C30255 -
        ((C30236 *
              (C30310 / C30255 + ((C30236 * C30324 + C4043) * ce) / C30238) +
          C31644) *
         de) /
            C30238 +
        3 * (C30324 / C30255 + (0 * ce) / C30238);
    const double C2447 =
        C30316 / C30255 - ((C30236 * C30318 + C31408) * de) / C30238 + C30310;
    const double C2448 = C30318 / C30255 -
                         ((C30236 * C30310 + C31415) * de) / C30238 +
                         2 * C30324;
    const double C3757 =
        C30316 / C30255 + ((C30236 * C30318 + C31408) * ce) / C30238 + C30310;
    const double C3758 = C30318 / C30255 +
                         ((C30236 * C30310 + C31415) * ce) / C30238 +
                         2 * C30324;
    const double C4066 = C4054 + C4055;
    const double C2466 = C166 * C2447;
    const double C2456 = C164 * C2447;
    const double C21500 = C584 * C2447;
    const double C2468 = C589 * C2448;
    const double C2458 = C584 * C2448;
    const double C21502 = C586 * C2448;
    const double C3770 = C166 * C3757;
    const double C3762 = C164 * C3757;
    const double C23106 = C584 * C3757;
    const double C3772 = C589 * C3758;
    const double C3764 = C584 * C3758;
    const double C23108 = C586 * C3758;
    const double C4067 = C4066 - C4056;
    const double C4068 = C4067 - C4057;
    const double C4069 = C4068 + C4058;
    const double C4070 = C4069 + C4059;
    const double C4071 = C4070 * C31504;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31366 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C3071) *
              C31286 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31373 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31366 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C3071) *
              C31294 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31366 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31373 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C3071) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31366 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C832 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C831 + (C13690 + C13691) * C31581 -
             (C15114 + C15115) * C832 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C3071) *
              C2799 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31366 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31373 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C832 -
             ((C13696 + C13697) * C31581 + (C13698 + C13699) * C831) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31655 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31651 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31641 -
           (((C14908 + C14909) * C31325 + (C14910 + C14911) * C114) * C31504 *
                C13454 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C31504 * C13453) *
               C31621) *
              C2799 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31651 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31655 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31641 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C31504 *
                C13453 +
            ((C13455 * C1251 + C13451 * C1258 + C13456 * C1256 +
              C13452 * C1267) *
                 C114 +
             (C13455 * C1257 + C13451 * C1269 + C13456 * C1268 +
              C13452 * C1274) *
                 C31325) *
                C31504 * C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C2691 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31370) *
              C31654 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31370 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C2691) *
              C31647 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C2691 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31370) *
              C31634 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C31504 *
                C13453 +
            ((C13455 * C313 + C13451 * C332 + C13456 * C314 + C13452 * C333) *
                 C114 +
             (C13455 * C331 + C13451 * C343 + C13456 * C334 + C13452 * C344) *
                 C31325) *
                C31504 * C13454) *
               C31370 -
           (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
                C13454 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
                C13453) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C510 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31649 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C511 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31638 +
             (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                 C512 +
             (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                 C31614) *
                C31504 * C13453 +
            ((C13490 + C13491) * C510 + (C13492 + C13493) * C31649 -
             (C13878 + C13879) * C511 - (C13880 + C13881) * C31638 +
             (C13882 + C13883) * C512 + (C13884 + C13885) * C31614) *
                C31504 * C13454) *
               C2691 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C511 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31649 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C510) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31638 -
             (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
              C13451 * C1394) *
                 C512 -
             (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
              C13451 * C1412) *
                 C31614) *
                C31504 * C13453 +
            ((C14388 + C14389) * C511 -
             ((C13684 + C13685) * C31649 + (C13686 + C13687) * C510) +
             (C14390 + C14391) * C31638 - (C15824 + C15825) * C512 -
             (C15826 + C15827) * C31614) *
                C31504 * C13454) *
               C31370) *
              C2799 +
          ((((C13879 + C13878) * C511 -
             ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
             (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
             (C13885 + C13884) * C31614) *
                C31504 * C13453 +
            ((C13886 + C13887) * C511 -
             ((C13494 + C13495) * C31649 + (C13496 + C13497) * C510) +
             (C13888 + C13889) * C31638 - (C13890 + C13891) * C512 -
             (C13892 + C13893) * C31614) *
                C31504 * C13454) *
               C2691 +
           (((C13687 + C13686) * C510 + (C13685 + C13684) * C31649 -
             (C14389 + C14388) * C511 - (C14391 + C14390) * C31638 +
             (C15825 + C15824) * C512 + (C15827 + C15826) * C31614) *
                C31504 * C13453 +
            ((C13692 + C13693) * C510 + (C13694 + C13695) * C31649 -
             (C14392 + C14393) * C511 - (C14394 + C14395) * C31638 +
             (C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C512 +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31614) *
                C31504 * C13454) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31286 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31294 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C831 + (C13500 + C13501) * C31581 -
             (C14174 + C14175) * C832 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C832 -
             ((C14032 + C14033) * C31581 + (C14034 + C14035) * C831) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C2691 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31370) *
              C31654 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31370 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C2691) *
              C31647 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C2691 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31370) *
              C31634 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C31504 *
                C13453 +
            ((C13455 * C313 + C13451 * C332 + C13456 * C314 + C13452 * C333) *
                 C114 +
             (C13455 * C331 + C13451 * C343 + C13456 * C334 + C13452 * C344) *
                 C31325) *
                C31504 * C13454) *
               C31370 -
           (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
                C13454 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
                C13453) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31655 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31651 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31641 -
           (((C14908 + C14909) * C31325 + (C14910 + C14911) * C114) * C31504 *
                C13454 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C31504 * C13453) *
               C31621) *
              C2799 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31651 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31655 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31641 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C31504 *
                C13453 +
            ((C13455 * C1251 + C13451 * C1258 + C13456 * C1256 +
              C13452 * C1267) *
                 C114 +
             (C13455 * C1257 + C13451 * C1269 + C13456 * C1268 +
              C13452 * C1274) *
                 C31325) *
                C31504 * C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31366 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C3468 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C3467 + (C13690 + C13691) * C3465 -
             (C15114 + C15115) * C3468 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C3071) *
              C31566 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31366 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31373 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C3468 -
             ((C13696 + C13697) * C3465 + (C13698 + C13699) * C3467) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C30318 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31408 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C30310 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31415 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C30324 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C4043) *
               C31504 * C13453 +
           ((C13490 + C13491) * C30318 + (C13492 + C13493) * C31408 -
            (C13878 + C13879) * C30310 - (C13880 + C13881) * C31415 +
            (C13882 + C13883) * C30324 + (C13884 + C13885) * C4043) *
               C31504 * C13454) *
              C31366 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C30310 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31408 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C30318) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31415 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C30324 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C4043) *
               C31504 * C13453 +
           ((C14388 + C14389) * C30310 -
            ((C13684 + C13685) * C31408 + (C13686 + C13687) * C30318) +
            (C14390 + C14391) * C31415 - (C15824 + C15825) * C30324 -
            (C15826 + C15827) * C4043) *
               C31504 * C13454) *
              C31373 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C30318 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31408 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C30310 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31415 +
            (C13455 * C1389 + C13451 * C1402 + C13456 * C5894 +
             C13452 * C5897) *
                C30324 +
            (C13455 * C1403 + C13451 * C1416 + C13456 * C5898 +
             C13452 * C5903) *
                C4043) *
               C31504 * C13453 +
           ((C13688 + C13689) * C30318 + (C13690 + C13691) * C31408 -
            (C15114 + C15115) * C30310 - (C15116 + C15117) * C31415 +
            (C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
             C13452 * C6701) *
                C30324 +
            (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
             C13452 * C6703) *
                C4043) *
               C31504 * C13454) *
              C3071) *
         C31281) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3468 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
            (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31655 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C3468 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C3465 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3467) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C14388 + C14389) * C3468 -
            ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
            (C14390 + C14391) * C31412) *
               C31504 * C13454) *
              C31651 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C3467 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C3465 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C3468 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C13688 + C13689) * C3467 + (C13690 + C13691) * C3465 -
            (C15114 + C15115) * C3468 - (C15116 + C15117) * C31412) *
               C31504 * C13454) *
              C31641 +
          (((C13455 * C1813 + C13451 * C1816 + C13456 * C5895 +
             C13452 * C5899) *
                C3468 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C3465 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C3467) +
            (C13455 * C1817 + C13451 * C1822 + C13456 * C5900 +
             C13452 * C5904) *
                C31412) *
               C31504 * C13453 +
           ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
             C13452 * C6155) *
                C3468 -
            ((C14908 + C14909) * C3465 + (C14910 + C14911) * C3467) +
            (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
             C13452 * C6157) *
                C31412) *
               C31504 * C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31645 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31632 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C3467 + (C13500 + C13501) * C3465 -
             (C14174 + C14175) * C3468 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C3468 -
             ((C14032 + C14033) * C3465 + (C14034 + C14035) * C3467) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3757 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31656 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3758 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31653 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C3759 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31644 -
            (C13456 * C2581 + C13452 * C2584 + C13455 * C2147 +
             C13451 * C2153) *
                C3760 -
            (C13456 * C2585 + C13452 * C2590 + C13455 * C2154 +
             C13451 * C2165) *
                C31627) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3757 + (C13492 + C13493) * C31656 -
            (C13878 + C13879) * C3758 - (C13880 + C13881) * C31653 +
            (C13882 + C13883) * C3759 + (C13884 + C13885) * C31644 -
            (C15966 + C15967) * C3760 - (C15968 + C15969) * C31627) *
               C31504 * C13454) *
              C2691 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C3758 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31656 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3757) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31653 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C3759 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C31644 +
            (C13455 * C2581 + C13451 * C2584 + C13456 * C6542 +
             C13452 * C6545) *
                C3760 +
            (C13455 * C2585 + C13451 * C2590 + C13456 * C6546 +
             C13452 * C6551) *
                C31627) *
               C31504 * C13453 +
           ((C14388 + C14389) * C3758 -
            ((C13684 + C13685) * C31656 + (C13686 + C13687) * C3757) +
            (C14390 + C14391) * C31653 - (C15824 + C15825) * C3759 -
            (C15826 + C15827) * C31644 +
            (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
             C13452 * C6803) *
                C3760 +
            (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
             C13452 * C6805) *
                C31627) *
               C31504 * C13454) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C30318 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31408 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C30310 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31415 +
             (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                 C30324 +
             (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                 C4043) *
                C31504 * C13453 +
            ((C13490 + C13491) * C30318 + (C13492 + C13493) * C31408 -
             (C13878 + C13879) * C30310 - (C13880 + C13881) * C31415 +
             (C13882 + C13883) * C30324 + (C13884 + C13885) * C4043) *
                C31504 * C13454) *
               C2691 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C30310 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31408 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C30318) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31415 -
             (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
              C13451 * C1394) *
                 C30324 -
             (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
              C13451 * C1412) *
                 C4043) *
                C31504 * C13453 +
            ((C14388 + C14389) * C30310 -
             ((C13684 + C13685) * C31408 + (C13686 + C13687) * C30318) +
             (C14390 + C14391) * C31415 - (C15824 + C15825) * C30324 -
             (C15826 + C15827) * C4043) *
                C31504 * C13454) *
               C31370) *
              C31566 +
          ((((C13879 + C13878) * C30310 -
             ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
             (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
             (C13885 + C13884) * C4043) *
                C31504 * C13453 +
            ((C13886 + C13887) * C30310 -
             ((C13494 + C13495) * C31408 + (C13496 + C13497) * C30318) +
             (C13888 + C13889) * C31415 - (C13890 + C13891) * C30324 -
             (C13892 + C13893) * C4043) *
                C31504 * C13454) *
               C2691 +
           (((C13687 + C13686) * C30318 + (C13685 + C13684) * C31408 -
             (C14389 + C14388) * C30310 - (C14391 + C14390) * C31415 +
             (C15825 + C15824) * C30324 + (C15827 + C15826) * C4043) *
                C31504 * C13453 +
            ((C13692 + C13693) * C30318 + (C13694 + C13695) * C31408 -
             (C14392 + C14393) * C30310 - (C14394 + C14395) * C31415 +
             (C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C30324 +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C4043) *
                C31504 * C13454) *
               C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31645 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31632 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C3467 + (C13500 + C13501) * C3465 -
             (C14174 + C14175) * C3468 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C2691 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C3468 -
             ((C14032 + C14033) * C3465 + (C14034 + C14035) * C3467) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3468 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
            (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31655 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C3468 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C3465 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3467) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C14388 + C14389) * C3468 -
            ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
            (C14390 + C14391) * C31412) *
               C31504 * C13454) *
              C31651 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C3467 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C3465 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C3468 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C13688 + C13689) * C3467 + (C13690 + C13691) * C3465 -
            (C15114 + C15115) * C3468 - (C15116 + C15117) * C31412) *
               C31504 * C13454) *
              C31641 +
          (((C13455 * C1813 + C13451 * C1816 + C13456 * C5895 +
             C13452 * C5899) *
                C3468 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C3465 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C3467) +
            (C13455 * C1817 + C13451 * C1822 + C13456 * C5900 +
             C13452 * C5904) *
                C31412) *
               C31504 * C13453 +
           ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
             C13452 * C6155) *
                C3468 -
            ((C14908 + C14909) * C3465 + (C14910 + C14911) * C3467) +
            (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
             C13452 * C6157) *
                C31412) *
               C31504 * C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1519 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1520 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C1521 -
           (((C14908 + C14909) * C31325 + (C14910 + C14911) * C114) * C31504 *
                C13454 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C31504 * C13453) *
               C31621) *
              C31566 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1520 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1519 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C1521 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C31504 *
                C13453 +
            ((C13455 * C1251 + C13451 * C1258 + C13456 * C1256 +
              C13452 * C1267) *
                 C114 +
             (C13455 * C1257 + C13451 * C1269 + C13456 * C1268 +
              C13452 * C1274) *
                 C31325) *
                C31504 * C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31580 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31370) *
              C713 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31370 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31580) *
              C714 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31580 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31370) *
              C715 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C31504 *
                C13453 +
            ((C13455 * C313 + C13451 * C332 + C13456 * C314 + C13452 * C333) *
                 C114 +
             (C13455 * C331 + C13451 * C343 + C13456 * C334 + C13452 * C344) *
                 C31325) *
                C31504 * C13454) *
               C31370 -
           (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
                C13454 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
                C13453) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C1938 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C1935 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C1939 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C1936 +
             (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                 C1940 +
             (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                 C31614) *
                C31504 * C13453 +
            ((C13490 + C13491) * C1938 + (C13492 + C13493) * C1935 -
             (C13878 + C13879) * C1939 - (C13880 + C13881) * C1936 +
             (C13882 + C13883) * C1940 + (C13884 + C13885) * C31614) *
                C31504 * C13454) *
               C31580 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C1939 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C1935 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C1938) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C1936 -
             (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
              C13451 * C1394) *
                 C1940 -
             (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
              C13451 * C1412) *
                 C31614) *
                C31504 * C13453 +
            ((C14388 + C14389) * C1939 -
             ((C13684 + C13685) * C1935 + (C13686 + C13687) * C1938) +
             (C14390 + C14391) * C1936 - (C15824 + C15825) * C1940 -
             (C15826 + C15827) * C31614) *
                C31504 * C13454) *
               C31370) *
              C31566 +
          ((((C13879 + C13878) * C1939 -
             ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
             (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
             (C13885 + C13884) * C31614) *
                C31504 * C13453 +
            ((C13886 + C13887) * C1939 -
             ((C13494 + C13495) * C1935 + (C13496 + C13497) * C1938) +
             (C13888 + C13889) * C1936 - (C13890 + C13891) * C1940 -
             (C13892 + C13893) * C31614) *
                C31504 * C13454) *
               C31580 +
           (((C13687 + C13686) * C1938 + (C13685 + C13684) * C1935 -
             (C14389 + C14388) * C1939 - (C14391 + C14390) * C1936 +
             (C15825 + C15824) * C1940 + (C15827 + C15826) * C31614) *
                C31504 * C13453 +
            ((C13692 + C13693) * C1938 + (C13694 + C13695) * C1935 -
             (C14392 + C14393) * C1939 - (C14394 + C14395) * C1936 +
             (C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C1940 +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31614) *
                C31504 * C13454) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C832 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
            (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C1519 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C832 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31581 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C831) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C14388 + C14389) * C832 -
            ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
            (C14390 + C14391) * C31412) *
               C31504 * C13454) *
              C1520 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C831 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31581 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C832 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C13688 + C13689) * C831 + (C13690 + C13691) * C31581 -
            (C15114 + C15115) * C832 - (C15116 + C15117) * C31412) *
               C31504 * C13454) *
              C1521 +
          (((C13455 * C1813 + C13451 * C1816 + C13456 * C5895 +
             C13452 * C5899) *
                C832 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31581 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C831) +
            (C13455 * C1817 + C13451 * C1822 + C13456 * C5900 +
             C13452 * C5904) *
                C31412) *
               C31504 * C13453 +
           ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
             C13452 * C6155) *
                C832 -
            ((C14908 + C14909) * C31581 + (C14910 + C14911) * C831) +
            (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
             C13452 * C6157) *
                C31412) *
               C31504 * C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C302 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C303 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C831 + (C13500 + C13501) * C31581 -
             (C14174 + C14175) * C832 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C832 -
             ((C14032 + C14033) * C31581 + (C14034 + C14035) * C831) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C2447 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C2443 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C2448 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C2444 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C2449 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C2445 -
            (C13456 * C2581 + C13452 * C2584 + C13455 * C2147 +
             C13451 * C2153) *
                C2450 -
            (C13456 * C2585 + C13452 * C2590 + C13455 * C2154 +
             C13451 * C2165) *
                C31627) *
               C31504 * C13453 +
           ((C13490 + C13491) * C2447 + (C13492 + C13493) * C2443 -
            (C13878 + C13879) * C2448 - (C13880 + C13881) * C2444 +
            (C13882 + C13883) * C2449 + (C13884 + C13885) * C2445 -
            (C15966 + C15967) * C2450 - (C15968 + C15969) * C31627) *
               C31504 * C13454) *
              C31580 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C2448 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C2443 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C2447) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C2444 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C2449 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C2445 +
            (C13455 * C2581 + C13451 * C2584 + C13456 * C6542 +
             C13452 * C6545) *
                C2450 +
            (C13455 * C2585 + C13451 * C2590 + C13456 * C6546 +
             C13452 * C6551) *
                C31627) *
               C31504 * C13453 +
           ((C14388 + C14389) * C2448 -
            ((C13684 + C13685) * C2443 + (C13686 + C13687) * C2447) +
            (C14390 + C14391) * C2444 - (C15824 + C15825) * C2449 -
            (C15826 + C15827) * C2445 +
            (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
             C13452 * C6803) *
                C2450 +
            (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
             C13452 * C6805) *
                C31627) *
               C31504 * C13454) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C115 + C13451 * C122 + C13456 * C307 +
                 C13452 * C320) *
                    C114 +
                (C13455 * C123 + C13451 * C136 + C13456 * C319 +
                 C13452 * C337) *
                    C31325) *
                   C31504 * C13453 +
               ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) *
                   C31504 * C13454) *
                  C31308 * C108 -
              (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) *
                   C31504 * C13454 +
               ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) *
                   C31504 * C13453) *
                  C31308 * C109 +
              (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) *
                   C31504 * C13453 +
               ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) *
                   C31504 * C13454) *
                  C31308 * C110 -
              (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) *
                   C31504 * C13454 +
               ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) *
                   C31504 * C13453) *
                  C31308 * C111 +
              (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) *
                   C31504 * C13453 +
               ((C13455 * C120 + C13451 * C133 + C13456 * C717 +
                 C13452 * C718) *
                    C114 +
                (C13455 * C132 + C13451 * C141 + C13456 * C719 +
                 C13452 * C720) *
                    C31325) *
                   C31504 * C13454) *
                  C31308 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13455 * C115 + C13451 * C122 + C13456 * C307 +
                  C13452 * C320) *
                     C114 +
                 (C13455 * C123 + C13451 * C136 + C13456 * C319 +
                  C13452 * C337) *
                     C31325) *
                    C31504 * C13453 +
                ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) *
                    C31504 * C13454) *
                   C31648 -
               (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) *
                    C31504 * C13454 +
                ((C13456 * C322 + C13452 * C338 + C13455 * C319 +
                  C13451 * C337) *
                     C31325 +
                 (C13456 * C308 + C13452 * C321 + C13455 * C307 +
                  C13451 * C320) *
                     C114) *
                    C31504 * C13453) *
                   C31636 +
               (((C13455 * C308 + C13451 * C321 + C13456 * C1253 +
                  C13452 * C1262) *
                     C114 +
                 (C13455 * C322 + C13451 * C338 + C13456 * C1261 +
                  C13452 * C1271) *
                     C31325) *
                    C31504 * C13453 +
                ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) *
                    C31504 * C13454) *
                   C31611) *
                  C302 +
              ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) *
                    C31504 * C13453 +
                ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) *
                    C31504 * C13454) *
                   C31636 -
               (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) *
                    C31504 * C13454 +
                ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) *
                    C31504 * C13453) *
                   C31648 -
               (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) *
                    C31504 * C13454 +
                ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) *
                    C31504 * C13453) *
                   C31611) *
                  C303 +
              ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) *
                    C31504 * C13453 +
                ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) *
                    C31504 * C13454) *
                   C31648 -
               (((C13456 * C329 + C13452 * C342 + C13455 * C328 +
                  C13451 * C341) *
                     C31325 +
                 (C13456 * C312 + C13452 * C330 + C13455 * C311 +
                  C13451 * C327) *
                     C114) *
                    C31504 * C13454 +
                ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) *
                    C31504 * C13453) *
                   C31636 +
               (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) *
                    C31504 * C13453 +
                ((C13455 * C312 + C13451 * C330 + C13456 * C1525 +
                  C13452 * C1526) *
                     C114 +
                 (C13455 * C329 + C13451 * C342 + C13456 * C1527 +
                  C13452 * C1528) *
                     C31325) *
                    C31504 * C13454) *
                   C31611) *
                  C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C511 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31638 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C512 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C510 + (C13492 + C13493) * C31649 -
            (C13878 + C13879) * C511 - (C13880 + C13881) * C31638 +
            (C13882 + C13883) * C512 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31308 * C302 +
          (((C13879 + C13878) * C511 -
            ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
            (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
            (C13885 + C13884) * C31614) *
               C31504 * C13453 +
           ((C13886 + C13887) * C511 -
            ((C13494 + C13495) * C31649 + (C13496 + C13497) * C510) +
            (C13888 + C13889) * C31638 - (C13890 + C13891) * C512 -
            (C13892 + C13893) * C31614) *
               C31504 * C13454) *
              C31308 * C303 +
          (((C13497 + C13496) * C510 + (C13495 + C13494) * C31649 -
            (C13887 + C13886) * C511 - (C13889 + C13888) * C31638 +
            (C13891 + C13890) * C512 + (C13893 + C13892) * C31614) *
               C31504 * C13453 +
           ((C13498 + C13499) * C510 + (C13500 + C13501) * C31649 -
            (C13456 * C1016 + C13452 * C1024 + C13455 * C519 + C13451 * C535) *
                C511 -
            (C13456 * C1025 + C13452 * C1031 + C13455 * C536 + C13451 * C549) *
                C31638 +
            (C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C512 +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31614) *
               C31504 * C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1178 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1177 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C1245 -
          (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
               C13454 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C31504 * C13453) *
              C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C31504 * C13453 +
           ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
               C13454) *
              C1247 -
          (((C13456 * C1266 + C13452 * C1273 + C13455 * C1259 +
             C13451 * C1270) *
                C31325 +
            (C13456 * C1255 + C13452 * C1265 + C13455 * C1252 +
             C13451 * C1260) *
                C114) *
               C31504 * C13454 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C31504 * C13453) *
              C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C31504 * C13453 +
           ((C13455 * C1255 + C13451 * C1265 + C13456 * C6004 +
             C13452 * C6005) *
                C114 +
            (C13455 * C1266 + C13451 * C1273 + C13456 * C6006 +
             C13452 * C6007) *
                C31325) *
               C31504 * C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C511 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31638 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C512 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C510 + (C13492 + C13493) * C31649 -
            (C13878 + C13879) * C511 - (C13880 + C13881) * C31638 +
            (C13882 + C13883) * C512 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C1177 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C511 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31649 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C510) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31638 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C512 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C14388 + C14389) * C511 -
            ((C13684 + C13685) * C31649 + (C13686 + C13687) * C510) +
            (C14390 + C14391) * C31638 -
            (C13456 * C1391 + C13452 * C1406 + C13455 * C1386 +
             C13451 * C1396) *
                C512 -
            (C13456 * C1407 + C13452 * C1418 + C13455 * C1397 +
             C13451 * C1413) *
                C31614) *
               C31504 * C13454) *
              C1178 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C510 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31649 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C511 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31638 +
            (C13455 * C1389 + C13451 * C1402 + C13456 * C5894 +
             C13452 * C5897) *
                C512 +
            (C13455 * C1403 + C13451 * C1416 + C13456 * C5898 +
             C13452 * C5903) *
                C31614) *
               C31504 * C13453 +
           ((C13688 + C13689) * C510 + (C13690 + C13691) * C31649 -
            (C13456 * C1814 + C13452 * C1818 + C13455 * C1390 +
             C13451 * C1404) *
                C511 -
            (C13456 * C1819 + C13452 * C1823 + C13455 * C1405 +
             C13451 * C1417) *
                C31638 +
            (C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
             C13452 * C6701) *
                C512 +
            (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
             C13452 * C6703) *
                C31614) *
               C31504 * C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C1939 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C1936 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C1940 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C1938 + (C13492 + C13493) * C1935 -
            (C13878 + C13879) * C1939 - (C13880 + C13881) * C1936 +
            (C13882 + C13883) * C1940 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31308 * C31645 +
          (((C13879 + C13878) * C1939 -
            ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
            (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
            (C13885 + C13884) * C31614) *
               C31504 * C13453 +
           ((C13886 + C13887) * C1939 -
            ((C13494 + C13495) * C1935 + (C13496 + C13497) * C1938) +
            (C13888 + C13889) * C1936 - (C13890 + C13891) * C1940 -
            (C13892 + C13893) * C31614) *
               C31504 * C13454) *
              C31308 * C31632 +
          (((C13497 + C13496) * C1938 + (C13495 + C13494) * C1935 -
            (C13887 + C13886) * C1939 - (C13889 + C13888) * C1936 +
            (C13891 + C13890) * C1940 + (C13893 + C13892) * C31614) *
               C31504 * C13453 +
           ((C13498 + C13499) * C1938 + (C13500 + C13501) * C1935 -
            (C14174 + C14175) * C1939 - (C14176 + C14177) * C1936 +
            (C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C1940 +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31614) *
               C31504 * C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C1939 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C1936 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C1940 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C1938 + (C13492 + C13493) * C1935 -
            (C13878 + C13879) * C1939 - (C13880 + C13881) * C1936 +
            (C13882 + C13883) * C1940 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31648 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C1939 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C1935 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C1938) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C1936 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C1940 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C14388 + C14389) * C1939 -
            ((C13684 + C13685) * C1935 + (C13686 + C13687) * C1938) +
            (C14390 + C14391) * C1936 -
            (C13456 * C1391 + C13452 * C1406 + C13455 * C1386 +
             C13451 * C1396) *
                C1940 -
            (C13456 * C1407 + C13452 * C1418 + C13455 * C1397 +
             C13451 * C1413) *
                C31614) *
               C31504 * C13454) *
              C31636 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C1938 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C1935 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C1939 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C1936 +
            (C13455 * C1389 + C13451 * C1402 + C13456 * C5894 +
             C13452 * C5897) *
                C1940 +
            (C13455 * C1403 + C13451 * C1416 + C13456 * C5898 +
             C13452 * C5903) *
                C31614) *
               C31504 * C13453 +
           ((C13688 + C13689) * C1938 + (C13690 + C13691) * C1935 -
            (C15114 + C15115) * C1939 - (C15116 + C15117) * C1936 +
            (C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
             C13452 * C6701) *
                C1940 +
            (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
             C13452 * C6703) *
                C31614) *
               C31504 * C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
               C2142 +
           (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
               C2137 -
           (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
               C2143 -
           (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
               C2138 +
           (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
               C2144 +
           (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
               C2139 -
           (C13456 * C2581 + C13452 * C2584 + C13455 * C2147 + C13451 * C2153) *
               C2145 -
           (C13456 * C2585 + C13452 * C2590 + C13455 * C2154 + C13451 * C2165) *
               C2140 +
           (C13455 * C2148 + C13451 * C2155 + C13456 * C6543 + C13452 * C6547) *
               C2146 +
           (C13455 * C2156 + C13451 * C2166 + C13456 * C6549 + C13452 * C6552) *
               C2141) *
              C31504 * C13453 +
          ((C13490 + C13491) * C2142 + (C13492 + C13493) * C2137 -
           (C13878 + C13879) * C2143 - (C13880 + C13881) * C2138 +
           (C13882 + C13883) * C2144 + (C13884 + C13885) * C2139 -
           (C13456 * C2582 + C13452 * C2586 + C13455 * C2149 + C13451 * C2157) *
               C2145 -
           (C13456 * C2587 + C13452 * C2591 + C13455 * C2158 + C13451 * C2167) *
               C2140 +
           (C13455 * C2150 + C13451 * C2159 + C13456 * C10911 +
            C13452 * C10912) *
               C2146 +
           (C13455 * C2160 + C13451 * C2168 + C13456 * C10913 +
            C13452 * C10914) *
               C2141) *
              C31504 * C13454) *
         C31308 * C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C1177 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C832 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C831 + (C13690 + C13691) * C31581 -
             (C15114 + C15115) * C832 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C31611) *
              C31566 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C1177 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C1178 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C832 -
             ((C13696 + C13697) * C31581 + (C13698 + C13699) * C831) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C832 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
            (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31308 * C713 +
          (((C13879 + C13878) * C832 -
            ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
            (C13881 + C13880) * C31412) *
               C31504 * C13453 +
           ((C13886 + C13887) * C832 -
            ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
            (C13888 + C13889) * C31412) *
               C31504 * C13454) *
              C31308 * C714 +
          (((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
            (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
               C31504 * C13453 +
           ((C13498 + C13499) * C831 + (C13500 + C13501) * C31581 -
            (C14174 + C14175) * C832 - (C14176 + C14177) * C31412) *
               C31504 * C13454) *
              C31308 * C715 +
          (((C14175 + C14174) * C832 -
            ((C13501 + C13500) * C31581 + (C13499 + C13498) * C831) +
            (C14177 + C14176) * C31412) *
               C31504 * C13453 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C832 -
            ((C13502 + C13503) * C31581 + (C13504 + C13505) * C831) +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31412) *
               C31504 * C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C2447 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C2443 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C2448 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C2444 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C2449 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C2445 -
            (C13456 * C2581 + C13452 * C2584 + C13455 * C2147 +
             C13451 * C2153) *
                C2450 -
            (C13456 * C2585 + C13452 * C2590 + C13455 * C2154 +
             C13451 * C2165) *
                C31627) *
               C31504 * C13453 +
           ((C13490 + C13491) * C2447 + (C13492 + C13493) * C2443 -
            (C13878 + C13879) * C2448 - (C13880 + C13881) * C2444 +
            (C13882 + C13883) * C2449 + (C13884 + C13885) * C2445 -
            (C15966 + C15967) * C2450 - (C15968 + C15969) * C31627) *
               C31504 * C13454) *
              C31308 * C31566 +
          (((C13879 + C13878) * C2448 -
            ((C13493 + C13492) * C2443 + (C13491 + C13490) * C2447) +
            (C13881 + C13880) * C2444 - (C13883 + C13882) * C2449 -
            (C13885 + C13884) * C2445 + (C15967 + C15966) * C2450 +
            (C15969 + C15968) * C31627) *
               C31504 * C13453 +
           ((C13886 + C13887) * C2448 -
            ((C13494 + C13495) * C2443 + (C13496 + C13497) * C2447) +
            (C13888 + C13889) * C2444 - (C13890 + C13891) * C2449 -
            (C13892 + C13893) * C2445 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C2450 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31627) *
               C31504 * C13454) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31636 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31648 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13456 * C329 + C13452 * C342 + C13455 * C328 + C13451 * C341) *
                 C31325 +
             (C13456 * C312 + C13452 * C330 + C13455 * C311 + C13451 * C327) *
                 C114) *
                C31504 * C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C31308 * C108 -
          (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
               C13454 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
               C13453) *
              C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
               C13453 +
           ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
               C13454) *
              C31308 * C110 -
          (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
               C13454 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
               C13453) *
              C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C31504 *
               C13453 +
           ((C13455 * C120 + C13451 * C133 + C13456 * C717 + C13452 * C718) *
                C114 +
            (C13455 * C132 + C13451 * C141 + C13456 * C719 + C13452 * C720) *
                C31325) *
               C31504 * C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1178 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1177 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C1245 -
          (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
               C13454 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C31504 * C13453) *
              C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C31504 * C13453 +
           ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
               C13454) *
              C1247 -
          (((C13456 * C1266 + C13452 * C1273 + C13455 * C1259 +
             C13451 * C1270) *
                C31325 +
            (C13456 * C1255 + C13452 * C1265 + C13455 * C1252 +
             C13451 * C1260) *
                C114) *
               C31504 * C13454 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C31504 * C13453) *
              C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C31504 * C13453 +
           ((C13455 * C1255 + C13451 * C1265 + C13456 * C6004 +
             C13452 * C6005) *
                C114 +
            (C13455 * C1266 + C13451 * C1273 + C13456 * C6006 +
             C13452 * C6007) *
                C31325) *
               C31504 * C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C1939 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C1936 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C1940 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C1938 + (C13492 + C13493) * C1935 -
            (C13878 + C13879) * C1939 - (C13880 + C13881) * C1936 +
            (C13882 + C13883) * C1940 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31308 * C31645 +
          (((C13879 + C13878) * C1939 -
            ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
            (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
            (C13885 + C13884) * C31614) *
               C31504 * C13453 +
           ((C13886 + C13887) * C1939 -
            ((C13494 + C13495) * C1935 + (C13496 + C13497) * C1938) +
            (C13888 + C13889) * C1936 - (C13890 + C13891) * C1940 -
            (C13892 + C13893) * C31614) *
               C31504 * C13454) *
              C31308 * C31632 +
          (((C13497 + C13496) * C1938 + (C13495 + C13494) * C1935 -
            (C13887 + C13886) * C1939 - (C13889 + C13888) * C1936 +
            (C13891 + C13890) * C1940 + (C13893 + C13892) * C31614) *
               C31504 * C13453 +
           ((C13498 + C13499) * C1938 + (C13500 + C13501) * C1935 -
            (C14174 + C14175) * C1939 - (C14176 + C14177) * C1936 +
            (C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C1940 +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31614) *
               C31504 * C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C1939 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C1936 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C1940 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C1938 + (C13492 + C13493) * C1935 -
            (C13878 + C13879) * C1939 - (C13880 + C13881) * C1936 +
            (C13882 + C13883) * C1940 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31648 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C1939 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C1935 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C1938) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C1936 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C1940 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C14388 + C14389) * C1939 -
            ((C13684 + C13685) * C1935 + (C13686 + C13687) * C1938) +
            (C14390 + C14391) * C1936 -
            (C13456 * C1391 + C13452 * C1406 + C13455 * C1386 +
             C13451 * C1396) *
                C1940 -
            (C13456 * C1407 + C13452 * C1418 + C13455 * C1397 +
             C13451 * C1413) *
                C31614) *
               C31504 * C13454) *
              C31636 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C1938 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C1935 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C1939 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C1936 +
            (C13455 * C1389 + C13451 * C1402 + C13456 * C5894 +
             C13452 * C5897) *
                C1940 +
            (C13455 * C1403 + C13451 * C1416 + C13456 * C5898 +
             C13452 * C5903) *
                C31614) *
               C31504 * C13453 +
           ((C13688 + C13689) * C1938 + (C13690 + C13691) * C1935 -
            (C15114 + C15115) * C1939 - (C15116 + C15117) * C1936 +
            (C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
             C13452 * C6701) *
                C1940 +
            (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
             C13452 * C6703) *
                C31614) *
               C31504 * C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31286 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C31294 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C3467 + (C13500 + C13501) * C3465 -
             (C14174 + C14175) * C3468 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C3468 -
             ((C14032 + C14033) * C3465 + (C14034 + C14035) * C3467) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C30318 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31408 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C30310 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31415 +
             (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                 C30324 +
             (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                 C4043) *
                C31504 * C13453 +
            ((C13490 + C13491) * C30318 + (C13492 + C13493) * C31408 -
             (C13878 + C13879) * C30310 - (C13880 + C13881) * C31415 +
             (C13882 + C13883) * C30324 + (C13884 + C13885) * C4043) *
                C31504 * C13454) *
               C31580 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C30310 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31408 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C30318) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31415 -
             (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
              C13451 * C1394) *
                 C30324 -
             (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
              C13451 * C1412) *
                 C4043) *
                C31504 * C13453 +
            ((C14388 + C14389) * C30310 -
             ((C13684 + C13685) * C31408 + (C13686 + C13687) * C30318) +
             (C14390 + C14391) * C31415 - (C15824 + C15825) * C30324 -
             (C15826 + C15827) * C4043) *
                C31504 * C13454) *
               C31370) *
              C2799 +
          ((((C13879 + C13878) * C30310 -
             ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
             (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
             (C13885 + C13884) * C4043) *
                C31504 * C13453 +
            ((C13886 + C13887) * C30310 -
             ((C13494 + C13495) * C31408 + (C13496 + C13497) * C30318) +
             (C13888 + C13889) * C31415 - (C13890 + C13891) * C30324 -
             (C13892 + C13893) * C4043) *
                C31504 * C13454) *
               C31580 +
           (((C13687 + C13686) * C30318 + (C13685 + C13684) * C31408 -
             (C14389 + C14388) * C30310 - (C14391 + C14390) * C31415 +
             (C15825 + C15824) * C30324 + (C15827 + C15826) * C4043) *
                C31504 * C13453 +
            ((C13692 + C13693) * C30318 + (C13694 + C13695) * C31408 -
             (C14392 + C14393) * C30310 - (C14394 + C14395) * C31415 +
             (C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C30324 +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C4043) *
                C31504 * C13454) *
               C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31648 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C3468 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C3467 + (C13690 + C13691) * C3465 -
             (C15114 + C15115) * C3468 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C31611) *
              C2799 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31648 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31636 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C3468 -
             ((C13696 + C13697) * C3465 + (C13698 + C13699) * C3467) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3468 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
            (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31308 * C31654 +
          (((C13879 + C13878) * C3468 -
            ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
            (C13881 + C13880) * C31412) *
               C31504 * C13453 +
           ((C13886 + C13887) * C3468 -
            ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
            (C13888 + C13889) * C31412) *
               C31504 * C13454) *
              C31308 * C31647 +
          (((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
            (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
               C31504 * C13453 +
           ((C13498 + C13499) * C3467 + (C13500 + C13501) * C3465 -
            (C14174 + C14175) * C3468 - (C14176 + C14177) * C31412) *
               C31504 * C13454) *
              C31308 * C31634 +
          (((C14175 + C14174) * C3468 -
            ((C13501 + C13500) * C3465 + (C13499 + C13498) * C3467) +
            (C14177 + C14176) * C31412) *
               C31504 * C13453 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C3468 -
            ((C13502 + C13503) * C3465 + (C13504 + C13505) * C3467) +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31412) *
               C31504 * C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3757 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31656 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3758 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31653 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C3759 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31644 -
            (C13456 * C2581 + C13452 * C2584 + C13455 * C2147 +
             C13451 * C2153) *
                C3760 -
            (C13456 * C2585 + C13452 * C2590 + C13455 * C2154 +
             C13451 * C2165) *
                C31627) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3757 + (C13492 + C13493) * C31656 -
            (C13878 + C13879) * C3758 - (C13880 + C13881) * C31653 +
            (C13882 + C13883) * C3759 + (C13884 + C13885) * C31644 -
            (C15966 + C15967) * C3760 - (C15968 + C15969) * C31627) *
               C31504 * C13454) *
              C31308 * C2799 +
          (((C13879 + C13878) * C3758 -
            ((C13493 + C13492) * C31656 + (C13491 + C13490) * C3757) +
            (C13881 + C13880) * C31653 - (C13883 + C13882) * C3759 -
            (C13885 + C13884) * C31644 + (C15967 + C15966) * C3760 +
            (C15969 + C15968) * C31627) *
               C31504 * C13453 +
           ((C13886 + C13887) * C3758 -
            ((C13494 + C13495) * C31656 + (C13496 + C13497) * C3757) +
            (C13888 + C13889) * C31653 - (C13890 + C13891) * C3759 -
            (C13892 + C13893) * C31644 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C3760 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31627) *
               C31504 * C13454) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C30318 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31408 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C30310 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31415 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C30324 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C4043) *
               C31504 * C13453 +
           ((C13490 + C13491) * C30318 + (C13492 + C13493) * C31408 -
            (C13878 + C13879) * C30310 - (C13880 + C13881) * C31415 +
            (C13882 + C13883) * C30324 + (C13884 + C13885) * C4043) *
               C31504 * C13454) *
              C31308 * C31286 +
          (((C13879 + C13878) * C30310 -
            ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
            (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
            (C13885 + C13884) * C4043) *
               C31504 * C13453 +
           ((C13886 + C13887) * C30310 -
            ((C13494 + C13495) * C31408 + (C13496 + C13497) * C30318) +
            (C13888 + C13889) * C31415 - (C13890 + C13891) * C30324 -
            (C13892 + C13893) * C4043) *
               C31504 * C13454) *
              C31308 * C31294 +
          (((C13497 + C13496) * C30318 + (C13495 + C13494) * C31408 -
            (C13887 + C13886) * C30310 - (C13889 + C13888) * C31415 +
            (C13891 + C13890) * C30324 + (C13893 + C13892) * C4043) *
               C31504 * C13453 +
           ((C13498 + C13499) * C30318 + (C13500 + C13501) * C31408 -
            (C14174 + C14175) * C30310 - (C14176 + C14177) * C31415 +
            (C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C30324 +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C4043) *
               C31504 * C13454) *
              C31308 * C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C3468 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
            (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31308 * C31654 +
          (((C13879 + C13878) * C3468 -
            ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
            (C13881 + C13880) * C31412) *
               C31504 * C13453 +
           ((C13886 + C13887) * C3468 -
            ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
            (C13888 + C13889) * C31412) *
               C31504 * C13454) *
              C31308 * C31647 +
          (((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
            (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
               C31504 * C13453 +
           ((C13498 + C13499) * C3467 + (C13500 + C13501) * C3465 -
            (C14174 + C14175) * C3468 - (C14176 + C14177) * C31412) *
               C31504 * C13454) *
              C31308 * C31634 +
          (((C14175 + C14174) * C3468 -
            ((C13501 + C13500) * C3465 + (C13499 + C13498) * C3467) +
            (C14177 + C14176) * C31412) *
               C31504 * C13453 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C3468 -
            ((C13502 + C13503) * C3465 + (C13504 + C13505) * C3467) +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31412) *
               C31504 * C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C3468 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C3467 + (C13492 + C13493) * C3465 -
             (C13878 + C13879) * C3468 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31648 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C3468 -
             ((C13684 + C13685) * C3465 + (C13686 + C13687) * C3467) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C3468 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C3467 + (C13690 + C13691) * C3465 -
             (C15114 + C15115) * C3468 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C31611) *
              C2799 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C3468 -
             ((C13494 + C13495) * C3465 + (C13496 + C13497) * C3467) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31648 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C3467 + (C13694 + C13695) * C3465 -
             (C14392 + C14393) * C3468 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31636 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C3468 -
             ((C13696 + C13697) * C3465 + (C13698 + C13699) * C3467) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31580 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31370) *
              C713 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31370 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31580) *
              C714 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31580 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31370) *
              C715 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C31504 *
                C13453 +
            ((C13455 * C313 + C13451 * C332 + C13456 * C314 + C13452 * C333) *
                 C114 +
             (C13455 * C331 + C13451 * C343 + C13456 * C334 + C13452 * C344) *
                 C31325) *
                C31504 * C13454) *
               C31370 -
           (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
                C13454 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
                C13453) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1519 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1520 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C1521 -
           (((C14908 + C14909) * C31325 + (C14910 + C14911) * C114) * C31504 *
                C13454 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C31504 * C13453) *
               C31621) *
              C31566 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1520 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1519 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C1521 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C31504 *
                C13453 +
            ((C13455 * C1251 + C13451 * C1258 + C13456 * C1256 +
              C13452 * C1267) *
                 C114 +
             (C13455 * C1257 + C13451 * C1269 + C13456 * C1268 +
              C13452 * C1274) *
                 C31325) *
                C31504 * C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C31370) *
              C302 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C31370) *
              C303 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C31504 * C13453 +
            ((C13498 + C13499) * C831 + (C13500 + C13501) * C31581 -
             (C14174 + C14175) * C832 - (C14176 + C14177) * C31412) *
                C31504 * C13454) *
               C31580 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C832 -
             ((C14032 + C14033) * C31581 + (C14034 + C14035) * C831) +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31412) *
                C31504 * C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C832 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
            (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C1519 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C832 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31581 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C831) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C14388 + C14389) * C832 -
            ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
            (C14390 + C14391) * C31412) *
               C31504 * C13454) *
              C1520 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C831 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31581 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C832 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31412) *
               C31504 * C13453 +
           ((C13688 + C13689) * C831 + (C13690 + C13691) * C31581 -
            (C15114 + C15115) * C832 - (C15116 + C15117) * C31412) *
               C31504 * C13454) *
              C1521 +
          (((C13455 * C1813 + C13451 * C1816 + C13456 * C5895 +
             C13452 * C5899) *
                C832 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31581 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C831) +
            (C13455 * C1817 + C13451 * C1822 + C13456 * C5900 +
             C13452 * C5904) *
                C31412) *
               C31504 * C13453 +
           ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
             C13452 * C6155) *
                C832 -
            ((C14908 + C14909) * C31581 + (C14910 + C14911) * C831) +
            (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
             C13452 * C6157) *
                C31412) *
               C31504 * C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31636 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31648 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13456 * C329 + C13452 * C342 + C13455 * C328 + C13451 * C341) *
                 C31325 +
             (C13456 * C312 + C13452 * C330 + C13455 * C311 + C13451 * C327) *
                 C114) *
                C31504 * C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C31308 * C108 -
          (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
               C13454 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
               C13453) *
              C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
               C13453 +
           ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
               C13454) *
              C31308 * C110 -
          (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
               C13454 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
               C13453) *
              C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C31504 *
               C13453 +
           ((C13455 * C120 + C13451 * C133 + C13456 * C717 + C13452 * C718) *
                C114 +
            (C13455 * C132 + C13451 * C141 + C13456 * C719 + C13452 * C720) *
                C31325) *
               C31504 * C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C511 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31638 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C512 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C510 + (C13492 + C13493) * C31649 -
            (C13878 + C13879) * C511 - (C13880 + C13881) * C31638 +
            (C13882 + C13883) * C512 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C31308 * C302 +
          (((C13879 + C13878) * C511 -
            ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
            (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
            (C13885 + C13884) * C31614) *
               C31504 * C13453 +
           ((C13886 + C13887) * C511 -
            ((C13494 + C13495) * C31649 + (C13496 + C13497) * C510) +
            (C13888 + C13889) * C31638 - (C13890 + C13891) * C512 -
            (C13892 + C13893) * C31614) *
               C31504 * C13454) *
              C31308 * C303 +
          (((C13497 + C13496) * C510 + (C13495 + C13494) * C31649 -
            (C13887 + C13886) * C511 - (C13889 + C13888) * C31638 +
            (C13891 + C13890) * C512 + (C13893 + C13892) * C31614) *
               C31504 * C13453 +
           ((C13498 + C13499) * C510 + (C13500 + C13501) * C31649 -
            (C13456 * C1016 + C13452 * C1024 + C13455 * C519 + C13451 * C535) *
                C511 -
            (C13456 * C1025 + C13452 * C1031 + C13455 * C536 + C13451 * C549) *
                C31638 +
            (C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C512 +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31614) *
               C31504 * C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1178 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1177 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C1245 -
          (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
               C13454 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C31504 * C13453) *
              C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C31504 * C13453 +
           ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
               C13454) *
              C1247 -
          (((C13456 * C1266 + C13452 * C1273 + C13455 * C1259 +
             C13451 * C1270) *
                C31325 +
            (C13456 * C1255 + C13452 * C1265 + C13455 * C1252 +
             C13451 * C1260) *
                C114) *
               C31504 * C13454 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C31504 * C13453) *
              C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C31504 * C13453 +
           ((C13455 * C1255 + C13451 * C1265 + C13456 * C6004 +
             C13452 * C6005) *
                C114 +
            (C13455 * C1266 + C13451 * C1273 + C13456 * C6006 +
             C13452 * C6007) *
                C31325) *
               C31504 * C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C511 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31638 +
            (C13455 * C514 + C13451 * C525 + C13456 * C1385 + C13452 * C1394) *
                C512 +
            (C13455 * C526 + C13451 * C544 + C13456 * C1395 + C13452 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C13490 + C13491) * C510 + (C13492 + C13493) * C31649 -
            (C13878 + C13879) * C511 - (C13880 + C13881) * C31638 +
            (C13882 + C13883) * C512 + (C13884 + C13885) * C31614) *
               C31504 * C13454) *
              C1177 +
          (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
             C13452 * C1400) *
                C511 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31649 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C510) +
            (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
             C13452 * C1415) *
                C31638 -
            (C13456 * C1389 + C13452 * C1402 + C13455 * C1385 +
             C13451 * C1394) *
                C512 -
            (C13456 * C1403 + C13452 * C1416 + C13455 * C1395 +
             C13451 * C1412) *
                C31614) *
               C31504 * C13453 +
           ((C14388 + C14389) * C511 -
            ((C13684 + C13685) * C31649 + (C13686 + C13687) * C510) +
            (C14390 + C14391) * C31638 -
            (C13456 * C1391 + C13452 * C1406 + C13455 * C1386 +
             C13451 * C1396) *
                C512 -
            (C13456 * C1407 + C13452 * C1418 + C13455 * C1397 +
             C13451 * C1413) *
                C31614) *
               C31504 * C13454) *
              C1178 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C510 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31649 -
            (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
             C13451 * C1400) *
                C511 -
            (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
             C13451 * C1415) *
                C31638 +
            (C13455 * C1389 + C13451 * C1402 + C13456 * C5894 +
             C13452 * C5897) *
                C512 +
            (C13455 * C1403 + C13451 * C1416 + C13456 * C5898 +
             C13452 * C5903) *
                C31614) *
               C31504 * C13453 +
           ((C13688 + C13689) * C510 + (C13690 + C13691) * C31649 -
            (C13456 * C1814 + C13452 * C1818 + C13455 * C1390 +
             C13451 * C1404) *
                C511 -
            (C13456 * C1819 + C13452 * C1823 + C13455 * C1405 +
             C13451 * C1417) *
                C31638 +
            (C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
             C13452 * C6701) *
                C512 +
            (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
             C13452 * C6703) *
                C31614) *
               C31504 * C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                C832 -
            (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                C31412) *
               C31504 * C13453 +
           ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
            (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
               C31504 * C13454) *
              C31308 * C713 +
          (((C13879 + C13878) * C832 -
            ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
            (C13881 + C13880) * C31412) *
               C31504 * C13453 +
           ((C13886 + C13887) * C832 -
            ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
            (C13888 + C13889) * C31412) *
               C31504 * C13454) *
              C31308 * C714 +
          (((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
            (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
               C31504 * C13453 +
           ((C13498 + C13499) * C831 + (C13500 + C13501) * C31581 -
            (C14174 + C14175) * C832 - (C14176 + C14177) * C31412) *
               C31504 * C13454) *
              C31308 * C715 +
          (((C14175 + C14174) * C832 -
            ((C13501 + C13500) * C31581 + (C13499 + C13498) * C831) +
            (C14177 + C14176) * C31412) *
               C31504 * C13453 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C832 -
            ((C13502 + C13503) * C31581 + (C13504 + C13505) * C831) +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31412) *
               C31504 * C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C13456 * C1013 + C13452 * C1018 + C13455 * C513 + C13451 * C523) *
                 C832 -
             (C13456 * C1019 + C13452 * C1028 + C13455 * C524 + C13451 * C543) *
                 C31412) *
                C31504 * C13453 +
            ((C13490 + C13491) * C831 + (C13492 + C13493) * C31581 -
             (C13878 + C13879) * C832 - (C13880 + C13881) * C31412) *
                C31504 * C13454) *
               C1177 +
           (((C13455 * C1013 + C13451 * C1018 + C13456 * C1388 +
              C13452 * C1400) *
                 C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C13455 * C1019 + C13451 * C1028 + C13456 * C1401 +
              C13452 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C14388 + C14389) * C832 -
             ((C13684 + C13685) * C31581 + (C13686 + C13687) * C831) +
             (C14390 + C14391) * C31412) *
                C31504 * C13454) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C13456 * C1813 + C13452 * C1816 + C13455 * C1388 +
              C13451 * C1400) *
                 C832 -
             (C13456 * C1817 + C13452 * C1822 + C13455 * C1401 +
              C13451 * C1415) *
                 C31412) *
                C31504 * C13453 +
            ((C13688 + C13689) * C831 + (C13690 + C13691) * C31581 -
             (C15114 + C15115) * C832 - (C15116 + C15117) * C31412) *
                C31504 * C13454) *
               C31611) *
              C31566 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C31504 * C13453 +
            ((C13886 + C13887) * C832 -
             ((C13494 + C13495) * C31581 + (C13496 + C13497) * C831) +
             (C13888 + C13889) * C31412) *
                C31504 * C13454) *
               C1177 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C31504 * C13453 +
            ((C13692 + C13693) * C831 + (C13694 + C13695) * C31581 -
             (C14392 + C14393) * C832 - (C14394 + C14395) * C31412) *
                C31504 * C13454) *
               C1178 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C31504 * C13453 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C832 -
             ((C13696 + C13697) * C31581 + (C13698 + C13699) * C831) +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31412) *
                C31504 * C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C31308 * C108 -
          (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
               C13454 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
               C13453) *
              C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
               C13453 +
           ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
               C13454) *
              C31308 * C110 -
          (((C13502 + C13503) * C31325 + (C13504 + C13505) * C114) * C31504 *
               C13454 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C31504 *
               C13453) *
              C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C31504 *
               C13453 +
           ((C13455 * C120 + C13451 * C133 + C13456 * C717 + C13452 * C718) *
                C114 +
            (C13455 * C132 + C13451 * C141 + C13456 * C719 + C13452 * C720) *
                C31325) *
               C31504 * C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C31636 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C31648 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C31648 -
           (((C13456 * C329 + C13452 * C342 + C13455 * C328 + C13451 * C341) *
                 C31325 +
             (C13456 * C312 + C13452 * C330 + C13455 * C311 + C13451 * C327) *
                 C114) *
                C31504 * C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C31504 * C13453 +
            ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
                C13454 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C31504 * C13453) *
               C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C31504 * C13453 +
            ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
                C13454) *
               C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C31504 *
                C13453 +
            ((C13692 + C13693) * C114 + (C13694 + C13695) * C31325) * C31504 *
                C13454) *
               C1178 -
           (((C13494 + C13495) * C31325 + (C13496 + C13497) * C114) * C31504 *
                C13454 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C31504 *
                C13453) *
               C1177 -
           (((C13696 + C13697) * C31325 + (C13698 + C13699) * C114) * C31504 *
                C13454 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C31504 *
                C13453) *
               C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C31504 *
                C13453 +
            ((C13498 + C13499) * C114 + (C13500 + C13501) * C31325) * C31504 *
                C13454) *
               C1177 -
           (((C14032 + C14033) * C31325 + (C14034 + C14035) * C114) * C31504 *
                C13454 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C31504 *
                C13453) *
               C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C31504 *
                C13453 +
            ((C13455 * C312 + C13451 * C330 + C13456 * C1525 + C13452 * C1526) *
                 C114 +
             (C13455 * C329 + C13451 * C342 + C13456 * C1527 + C13452 * C1528) *
                 C31325) *
                C31504 * C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C31504 * C13453 +
           ((C13490 + C13491) * C114 + (C13492 + C13493) * C31325) * C31504 *
               C13454) *
              C1245 -
          (((C13684 + C13685) * C31325 + (C13686 + C13687) * C114) * C31504 *
               C13454 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C31504 * C13453) *
              C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C31504 * C13453 +
           ((C13688 + C13689) * C114 + (C13690 + C13691) * C31325) * C31504 *
               C13454) *
              C1247 -
          (((C13456 * C1266 + C13452 * C1273 + C13455 * C1259 +
             C13451 * C1270) *
                C31325 +
            (C13456 * C1255 + C13452 * C1265 + C13455 * C1252 +
             C13451 * C1260) *
                C114) *
               C31504 * C13454 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C31504 * C13453) *
              C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C31504 * C13453 +
           ((C13455 * C1255 + C13451 * C1265 + C13456 * C6004 +
             C13452 * C6005) *
                C114 +
            (C13455 * C1266 + C13451 * C1273 + C13456 * C6006 +
             C13452 * C6007) *
                C31325) *
               C31504 * C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C31366 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C25925 + C25924) * C114 + (C25927 + C25926) * C31325) * C19146) *
               C31265 * C3071) *
              C31286 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31373 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31366 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C3071) *
              C31294 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31366 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31373 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C3071) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31366 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C25924 + C25925) * C832 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C831 + (C25927 + C25926) * C31581 -
             (C25929 + C25928) * C832 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C3071) *
              C2799 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31366 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31373 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C832 -
             ((C15116 + C15117) * C31581 + (C15114 + C15115) * C831) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C31655 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31651 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C25925 + C25924) * C114 + (C25927 + C25926) * C31325) * C19146) *
               C31265 * C31641 -
           (((C26397 + C26396) * C31325 + (C26395 + C26394) * C114) * C19146 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C19145) *
               C31265 * C31621) *
              C2799 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31651 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31655 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31641 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C19145 +
            ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
              C13452 * C6155) *
                 C114 +
             (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
              C13452 * C6157) *
                 C31325) *
                C19146) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C2691 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31370) *
              C31654 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31370 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C2691) *
              C31647 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C2691 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31370) *
              C31634 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C19145 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C114 +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31325) *
                C19146) *
               C31265 * C31370 -
           (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
               C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C510 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31649 -
             (C25048 + C25049) * C511 - (C25050 + C25051) * C31638 +
             (C25052 + C25053) * C512 + (C25054 + C25055) * C31614) *
                C19145 +
            ((C25049 + C25048) * C510 + (C25051 + C25050) * C31649 -
             (C25053 + C25052) * C511 - (C25055 + C25054) * C31638 +
             (C26789 + C26788) * C512 + (C26791 + C26790) * C31614) *
                C19146) *
               C31265 * C2691 +
           (((C25518 + C25519) * C511 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31649 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C510) +
             (C25520 + C25521) * C31638 - (C25920 + C25921) * C512 -
             (C25922 + C25923) * C31614) *
                C19145 +
            ((C25921 + C25920) * C511 -
             ((C25521 + C25520) * C31649 + (C25519 + C25518) * C510) +
             (C25923 + C25922) * C31638 - (C27259 + C27258) * C512 -
             (C27261 + C27260) * C31614) *
                C19146) *
               C31265 * C31370) *
              C2799 +
          ((((C13879 + C13878) * C511 -
             ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
             (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
             (C13885 + C13884) * C31614) *
                C19145 +
            ((C13882 + C13883) * C511 -
             ((C13880 + C13881) * C31649 + (C13878 + C13879) * C510) +
             (C13884 + C13885) * C31638 - (C15966 + C15967) * C512 -
             (C15968 + C15969) * C31614) *
                C19146) *
               C31265 * C2691 +
           (((C13687 + C13686) * C510 + (C13685 + C13684) * C31649 -
             (C14389 + C14388) * C511 - (C14391 + C14390) * C31638 +
             (C15825 + C15824) * C512 + (C15827 + C15826) * C31614) *
                C19145 +
            ((C14388 + C14389) * C510 + (C14390 + C14391) * C31649 -
             (C15824 + C15825) * C511 - (C15826 + C15827) * C31638 +
             (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
              C13452 * C6803) *
                 C512 +
             (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
              C13452 * C6805) *
                 C31614) *
                C19146) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31286 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31294 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C831 + (C13888 + C13889) * C31581 -
             (C13890 + C13891) * C832 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C832 -
             ((C14394 + C14395) * C31581 + (C14392 + C14393) * C831) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C2691 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31370) *
              C31654 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31370 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C2691) *
              C31647 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C2691 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31370) *
              C31634 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C19145 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C114 +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31325) *
                C19146) *
               C31265 * C31370 -
           (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
               C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C31655 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31651 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C25925 + C25924) * C114 + (C25927 + C25926) * C31325) * C19146) *
               C31265 * C31641 -
           (((C26397 + C26396) * C31325 + (C26395 + C26394) * C114) * C19146 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C19145) *
               C31265 * C31621) *
              C2799 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31651 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31655 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31641 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C19145 +
            ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
              C13452 * C6155) *
                 C114 +
             (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
              C13452 * C6157) *
                 C31325) *
                C19146) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31366 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31373 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C25924 + C25925) * C3468 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C3467 + (C25927 + C25926) * C3465 -
             (C25929 + C25928) * C3468 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C3071) *
              C31566 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31366 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31373 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C3468 -
             ((C15116 + C15117) * C3465 + (C15114 + C15115) * C3467) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C30318 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31408 -
            (C25048 + C25049) * C30310 - (C25050 + C25051) * C31415 +
            (C25052 + C25053) * C30324 + (C25054 + C25055) * C4043) *
               C19145 +
           ((C25049 + C25048) * C30318 + (C25051 + C25050) * C31408 -
            (C25053 + C25052) * C30310 - (C25055 + C25054) * C31415 +
            (C26789 + C26788) * C30324 + (C26791 + C26790) * C4043) *
               C19146) *
              C31265 * C31366 +
          (((C25518 + C25519) * C30310 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31408 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C30318) +
            (C25520 + C25521) * C31415 - (C25920 + C25921) * C30324 -
            (C25922 + C25923) * C4043) *
               C19145 +
           ((C25921 + C25920) * C30310 -
            ((C25521 + C25520) * C31408 + (C25519 + C25518) * C30318) +
            (C25923 + C25922) * C31415 - (C27259 + C27258) * C30324 -
            (C27261 + C27260) * C4043) *
               C19146) *
              C31265 * C31373 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C30318 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31408 -
            (C25924 + C25925) * C30310 - (C25926 + C25927) * C31415 +
            (C25928 + C25929) * C30324 + (C25930 + C25931) * C4043) *
               C19145 +
           ((C25925 + C25924) * C30318 + (C25927 + C25926) * C31408 -
            (C25929 + C25928) * C30310 - (C25931 + C25930) * C31415 +
            (C13455 * C6542 + C13451 * C6545 + C13456 * C6904 +
             C13452 * C6905) *
                C30324 +
            (C13455 * C6546 + C13451 * C6551 + C13456 * C6906 +
             C13452 * C6907) *
                C4043) *
               C19146) *
              C31265 * C3071) *
         C31281) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
            (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31655 +
          (((C25518 + C25519) * C3468 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C3465 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3467) +
            (C25520 + C25521) * C31412) *
               C19145 +
           ((C25921 + C25920) * C3468 -
            ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
            (C25923 + C25922) * C31412) *
               C19146) *
              C31265 * C31651 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C3467 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C3465 -
            (C25924 + C25925) * C3468 - (C25926 + C25927) * C31412) *
               C19145 +
           ((C25925 + C25924) * C3467 + (C25927 + C25926) * C3465 -
            (C25929 + C25928) * C3468 - (C25931 + C25930) * C31412) *
               C19146) *
              C31265 * C31641 +
          (((C26394 + C26395) * C3468 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C3465 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C3467) +
            (C26396 + C26397) * C31412) *
               C19145 +
           ((C13455 * C5894 + C13451 * C5897 + C13456 * C5896 +
             C13452 * C5901) *
                C3468 -
            ((C26397 + C26396) * C3465 + (C26395 + C26394) * C3467) +
            (C13455 * C5898 + C13451 * C5903 + C13456 * C5902 +
             C13452 * C5905) *
                C31412) *
               C19146) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31645 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31632 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C3467 + (C13888 + C13889) * C3465 -
             (C13890 + C13891) * C3468 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C3468 -
             ((C14394 + C14395) * C3465 + (C14392 + C14393) * C3467) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3757 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31656 -
            (C25048 + C25049) * C3758 - (C25050 + C25051) * C31653 +
            (C25052 + C25053) * C3759 + (C25054 + C25055) * C31644 -
            (C26788 + C26789) * C3760 - (C26790 + C26791) * C31627) *
               C19145 +
           ((C25049 + C25048) * C3757 + (C25051 + C25050) * C31656 -
            (C25053 + C25052) * C3758 - (C25055 + C25054) * C31653 +
            (C26789 + C26788) * C3759 + (C26791 + C26790) * C31644 -
            (C26793 + C26792) * C3760 - (C26795 + C26794) * C31627) *
               C19146) *
              C31265 * C2691 +
          (((C25518 + C25519) * C3758 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31656 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3757) +
            (C25520 + C25521) * C31653 - (C25920 + C25921) * C3759 -
            (C25922 + C25923) * C31644 + (C27258 + C27259) * C3760 +
            (C27260 + C27261) * C31627) *
               C19145 +
           ((C25921 + C25920) * C3758 -
            ((C25521 + C25520) * C31656 + (C25519 + C25518) * C3757) +
            (C25923 + C25922) * C31653 - (C27259 + C27258) * C3759 -
            (C27261 + C27260) * C31644 +
            (C13455 * C6543 + C13451 * C6547 + C13456 * C6544 +
             C13452 * C6548) *
                C3760 +
            (C13455 * C6549 + C13451 * C6552 + C13456 * C6550 +
             C13452 * C6553) *
                C31627) *
               C19146) *
              C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C30318 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31408 -
             (C25048 + C25049) * C30310 - (C25050 + C25051) * C31415 +
             (C25052 + C25053) * C30324 + (C25054 + C25055) * C4043) *
                C19145 +
            ((C25049 + C25048) * C30318 + (C25051 + C25050) * C31408 -
             (C25053 + C25052) * C30310 - (C25055 + C25054) * C31415 +
             (C26789 + C26788) * C30324 + (C26791 + C26790) * C4043) *
                C19146) *
               C31265 * C2691 +
           (((C25518 + C25519) * C30310 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31408 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C30318) +
             (C25520 + C25521) * C31415 - (C25920 + C25921) * C30324 -
             (C25922 + C25923) * C4043) *
                C19145 +
            ((C25921 + C25920) * C30310 -
             ((C25521 + C25520) * C31408 + (C25519 + C25518) * C30318) +
             (C25923 + C25922) * C31415 - (C27259 + C27258) * C30324 -
             (C27261 + C27260) * C4043) *
                C19146) *
               C31265 * C31370) *
              C31566 +
          ((((C13879 + C13878) * C30310 -
             ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
             (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
             (C13885 + C13884) * C4043) *
                C19145 +
            ((C13882 + C13883) * C30310 -
             ((C13880 + C13881) * C31408 + (C13878 + C13879) * C30318) +
             (C13884 + C13885) * C31415 - (C15966 + C15967) * C30324 -
             (C15968 + C15969) * C4043) *
                C19146) *
               C31265 * C2691 +
           (((C13687 + C13686) * C30318 + (C13685 + C13684) * C31408 -
             (C14389 + C14388) * C30310 - (C14391 + C14390) * C31415 +
             (C15825 + C15824) * C30324 + (C15827 + C15826) * C4043) *
                C19145 +
            ((C14388 + C14389) * C30318 + (C14390 + C14391) * C31408 -
             (C15824 + C15825) * C30310 - (C15826 + C15827) * C31415 +
             (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
              C13452 * C6803) *
                 C30324 +
             (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
              C13452 * C6805) *
                 C4043) *
                C19146) *
               C31265 * C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31645 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31632 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C3467 + (C13888 + C13889) * C3465 -
             (C13890 + C13891) * C3468 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C2691 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C3468 -
             ((C14394 + C14395) * C3465 + (C14392 + C14393) * C3467) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
            (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31655 +
          (((C25518 + C25519) * C3468 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C3465 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C3467) +
            (C25520 + C25521) * C31412) *
               C19145 +
           ((C25921 + C25920) * C3468 -
            ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
            (C25923 + C25922) * C31412) *
               C19146) *
              C31265 * C31651 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C3467 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C3465 -
            (C25924 + C25925) * C3468 - (C25926 + C25927) * C31412) *
               C19145 +
           ((C25925 + C25924) * C3467 + (C25927 + C25926) * C3465 -
            (C25929 + C25928) * C3468 - (C25931 + C25930) * C31412) *
               C19146) *
              C31265 * C31641 +
          (((C26394 + C26395) * C3468 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C3465 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C3467) +
            (C26396 + C26397) * C31412) *
               C19145 +
           ((C13455 * C5894 + C13451 * C5897 + C13456 * C5896 +
             C13452 * C5901) *
                C3468 -
            ((C26397 + C26396) * C3465 + (C26395 + C26394) * C3467) +
            (C13455 * C5898 + C13451 * C5903 + C13456 * C5902 +
             C13452 * C5905) *
                C31412) *
               C19146) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1519 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1520 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C25925 + C25924) * C114 + (C25927 + C25926) * C31325) * C19146) *
               C31265 * C1521 -
           (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
              C13451 * C1822) *
                 C31325 +
             (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
              C13451 * C1816) *
                 C114) *
                C19146 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C19145) *
               C31265 * C31621) *
              C31566 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1520 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1519 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C1521 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C19145 +
            ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
              C13452 * C6155) *
                 C114 +
             (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
              C13452 * C6157) *
                 C31325) *
                C19146) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C31580 -
           (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
              C13451 * C1028) *
                 C31325 +
             (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
              C13451 * C1018) *
                 C114) *
                C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31370) *
              C713 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31370 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31580) *
              C714 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31580 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31370) *
              C715 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C19145 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C114 +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31325) *
                C19146) *
               C31265 * C31370 -
           (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
               C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C1938 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C1935 -
             (C25048 + C25049) * C1939 - (C25050 + C25051) * C1936 +
             (C25052 + C25053) * C1940 + (C25054 + C25055) * C31614) *
                C19145 +
            ((C25049 + C25048) * C1938 + (C25051 + C25050) * C1935 -
             (C25053 + C25052) * C1939 - (C25055 + C25054) * C1936 +
             (C26789 + C26788) * C1940 + (C26791 + C26790) * C31614) *
                C19146) *
               C31265 * C31580 +
           (((C25518 + C25519) * C1939 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C1935 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C1938) +
             (C25520 + C25521) * C1936 - (C25920 + C25921) * C1940 -
             (C25922 + C25923) * C31614) *
                C19145 +
            ((C25921 + C25920) * C1939 -
             ((C25521 + C25520) * C1935 + (C25519 + C25518) * C1938) +
             (C25923 + C25922) * C1936 -
             (C13456 * C6542 + C13452 * C6545 + C13455 * C2581 +
              C13451 * C2584) *
                 C1940 -
             (C13456 * C6546 + C13452 * C6551 + C13455 * C2585 +
              C13451 * C2590) *
                 C31614) *
                C19146) *
               C31265 * C31370) *
              C31566 +
          ((((C13879 + C13878) * C1939 -
             ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
             (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
             (C13885 + C13884) * C31614) *
                C19145 +
            ((C13882 + C13883) * C1939 -
             ((C13880 + C13881) * C1935 + (C13878 + C13879) * C1938) +
             (C13884 + C13885) * C1936 - (C15966 + C15967) * C1940 -
             (C15968 + C15969) * C31614) *
                C19146) *
               C31265 * C31580 +
           (((C13687 + C13686) * C1938 + (C13685 + C13684) * C1935 -
             (C14389 + C14388) * C1939 - (C14391 + C14390) * C1936 +
             (C15825 + C15824) * C1940 + (C15827 + C15826) * C31614) *
                C19145 +
            ((C14388 + C14389) * C1938 + (C14390 + C14391) * C1935 -
             (C15824 + C15825) * C1939 - (C15826 + C15827) * C1936 +
             (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
              C13452 * C6803) *
                 C1940 +
             (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
              C13452 * C6805) *
                 C31614) *
                C19146) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
            (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C1519 +
          (((C25518 + C25519) * C832 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31581 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C831) +
            (C25520 + C25521) * C31412) *
               C19145 +
           ((C25921 + C25920) * C832 -
            ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
            (C25923 + C25922) * C31412) *
               C19146) *
              C31265 * C1520 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C831 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31581 -
            (C25924 + C25925) * C832 - (C25926 + C25927) * C31412) *
               C19145 +
           ((C25925 + C25924) * C831 + (C25927 + C25926) * C31581 -
            (C25929 + C25928) * C832 - (C25931 + C25930) * C31412) *
               C19146) *
              C31265 * C1521 +
          (((C26394 + C26395) * C832 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31581 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C831) +
            (C26396 + C26397) * C31412) *
               C19145 +
           ((C13455 * C5894 + C13451 * C5897 + C13456 * C5896 +
             C13452 * C5901) *
                C832 -
            ((C26397 + C26396) * C31581 + (C26395 + C26394) * C831) +
            (C13455 * C5898 + C13451 * C5903 + C13456 * C5902 +
             C13452 * C5905) *
                C31412) *
               C19146) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C13455 * C1385 + C13451 * C1394 + C13456 * C1389 +
              C13452 * C1402) *
                 C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C13455 * C1395 + C13451 * C1412 + C13456 * C1403 +
              C13452 * C1416) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C302 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C303 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C831 + (C13888 + C13889) * C31581 -
             (C13890 + C13891) * C832 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C832 -
             ((C14394 + C14395) * C31581 + (C14392 + C14393) * C831) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C2447 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C2443 -
            (C25048 + C25049) * C2448 - (C25050 + C25051) * C2444 +
            (C25052 + C25053) * C2449 + (C25054 + C25055) * C2445 -
            (C26788 + C26789) * C2450 - (C26790 + C26791) * C31627) *
               C19145 +
           ((C25049 + C25048) * C2447 + (C25051 + C25050) * C2443 -
            (C25053 + C25052) * C2448 - (C25055 + C25054) * C2444 +
            (C26789 + C26788) * C2449 + (C26791 + C26790) * C2445 -
            (C26793 + C26792) * C2450 - (C26795 + C26794) * C31627) *
               C19146) *
              C31265 * C31580 +
          (((C25518 + C25519) * C2448 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C2443 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C2447) +
            (C25520 + C25521) * C2444 - (C25920 + C25921) * C2449 -
            (C25922 + C25923) * C2445 + (C27258 + C27259) * C2450 +
            (C27260 + C27261) * C31627) *
               C19145 +
           ((C25921 + C25920) * C2448 -
            ((C25521 + C25520) * C2443 + (C25519 + C25518) * C2447) +
            (C25923 + C25922) * C2444 - (C27259 + C27258) * C2449 -
            (C27261 + C27260) * C2445 +
            (C13455 * C6543 + C13451 * C6547 + C13456 * C6544 +
             C13452 * C6548) *
                C2450 +
            (C13455 * C6549 + C13451 * C6552 + C13456 * C6550 +
             C13452 * C6553) *
                C31627) *
               C19146) *
              C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13455 * C115 + C13451 * C122 + C13456 * C307 +
                 C13452 * C320) *
                    C114 +
                (C13455 * C123 + C13451 * C136 + C13456 * C319 +
                 C13452 * C337) *
                    C31325) *
                   C19145 +
               ((C13455 * C513 + C13451 * C523 + C13456 * C1013 +
                 C13452 * C1018) *
                    C114 +
                (C13455 * C524 + C13451 * C543 + C13456 * C1019 +
                 C13452 * C1028) *
                    C31325) *
                   C19146) *
                  C31265 * C31308 * C108 -
              (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) *
                   C19146 +
               ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) *
                   C19145) *
                  C31265 * C31308 * C109 +
              (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) *
                   C19145 +
               ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) *
                   C19146) *
                  C31265 * C31308 * C110 -
              (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) *
                   C19146 +
               ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) *
                   C19145) *
                  C31265 * C31308 * C111 +
              (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) *
                   C19145 +
               ((C13455 * C521 + C13451 * C539 + C13456 * C1017 +
                 C13452 * C1026) *
                    C114 +
                (C13455 * C540 + C13451 * C551 + C13456 * C1027 +
                 C13452 * C1032) *
                    C31325) *
                   C19146) *
                  C31265 * C31308 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13455 * C115 + C13451 * C122 + C13456 * C307 +
                  C13452 * C320) *
                     C114 +
                 (C13455 * C123 + C13451 * C136 + C13456 * C319 +
                  C13452 * C337) *
                     C31325) *
                    C19145 +
                ((C13455 * C513 + C13451 * C523 + C13456 * C1013 +
                  C13452 * C1018) *
                     C114 +
                 (C13455 * C524 + C13451 * C543 + C13456 * C1019 +
                  C13452 * C1028) *
                     C31325) *
                    C19146) *
                   C31265 * C31648 -
               (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
                  C13451 * C1028) *
                     C31325 +
                 (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
                  C13451 * C1018) *
                     C114) *
                    C19146 +
                ((C13456 * C322 + C13452 * C338 + C13455 * C319 +
                  C13451 * C337) *
                     C31325 +
                 (C13456 * C308 + C13452 * C321 + C13455 * C307 +
                  C13451 * C320) *
                     C114) *
                    C19145) *
                   C31265 * C31636 +
               (((C13455 * C308 + C13451 * C321 + C13456 * C1253 +
                  C13452 * C1262) *
                     C114 +
                 (C13455 * C322 + C13451 * C338 + C13456 * C1261 +
                  C13452 * C1271) *
                     C31325) *
                    C19145 +
                ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
                  C13452 * C1816) *
                     C114 +
                 (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
                  C13452 * C1822) *
                     C31325) *
                    C19146) *
                   C31265 * C31611) *
                  C302 +
              ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) *
                    C19145 +
                ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) *
                    C19146) *
                   C31265 * C31636 -
               (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) *
                    C19146 +
                ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) *
                    C19145) *
                   C31265 * C31648 -
               (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) *
                    C19146 +
                ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) *
                    C19145) *
                   C31265 * C31611) *
                  C303 +
              ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) *
                    C19145 +
                ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) *
                    C19146) *
                   C31265 * C31648 -
               (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) *
                    C19146 +
                ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) *
                    C19145) *
                   C31265 * C31636 +
               (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) *
                    C19145 +
                ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
                  C13452 * C1820) *
                     C114 +
                 (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
                  C13452 * C1824) *
                     C31325) *
                    C19146) *
                   C31265 * C31611) *
                  C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C25048 + C25049) * C511 - (C25050 + C25051) * C31638 +
            (C25052 + C25053) * C512 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C510 + (C25051 + C25050) * C31649 -
            (C25053 + C25052) * C511 - (C25055 + C25054) * C31638 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C512 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31308 * C302 +
          (((C13879 + C13878) * C511 -
            ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
            (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
            (C13885 + C13884) * C31614) *
               C19145 +
           ((C13882 + C13883) * C511 -
            ((C13880 + C13881) * C31649 + (C13878 + C13879) * C510) +
            (C13884 + C13885) * C31638 - (C15966 + C15967) * C512 -
            (C15968 + C15969) * C31614) *
               C19146) *
              C31265 * C31308 * C303 +
          (((C13497 + C13496) * C510 + (C13495 + C13494) * C31649 -
            (C13887 + C13886) * C511 - (C13889 + C13888) * C31638 +
            (C13891 + C13890) * C512 + (C13893 + C13892) * C31614) *
               C19145 +
           ((C13886 + C13887) * C510 + (C13888 + C13889) * C31649 -
            (C13890 + C13891) * C511 - (C13892 + C13893) * C31638 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C512 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1177 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1178 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1177 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C1177 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
              C31265 * C1245 -
          (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C19145) *
              C31265 * C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C19145 +
           ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
             C13452 * C1816) *
                C114 +
            (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
             C13452 * C1822) *
                C31325) *
               C19146) *
              C31265 * C1247 -
          (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
             C13451 * C1822) *
                C31325 +
            (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
             C13451 * C1816) *
                C114) *
               C19146 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C19145) *
              C31265 * C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C19145 +
           ((C13455 * C5895 + C13451 * C5899 + C13456 * C6256 +
             C13452 * C6257) *
                C114 +
            (C13455 * C5900 + C13451 * C5904 + C13456 * C6258 +
             C13452 * C6259) *
                C31325) *
               C19146) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C25048 + C25049) * C511 - (C25050 + C25051) * C31638 +
            (C25052 + C25053) * C512 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C510 + (C25051 + C25050) * C31649 -
            (C25053 + C25052) * C511 - (C25055 + C25054) * C31638 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C512 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C1177 +
          (((C25518 + C25519) * C511 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31649 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C510) +
            (C25520 + C25521) * C31638 - (C25920 + C25921) * C512 -
            (C25922 + C25923) * C31614) *
               C19145 +
           ((C25921 + C25920) * C511 -
            ((C25521 + C25520) * C31649 + (C25519 + C25518) * C510) +
            (C25923 + C25922) * C31638 -
            (C13456 * C6542 + C13452 * C6545 + C13455 * C2581 +
             C13451 * C2584) *
                C512 -
            (C13456 * C6546 + C13452 * C6551 + C13455 * C2585 +
             C13451 * C2590) *
                C31614) *
               C19146) *
              C31265 * C1178 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C510 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31649 -
            (C25924 + C25925) * C511 - (C25926 + C25927) * C31638 +
            (C25928 + C25929) * C512 + (C25930 + C25931) * C31614) *
               C19145 +
           ((C25925 + C25924) * C510 + (C25927 + C25926) * C31649 -
            (C25929 + C25928) * C511 - (C25931 + C25930) * C31638 +
            (C13455 * C6542 + C13451 * C6545 + C13456 * C6904 +
             C13452 * C6905) *
                C512 +
            (C13455 * C6546 + C13451 * C6551 + C13456 * C6906 +
             C13452 * C6907) *
                C31614) *
               C19146) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C25048 + C25049) * C1939 - (C25050 + C25051) * C1936 +
            (C25052 + C25053) * C1940 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C1938 + (C25051 + C25050) * C1935 -
            (C25053 + C25052) * C1939 - (C25055 + C25054) * C1936 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C1940 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31645 +
          (((C13879 + C13878) * C1939 -
            ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
            (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
            (C13885 + C13884) * C31614) *
               C19145 +
           ((C13882 + C13883) * C1939 -
            ((C13880 + C13881) * C1935 + (C13878 + C13879) * C1938) +
            (C13884 + C13885) * C1936 - (C15966 + C15967) * C1940 -
            (C15968 + C15969) * C31614) *
               C19146) *
              C31265 * C31308 * C31632 +
          (((C13497 + C13496) * C1938 + (C13495 + C13494) * C1935 -
            (C13887 + C13886) * C1939 - (C13889 + C13888) * C1936 +
            (C13891 + C13890) * C1940 + (C13893 + C13892) * C31614) *
               C19145 +
           ((C13886 + C13887) * C1938 + (C13888 + C13889) * C1935 -
            (C13890 + C13891) * C1939 - (C13892 + C13893) * C1936 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C1940 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C25048 + C25049) * C1939 - (C25050 + C25051) * C1936 +
            (C25052 + C25053) * C1940 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C1938 + (C25051 + C25050) * C1935 -
            (C25053 + C25052) * C1939 - (C25055 + C25054) * C1936 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C1940 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31648 +
          (((C25518 + C25519) * C1939 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C1935 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C1938) +
            (C25520 + C25521) * C1936 - (C25920 + C25921) * C1940 -
            (C25922 + C25923) * C31614) *
               C19145 +
           ((C25921 + C25920) * C1939 -
            ((C25521 + C25520) * C1935 + (C25519 + C25518) * C1938) +
            (C25923 + C25922) * C1936 -
            (C13456 * C6542 + C13452 * C6545 + C13455 * C2581 +
             C13451 * C2584) *
                C1940 -
            (C13456 * C6546 + C13452 * C6551 + C13455 * C2585 +
             C13451 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31636 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C1938 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C1935 -
            (C25924 + C25925) * C1939 - (C25926 + C25927) * C1936 +
            (C25928 + C25929) * C1940 + (C25930 + C25931) * C31614) *
               C19145 +
           ((C25925 + C25924) * C1938 + (C25927 + C25926) * C1935 -
            (C25929 + C25928) * C1939 - (C25931 + C25930) * C1936 +
            (C13455 * C6542 + C13451 * C6545 + C13456 * C6904 +
             C13452 * C6905) *
                C1940 +
            (C13455 * C6546 + C13451 * C6551 + C13456 * C6906 +
             C13452 * C6907) *
                C31614) *
               C19146) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
               C2142 +
           (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
               C2137 -
           (C25048 + C25049) * C2143 - (C25050 + C25051) * C2138 +
           (C25052 + C25053) * C2144 + (C25054 + C25055) * C2139 -
           (C26788 + C26789) * C2145 - (C26790 + C26791) * C2140 +
           (C26792 + C26793) * C2146 + (C26794 + C26795) * C2141) *
              C19145 +
          ((C25049 + C25048) * C2142 + (C25051 + C25050) * C2137 -
           (C25053 + C25052) * C2143 - (C25055 + C25054) * C2138 +
           (C26789 + C26788) * C2144 + (C26791 + C26790) * C2139 -
           (C26793 + C26792) * C2145 - (C26795 + C26794) * C2140 +
           (C13455 * C10745 + C13451 * C10747 + C13456 * C11127 +
            C13452 * C11128) *
               C2146 +
           (C13455 * C10748 + C13451 * C10751 + C13456 * C11129 +
            C13452 * C11130) *
               C2141) *
              C19146) *
         C31265 * C31308 * C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C1177 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C25924 + C25925) * C832 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C831 + (C25927 + C25926) * C31581 -
             (C25929 + C25928) * C832 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C31611) *
              C31566 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C1177 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C1178 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C832 -
             ((C15116 + C15117) * C31581 + (C15114 + C15115) * C831) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
            (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31308 * C713 +
          (((C13879 + C13878) * C832 -
            ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
            (C13881 + C13880) * C31412) *
               C19145 +
           ((C13882 + C13883) * C832 -
            ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
            (C13884 + C13885) * C31412) *
               C19146) *
              C31265 * C31308 * C714 +
          (((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
            (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
               C19145 +
           ((C13886 + C13887) * C831 + (C13888 + C13889) * C31581 -
            (C13890 + C13891) * C832 - (C13892 + C13893) * C31412) *
               C19146) *
              C31265 * C31308 * C715 +
          (((C14175 + C14174) * C832 -
            ((C13501 + C13500) * C31581 + (C13499 + C13498) * C831) +
            (C14177 + C14176) * C31412) *
               C19145 +
           ((C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C832 -
            ((C14176 + C14177) * C31581 + (C14174 + C14175) * C831) +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31412) *
               C19146) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C2447 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C2443 -
            (C25048 + C25049) * C2448 - (C25050 + C25051) * C2444 +
            (C25052 + C25053) * C2449 + (C25054 + C25055) * C2445 -
            (C26788 + C26789) * C2450 - (C26790 + C26791) * C31627) *
               C19145 +
           ((C25049 + C25048) * C2447 + (C25051 + C25050) * C2443 -
            (C25053 + C25052) * C2448 - (C25055 + C25054) * C2444 +
            (C26789 + C26788) * C2449 + (C26791 + C26790) * C2445 -
            (C26793 + C26792) * C2450 - (C26795 + C26794) * C31627) *
               C19146) *
              C31265 * C31308 * C31566 +
          (((C13879 + C13878) * C2448 -
            ((C13493 + C13492) * C2443 + (C13491 + C13490) * C2447) +
            (C13881 + C13880) * C2444 - (C13883 + C13882) * C2449 -
            (C13885 + C13884) * C2445 + (C15967 + C15966) * C2450 +
            (C15969 + C15968) * C31627) *
               C19145 +
           ((C13882 + C13883) * C2448 -
            ((C13880 + C13881) * C2443 + (C13878 + C13879) * C2447) +
            (C13884 + C13885) * C2444 - (C15966 + C15967) * C2449 -
            (C15968 + C15969) * C2445 +
            (C13455 * C2150 + C13451 * C2159 + C13456 * C10911 +
             C13452 * C10912) *
                C2450 +
            (C13455 * C2160 + C13451 * C2168 + C13456 * C10913 +
             C13452 * C10914) *
                C31627) *
               C19146) *
              C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                 C114 +
             (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                 C31325) *
                C19146) *
               C31265 * C31648 -
           (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
              C13451 * C1028) *
                 C31325 +
             (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
              C13451 * C1018) *
                 C114) *
                C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31636 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31648 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31648 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                C114 +
            (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                C31325) *
               C19146) *
              C31265 * C31308 * C108 -
          (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
              C31265 * C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
           ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
              C31265 * C31308 * C110 -
          (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
              C31265 * C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C19145 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C114 +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31325) *
               C19146) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1177 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1178 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1177 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C1177 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
              C31265 * C1245 -
          (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C19145) *
              C31265 * C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C19145 +
           ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
             C13452 * C1816) *
                C114 +
            (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
             C13452 * C1822) *
                C31325) *
               C19146) *
              C31265 * C1247 -
          (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
             C13451 * C1822) *
                C31325 +
            (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
             C13451 * C1816) *
                C114) *
               C19146 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C19145) *
              C31265 * C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C19145 +
           ((C13455 * C5895 + C13451 * C5899 + C13456 * C6256 +
             C13452 * C6257) *
                C114 +
            (C13455 * C5900 + C13451 * C5904 + C13456 * C6258 +
             C13452 * C6259) *
                C31325) *
               C19146) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C25048 + C25049) * C1939 - (C25050 + C25051) * C1936 +
            (C25052 + C25053) * C1940 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C1938 + (C25051 + C25050) * C1935 -
            (C25053 + C25052) * C1939 - (C25055 + C25054) * C1936 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C1940 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31645 +
          (((C13879 + C13878) * C1939 -
            ((C13493 + C13492) * C1935 + (C13491 + C13490) * C1938) +
            (C13881 + C13880) * C1936 - (C13883 + C13882) * C1940 -
            (C13885 + C13884) * C31614) *
               C19145 +
           ((C13882 + C13883) * C1939 -
            ((C13880 + C13881) * C1935 + (C13878 + C13879) * C1938) +
            (C13884 + C13885) * C1936 - (C15966 + C15967) * C1940 -
            (C15968 + C15969) * C31614) *
               C19146) *
              C31265 * C31308 * C31632 +
          (((C13497 + C13496) * C1938 + (C13495 + C13494) * C1935 -
            (C13887 + C13886) * C1939 - (C13889 + C13888) * C1936 +
            (C13891 + C13890) * C1940 + (C13893 + C13892) * C31614) *
               C19145 +
           ((C13886 + C13887) * C1938 + (C13888 + C13889) * C1935 -
            (C13890 + C13891) * C1939 - (C13892 + C13893) * C1936 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C1940 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C1938 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C1935 -
            (C25048 + C25049) * C1939 - (C25050 + C25051) * C1936 +
            (C25052 + C25053) * C1940 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C1938 + (C25051 + C25050) * C1935 -
            (C25053 + C25052) * C1939 - (C25055 + C25054) * C1936 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C1940 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31648 +
          (((C25518 + C25519) * C1939 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C1935 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C1938) +
            (C25520 + C25521) * C1936 - (C25920 + C25921) * C1940 -
            (C25922 + C25923) * C31614) *
               C19145 +
           ((C25921 + C25920) * C1939 -
            ((C25521 + C25520) * C1935 + (C25519 + C25518) * C1938) +
            (C25923 + C25922) * C1936 -
            (C13456 * C6542 + C13452 * C6545 + C13455 * C2581 +
             C13451 * C2584) *
                C1940 -
            (C13456 * C6546 + C13452 * C6551 + C13455 * C2585 +
             C13451 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31636 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C1938 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C1935 -
            (C25924 + C25925) * C1939 - (C25926 + C25927) * C1936 +
            (C25928 + C25929) * C1940 + (C25930 + C25931) * C31614) *
               C19145 +
           ((C25925 + C25924) * C1938 + (C25927 + C25926) * C1935 -
            (C25929 + C25928) * C1939 - (C25931 + C25930) * C1936 +
            (C13455 * C6542 + C13451 * C6545 + C13456 * C6904 +
             C13452 * C6905) *
                C1940 +
            (C13455 * C6546 + C13451 * C6551 + C13456 * C6906 +
             C13452 * C6907) *
                C31614) *
               C19146) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31286 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C31294 +
          ((((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
             (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C3467 + (C13888 + C13889) * C3465 -
             (C13890 + C13891) * C3468 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C14393 + C14392) * C3468 -
             ((C13695 + C13694) * C3465 + (C13693 + C13692) * C3467) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C3468 -
             ((C14394 + C14395) * C3465 + (C14392 + C14393) * C3467) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C30318 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31408 -
             (C25048 + C25049) * C30310 - (C25050 + C25051) * C31415 +
             (C25052 + C25053) * C30324 + (C25054 + C25055) * C4043) *
                C19145 +
            ((C25049 + C25048) * C30318 + (C25051 + C25050) * C31408 -
             (C25053 + C25052) * C30310 - (C25055 + C25054) * C31415 +
             (C26789 + C26788) * C30324 + (C26791 + C26790) * C4043) *
                C19146) *
               C31265 * C31580 +
           (((C25518 + C25519) * C30310 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31408 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C30318) +
             (C25520 + C25521) * C31415 - (C25920 + C25921) * C30324 -
             (C25922 + C25923) * C4043) *
                C19145 +
            ((C25921 + C25920) * C30310 -
             ((C25521 + C25520) * C31408 + (C25519 + C25518) * C30318) +
             (C25923 + C25922) * C31415 - (C27259 + C27258) * C30324 -
             (C27261 + C27260) * C4043) *
                C19146) *
               C31265 * C31370) *
              C2799 +
          ((((C13879 + C13878) * C30310 -
             ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
             (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
             (C13885 + C13884) * C4043) *
                C19145 +
            ((C13882 + C13883) * C30310 -
             ((C13880 + C13881) * C31408 + (C13878 + C13879) * C30318) +
             (C13884 + C13885) * C31415 - (C15966 + C15967) * C30324 -
             (C15968 + C15969) * C4043) *
                C19146) *
               C31265 * C31580 +
           (((C13687 + C13686) * C30318 + (C13685 + C13684) * C31408 -
             (C14389 + C14388) * C30310 - (C14391 + C14390) * C31415 +
             (C15825 + C15824) * C30324 + (C15827 + C15826) * C4043) *
                C19145 +
            ((C14388 + C14389) * C30318 + (C14390 + C14391) * C31408 -
             (C15824 + C15825) * C30310 - (C15826 + C15827) * C31415 +
             (C13455 * C2582 + C13451 * C2586 + C13456 * C6802 +
              C13452 * C6803) *
                 C30324 +
             (C13455 * C2587 + C13451 * C2591 + C13456 * C6804 +
              C13452 * C6805) *
                 C4043) *
                C19146) *
               C31265 * C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31648 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C25924 + C25925) * C3468 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C3467 + (C25927 + C25926) * C3465 -
             (C25929 + C25928) * C3468 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C31611) *
              C2799 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31648 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31636 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C3468 -
             ((C15116 + C15117) * C3465 + (C15114 + C15115) * C3467) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
            (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31308 * C31654 +
          (((C13879 + C13878) * C3468 -
            ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
            (C13881 + C13880) * C31412) *
               C19145 +
           ((C13882 + C13883) * C3468 -
            ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
            (C13884 + C13885) * C31412) *
               C19146) *
              C31265 * C31308 * C31647 +
          (((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
            (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
               C19145 +
           ((C13886 + C13887) * C3467 + (C13888 + C13889) * C3465 -
            (C13890 + C13891) * C3468 - (C13892 + C13893) * C31412) *
               C19146) *
              C31265 * C31308 * C31634 +
          (((C14175 + C14174) * C3468 -
            ((C13501 + C13500) * C3465 + (C13499 + C13498) * C3467) +
            (C14177 + C14176) * C31412) *
               C19145 +
           ((C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C3468 -
            ((C14176 + C14177) * C3465 + (C14174 + C14175) * C3467) +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31412) *
               C19146) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3757 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31656 -
            (C25048 + C25049) * C3758 - (C25050 + C25051) * C31653 +
            (C25052 + C25053) * C3759 + (C25054 + C25055) * C31644 -
            (C26788 + C26789) * C3760 - (C26790 + C26791) * C31627) *
               C19145 +
           ((C25049 + C25048) * C3757 + (C25051 + C25050) * C31656 -
            (C25053 + C25052) * C3758 - (C25055 + C25054) * C31653 +
            (C26789 + C26788) * C3759 + (C26791 + C26790) * C31644 -
            (C26793 + C26792) * C3760 - (C26795 + C26794) * C31627) *
               C19146) *
              C31265 * C31308 * C2799 +
          (((C13879 + C13878) * C3758 -
            ((C13493 + C13492) * C31656 + (C13491 + C13490) * C3757) +
            (C13881 + C13880) * C31653 - (C13883 + C13882) * C3759 -
            (C13885 + C13884) * C31644 + (C15967 + C15966) * C3760 +
            (C15969 + C15968) * C31627) *
               C19145 +
           ((C13882 + C13883) * C3758 -
            ((C13880 + C13881) * C31656 + (C13878 + C13879) * C3757) +
            (C13884 + C13885) * C31653 - (C15966 + C15967) * C3759 -
            (C15968 + C15969) * C31644 +
            (C13455 * C2150 + C13451 * C2159 + C13456 * C10911 +
             C13452 * C10912) *
                C3760 +
            (C13455 * C2160 + C13451 * C2168 + C13456 * C10913 +
             C13452 * C10914) *
                C31627) *
               C19146) *
              C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C30318 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31408 -
            (C25048 + C25049) * C30310 - (C25050 + C25051) * C31415 +
            (C25052 + C25053) * C30324 + (C25054 + C25055) * C4043) *
               C19145 +
           ((C25049 + C25048) * C30318 + (C25051 + C25050) * C31408 -
            (C25053 + C25052) * C30310 - (C25055 + C25054) * C31415 +
            (C26789 + C26788) * C30324 + (C26791 + C26790) * C4043) *
               C19146) *
              C31265 * C31308 * C31286 +
          (((C13879 + C13878) * C30310 -
            ((C13493 + C13492) * C31408 + (C13491 + C13490) * C30318) +
            (C13881 + C13880) * C31415 - (C13883 + C13882) * C30324 -
            (C13885 + C13884) * C4043) *
               C19145 +
           ((C13882 + C13883) * C30310 -
            ((C13880 + C13881) * C31408 + (C13878 + C13879) * C30318) +
            (C13884 + C13885) * C31415 - (C15966 + C15967) * C30324 -
            (C15968 + C15969) * C4043) *
               C19146) *
              C31265 * C31308 * C31294 +
          (((C13497 + C13496) * C30318 + (C13495 + C13494) * C31408 -
            (C13887 + C13886) * C30310 - (C13889 + C13888) * C31415 +
            (C13891 + C13890) * C30324 + (C13893 + C13892) * C4043) *
               C19145 +
           ((C13886 + C13887) * C30318 + (C13888 + C13889) * C31408 -
            (C13890 + C13891) * C30310 - (C13892 + C13893) * C31415 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C30324 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C4043) *
               C19146) *
              C31265 * C31308 * C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C3467 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C3465 -
            (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
            (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31308 * C31654 +
          (((C13879 + C13878) * C3468 -
            ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
            (C13881 + C13880) * C31412) *
               C19145 +
           ((C13882 + C13883) * C3468 -
            ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
            (C13884 + C13885) * C31412) *
               C19146) *
              C31265 * C31308 * C31647 +
          (((C13497 + C13496) * C3467 + (C13495 + C13494) * C3465 -
            (C13887 + C13886) * C3468 - (C13889 + C13888) * C31412) *
               C19145 +
           ((C13886 + C13887) * C3467 + (C13888 + C13889) * C3465 -
            (C13890 + C13891) * C3468 - (C13892 + C13893) * C31412) *
               C19146) *
              C31265 * C31308 * C31634 +
          (((C14175 + C14174) * C3468 -
            ((C13501 + C13500) * C3465 + (C13499 + C13498) * C3467) +
            (C14177 + C14176) * C31412) *
               C19145 +
           ((C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C3468 -
            ((C14176 + C14177) * C3465 + (C14174 + C14175) * C3467) +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31412) *
               C19146) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C3467 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C3465 -
             (C25048 + C25049) * C3468 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C3467 + (C25051 + C25050) * C3465 -
             (C25053 + C25052) * C3468 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31648 +
           (((C25518 + C25519) * C3468 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C3465 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C3467) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C3468 -
             ((C25521 + C25520) * C3465 + (C25519 + C25518) * C3467) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C3467 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C3465 -
             (C25924 + C25925) * C3468 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C3467 + (C25927 + C25926) * C3465 -
             (C25929 + C25928) * C3468 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C31611) *
              C2799 +
          ((((C13879 + C13878) * C3468 -
             ((C13493 + C13492) * C3465 + (C13491 + C13490) * C3467) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C3468 -
             ((C13880 + C13881) * C3465 + (C13878 + C13879) * C3467) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31648 +
           (((C13687 + C13686) * C3467 + (C13685 + C13684) * C3465 -
             (C14389 + C14388) * C3468 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C3467 + (C14390 + C14391) * C3465 -
             (C15824 + C15825) * C3468 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31636 +
           (((C15115 + C15114) * C3468 -
             ((C13691 + C13690) * C3465 + (C13689 + C13688) * C3467) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C3468 -
             ((C15116 + C15117) * C3465 + (C15114 + C15115) * C3467) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C31580 -
           (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
              C13451 * C1028) *
                 C31325 +
             (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
              C13451 * C1018) *
                 C114) *
                C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31370) *
              C713 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31370 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31580) *
              C714 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31580 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31370) *
              C715 +
          ((((C14035 + C14034) * C114 + (C14033 + C14032) * C31325) * C19145 +
            ((C13455 * C1016 + C13451 * C1024 + C13456 * C1691 +
              C13452 * C1692) *
                 C114 +
             (C13455 * C1025 + C13451 * C1031 + C13456 * C1693 +
              C13452 * C1694) *
                 C31325) *
                C19146) *
               C31265 * C31370 -
           (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
            ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
               C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1519 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1520 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C25925 + C25924) * C114 + (C25927 + C25926) * C31325) * C19146) *
               C31265 * C1521 -
           (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
              C13451 * C1822) *
                 C31325 +
             (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
              C13451 * C1816) *
                 C114) *
                C19146 +
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31325 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C114) *
                C19145) *
               C31265 * C31621) *
              C31566 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1520 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1519 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C1521 +
           (((C14911 + C14910) * C114 + (C14909 + C14908) * C31325) * C19145 +
            ((C13455 * C1814 + C13451 * C1818 + C13456 * C6154 +
              C13452 * C6155) *
                 C114 +
             (C13455 * C1819 + C13451 * C1823 + C13456 * C6156 +
              C13452 * C6157) *
                 C31325) *
                C19146) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C13455 * C1385 + C13451 * C1394 + C13456 * C1389 +
              C13452 * C1402) *
                 C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C13455 * C1395 + C13451 * C1412 + C13456 * C1403 +
              C13452 * C1416) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C302 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C31370) *
              C303 +
          ((((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
             (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
                C19145 +
            ((C13886 + C13887) * C831 + (C13888 + C13889) * C31581 -
             (C13890 + C13891) * C832 - (C13892 + C13893) * C31412) *
                C19146) *
               C31265 * C31580 +
           (((C14393 + C14392) * C832 -
             ((C13695 + C13694) * C31581 + (C13693 + C13692) * C831) +
             (C14395 + C14394) * C31412) *
                C19145 +
            ((C13455 * C1387 + C13451 * C1398 + C13456 * C1393 +
              C13452 * C1410) *
                 C832 -
             ((C14394 + C14395) * C31581 + (C14392 + C14393) * C831) +
             (C13455 * C1399 + C13451 * C1414 + C13456 * C1411 +
              C13452 * C1420) *
                 C31412) *
                C19146) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
            (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C1519 +
          (((C25518 + C25519) * C832 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31581 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C831) +
            (C25520 + C25521) * C31412) *
               C19145 +
           ((C25921 + C25920) * C832 -
            ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
            (C25923 + C25922) * C31412) *
               C19146) *
              C31265 * C1520 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C831 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31581 -
            (C25924 + C25925) * C832 - (C25926 + C25927) * C31412) *
               C19145 +
           ((C25925 + C25924) * C831 + (C25927 + C25926) * C31581 -
            (C25929 + C25928) * C832 - (C25931 + C25930) * C31412) *
               C19146) *
              C31265 * C1521 +
          (((C26394 + C26395) * C832 -
            ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
              C13451 * C1271) *
                 C31581 +
             (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
              C13451 * C1262) *
                 C831) +
            (C26396 + C26397) * C31412) *
               C19145 +
           ((C13455 * C5894 + C13451 * C5897 + C13456 * C5896 +
             C13452 * C5901) *
                C832 -
            ((C26397 + C26396) * C31581 + (C26395 + C26394) * C831) +
            (C13455 * C5898 + C13451 * C5903 + C13456 * C5902 +
             C13452 * C5905) *
                C31412) *
               C19146) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                 C114 +
             (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                 C31325) *
                C19146) *
               C31265 * C31648 -
           (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
              C13451 * C1028) *
                 C31325 +
             (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
              C13451 * C1018) *
                 C114) *
                C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31636 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31648 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31648 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                C114 +
            (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                C31325) *
               C19146) *
              C31265 * C31308 * C108 -
          (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
              C31265 * C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
           ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
              C31265 * C31308 * C110 -
          (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
              C31265 * C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C19145 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C114 +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31325) *
               C19146) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C25048 + C25049) * C511 - (C25050 + C25051) * C31638 +
            (C25052 + C25053) * C512 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C510 + (C25051 + C25050) * C31649 -
            (C25053 + C25052) * C511 - (C25055 + C25054) * C31638 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C512 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C31308 * C302 +
          (((C13879 + C13878) * C511 -
            ((C13493 + C13492) * C31649 + (C13491 + C13490) * C510) +
            (C13881 + C13880) * C31638 - (C13883 + C13882) * C512 -
            (C13885 + C13884) * C31614) *
               C19145 +
           ((C13882 + C13883) * C511 -
            ((C13880 + C13881) * C31649 + (C13878 + C13879) * C510) +
            (C13884 + C13885) * C31638 - (C15966 + C15967) * C512 -
            (C15968 + C15969) * C31614) *
               C19146) *
              C31265 * C31308 * C303 +
          (((C13497 + C13496) * C510 + (C13495 + C13494) * C31649 -
            (C13887 + C13886) * C511 - (C13889 + C13888) * C31638 +
            (C13891 + C13890) * C512 + (C13893 + C13892) * C31614) *
               C19145 +
           ((C13886 + C13887) * C510 + (C13888 + C13889) * C31649 -
            (C13890 + C13891) * C511 - (C13892 + C13893) * C31638 +
            (C13455 * C2151 + C13451 * C2161 + C13456 * C2583 +
             C13452 * C2588) *
                C512 +
            (C13455 * C2162 + C13451 * C2169 + C13456 * C2589 +
             C13452 * C2592) *
                C31614) *
               C19146) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1177 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1178 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1177 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C1177 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
              C31265 * C1245 -
          (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C19145) *
              C31265 * C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C19145 +
           ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
             C13452 * C1816) *
                C114 +
            (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
             C13452 * C1822) *
                C31325) *
               C19146) *
              C31265 * C1247 -
          (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
             C13451 * C1822) *
                C31325 +
            (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
             C13451 * C1816) *
                C114) *
               C19146 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C19145) *
              C31265 * C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C19145 +
           ((C13455 * C5895 + C13451 * C5899 + C13456 * C6256 +
             C13452 * C6257) *
                C114 +
            (C13455 * C5900 + C13451 * C5904 + C13456 * C6258 +
             C13452 * C6259) *
                C31325) *
               C19146) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C510 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31649 -
            (C25048 + C25049) * C511 - (C25050 + C25051) * C31638 +
            (C25052 + C25053) * C512 + (C25054 + C25055) * C31614) *
               C19145 +
           ((C25049 + C25048) * C510 + (C25051 + C25050) * C31649 -
            (C25053 + C25052) * C511 - (C25055 + C25054) * C31638 +
            (C13455 * C2147 + C13451 * C2153 + C13456 * C2581 +
             C13452 * C2584) *
                C512 +
            (C13455 * C2154 + C13451 * C2165 + C13456 * C2585 +
             C13452 * C2590) *
                C31614) *
               C19146) *
              C31265 * C1177 +
          (((C25518 + C25519) * C511 -
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31649 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C510) +
            (C25520 + C25521) * C31638 - (C25920 + C25921) * C512 -
            (C25922 + C25923) * C31614) *
               C19145 +
           ((C25921 + C25920) * C511 -
            ((C25521 + C25520) * C31649 + (C25519 + C25518) * C510) +
            (C25923 + C25922) * C31638 -
            (C13456 * C6542 + C13452 * C6545 + C13455 * C2581 +
             C13451 * C2584) *
                C512 -
            (C13456 * C6546 + C13452 * C6551 + C13455 * C2585 +
             C13451 * C2590) *
                C31614) *
               C19146) *
              C31265 * C1178 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C510 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31649 -
            (C25924 + C25925) * C511 - (C25926 + C25927) * C31638 +
            (C25928 + C25929) * C512 + (C25930 + C25931) * C31614) *
               C19145 +
           ((C25925 + C25924) * C510 + (C25927 + C25926) * C31649 -
            (C25929 + C25928) * C511 - (C25931 + C25930) * C31638 +
            (C13455 * C6542 + C13451 * C6545 + C13456 * C6904 +
             C13452 * C6905) *
                C512 +
            (C13455 * C6546 + C13451 * C6551 + C13456 * C6906 +
             C13452 * C6907) *
                C31614) *
               C19146) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C831 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31581 -
            (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
               C19145 +
           ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
            (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
               C19146) *
              C31265 * C31308 * C713 +
          (((C13879 + C13878) * C832 -
            ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
            (C13881 + C13880) * C31412) *
               C19145 +
           ((C13882 + C13883) * C832 -
            ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
            (C13884 + C13885) * C31412) *
               C19146) *
              C31265 * C31308 * C714 +
          (((C13497 + C13496) * C831 + (C13495 + C13494) * C31581 -
            (C13887 + C13886) * C832 - (C13889 + C13888) * C31412) *
               C19145 +
           ((C13886 + C13887) * C831 + (C13888 + C13889) * C31581 -
            (C13890 + C13891) * C832 - (C13892 + C13893) * C31412) *
               C19146) *
              C31265 * C31308 * C715 +
          (((C14175 + C14174) * C832 -
            ((C13501 + C13500) * C31581 + (C13499 + C13498) * C831) +
            (C14177 + C14176) * C31412) *
               C19145 +
           ((C13455 * C520 + C13451 * C537 + C13456 * C2317 + C13452 * C2318) *
                C832 -
            ((C14176 + C14177) * C31581 + (C14174 + C14175) * C831) +
            (C13455 * C538 + C13451 * C550 + C13456 * C2319 + C13452 * C2320) *
                C31412) *
               C19146) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C831 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31581 -
             (C25048 + C25049) * C832 - (C25050 + C25051) * C31412) *
                C19145 +
            ((C25049 + C25048) * C831 + (C25051 + C25050) * C31581 -
             (C25053 + C25052) * C832 - (C25055 + C25054) * C31412) *
                C19146) *
               C31265 * C1177 +
           (((C25518 + C25519) * C832 -
             ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                  C31581 +
              (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                  C831) +
             (C25520 + C25521) * C31412) *
                C19145 +
            ((C25921 + C25920) * C832 -
             ((C25521 + C25520) * C31581 + (C25519 + C25518) * C831) +
             (C25923 + C25922) * C31412) *
                C19146) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C831 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31581 -
             (C25924 + C25925) * C832 - (C25926 + C25927) * C31412) *
                C19145 +
            ((C25925 + C25924) * C831 + (C25927 + C25926) * C31581 -
             (C25929 + C25928) * C832 - (C25931 + C25930) * C31412) *
                C19146) *
               C31265 * C31611) *
              C31566 +
          ((((C13879 + C13878) * C832 -
             ((C13493 + C13492) * C31581 + (C13491 + C13490) * C831) +
             (C13881 + C13880) * C31412) *
                C19145 +
            ((C13882 + C13883) * C832 -
             ((C13880 + C13881) * C31581 + (C13878 + C13879) * C831) +
             (C13884 + C13885) * C31412) *
                C19146) *
               C31265 * C1177 +
           (((C13687 + C13686) * C831 + (C13685 + C13684) * C31581 -
             (C14389 + C14388) * C832 - (C14391 + C14390) * C31412) *
                C19145 +
            ((C14388 + C14389) * C831 + (C14390 + C14391) * C31581 -
             (C15824 + C15825) * C832 - (C15826 + C15827) * C31412) *
                C19146) *
               C31265 * C1178 +
           (((C15115 + C15114) * C832 -
             ((C13691 + C13690) * C31581 + (C13689 + C13688) * C831) +
             (C15117 + C15116) * C31412) *
                C19145 +
            ((C13455 * C1391 + C13451 * C1406 + C13456 * C6700 +
              C13452 * C6701) *
                 C832 -
             ((C15116 + C15117) * C31581 + (C15114 + C15115) * C831) +
             (C13455 * C1407 + C13451 * C1418 + C13456 * C6702 +
              C13452 * C6703) *
                 C31412) *
                C19146) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                C114 +
            (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                C31325) *
               C19146) *
              C31265 * C31308 * C108 -
          (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
           ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
              C31265 * C31308 * C109 +
          (((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
           ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
              C31265 * C31308 * C110 -
          (((C14176 + C14177) * C31325 + (C14174 + C14175) * C114) * C19146 +
           ((C13501 + C13500) * C31325 + (C13499 + C13498) * C114) * C19145) *
              C31265 * C31308 * C111 +
          (((C13505 + C13504) * C114 + (C13503 + C13502) * C31325) * C19145 +
           ((C13455 * C521 + C13451 * C539 + C13456 * C1017 + C13452 * C1026) *
                C114 +
            (C13455 * C540 + C13451 * C551 + C13456 * C1027 + C13452 * C1032) *
                C31325) *
               C19146) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C13455 * C513 + C13451 * C523 + C13456 * C1013 + C13452 * C1018) *
                 C114 +
             (C13455 * C524 + C13451 * C543 + C13456 * C1019 + C13452 * C1028) *
                 C31325) *
                C19146) *
               C31265 * C31648 -
           (((C13456 * C1401 + C13452 * C1415 + C13455 * C1019 +
              C13451 * C1028) *
                 C31325 +
             (C13456 * C1388 + C13452 * C1400 + C13455 * C1013 +
              C13451 * C1018) *
                 C114) *
                C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C31636 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C302 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C31636 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C31648 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C303 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C31648 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C31636 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                 C114 +
             (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                 C31325) *
                C19145 +
            ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
               C31265 * C1177 -
           (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
            ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                 C31325 +
             (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                 C114) *
                C19145) *
               C31265 * C1178 +
           (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                 C114 +
             (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                 C31325) *
                C19145 +
            ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
              C13452 * C1816) *
                 C114 +
             (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
              C13452 * C1822) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31645 +
          ((((C13687 + C13686) * C114 + (C13685 + C13684) * C31325) * C19145 +
            ((C14388 + C14389) * C114 + (C14390 + C14391) * C31325) * C19146) *
               C31265 * C1178 -
           (((C13880 + C13881) * C31325 + (C13878 + C13879) * C114) * C19146 +
            ((C13493 + C13492) * C31325 + (C13491 + C13490) * C114) * C19145) *
               C31265 * C1177 -
           (((C15116 + C15117) * C31325 + (C15114 + C15115) * C114) * C19146 +
            ((C13691 + C13690) * C31325 + (C13689 + C13688) * C114) * C19145) *
               C31265 * C31611) *
              C31632 +
          ((((C13497 + C13496) * C114 + (C13495 + C13494) * C31325) * C19145 +
            ((C13886 + C13887) * C114 + (C13888 + C13889) * C31325) * C19146) *
               C31265 * C1177 -
           (((C14394 + C14395) * C31325 + (C14392 + C14393) * C114) * C19146 +
            ((C13695 + C13694) * C31325 + (C13693 + C13692) * C114) * C19145) *
               C31265 * C1178 +
           (((C13699 + C13698) * C114 + (C13697 + C13696) * C31325) * C19145 +
            ((C13455 * C1392 + C13451 * C1408 + C13456 * C1815 +
              C13452 * C1820) *
                 C114 +
             (C13455 * C1409 + C13451 * C1419 + C13456 * C1821 +
              C13452 * C1824) *
                 C31325) *
                C19146) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13455 * C115 + C13451 * C122 + C13456 * C307 + C13452 * C320) *
                C114 +
            (C13455 * C123 + C13451 * C136 + C13456 * C319 + C13452 * C337) *
                C31325) *
               C19145 +
           ((C25049 + C25048) * C114 + (C25051 + C25050) * C31325) * C19146) *
              C31265 * C1245 -
          (((C25521 + C25520) * C31325 + (C25519 + C25518) * C114) * C19146 +
           ((C13456 * C322 + C13452 * C338 + C13455 * C319 + C13451 * C337) *
                C31325 +
            (C13456 * C308 + C13452 * C321 + C13455 * C307 + C13451 * C320) *
                C114) *
               C19145) *
              C31265 * C1246 +
          (((C13455 * C308 + C13451 * C321 + C13456 * C1253 + C13452 * C1262) *
                C114 +
            (C13455 * C322 + C13451 * C338 + C13456 * C1261 + C13452 * C1271) *
                C31325) *
               C19145 +
           ((C13455 * C1388 + C13451 * C1400 + C13456 * C1813 +
             C13452 * C1816) *
                C114 +
            (C13455 * C1401 + C13451 * C1415 + C13456 * C1817 +
             C13452 * C1822) *
                C31325) *
               C19146) *
              C31265 * C1247 -
          (((C13456 * C5900 + C13452 * C5904 + C13455 * C1817 +
             C13451 * C1822) *
                C31325 +
            (C13456 * C5895 + C13452 * C5899 + C13455 * C1813 +
             C13451 * C1816) *
                C114) *
               C19146 +
           ((C13456 * C1264 + C13452 * C1272 + C13455 * C1261 +
             C13451 * C1271) *
                C31325 +
            (C13456 * C1254 + C13452 * C1263 + C13455 * C1253 +
             C13451 * C1262) *
                C114) *
               C19145) *
              C31265 * C1248 +
          (((C13455 * C1254 + C13451 * C1263 + C13456 * C5776 +
             C13452 * C5779) *
                C114 +
            (C13455 * C1264 + C13451 * C1272 + C13456 * C5778 +
             C13452 * C5782) *
                C31325) *
               C19145 +
           ((C13455 * C5895 + C13451 * C5899 + C13456 * C6256 +
             C13452 * C6257) *
                C114 +
            (C13455 * C5900 + C13451 * C5904 + C13456 * C6258 +
             C13452 * C6259) *
                C31325) *
               C19146) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C3071) *
              C31286 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31373 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C3071) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31373 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C3071) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31366 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C3071) *
              C31286 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31373 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31366 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C3071) *
              C31294 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31366 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31373 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C3071) *
              C3074)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C31366 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31373 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            (C10098 * C114 + C10099 * C31325) * C9203 +
            (C10100 * C114 + C10101 * C31325) * C9204) *
               C31265 * C3071) *
              C31286 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31373 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31366 -
           ((C10353 * C31325 + C10352 * C114) * C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C3071) *
              C31294 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31366 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31373 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C3071) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C3071) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C31366 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 -
             (C113 * C1388 + C31490 * C1400) * C832 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
            (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
               C3071) *
              C2799 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C31366 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31373 +
           ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
            (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C832 -
             (C380 * C31581 + C381 * C831) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C31366 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            (C10096 * C832 - (C9797 * C31581 + C9796 * C831) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31373 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C831 + C10101 * C31581 - C10102 * C832 -
             C10103 * C31412) *
                C9204) *
               C31265 * C3071) *
              C2799 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C31366 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 - C10920 * C832 - C10921 * C31412) *
                C9204) *
               C31265 * C31373 +
           ((C1712 - (C1697 + C1696) + C1713) * C9202 +
            (C10352 * C832 - (C1709 * C31581 + C1708 * C831) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C832 -
             (C10353 * C31581 + C10352 * C831) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C2691 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31370) *
                  C31654 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                C727 * C106) *
                   C31370 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C2691) *
                  C31647 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C2691 -
               ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
                C396 * C104) *
                   C31370) *
                  C31634 +
              ((C727 * C104 + (C731 + C730) * C31504 * C105 +
                ((C113 * C717 + C31490 * C718) * C114 +
                 (C113 * C719 + C31490 * C720) * C31325) *
                    C31504 * C106) *
                   C31370 -
               ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
                C188 * C104) *
                   C2691) *
                  C31615) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C31655 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31651 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C31641 -
               ((C1542 + C1543) * C31504 * C106 +
                (C1544 + C1545) * C31504 * C105 +
                ((C113 * C1261 + C31490 * C1271) * C31325 +
                 (C113 * C1253 + C31490 * C1262) * C114) *
                    C31504 * C104) *
                   C31621) *
                  C2799 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                C727 * C106) *
                   C31651 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C31655 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C31641 +
               ((C1545 + C1544) * C31504 * C104 +
                (C1543 + C1542) * C31504 * C105 +
                ((C113 * C1525 + C31490 * C1526) * C114 +
                 (C113 * C1527 + C31490 * C1528) * C31325) *
                    C31504 * C106) *
                   C31621) *
                  C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 -
             (C113 * C513 + C31490 * C523) * C511 -
             (C113 * C524 + C31490 * C543) * C31638 +
             (C113 * C514 + C31490 * C525) * C512 +
             (C113 * C526 + C31490 * C544) * C31614) *
                C31504 * C104 +
            (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
            C613 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C511 -
             ((C113 * C319 + C31490 * C337) * C31649 +
              (C113 * C307 + C31490 * C320) * C510) +
             (C113 * C1019 + C31490 * C1028) * C31638 -
             (C113 * C1385 + C31490 * C1394) * C512 -
             (C113 * C1395 + C31490 * C1412) * C31614) *
                C31504 * C104 +
            (C2948 - (C2949 + C2950) + C2951 - C2952 - C2953) * C31504 * C105 +
            (C2954 - (C2955 + C2956) + C2957 - C2958 - C2959) * C31504 * C106) *
               C31370) *
              C2799 +
          (((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
            (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
            (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
               C2691 +
           ((C2950 + C2949 - C2948 - C2951 + C2952 + C2953) * C31504 * C104 +
            (C2956 + C2955 - C2954 - C2957 + C2958 + C2959) * C31504 * C105 +
            (C378 * C510 + C379 * C31649 - C1057 * C511 - C1058 * C31638 +
             (C113 * C2317 + C31490 * C2318) * C512 +
             (C113 * C2319 + C31490 * C2320) * C31614) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C31654 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C2691) *
              C31647 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C31634 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31651 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31641 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C2799 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31651 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31641 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C510 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31649 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C511 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31638 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C512 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C31614) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C511 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31649 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C510) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31638 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C512 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C31614) *
               C31504 * C31265 * C31370) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C511 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31649 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C510) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31638 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C512 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C31614) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C510 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31649 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C511 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31638 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C512 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C2691 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31370) *
              C31654 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31370 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C2691) *
              C31647 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C2691 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31370) *
              C31634 +
          ((C722 * C9202 + (C1057 * C114 + C1058 * C31325) * C9203 +
            ((C113 * C2317 + C31490 * C2318) * C114 +
             (C113 * C2319 + C31490 * C2320) * C31325) *
                C9204) *
               C31265 * C31370 -
           ((C596 * C31325 + C595 * C114) * C9204 +
            (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
               C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C31655 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31651 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            (C10098 * C114 + C10099 * C31325) * C9203 +
            (C10100 * C114 + C10101 * C31325) * C9204) *
               C31265 * C31641 -
           ((C10463 * C31325 + C10462 * C114) * C9204 +
            (C10461 * C31325 + C10460 * C114) * C9203 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C9202) *
               C31265 * C31621) *
              C2799 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31651 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31655 -
           ((C10353 * C31325 + C10352 * C114) * C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31641 +
           ((C1545 + C1544) * C9202 +
            ((C113 * C1814 + C31490 * C1818) * C114 +
             (C113 * C1819 + C31490 * C1823) * C31325) *
                C9203 +
            ((C113 * C6700 + C31490 * C6701) * C114 +
             (C113 * C6702 + C31490 * C6703) * C31325) *
                C9204) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
             C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                C9202 +
            (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
             C9442 * C512 + C9443 * C31614) *
                C9203 +
            (C9440 * C510 + C9441 * C31649 - C9442 * C511 - C9443 * C31638 +
             C10762 * C512 + C10763 * C31614) *
                C9204) *
               C31265 * C2691 +
           ((C9794 * C511 -
             ((C113 * C319 + C31490 * C337) * C31649 +
              (C113 * C307 + C31490 * C320) * C510) +
             C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
                C9202 +
            (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
             C10096 * C512 - C10097 * C31614) *
                C9203 +
            (C10096 * C511 - (C9797 * C31649 + C9796 * C510) + C10097 * C31638 -
             C11136 * C512 - C11137 * C31614) *
                C9204) *
               C31265 * C31370) *
              C2799 +
          (((C597 - (C555 + C554) + C598 - C599 - C600) * C9202 +
            (C586 * C511 - (C585 * C31649 + C584 * C510) + C587 * C31638 -
             C2476 * C512 - C2477 * C31614) *
                C9203 +
            (C2476 * C511 - (C587 * C31649 + C586 * C510) + C2477 * C31638 -
             C11028 * C512 - C11029 * C31614) *
                C9204) *
               C31265 * C2691 +
           ((C2950 + C2949 - C2948 - C2951 + C2952 + C2953) * C9202 +
            (C1052 * C510 + C1053 * C31649 - C2338 * C511 - C2339 * C31638 +
             C10920 * C512 + C10921 * C31614) *
                C9203 +
            (C2338 * C510 + C2339 * C31649 - C10920 * C511 - C10921 * C31638 +
             (C113 * C10911 + C31490 * C10912) * C512 +
             (C113 * C10913 + C31490 * C10914) * C31614) *
                C9204) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31286 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31370) *
              C31286 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C2691 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31370) *
              C31294 +
          ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
            (C850 + C851 - C862 - C863) * C31504 * C106) *
               C2691 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C832 -
             (C728 * C31581 + C729 * C831) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            (C10096 * C832 - (C9797 * C31581 + C9796 * C831) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31286 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 - C10920 * C832 - C10921 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31294 +
          ((C864 * C9202 +
            (C589 * C831 + C590 * C31581 - C591 * C832 - C592 * C31412) *
                C9203 +
            (C591 * C831 + C592 * C31581 - C2478 * C832 - C2479 * C31412) *
                C9204) *
               C31265 * C2691 +
           (C1066 * C9202 +
            (C2340 * C832 - (C1056 * C31581 + C1054 * C831) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C832 -
             (C2341 * C31581 + C2340 * C831) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31655 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31651 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31641 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C2799 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31651 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31655 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31641 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C2691 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C31654 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C2691) *
              C31647 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C2691 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C31634 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C31654 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C2691) *
              C31647 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C31634 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31651 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31641 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C2799 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31651 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31641 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C2691 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31370) *
              C31654 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31370 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C2691) *
              C31647 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C2691 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31370) *
              C31634 +
          ((C722 * C9202 + (C1057 * C114 + C1058 * C31325) * C9203 +
            ((C113 * C2317 + C31490 * C2318) * C114 +
             (C113 * C2319 + C31490 * C2320) * C31325) *
                C9204) *
               C31265 * C31370 -
           ((C596 * C31325 + C595 * C114) * C9204 +
            (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
               C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C31655 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31651 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            (C10098 * C114 + C10099 * C31325) * C9203 +
            (C10100 * C114 + C10101 * C31325) * C9204) *
               C31265 * C31641 -
           ((C10463 * C31325 + C10462 * C114) * C9204 +
            (C10461 * C31325 + C10460 * C114) * C9203 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C9202) *
               C31265 * C31621) *
              C2799 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31651 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31655 -
           ((C10353 * C31325 + C10352 * C114) * C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31641 +
           ((C1545 + C1544) * C9202 +
            ((C113 * C1814 + C31490 * C1818) * C114 +
             (C113 * C1819 + C31490 * C1823) * C31325) *
                C9203 +
            ((C113 * C6700 + C31490 * C6701) * C114 +
             (C113 * C6702 + C31490 * C6703) * C31325) *
                C9204) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31366 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 -
             (C113 * C1388 + C31490 * C1400) * C3468 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
            (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
               C3071) *
              C31566 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31366 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31373 +
           ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
            (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C3468 -
             (C380 * C3465 + C381 * C3467) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C31366 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31373 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C3467 + C10101 * C3465 - C10102 * C3468 -
             C10103 * C31412) *
                C9204) *
               C31265 * C3071) *
              C31566 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C31366 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31373 +
           ((C3650 - (C3649 + C3648) + C3651) * C9202 +
            (C10352 * C3468 - (C1709 * C3465 + C1708 * C3467) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C3468 -
             (C10353 * C3465 + C10352 * C3467) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C30318 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31408 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C30310 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31415 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C30324 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C4043) *
              C31504 * C31265 * C31366 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C30310 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31408 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C30318) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31415 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C30324 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C4043) *
              C31504 * C31265 * C31373 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C30318 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31408 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C30310 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31415 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C30324 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C4043) *
              C31504 * C31265 * C3071) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 -
            (C113 * C513 + C31490 * C523) * C30310 -
            (C113 * C524 + C31490 * C543) * C31415 +
            (C113 * C514 + C31490 * C525) * C30324 +
            (C113 * C526 + C31490 * C544) * C4043) *
               C31504 * C104 +
           (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
           C4071 * C106) *
              C31366 +
          (((C113 * C1013 + C31490 * C1018) * C30310 -
            ((C113 * C319 + C31490 * C337) * C31408 +
             (C113 * C307 + C31490 * C320) * C30318) +
            (C113 * C1019 + C31490 * C1028) * C31415 -
            (C113 * C1385 + C31490 * C1394) * C30324 -
            (C113 * C1395 + C31490 * C1412) * C4043) *
               C31504 * C104 +
           (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
           (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
              C31373 +
          (((C113 * C308 + C31490 * C321) * C30318 +
            (C113 * C322 + C31490 * C338) * C31408 -
            (C113 * C1388 + C31490 * C1400) * C30310 -
            (C113 * C1401 + C31490 * C1415) * C31415 +
            (C113 * C1389 + C31490 * C1402) * C30324 +
            (C113 * C1403 + C31490 * C1416) * C4043) *
               C31504 * C104 +
           (C374 * C30318 + C375 * C31408 - C1708 * C30310 - C1709 * C31415 +
            (C113 * C1391 + C31490 * C1406) * C30324 +
            (C113 * C1407 + C31490 * C1418) * C4043) *
               C31504 * C105 +
           (C376 * C30318 + C377 * C31408 - C1710 * C30310 - C1711 * C31415 +
            (C113 * C1393 + C31490 * C1410) * C30324 +
            (C113 * C1411 + C31490 * C1420) * C4043) *
               C31504 * C106) *
              C3071) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
            C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
               C9202 +
           (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
            C9442 * C30324 + C9443 * C4043) *
               C9203 +
           (C9440 * C30318 + C9441 * C31408 - C9442 * C30310 - C9443 * C31415 +
            C10762 * C30324 + C10763 * C4043) *
               C9204) *
              C31265 * C31366 +
          ((C9794 * C30310 -
            ((C113 * C319 + C31490 * C337) * C31408 +
             (C113 * C307 + C31490 * C320) * C30318) +
            C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
               C9202 +
           (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
            C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
               C9203 +
           (C10096 * C30310 - (C9797 * C31408 + C9796 * C30318) +
            C10097 * C31415 - C11136 * C30324 - C11137 * C4043) *
               C9204) *
              C31265 * C31373 +
          (((C113 * C308 + C31490 * C321) * C30318 +
            (C113 * C322 + C31490 * C338) * C31408 - C10098 * C30310 -
            C10099 * C31415 + C10100 * C30324 + C10101 * C4043) *
               C9202 +
           (C10098 * C30318 + C10099 * C31408 - C10100 * C30310 -
            C10101 * C31415 + C10102 * C30324 + C10103 * C4043) *
               C9203 +
           (C10100 * C30318 + C10101 * C31408 - C10102 * C30310 -
            C10103 * C31415 + (C113 * C6544 + C31490 * C6548) * C30324 +
            (C113 * C6550 + C31490 * C6553) * C4043) *
               C9204) *
              C31265 * C3071) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C3467 +
                 (C113 * C123 + C31490 * C136) * C3465 -
                 (C113 * C513 + C31490 * C523) * C3468 -
                 (C113 * C524 + C31490 * C543) * C31412) *
                    C31504 * C104 +
                (C3470 + C3471 - C3472 - C3473) * C31504 * C105 +
                C3492 * C106) *
                   C2691 +
               (((C113 * C1013 + C31490 * C1018) * C3468 -
                 ((C113 * C319 + C31490 * C337) * C3465 +
                  (C113 * C307 + C31490 * C320) * C3467) +
                 (C113 * C1019 + C31490 * C1028) * C31412) *
                    C31504 * C104 +
                (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
                C3931 * C106) *
                   C31370) *
                  C31645 +
              (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
                (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 +
                C3493 * C106) *
                   C2691 +
               ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
                (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
                (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
                   C31370) *
                  C31632 +
              ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
                (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
                   C2691 +
               (C3931 * C104 +
                (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
                ((C113 * C1017 + C31490 * C1026) * C3468 -
                 (C728 * C3465 + C729 * C3467) +
                 (C113 * C1027 + C31490 * C1032) * C31412) *
                    C31504 * C106) *
                   C31370) *
                  C31605) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C3467 +
                (C113 * C123 + C31490 * C136) * C3465 -
                (C113 * C513 + C31490 * C523) * C3468 -
                (C113 * C524 + C31490 * C543) * C31412) *
                   C31504 * C104 +
               (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
                  C31655 +
              (((C113 * C1013 + C31490 * C1018) * C3468 -
                ((C113 * C319 + C31490 * C337) * C3465 +
                 (C113 * C307 + C31490 * C320) * C3467) +
                (C113 * C1019 + C31490 * C1028) * C31412) *
                   C31504 * C104 +
               (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
               C3931 * C106) *
                  C31651 +
              (((C113 * C308 + C31490 * C321) * C3467 +
                (C113 * C322 + C31490 * C338) * C3465 -
                (C113 * C1388 + C31490 * C1400) * C3468 -
                (C113 * C1401 + C31490 * C1415) * C31412) *
                   C31504 * C104 +
               (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
               (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
                  C31641 +
              (((C113 * C1813 + C31490 * C1816) * C3468 -
                ((C113 * C1261 + C31490 * C1271) * C3465 +
                 (C113 * C1253 + C31490 * C1262) * C3467) +
                (C113 * C1817 + C31490 * C1822) * C31412) *
                   C31504 * C104 +
               ((C113 * C1814 + C31490 * C1818) * C3468 -
                (C1540 * C3465 + C1541 * C3467) +
                (C113 * C1819 + C31490 * C1823) * C31412) *
                   C31504 * C105 +
               ((C113 * C1815 + C31490 * C1820) * C3468 -
                (C1538 * C3465 + C1539 * C3467) +
                (C113 * C1821 + C31490 * C1824) * C31412) *
                   C31504 * C106) *
                  C31621) *
             C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 -
            (C113 * C513 + C31490 * C523) * C3758 -
            (C113 * C524 + C31490 * C543) * C31653 +
            (C113 * C514 + C31490 * C525) * C3759 +
            (C113 * C526 + C31490 * C544) * C31644 -
            (C113 * C2147 + C31490 * C2153) * C3760 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
               C31504 * C105 +
           (C3770 + C3771 - C3772 - C3773 + C3774 + C3775 - C3776 - C3777) *
               C31504 * C106) *
              C2691 +
          (((C113 * C1013 + C31490 * C1018) * C3758 -
            ((C113 * C319 + C31490 * C337) * C31656 +
             (C113 * C307 + C31490 * C320) * C3757) +
            (C113 * C1019 + C31490 * C1028) * C31653 -
            (C113 * C1385 + C31490 * C1394) * C3759 -
            (C113 * C1395 + C31490 * C1412) * C31644 +
            (C113 * C2581 + C31490 * C2584) * C3760 +
            (C113 * C2585 + C31490 * C2590) * C31627) *
               C31504 * C104 +
           (C1052 * C3758 - (C372 * C31656 + C373 * C3757) + C1053 * C31653 -
            C2338 * C3759 - C2339 * C31644 +
            (C113 * C2582 + C31490 * C2586) * C3760 +
            (C113 * C2587 + C31490 * C2591) * C31627) *
               C31504 * C105 +
           (C1054 * C3758 - (C370 * C31656 + C371 * C3757) + C1056 * C31653 -
            C2340 * C3759 - C2341 * C31644 +
            (C113 * C2583 + C31490 * C2588) * C3760 +
            (C113 * C2589 + C31490 * C2592) * C31627) *
               C31504 * C106) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31645 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31655 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3468 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C3465 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3467) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C31651 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C3467 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C3465 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C3468 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C31641 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C3468 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C3465 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C3467) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3757 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31656 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3758 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31653 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C3759 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31644 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C3760 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C2691 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3758 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31656 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3757) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31653 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C3759 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31644 +
           (C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6545 +
            C5041 * C6904 + C5037 * C6905) *
               C3760 +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6546 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31627) *
              C31504 * C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31645 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31632 +
          ((C3490 * C9202 +
            (C589 * C3467 + C590 * C3465 - C591 * C3468 - C592 * C31412) *
                C9203 +
            (C591 * C3467 + C592 * C3465 - C2478 * C3468 - C2479 * C31412) *
                C9204) *
               C31265 * C2691 +
           (C3930 * C9202 +
            (C2340 * C3468 - (C1056 * C3465 + C1054 * C3467) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C3468 -
             (C2341 * C3465 + C2340 * C3467) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
               C9203 +
           (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
               C9204) *
              C31265 * C31655 +
          ((C9794 * C3468 -
            ((C113 * C319 + C31490 * C337) * C3465 +
             (C113 * C307 + C31490 * C320) * C3467) +
            C9795 * C31412) *
               C9202 +
           (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
               C9203 +
           (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
            C10097 * C31412) *
               C9204) *
              C31265 * C31651 +
          (((C113 * C308 + C31490 * C321) * C3467 +
            (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
            C10099 * C31412) *
               C9202 +
           (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
            C10101 * C31412) *
               C9203 +
           (C10100 * C3467 + C10101 * C3465 - C10102 * C3468 -
            C10103 * C31412) *
               C9204) *
              C31265 * C31641 +
          ((C10460 * C3468 -
            ((C113 * C1261 + C31490 * C1271) * C3465 +
             (C113 * C1253 + C31490 * C1262) * C3467) +
            C10461 * C31412) *
               C9202 +
           (C10462 * C3468 - (C10461 * C3465 + C10460 * C3467) +
            C10463 * C31412) *
               C9203 +
           ((C113 * C6904 + C31490 * C6905) * C3468 -
            (C10463 * C3465 + C10462 * C3467) +
            (C113 * C6906 + C31490 * C6907) * C31412) *
               C9204) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 - C9438 * C3758 -
            C9439 * C31653 + C9440 * C3759 + C9441 * C31644 - C9442 * C3760 -
            C9443 * C31627) *
               C9202 +
           (C9438 * C3757 + C9439 * C31656 - C9440 * C3758 - C9441 * C31653 +
            C9442 * C3759 + C9443 * C31644 - C10762 * C3760 - C10763 * C31627) *
               C9203 +
           (C9440 * C3757 + C9441 * C31656 - C9442 * C3758 - C9443 * C31653 +
            C10762 * C3759 + C10763 * C31644 - C10764 * C3760 -
            C10765 * C31627) *
               C9204) *
              C31265 * C2691 +
          ((C9794 * C3758 -
            ((C113 * C319 + C31490 * C337) * C31656 +
             (C113 * C307 + C31490 * C320) * C3757) +
            C9795 * C31653 - C9796 * C3759 - C9797 * C31644 + C10096 * C3760 +
            C10097 * C31627) *
               C9202 +
           (C9796 * C3758 - (C9795 * C31656 + C9794 * C3757) + C9797 * C31653 -
            C10096 * C3759 - C10097 * C31644 + C11136 * C3760 +
            C11137 * C31627) *
               C9203 +
           (C10096 * C3758 - (C9797 * C31656 + C9796 * C3757) +
            C10097 * C31653 - C11136 * C3759 - C11137 * C31644 +
            (C113 * C11127 + C31490 * C11128) * C3760 +
            (C113 * C11129 + C31490 * C11130) * C31627) *
               C9204) *
              C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C30318 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31408 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C30310 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31415 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C30324 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C4043) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C30310 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31408 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C30318) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31415 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C30324 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C30310 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31408 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C30318) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31415 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C30324 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C4043) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C30318 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31408 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C30310 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31415 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C30324 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 -
             (C113 * C513 + C31490 * C523) * C30310 -
             (C113 * C524 + C31490 * C543) * C31415 +
             (C113 * C514 + C31490 * C525) * C30324 +
             (C113 * C526 + C31490 * C544) * C4043) *
                C31504 * C104 +
            (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
            C4071 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             (C113 * C1019 + C31490 * C1028) * C31415 -
             (C113 * C1385 + C31490 * C1394) * C30324 -
             (C113 * C1395 + C31490 * C1412) * C4043) *
                C31504 * C104 +
            (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
            (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
               C31370) *
              C31566 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
            (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
            (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
               C2691 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C31504 * C104 +
            (C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C31504 * C105 +
            (C378 * C30318 + C379 * C31408 - C1057 * C30310 - C1058 * C31415 +
             (C113 * C2317 + C31490 * C2318) * C30324 +
             (C113 * C2319 + C31490 * C2320) * C4043) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
             C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                C9202 +
            (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
             C9442 * C30324 + C9443 * C4043) *
                C9203 +
            (C9440 * C30318 + C9441 * C31408 - C9442 * C30310 - C9443 * C31415 +
             C10762 * C30324 + C10763 * C4043) *
                C9204) *
               C31265 * C2691 +
           ((C9794 * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
                C9202 +
            (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
             C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
                C9203 +
            (C10096 * C30310 - (C9797 * C31408 + C9796 * C30318) +
             C10097 * C31415 - C11136 * C30324 - C11137 * C4043) *
                C9204) *
               C31265 * C31370) *
              C31566 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C9202 +
            (C586 * C30310 - (C585 * C31408 + C584 * C30318) + C587 * C31415 -
             C2476 * C30324 - C2477 * C4043) *
                C9203 +
            (C2476 * C30310 - (C587 * C31408 + C586 * C30318) + C2477 * C31415 -
             C11028 * C30324 - C11029 * C4043) *
                C9204) *
               C31265 * C2691 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C9202 +
            (C1052 * C30318 + C1053 * C31408 - C2338 * C30310 - C2339 * C31415 +
             C10920 * C30324 + C10921 * C4043) *
                C9203 +
            (C2338 * C30318 + C2339 * C31408 - C10920 * C30310 -
             C10921 * C31415 + (C113 * C10911 + C31490 * C10912) * C30324 +
             (C113 * C10913 + C31490 * C10914) * C4043) *
                C9204) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31655 +
          (((C113 * C1013 + C31490 * C1018) * C3468 -
            ((C113 * C319 + C31490 * C337) * C3465 +
             (C113 * C307 + C31490 * C320) * C3467) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
              C31651 +
          (((C113 * C308 + C31490 * C321) * C3467 +
            (C113 * C322 + C31490 * C338) * C3465 -
            (C113 * C1388 + C31490 * C1400) * C3468 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
           (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
              C31641 +
          (((C113 * C1813 + C31490 * C1816) * C3468 -
            ((C113 * C1261 + C31490 * C1271) * C3465 +
             (C113 * C1253 + C31490 * C1262) * C3467) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C3468 -
            (C1540 * C3465 + C1541 * C3467) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C3468 -
            (C1538 * C3465 + C1539 * C3467) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31370) *
              C31645 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C2691 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31370) *
              C31632 +
          ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
            (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
               C2691 +
           (C3931 * C104 + (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C3468 -
             (C728 * C3465 + C729 * C3467) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31645 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31655 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3468 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C3465 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3467) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C31651 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C3467 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C3465 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C3468 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C31641 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C3468 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C3465 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C3467) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31645 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C2691 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31632 +
          ((C3490 * C9202 +
            (C589 * C3467 + C590 * C3465 - C591 * C3468 - C592 * C31412) *
                C9203 +
            (C591 * C3467 + C592 * C3465 - C2478 * C3468 - C2479 * C31412) *
                C9204) *
               C31265 * C2691 +
           (C3930 * C9202 +
            (C2340 * C3468 - (C1056 * C3465 + C1054 * C3467) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C3468 -
             (C2341 * C3465 + C2340 * C3467) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
               C9203 +
           (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
               C9204) *
              C31265 * C31655 +
          ((C9794 * C3468 -
            ((C113 * C319 + C31490 * C337) * C3465 +
             (C113 * C307 + C31490 * C320) * C3467) +
            C9795 * C31412) *
               C9202 +
           (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
               C9203 +
           (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
            C10097 * C31412) *
               C9204) *
              C31265 * C31651 +
          (((C113 * C308 + C31490 * C321) * C3467 +
            (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
            C10099 * C31412) *
               C9202 +
           (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
            C10101 * C31412) *
               C9203 +
           (C10100 * C3467 + C10101 * C3465 - C10102 * C3468 -
            C10103 * C31412) *
               C9204) *
              C31265 * C31641 +
          ((C10460 * C3468 -
            ((C113 * C1261 + C31490 * C1271) * C3465 +
             (C113 * C1253 + C31490 * C1262) * C3467) +
            C10461 * C31412) *
               C9202 +
           (C10462 * C3468 - (C10461 * C3465 + C10460 * C3467) +
            C10463 * C31412) *
               C9203 +
           ((C113 * C6904 + C31490 * C6905) * C3468 -
            (C10463 * C3465 + C10462 * C3467) +
            (C113 * C6906 + C31490 * C6907) * C31412) *
               C9204) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C31580 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31370) *
                  C713 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                C727 * C106) *
                   C31370 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C31580) *
                  C714 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C31580 -
               ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
                C396 * C104) *
                   C31370) *
                  C715 +
              ((C727 * C104 + (C731 + C730) * C31504 * C105 +
                ((C113 * C717 + C31490 * C718) * C114 +
                 (C113 * C719 + C31490 * C720) * C31325) *
                    C31504 * C106) *
                   C31370 -
               ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
                C188 * C104) *
                   C31580) *
                  C31615) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C1519 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C1520 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C1521 -
               ((C1542 + C1543) * C31504 * C106 +
                (C1544 + C1545) * C31504 * C105 +
                ((C113 * C1261 + C31490 * C1271) * C31325 +
                 (C113 * C1253 + C31490 * C1262) * C114) *
                    C31504 * C104) *
                   C31621) *
                  C31566 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                C727 * C106) *
                   C1520 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C1519 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C1521 +
               ((C1545 + C1544) * C31504 * C104 +
                (C1543 + C1542) * C31504 * C105 +
                ((C113 * C1525 + C31490 * C1526) * C114 +
                 (C113 * C1527 + C31490 * C1528) * C31325) *
                    C31504 * C106) *
                   C31621) *
                  C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 -
             (C113 * C513 + C31490 * C523) * C1939 -
             (C113 * C524 + C31490 * C543) * C1936 +
             (C113 * C514 + C31490 * C525) * C1940 +
             (C113 * C526 + C31490 * C544) * C31614) *
                C31504 * C104 +
            (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
            C1965 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C1939 -
             ((C113 * C319 + C31490 * C337) * C1935 +
              (C113 * C307 + C31490 * C320) * C1938) +
             (C113 * C1019 + C31490 * C1028) * C1936 -
             (C113 * C1385 + C31490 * C1394) * C1940 -
             (C113 * C1395 + C31490 * C1412) * C31614) *
                C31504 * C104 +
            (C2322 - (C2323 + C2324) + C2325 - C2342 - C2343) * C31504 * C105 +
            (C2330 - (C2331 + C2332) + C2333 - C2344 - C2345) * C31504 * C106) *
               C31370) *
              C31566 +
          (((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 * C104 +
            (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 * C105 +
            (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 * C106) *
               C31580 +
           ((C2324 + C2323 - C2322 - C2325 + C2342 + C2343) * C31504 * C104 +
            (C2332 + C2331 - C2330 - C2333 + C2344 + C2345) * C31504 * C105 +
            (C378 * C1938 + C379 * C1935 - C1057 * C1939 - C1058 * C1936 +
             (C113 * C2317 + C31490 * C2318) * C1940 +
             (C113 * C2319 + C31490 * C2320) * C31614) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C713 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31580) *
              C714 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C715 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1520 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C1521 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C31566 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1520 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C1521 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C1938 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C1935 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C1939 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C1936 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C1940 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C31614) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C1939 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C1935 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C1938) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C1936 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C1940 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C1939 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C1935 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C1938) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C1936 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C1940 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C31614) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C1938 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C1935 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C1939 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C1936 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C1940 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C31580 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31370) *
              C713 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31370 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31580) *
              C714 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31580 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31370) *
              C715 +
          ((C722 * C9202 + (C1057 * C114 + C1058 * C31325) * C9203 +
            ((C113 * C2317 + C31490 * C2318) * C114 +
             (C113 * C2319 + C31490 * C2320) * C31325) *
                C9204) *
               C31265 * C31370 -
           ((C596 * C31325 + C595 * C114) * C9204 +
            (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
               C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1519 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1520 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            (C10098 * C114 + C10099 * C31325) * C9203 +
            (C10100 * C114 + C10101 * C31325) * C9204) *
               C31265 * C1521 -
           (((C113 * C5898 + C31490 * C5903) * C31325 +
             (C113 * C5894 + C31490 * C5897) * C114) *
                C9204 +
            ((C113 * C1817 + C31490 * C1822) * C31325 +
             (C113 * C1813 + C31490 * C1816) * C114) *
                C9203 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C9202) *
               C31265 * C31621) *
              C31566 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1520 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1519 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C1521 +
           ((C1545 + C1544) * C9202 +
            ((C113 * C1814 + C31490 * C1818) * C114 +
             (C113 * C1819 + C31490 * C1823) * C31325) *
                C9203 +
            ((C113 * C6700 + C31490 * C6701) * C114 +
             (C113 * C6702 + C31490 * C6703) * C31325) *
                C9204) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
             C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                C9202 +
            (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
             C9442 * C1940 + C9443 * C31614) *
                C9203 +
            (C9440 * C1938 + C9441 * C1935 - C9442 * C1939 - C9443 * C1936 +
             C10762 * C1940 + C10763 * C31614) *
                C9204) *
               C31265 * C31580 +
           ((C9794 * C1939 -
             ((C113 * C319 + C31490 * C337) * C1935 +
              (C113 * C307 + C31490 * C320) * C1938) +
             C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
                C9202 +
            (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
             C10096 * C1940 - C10097 * C31614) *
                C9203 +
            (C10096 * C1939 - (C9797 * C1935 + C9796 * C1938) + C10097 * C1936 -
             (C113 * C6543 + C31490 * C6547) * C1940 -
             (C113 * C6549 + C31490 * C6552) * C31614) *
                C9204) *
               C31265 * C31370) *
              C31566 +
          (((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C9202 +
            (C586 * C1939 - (C585 * C1935 + C584 * C1938) + C587 * C1936 -
             C2476 * C1940 - C2477 * C31614) *
                C9203 +
            (C2476 * C1939 - (C587 * C1935 + C586 * C1938) + C2477 * C1936 -
             (C113 * C2150 + C31490 * C2159) * C1940 -
             (C113 * C2160 + C31490 * C2168) * C31614) *
                C9204) *
               C31265 * C31580 +
           ((C2324 + C2323 - C2322 - C2325 + C2342 + C2343) * C9202 +
            (C1052 * C1938 + C1053 * C1935 - C2338 * C1939 - C2339 * C1936 +
             C10920 * C1940 + C10921 * C31614) *
                C9203 +
            (C2338 * C1938 + C2339 * C1935 - C10920 * C1939 - C10921 * C1936 +
             (C113 * C10911 + C31490 * C10912) * C1940 +
             (C113 * C10913 + C31490 * C10914) * C31614) *
                C9204) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C831 +
                 (C113 * C123 + C31490 * C136) * C31581 -
                 (C113 * C513 + C31490 * C523) * C832 -
                 (C113 * C524 + C31490 * C543) * C31412) *
                    C31504 * C104 +
                (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
                   C31580 +
               (((C113 * C1013 + C31490 * C1018) * C832 -
                 ((C113 * C319 + C31490 * C337) * C31581 +
                  (C113 * C307 + C31490 * C320) * C831) +
                 (C113 * C1019 + C31490 * C1028) * C31412) *
                    C31504 * C104 +
                (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 +
                C1067 * C106) *
                   C31370) *
                  C302 +
              (((C840 - (C839 + C838) + C841) * C31504 * C104 +
                (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
                   C31580 +
               ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
                (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
                (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
                   C31370) *
                  C303 +
              ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
                (C850 + C851 - C862 - C863) * C31504 * C106) *
                   C31580 +
               (C1067 * C104 +
                (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
                ((C113 * C1017 + C31490 * C1026) * C832 -
                 (C728 * C31581 + C729 * C831) +
                 (C113 * C1027 + C31490 * C1032) * C31412) *
                    C31504 * C106) *
                   C31370) *
                  C31605) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C831 +
                (C113 * C123 + C31490 * C136) * C31581 -
                (C113 * C513 + C31490 * C523) * C832 -
                (C113 * C524 + C31490 * C543) * C31412) *
                   C31504 * C104 +
               (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
                  C1519 +
              (((C113 * C1013 + C31490 * C1018) * C832 -
                ((C113 * C319 + C31490 * C337) * C31581 +
                 (C113 * C307 + C31490 * C320) * C831) +
                (C113 * C1019 + C31490 * C1028) * C31412) *
                   C31504 * C104 +
               (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 +
               C1067 * C106) *
                  C1520 +
              (((C113 * C308 + C31490 * C321) * C831 +
                (C113 * C322 + C31490 * C338) * C31581 -
                (C113 * C1388 + C31490 * C1400) * C832 -
                (C113 * C1401 + C31490 * C1415) * C31412) *
                   C31504 * C104 +
               (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
               (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
                  C1521 +
              (((C113 * C1813 + C31490 * C1816) * C832 -
                ((C113 * C1261 + C31490 * C1271) * C31581 +
                 (C113 * C1253 + C31490 * C1262) * C831) +
                (C113 * C1817 + C31490 * C1822) * C31412) *
                   C31504 * C104 +
               ((C113 * C1814 + C31490 * C1818) * C832 -
                (C1540 * C31581 + C1541 * C831) +
                (C113 * C1819 + C31490 * C1823) * C31412) *
                   C31504 * C105 +
               ((C113 * C1815 + C31490 * C1820) * C832 -
                (C1538 * C31581 + C1539 * C831) +
                (C113 * C1821 + C31490 * C1824) * C31412) *
                   C31504 * C106) *
                  C31621) *
             C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 -
            (C113 * C513 + C31490 * C523) * C2448 -
            (C113 * C524 + C31490 * C543) * C2444 +
            (C113 * C514 + C31490 * C525) * C2449 +
            (C113 * C526 + C31490 * C544) * C2445 -
            (C113 * C2147 + C31490 * C2153) * C2450 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
               C31504 * C105 +
           (C2466 + C2467 - C2468 - C2469 + C2470 + C2471 - C2482 - C2483) *
               C31504 * C106) *
              C31580 +
          (((C113 * C1013 + C31490 * C1018) * C2448 -
            ((C113 * C319 + C31490 * C337) * C2443 +
             (C113 * C307 + C31490 * C320) * C2447) +
            (C113 * C1019 + C31490 * C1028) * C2444 -
            (C113 * C1385 + C31490 * C1394) * C2449 -
            (C113 * C1395 + C31490 * C1412) * C2445 +
            (C113 * C2581 + C31490 * C2584) * C2450 +
            (C113 * C2585 + C31490 * C2590) * C31627) *
               C31504 * C104 +
           (C1052 * C2448 - (C372 * C2443 + C373 * C2447) + C1053 * C2444 -
            C2338 * C2449 - C2339 * C2445 +
            (C113 * C2582 + C31490 * C2586) * C2450 +
            (C113 * C2587 + C31490 * C2591) * C31627) *
               C31504 * C105 +
           (C1054 * C2448 - (C370 * C2443 + C371 * C2447) + C1056 * C2444 -
            C2340 * C2449 - C2341 * C2445 +
            (C113 * C2583 + C31490 * C2588) * C2450 +
            (C113 * C2589 + C31490 * C2592) * C31627) *
               C31504 * C106) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C302 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C1519 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C832 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31581 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C831) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C1520 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C831 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31581 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C832 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C1521 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C832 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31581 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C831) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C2447 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C2443 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C2448 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C2444 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C2449 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C2445 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C2450 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31580 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C2448 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C2443 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C2447) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C2444 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C2449 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C2445 +
           (C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6545 +
            C5041 * C6904 + C5037 * C6905) *
               C2450 +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6546 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31627) *
              C31504 * C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            ((C113 * C2581 + C31490 * C2584) * C832 -
             (C9797 * C31581 + C9796 * C831) +
             (C113 * C2585 + C31490 * C2590) * C31412) *
                C9204) *
               C31265 * C31370) *
              C302 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 -
             (C113 * C2582 + C31490 * C2586) * C832 -
             (C113 * C2587 + C31490 * C2591) * C31412) *
                C9204) *
               C31265 * C31370) *
              C303 +
          ((C864 * C9202 +
            (C589 * C831 + C590 * C31581 - C591 * C832 - C592 * C31412) *
                C9203 +
            (C591 * C831 + C592 * C31581 - C2478 * C832 - C2479 * C31412) *
                C9204) *
               C31265 * C31580 +
           (C1066 * C9202 +
            (C2340 * C832 - (C1056 * C31581 + C1054 * C831) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C832 -
             (C2341 * C31581 + C2340 * C831) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
               C9203 +
           (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
               C9204) *
              C31265 * C1519 +
          ((C9794 * C832 -
            ((C113 * C319 + C31490 * C337) * C31581 +
             (C113 * C307 + C31490 * C320) * C831) +
            C9795 * C31412) *
               C9202 +
           (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
               C9203 +
           (C10096 * C832 - (C9797 * C31581 + C9796 * C831) + C10097 * C31412) *
               C9204) *
              C31265 * C1520 +
          (((C113 * C308 + C31490 * C321) * C831 +
            (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
            C10099 * C31412) *
               C9202 +
           (C10098 * C831 + C10099 * C31581 - C10100 * C832 - C10101 * C31412) *
               C9203 +
           (C10100 * C831 + C10101 * C31581 - C10102 * C832 - C10103 * C31412) *
               C9204) *
              C31265 * C1521 +
          ((C10460 * C832 -
            ((C113 * C1261 + C31490 * C1271) * C31581 +
             (C113 * C1253 + C31490 * C1262) * C831) +
            C10461 * C31412) *
               C9202 +
           (C10462 * C832 - (C10461 * C31581 + C10460 * C831) +
            C10463 * C31412) *
               C9203 +
           ((C113 * C6904 + C31490 * C6905) * C832 -
            (C10463 * C31581 + C10462 * C831) +
            (C113 * C6906 + C31490 * C6907) * C31412) *
               C9204) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 - C9438 * C2448 -
            C9439 * C2444 + C9440 * C2449 + C9441 * C2445 - C9442 * C2450 -
            C9443 * C31627) *
               C9202 +
           (C9438 * C2447 + C9439 * C2443 - C9440 * C2448 - C9441 * C2444 +
            C9442 * C2449 + C9443 * C2445 - C10762 * C2450 - C10763 * C31627) *
               C9203 +
           (C9440 * C2447 + C9441 * C2443 - C9442 * C2448 - C9443 * C2444 +
            C10762 * C2449 + C10763 * C2445 - C10764 * C2450 -
            C10765 * C31627) *
               C9204) *
              C31265 * C31580 +
          ((C9794 * C2448 -
            ((C113 * C319 + C31490 * C337) * C2443 +
             (C113 * C307 + C31490 * C320) * C2447) +
            C9795 * C2444 - C9796 * C2449 - C9797 * C2445 + C10096 * C2450 +
            C10097 * C31627) *
               C9202 +
           (C9796 * C2448 - (C9795 * C2443 + C9794 * C2447) + C9797 * C2444 -
            C10096 * C2449 - C10097 * C2445 + C11136 * C2450 +
            C11137 * C31627) *
               C9203 +
           (C10096 * C2448 - (C9797 * C2443 + C9796 * C2447) + C10097 * C2444 -
            C11136 * C2449 - C11137 * C2445 +
            (C113 * C11127 + C31490 * C11128) * C2450 +
            (C113 * C11129 + C31490 * C11130) * C31627) *
               C9204) *
              C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C114 +
                (C113 * C123 + C31490 * C136) * C31325) *
                   C31504 * C104 +
               (C174 + C175) * C31504 * C105 + C187 * C106) *
                  C31308 * C108 -
              (C188 * C106 + (C177 + C176) * C31504 * C105 +
               (C175 + C174) * C31504 * C104) *
                  C31308 * C109 +
              (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                  C31308 * C110 -
              ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
               C188 * C104) *
                  C31308 * C111 +
              (C189 * C104 + (C183 + C182) * C31504 * C105 +
               ((C113 * C121 + C31490 * C134) * C114 +
                (C113 * C135 + C31490 * C142) * C31325) *
                   C31504 * C106) *
                  C31308 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C31648 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31636 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C31611) *
                  C302 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                (C390 + C391) * C31504 * C106) *
                   C31636 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C31648 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C31611) *
                  C303 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C31648 -
               (((C113 * C331 + C31490 * C343) * C31325 +
                 (C113 * C313 + C31490 * C332) * C114) *
                    C31504 * C106 +
                (C391 + C390) * C31504 * C105 + C396 * C104) *
                   C31636 +
               (C397 * C104 + (C393 + C392) * C31504 * C105 +
                ((C113 * C314 + C31490 * C333) * C114 +
                 (C113 * C334 + C31490 * C344) * C31325) *
                    C31504 * C106) *
                   C31611) *
                  C31605) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C510 +
                (C113 * C123 + C31490 * C136) * C31649 -
                (C113 * C513 + C31490 * C523) * C511 -
                (C113 * C524 + C31490 * C543) * C31638 +
                (C113 * C514 + C31490 * C525) * C512 +
                (C113 * C526 + C31490 * C544) * C31614) *
                   C31504 * C104 +
               (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
               C613 * C106) *
                  C31308 * C302 +
              ((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
               (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
               (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
                  C31308 * C303 +
              (C613 * C104 +
               (C577 + C576 - C605 - C606 + C607 + C608) * C31504 * C105 +
               (C170 * C510 + C171 * C31649 -
                (C113 * C521 + C31490 * C539) * C511 -
                (C113 * C540 + C31490 * C551) * C31638 +
                (C113 * C522 + C31490 * C541) * C512 +
                (C113 * C542 + C31490 * C552) * C31614) *
                   C31504 * C106) *
                  C31308 * C31605) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C1177 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C1178 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C31611) *
                  C31645 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                C727 * C106) *
                   C1178 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C1177 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C31611) *
                  C31632 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C1177 -
               ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
                C396 * C104) *
                   C1178 +
               (C397 * C104 + (C393 + C392) * C31504 * C105 +
                ((C113 * C314 + C31490 * C333) * C114 +
                 (C113 * C334 + C31490 * C344) * C31325) *
                    C31504 * C106) *
                   C31611) *
                  C31605) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C114 +
                (C113 * C123 + C31490 * C136) * C31325) *
                   C31504 * C104 +
               (C174 + C175) * C31504 * C105 + C187 * C106) *
                  C1245 -
              (C396 * C106 + (C384 + C385) * C31504 * C105 +
               ((C113 * C319 + C31490 * C337) * C31325 +
                (C113 * C307 + C31490 * C320) * C114) *
                   C31504 * C104) *
                  C1246 +
              (((C113 * C308 + C31490 * C321) * C114 +
                (C113 * C322 + C31490 * C338) * C31325) *
                   C31504 * C104 +
               (C386 + C387) * C31504 * C105 + C397 * C106) *
                  C1247 -
              (((C113 * C1257 + C31490 * C1269) * C31325 +
                (C113 * C1251 + C31490 * C1258) * C114) *
                   C31504 * C106 +
               ((C113 * C1259 + C31490 * C1270) * C31325 +
                (C113 * C1252 + C31490 * C1260) * C114) *
                   C31504 * C105 +
               ((C113 * C1261 + C31490 * C1271) * C31325 +
                (C113 * C1253 + C31490 * C1262) * C114) *
                   C31504 * C104) *
                  C1248 +
              (((C113 * C1254 + C31490 * C1263) * C114 +
                (C113 * C1264 + C31490 * C1272) * C31325) *
                   C31504 * C104 +
               ((C113 * C1255 + C31490 * C1265) * C114 +
                (C113 * C1266 + C31490 * C1273) * C31325) *
                   C31504 * C105 +
               ((C113 * C1256 + C31490 * C1267) * C114 +
                (C113 * C1268 + C31490 * C1274) * C31325) *
                   C31504 * C106) *
                  C1249) *
             C31281 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C510 +
                (C113 * C123 + C31490 * C136) * C31649 -
                (C113 * C513 + C31490 * C523) * C511 -
                (C113 * C524 + C31490 * C543) * C31638 +
                (C113 * C514 + C31490 * C525) * C512 +
                (C113 * C526 + C31490 * C544) * C31614) *
                   C31504 * C104 +
               (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
               C613 * C106) *
                  C1177 +
              (((C113 * C1013 + C31490 * C1018) * C511 -
                ((C113 * C319 + C31490 * C337) * C31649 +
                 (C113 * C307 + C31490 * C320) * C510) +
                (C113 * C1019 + C31490 * C1028) * C31638 -
                (C113 * C1385 + C31490 * C1394) * C512 -
                (C113 * C1395 + C31490 * C1412) * C31614) *
                   C31504 * C104 +
               (C1052 * C511 - (C372 * C31649 + C373 * C510) + C1053 * C31638 -
                (C113 * C1386 + C31490 * C1396) * C512 -
                (C113 * C1397 + C31490 * C1413) * C31614) *
                   C31504 * C105 +
               (C1054 * C511 - (C370 * C31649 + C371 * C510) + C1056 * C31638 -
                (C113 * C1387 + C31490 * C1398) * C512 -
                (C113 * C1399 + C31490 * C1414) * C31614) *
                   C31504 * C106) *
                  C1178 +
              (((C113 * C308 + C31490 * C321) * C510 +
                (C113 * C322 + C31490 * C338) * C31649 -
                (C113 * C1388 + C31490 * C1400) * C511 -
                (C113 * C1401 + C31490 * C1415) * C31638 +
                (C113 * C1389 + C31490 * C1402) * C512 +
                (C113 * C1403 + C31490 * C1416) * C31614) *
                   C31504 * C104 +
               (C374 * C510 + C375 * C31649 -
                (C113 * C1390 + C31490 * C1404) * C511 -
                (C113 * C1405 + C31490 * C1417) * C31638 +
                (C113 * C1391 + C31490 * C1406) * C512 +
                (C113 * C1407 + C31490 * C1418) * C31614) *
                   C31504 * C105 +
               (C376 * C510 + C377 * C31649 -
                (C113 * C1392 + C31490 * C1408) * C511 -
                (C113 * C1409 + C31490 * C1419) * C31638 +
                (C113 * C1393 + C31490 * C1410) * C512 +
                (C113 * C1411 + C31490 * C1420) * C31614) *
                   C31504 * C106) *
                  C31611) *
             C31281 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C1938 +
                (C113 * C123 + C31490 * C136) * C1935 -
                (C113 * C513 + C31490 * C523) * C1939 -
                (C113 * C524 + C31490 * C543) * C1936 +
                (C113 * C514 + C31490 * C525) * C1940 +
                (C113 * C526 + C31490 * C544) * C31614) *
                   C31504 * C104 +
               (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
               C1965 * C106) *
                  C31308 * C31645 +
              ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 *
                   C104 +
               (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 *
                   C105 +
               (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 *
                   C106) *
                  C31308 * C31632 +
              (C1965 * C104 +
               (C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C31504 * C105 +
               (C170 * C1938 + C171 * C1935 - C858 * C1939 - C859 * C1936 +
                (C113 * C522 + C31490 * C541) * C1940 +
                (C113 * C542 + C31490 * C552) * C31614) *
                   C31504 * C106) *
                  C31308 * C31605) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C1938 +
                (C113 * C123 + C31490 * C136) * C1935 -
                (C113 * C513 + C31490 * C523) * C1939 -
                (C113 * C524 + C31490 * C543) * C1936 +
                (C113 * C514 + C31490 * C525) * C1940 +
                (C113 * C526 + C31490 * C544) * C31614) *
                   C31504 * C104 +
               (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
               C1965 * C106) *
                  C31648 +
              (((C113 * C1013 + C31490 * C1018) * C1939 -
                ((C113 * C319 + C31490 * C337) * C1935 +
                 (C113 * C307 + C31490 * C320) * C1938) +
                (C113 * C1019 + C31490 * C1028) * C1936 -
                (C113 * C1385 + C31490 * C1394) * C1940 -
                (C113 * C1395 + C31490 * C1412) * C31614) *
                   C31504 * C104 +
               (C1052 * C1939 - (C372 * C1935 + C373 * C1938) + C1053 * C1936 -
                (C113 * C1386 + C31490 * C1396) * C1940 -
                (C113 * C1397 + C31490 * C1413) * C31614) *
                   C31504 * C105 +
               (C1054 * C1939 - (C370 * C1935 + C371 * C1938) + C1056 * C1936 -
                (C113 * C1387 + C31490 * C1398) * C1940 -
                (C113 * C1399 + C31490 * C1414) * C31614) *
                   C31504 * C106) *
                  C31636 +
              (((C113 * C308 + C31490 * C321) * C1938 +
                (C113 * C322 + C31490 * C338) * C1935 -
                (C113 * C1388 + C31490 * C1400) * C1939 -
                (C113 * C1401 + C31490 * C1415) * C1936 +
                (C113 * C1389 + C31490 * C1402) * C1940 +
                (C113 * C1403 + C31490 * C1416) * C31614) *
                   C31504 * C104 +
               (C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
                (C113 * C1391 + C31490 * C1406) * C1940 +
                (C113 * C1407 + C31490 * C1418) * C31614) *
                   C31504 * C105 +
               (C376 * C1938 + C377 * C1935 - C1710 * C1939 - C1711 * C1936 +
                (C113 * C1393 + C31490 * C1410) * C1940 +
                (C113 * C1411 + C31490 * C1420) * C31614) *
                   C31504 * C106) *
                  C31611) *
             C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C31490 * C122) * C2142 +
           (C113 * C123 + C31490 * C136) * C2137 -
           (C113 * C513 + C31490 * C523) * C2143 -
           (C113 * C524 + C31490 * C543) * C2138 +
           (C113 * C514 + C31490 * C525) * C2144 +
           (C113 * C526 + C31490 * C544) * C2139 -
           (C113 * C2147 + C31490 * C2153) * C2145 -
           (C113 * C2154 + C31490 * C2165) * C2140 +
           (C113 * C2148 + C31490 * C2155) * C2146 +
           (C113 * C2156 + C31490 * C2166) * C2141) *
              C31504 * C104 +
          (C164 * C2142 + C165 * C2137 - C584 * C2143 - C585 * C2138 +
           C586 * C2144 + C587 * C2139 -
           (C113 * C2149 + C31490 * C2157) * C2145 -
           (C113 * C2158 + C31490 * C2167) * C2140 +
           (C113 * C2150 + C31490 * C2159) * C2146 +
           (C113 * C2160 + C31490 * C2168) * C2141) *
              C31504 * C105 +
          (C166 * C2142 + C167 * C2137 - C589 * C2143 - C590 * C2138 +
           C591 * C2144 + C592 * C2139 -
           (C113 * C2151 + C31490 * C2161) * C2145 -
           (C113 * C2162 + C31490 * C2169) * C2140 +
           (C113 * C2152 + C31490 * C2163) * C2146 +
           (C113 * C2164 + C31490 * C2170) * C2141) *
              C31504 * C106) *
         C31308 * C31281) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C302 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C511 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31649 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C510) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31638 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C512 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C510 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31649 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C511 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31638 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C512 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C1177 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C511 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31649 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C510) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31638 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C512 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C1178 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C510 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31649 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C511 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31638 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C512 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C31645 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C1939 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C1935 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C1938) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C1936 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C1940 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C31632 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C1938 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C1935 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C1939 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C1936 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C1940 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31648 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C1939 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C1935 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C1938) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C1936 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C1940 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C31636 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C1938 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C1935 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C1939 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C1936 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C1940 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
           C5041 * C308 + C5037 * C321) *
              C2142 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
           C5041 * C322 + C5037 * C338) *
              C2137 -
          (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
           C5039 * C513 + C5035 * C523) *
              C2143 -
          (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
           C5039 * C524 + C5035 * C543) *
              C2138 +
          (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
           C5041 * C1389 + C5037 * C1402) *
              C2144 +
          (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
           C5041 * C1403 + C5037 * C1416) *
              C2139 -
          (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
           C5039 * C2147 + C5035 * C2153) *
              C2145 -
          (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
           C5039 * C2154 + C5035 * C2165) *
              C2140 +
          (C5039 * C2148 + C5035 * C2155 + C5040 * C6543 + C5036 * C6547 +
           C5041 * C6544 + C5037 * C6548) *
              C2146 +
          (C5039 * C2156 + C5035 * C2166 + C5040 * C6549 + C5036 * C6552 +
           C5041 * C6550 + C5037 * C6553) *
              C2141) *
         C31504 * C31265 * C31308 * C31281) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           ((C113 * C513 + C31490 * C523) * C114 +
            (C113 * C524 + C31490 * C543) * C31325) *
               C9203 +
           ((C113 * C514 + C31490 * C525) * C114 +
            (C113 * C526 + C31490 * C544) * C31325) *
               C9204) *
              C31265 * C31308 * C108 -
          ((C587 * C31325 + C586 * C114) * C9204 +
           (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
              C31265 * C31308 * C109 +
          (C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
           (C591 * C114 + C592 * C31325) * C9204) *
              C31265 * C31308 * C110 -
          ((C596 * C31325 + C595 * C114) * C9204 +
           (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
              C31265 * C31308 * C111 +
          (C186 * C9202 + (C858 * C114 + C859 * C31325) * C9203 +
           ((C113 * C522 + C31490 * C541) * C114 +
            (C113 * C542 + C31490 * C552) * C31325) *
               C9204) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            ((C113 * C513 + C31490 * C523) * C114 +
             (C113 * C524 + C31490 * C543) * C31325) *
                C9203 +
            ((C113 * C514 + C31490 * C525) * C114 +
             (C113 * C526 + C31490 * C544) * C31325) *
                C9204) *
               C31265 * C31648 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C302 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31636 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31648 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C303 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31648 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31636 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
            C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
               C9202 +
           (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
            C9442 * C512 + C9443 * C31614) *
               C9203 +
           (C9440 * C510 + C9441 * C31649 - C9442 * C511 - C9443 * C31638 +
            (C113 * C2148 + C31490 * C2155) * C512 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31308 * C302 +
          ((C597 - (C555 + C554) + C598 - C599 - C600) * C9202 +
           (C586 * C511 - (C585 * C31649 + C584 * C510) + C587 * C31638 -
            C2476 * C512 - C2477 * C31614) *
               C9203 +
           (C2476 * C511 - (C587 * C31649 + C586 * C510) + C2477 * C31638 -
            (C113 * C2150 + C31490 * C2159) * C512 -
            (C113 * C2160 + C31490 * C2168) * C31614) *
               C9204) *
              C31265 * C31308 * C303 +
          (C612 * C9202 +
           (C589 * C510 + C590 * C31649 - C591 * C511 - C592 * C31638 +
            C2478 * C512 + C2479 * C31614) *
               C9203 +
           (C591 * C510 + C592 * C31649 - C2478 * C511 - C2479 * C31638 +
            (C113 * C2152 + C31490 * C2163) * C512 +
            (C113 * C2164 + C31490 * C2170) * C31614) *
               C9204) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1177 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31645 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1178 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1177 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C31632 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C1177 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C1178 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           (C9438 * C114 + C9439 * C31325) * C9203 +
           (C9440 * C114 + C9441 * C31325) * C9204) *
              C31265 * C1245 -
          ((C9797 * C31325 + C9796 * C114) * C9204 +
           (C9795 * C31325 + C9794 * C114) * C9203 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C9202) *
              C31265 * C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C9202 +
           ((C113 * C1388 + C31490 * C1400) * C114 +
            (C113 * C1401 + C31490 * C1415) * C31325) *
               C9203 +
           ((C113 * C1389 + C31490 * C1402) * C114 +
            (C113 * C1403 + C31490 * C1416) * C31325) *
               C9204) *
              C31265 * C1247 -
          (((C113 * C5898 + C31490 * C5903) * C31325 +
            (C113 * C5894 + C31490 * C5897) * C114) *
               C9204 +
           ((C113 * C1817 + C31490 * C1822) * C31325 +
            (C113 * C1813 + C31490 * C1816) * C114) *
               C9203 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C9202) *
              C31265 * C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C9202 +
           ((C113 * C5895 + C31490 * C5899) * C114 +
            (C113 * C5900 + C31490 * C5904) * C31325) *
               C9203 +
           ((C113 * C5896 + C31490 * C5901) * C114 +
            (C113 * C5902 + C31490 * C5905) * C31325) *
               C9204) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
            C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
               C9202 +
           (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
            C9442 * C512 + C9443 * C31614) *
               C9203 +
           (C9440 * C510 + C9441 * C31649 - C9442 * C511 - C9443 * C31638 +
            (C113 * C2148 + C31490 * C2155) * C512 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C1177 +
          ((C9794 * C511 -
            ((C113 * C319 + C31490 * C337) * C31649 +
             (C113 * C307 + C31490 * C320) * C510) +
            C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
               C9202 +
           (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
            C10096 * C512 - C10097 * C31614) *
               C9203 +
           (C10096 * C511 - (C9797 * C31649 + C9796 * C510) + C10097 * C31638 -
            (C113 * C6543 + C31490 * C6547) * C512 -
            (C113 * C6549 + C31490 * C6552) * C31614) *
               C9204) *
              C31265 * C1178 +
          (((C113 * C308 + C31490 * C321) * C510 +
            (C113 * C322 + C31490 * C338) * C31649 - C10098 * C511 -
            C10099 * C31638 + C10100 * C512 + C10101 * C31614) *
               C9202 +
           (C10098 * C510 + C10099 * C31649 - C10100 * C511 - C10101 * C31638 +
            C10102 * C512 + C10103 * C31614) *
               C9203 +
           (C10100 * C510 + C10101 * C31649 - C10102 * C511 - C10103 * C31638 +
            (C113 * C6544 + C31490 * C6548) * C512 +
            (C113 * C6550 + C31490 * C6553) * C31614) *
               C9204) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
            C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
               C9202 +
           (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
            C9442 * C1940 + C9443 * C31614) *
               C9203 +
           (C9440 * C1938 + C9441 * C1935 - C9442 * C1939 - C9443 * C1936 +
            (C113 * C2148 + C31490 * C2155) * C1940 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31308 * C31645 +
          ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C9202 +
           (C586 * C1939 - (C585 * C1935 + C584 * C1938) + C587 * C1936 -
            C2476 * C1940 - C2477 * C31614) *
               C9203 +
           (C2476 * C1939 - (C587 * C1935 + C586 * C1938) + C2477 * C1936 -
            (C113 * C2150 + C31490 * C2159) * C1940 -
            (C113 * C2160 + C31490 * C2168) * C31614) *
               C9204) *
              C31265 * C31308 * C31632 +
          (C1964 * C9202 +
           (C589 * C1938 + C590 * C1935 - C591 * C1939 - C592 * C1936 +
            C2478 * C1940 + C2479 * C31614) *
               C9203 +
           (C591 * C1938 + C592 * C1935 - C2478 * C1939 - C2479 * C1936 +
            (C113 * C2152 + C31490 * C2163) * C1940 +
            (C113 * C2164 + C31490 * C2170) * C31614) *
               C9204) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
            C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
               C9202 +
           (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
            C9442 * C1940 + C9443 * C31614) *
               C9203 +
           (C9440 * C1938 + C9441 * C1935 - C9442 * C1939 - C9443 * C1936 +
            (C113 * C2148 + C31490 * C2155) * C1940 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31648 +
          ((C9794 * C1939 -
            ((C113 * C319 + C31490 * C337) * C1935 +
             (C113 * C307 + C31490 * C320) * C1938) +
            C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
               C9202 +
           (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
            C10096 * C1940 - C10097 * C31614) *
               C9203 +
           (C10096 * C1939 - (C9797 * C1935 + C9796 * C1938) + C10097 * C1936 -
            (C113 * C6543 + C31490 * C6547) * C1940 -
            (C113 * C6549 + C31490 * C6552) * C31614) *
               C9204) *
              C31265 * C31636 +
          (((C113 * C308 + C31490 * C321) * C1938 +
            (C113 * C322 + C31490 * C338) * C1935 - C10098 * C1939 -
            C10099 * C1936 + C10100 * C1940 + C10101 * C31614) *
               C9202 +
           (C10098 * C1938 + C10099 * C1935 - C10100 * C1939 - C10101 * C1936 +
            C10102 * C1940 + C10103 * C31614) *
               C9203 +
           (C10100 * C1938 + C10101 * C1935 - C10102 * C1939 - C10103 * C1936 +
            (C113 * C6544 + C31490 * C6548) * C1940 +
            (C113 * C6550 + C31490 * C6553) * C31614) *
               C9204) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31490 * C122) * C2142 +
           (C113 * C123 + C31490 * C136) * C2137 - C9438 * C2143 -
           C9439 * C2138 + C9440 * C2144 + C9441 * C2139 - C9442 * C2145 -
           C9443 * C2140 + C10762 * C2146 + C10763 * C2141) *
              C9202 +
          (C9438 * C2142 + C9439 * C2137 - C9440 * C2143 - C9441 * C2138 +
           C9442 * C2144 + C9443 * C2139 - C10762 * C2145 - C10763 * C2140 +
           C10764 * C2146 + C10765 * C2141) *
              C9203 +
          (C9440 * C2142 + C9441 * C2137 - C9442 * C2143 - C9443 * C2138 +
           C10762 * C2144 + C10763 * C2139 - C10764 * C2145 - C10765 * C2140 +
           (C113 * C10746 + C31490 * C10749) * C2146 +
           (C113 * C10750 + C31490 * C10752) * C2141) *
              C9204) *
         C31265 * C31308 * C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C831 +
                (C113 * C123 + C31490 * C136) * C31581 -
                (C113 * C513 + C31490 * C523) * C832 -
                (C113 * C524 + C31490 * C543) * C31412) *
                   C31504 * C104 +
               (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
                  C31308 * C713 +
              ((C840 - (C839 + C838) + C841) * C31504 * C104 +
               (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
                  C31308 * C714 +
              (C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
               (C850 + C851 - C862 - C863) * C31504 * C106) *
                  C31308 * C715 +
              (C867 * C104 + (C862 - (C851 + C850) + C863) * C31504 * C105 +
               ((C113 * C833 + C31490 * C834) * C832 -
                (C172 * C31581 + C173 * C831) +
                (C113 * C835 + C31490 * C836) * C31412) *
                   C31504 * C106) *
                  C31308 * C31615) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C831 +
                 (C113 * C123 + C31490 * C136) * C31581 -
                 (C113 * C513 + C31490 * C523) * C832 -
                 (C113 * C524 + C31490 * C543) * C31412) *
                    C31504 * C104 +
                (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
                   C1177 +
               (((C113 * C1013 + C31490 * C1018) * C832 -
                 ((C113 * C319 + C31490 * C337) * C31581 +
                  (C113 * C307 + C31490 * C320) * C831) +
                 (C113 * C1019 + C31490 * C1028) * C31412) *
                    C31504 * C104 +
                (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 +
                C1067 * C106) *
                   C1178 +
               (((C113 * C308 + C31490 * C321) * C831 +
                 (C113 * C322 + C31490 * C338) * C31581 -
                 (C113 * C1388 + C31490 * C1400) * C832 -
                 (C113 * C1401 + C31490 * C1415) * C31412) *
                    C31504 * C104 +
                (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
                (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
                   C31611) *
                  C31566 +
              (((C840 - (C839 + C838) + C841) * C31504 * C104 +
                (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
                   C1177 +
               ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
                (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
                (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
                   C1178 +
               ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
                (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
                ((C113 * C1691 + C31490 * C1692) * C832 -
                 (C380 * C31581 + C381 * C831) +
                 (C113 * C1693 + C31490 * C1694) * C31412) *
                    C31504 * C106) *
                   C31611) *
                  C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 -
            (C113 * C513 + C31490 * C523) * C2448 -
            (C113 * C524 + C31490 * C543) * C2444 +
            (C113 * C514 + C31490 * C525) * C2449 +
            (C113 * C526 + C31490 * C544) * C2445 -
            (C113 * C2147 + C31490 * C2153) * C2450 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
               C31504 * C105 +
           (C2466 + C2467 - C2468 - C2469 + C2470 + C2471 - C2482 - C2483) *
               C31504 * C106) *
              C31308 * C31566 +
          ((C2458 - (C2457 + C2456) + C2459 - C2460 - C2461 + C2480 + C2481) *
               C31504 * C104 +
           (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471 + C2482 + C2483) *
               C31504 * C105 +
           (C593 * C2448 - (C168 * C2443 + C169 * C2447) + C594 * C2444 -
            C595 * C2449 - C596 * C2445 +
            (C113 * C2451 + C31490 * C2452) * C2450 +
            (C113 * C2453 + C31490 * C2454) * C31627) *
               C31504 * C106) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C713 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C832 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31581 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C831) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C831 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31581 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C832 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C715 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C832 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31581 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C831) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C2447 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C2443 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C2448 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C2444 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C2449 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C2445 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C2450 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31308 * C31566 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C2448 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C2443 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C2447) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C2444 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C2449 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C2445 +
           (C5039 * C2149 + C5035 * C2157 + C5040 * C2582 + C5036 * C2586 +
            C5041 * C6802 + C5037 * C6803) *
               C2450 +
           (C5039 * C2158 + C5035 * C2167 + C5040 * C2587 + C5036 * C2591 +
            C5041 * C6804 + C5037 * C6805) *
               C31627) *
              C31504 * C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
               C9203 +
           (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
               C9204) *
              C31265 * C31308 * C713 +
          ((C840 - (C839 + C838) + C841) * C9202 +
           (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
               C9203 +
           (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
               C9204) *
              C31265 * C31308 * C714 +
          (C864 * C9202 +
           (C589 * C831 + C590 * C31581 - C591 * C832 - C592 * C31412) * C9203 +
           (C591 * C831 + C592 * C31581 - C2478 * C832 - C2479 * C31412) *
               C9204) *
              C31265 * C31308 * C715 +
          (C865 * C9202 +
           (C595 * C832 - (C594 * C31581 + C593 * C831) + C596 * C31412) *
               C9203 +
           ((C113 * C2451 + C31490 * C2452) * C832 -
            (C596 * C31581 + C595 * C831) +
            (C113 * C2453 + C31490 * C2454) * C31412) *
               C9204) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C1177 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            (C10096 * C832 - (C9797 * C31581 + C9796 * C831) +
             C10097 * C31412) *
                C9204) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C831 + C10101 * C31581 - C10102 * C832 -
             C10103 * C31412) *
                C9204) *
               C31265 * C31611) *
              C31566 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C1177 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 -
             (C113 * C2582 + C31490 * C2586) * C832 -
             (C113 * C2587 + C31490 * C2591) * C31412) *
                C9204) *
               C31265 * C1178 +
           ((C1712 - (C1697 + C1696) + C1713) * C9202 +
            (C10352 * C832 - (C1709 * C31581 + C1708 * C831) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C832 -
             (C10353 * C31581 + C10352 * C831) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 - C9438 * C2448 -
            C9439 * C2444 + C9440 * C2449 + C9441 * C2445 - C9442 * C2450 -
            C9443 * C31627) *
               C9202 +
           (C9438 * C2447 + C9439 * C2443 - C9440 * C2448 - C9441 * C2444 +
            C9442 * C2449 + C9443 * C2445 - C10762 * C2450 - C10763 * C31627) *
               C9203 +
           (C9440 * C2447 + C9441 * C2443 - C9442 * C2448 - C9443 * C2444 +
            C10762 * C2449 + C10763 * C2445 - C10764 * C2450 -
            C10765 * C31627) *
               C9204) *
              C31265 * C31308 * C31566 +
          ((C2458 - (C2457 + C2456) + C2459 - C2460 - C2461 + C2480 + C2481) *
               C9202 +
           (C586 * C2448 - (C585 * C2443 + C584 * C2447) + C587 * C2444 -
            C2476 * C2449 - C2477 * C2445 + C11028 * C2450 + C11029 * C31627) *
               C9203 +
           (C2476 * C2448 - (C587 * C2443 + C586 * C2447) + C2477 * C2444 -
            C11028 * C2449 - C11029 * C2445 +
            (C113 * C11019 + C31490 * C11020) * C2450 +
            (C113 * C11021 + C31490 * C11022) * C31627) *
               C9204) *
              C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C31308 * C108 -
          (C188 * C106 + (C177 + C176) * C31504 * C105 +
           (C175 + C174) * C31504 * C104) *
              C31308 * C109 +
          (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C31308 *
              C110 -
          ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
           C188 * C104) *
              C31308 * C111 +
          (C189 * C104 + (C183 + C182) * C31504 * C105 +
           ((C113 * C121 + C31490 * C134) * C114 +
            (C113 * C135 + C31490 * C142) * C31325) *
               C31504 * C106) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31648 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C302 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            (C390 + C391) * C31504 * C106) *
               C31636 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31648 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C303 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31648 -
           (((C113 * C331 + C31490 * C343) * C31325 +
             (C113 * C313 + C31490 * C332) * C114) *
                C31504 * C106 +
            (C391 + C390) * C31504 * C105 + C396 * C104) *
               C31636 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31308 * C31645 +
          ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 * C104 +
           (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 * C105 +
           (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 * C106) *
              C31308 * C31632 +
          (C1965 * C104 +
           (C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C31504 * C105 +
           (C170 * C1938 + C171 * C1935 - C858 * C1939 - C859 * C1936 +
            (C113 * C522 + C31490 * C541) * C1940 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31648 +
          (((C113 * C1013 + C31490 * C1018) * C1939 -
            ((C113 * C319 + C31490 * C337) * C1935 +
             (C113 * C307 + C31490 * C320) * C1938) +
            (C113 * C1019 + C31490 * C1028) * C1936 -
            (C113 * C1385 + C31490 * C1394) * C1940 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C1939 - (C372 * C1935 + C373 * C1938) + C1053 * C1936 -
            (C113 * C1386 + C31490 * C1396) * C1940 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C1939 - (C370 * C1935 + C371 * C1938) + C1056 * C1936 -
            (C113 * C1387 + C31490 * C1398) * C1940 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C31636 +
          (((C113 * C308 + C31490 * C321) * C1938 +
            (C113 * C322 + C31490 * C338) * C1935 -
            (C113 * C1388 + C31490 * C1400) * C1939 -
            (C113 * C1401 + C31490 * C1415) * C1936 +
            (C113 * C1389 + C31490 * C1402) * C1940 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
            (C113 * C1391 + C31490 * C1406) * C1940 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C1938 + C377 * C1935 - C1710 * C1939 - C1711 * C1936 +
            (C113 * C1393 + C31490 * C1410) * C1940 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C31645 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C1939 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C1935 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C1938) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C1936 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C1940 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C31632 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C1938 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C1935 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C1939 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C1936 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C1940 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31648 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C1939 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C1935 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C1938) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C1936 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C1940 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C31636 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C1938 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C1935 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C1939 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C1936 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C1940 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           ((C113 * C513 + C31490 * C523) * C114 +
            (C113 * C524 + C31490 * C543) * C31325) *
               C9203 +
           ((C113 * C514 + C31490 * C525) * C114 +
            (C113 * C526 + C31490 * C544) * C31325) *
               C9204) *
              C31265 * C31308 * C108 -
          ((C587 * C31325 + C586 * C114) * C9204 +
           (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
              C31265 * C31308 * C109 +
          (C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
           (C591 * C114 + C592 * C31325) * C9204) *
              C31265 * C31308 * C110 -
          ((C596 * C31325 + C595 * C114) * C9204 +
           (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
              C31265 * C31308 * C111 +
          (C186 * C9202 + (C858 * C114 + C859 * C31325) * C9203 +
           ((C113 * C522 + C31490 * C541) * C114 +
            (C113 * C542 + C31490 * C552) * C31325) *
               C9204) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            ((C113 * C513 + C31490 * C523) * C114 +
             (C113 * C524 + C31490 * C543) * C31325) *
                C9203 +
            ((C113 * C514 + C31490 * C525) * C114 +
             (C113 * C526 + C31490 * C544) * C31325) *
                C9204) *
               C31265 * C31648 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C302 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31636 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31648 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C303 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31648 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31636 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1177 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31645 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1178 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1177 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C31632 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C1177 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C1178 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           (C9438 * C114 + C9439 * C31325) * C9203 +
           (C9440 * C114 + C9441 * C31325) * C9204) *
              C31265 * C1245 -
          ((C9797 * C31325 + C9796 * C114) * C9204 +
           (C9795 * C31325 + C9794 * C114) * C9203 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C9202) *
              C31265 * C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C9202 +
           ((C113 * C1388 + C31490 * C1400) * C114 +
            (C113 * C1401 + C31490 * C1415) * C31325) *
               C9203 +
           ((C113 * C1389 + C31490 * C1402) * C114 +
            (C113 * C1403 + C31490 * C1416) * C31325) *
               C9204) *
              C31265 * C1247 -
          (((C113 * C5898 + C31490 * C5903) * C31325 +
            (C113 * C5894 + C31490 * C5897) * C114) *
               C9204 +
           ((C113 * C1817 + C31490 * C1822) * C31325 +
            (C113 * C1813 + C31490 * C1816) * C114) *
               C9203 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C9202) *
              C31265 * C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C9202 +
           ((C113 * C5895 + C31490 * C5899) * C114 +
            (C113 * C5900 + C31490 * C5904) * C31325) *
               C9203 +
           ((C113 * C5896 + C31490 * C5901) * C114 +
            (C113 * C5902 + C31490 * C5905) * C31325) *
               C9204) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
            C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
               C9202 +
           (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
            C9442 * C1940 + C9443 * C31614) *
               C9203 +
           (C9440 * C1938 + C9441 * C1935 - C9442 * C1939 - C9443 * C1936 +
            (C113 * C2148 + C31490 * C2155) * C1940 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31308 * C31645 +
          ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C9202 +
           (C586 * C1939 - (C585 * C1935 + C584 * C1938) + C587 * C1936 -
            C2476 * C1940 - C2477 * C31614) *
               C9203 +
           (C2476 * C1939 - (C587 * C1935 + C586 * C1938) + C2477 * C1936 -
            (C113 * C2150 + C31490 * C2159) * C1940 -
            (C113 * C2160 + C31490 * C2168) * C31614) *
               C9204) *
              C31265 * C31308 * C31632 +
          (C1964 * C9202 +
           (C589 * C1938 + C590 * C1935 - C591 * C1939 - C592 * C1936 +
            C2478 * C1940 + C2479 * C31614) *
               C9203 +
           (C591 * C1938 + C592 * C1935 - C2478 * C1939 - C2479 * C1936 +
            (C113 * C2152 + C31490 * C2163) * C1940 +
            (C113 * C2164 + C31490 * C2170) * C31614) *
               C9204) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
            C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
               C9202 +
           (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
            C9442 * C1940 + C9443 * C31614) *
               C9203 +
           (C9440 * C1938 + C9441 * C1935 - C9442 * C1939 - C9443 * C1936 +
            (C113 * C2148 + C31490 * C2155) * C1940 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31648 +
          ((C9794 * C1939 -
            ((C113 * C319 + C31490 * C337) * C1935 +
             (C113 * C307 + C31490 * C320) * C1938) +
            C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
               C9202 +
           (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
            C10096 * C1940 - C10097 * C31614) *
               C9203 +
           (C10096 * C1939 - (C9797 * C1935 + C9796 * C1938) + C10097 * C1936 -
            (C113 * C6543 + C31490 * C6547) * C1940 -
            (C113 * C6549 + C31490 * C6552) * C31614) *
               C9204) *
              C31265 * C31636 +
          (((C113 * C308 + C31490 * C321) * C1938 +
            (C113 * C322 + C31490 * C338) * C1935 - C10098 * C1939 -
            C10099 * C1936 + C10100 * C1940 + C10101 * C31614) *
               C9202 +
           (C10098 * C1938 + C10099 * C1935 - C10100 * C1939 - C10101 * C1936 +
            C10102 * C1940 + C10103 * C31614) *
               C9203 +
           (C10100 * C1938 + C10101 * C1935 - C10102 * C1939 - C10103 * C1936 +
            (C113 * C6544 + C31490 * C6548) * C1940 +
            (C113 * C6550 + C31490 * C6553) * C31614) *
               C9204) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31286 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31370) *
              C31286 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31580 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31370) *
              C31294 +
          ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
            (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
               C31580 +
           (C3931 * C104 + (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C3468 -
             (C728 * C3465 + C729 * C3467) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31286 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31370) *
              C31294 +
          ((C3490 * C9202 +
            (C589 * C3467 + C590 * C3465 - C591 * C3468 - C592 * C31412) *
                C9203 +
            (C591 * C3467 + C592 * C3465 - C2478 * C3468 - C2479 * C31412) *
                C9204) *
               C31265 * C31580 +
           (C3930 * C9202 +
            (C2340 * C3468 - (C1056 * C3465 + C1054 * C3467) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C3468 -
             (C2341 * C3465 + C2340 * C3467) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C30318 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31408 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C30310 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31415 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C30324 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C4043) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C30310 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31408 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C30318) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31415 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C30324 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C4043) *
               C31504 * C31265 * C31370) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C30310 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31408 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C30318) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31415 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C30324 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C4043) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C30318 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31408 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C30310 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31415 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C30324 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 -
             (C113 * C513 + C31490 * C523) * C30310 -
             (C113 * C524 + C31490 * C543) * C31415 +
             (C113 * C514 + C31490 * C525) * C30324 +
             (C113 * C526 + C31490 * C544) * C4043) *
                C31504 * C104 +
            (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
            C4071 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             (C113 * C1019 + C31490 * C1028) * C31415 -
             (C113 * C1385 + C31490 * C1394) * C30324 -
             (C113 * C1395 + C31490 * C1412) * C4043) *
                C31504 * C104 +
            (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
            (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
               C31370) *
              C2799 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
            (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
            (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
               C31580 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C31504 * C104 +
            (C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C31504 * C105 +
            (C378 * C30318 + C379 * C31408 - C1057 * C30310 - C1058 * C31415 +
             (C113 * C2317 + C31490 * C2318) * C30324 +
             (C113 * C2319 + C31490 * C2320) * C4043) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
             C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                C9202 +
            (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
             C9442 * C30324 + C9443 * C4043) *
                C9203 +
            (C9440 * C30318 + C9441 * C31408 - C9442 * C30310 - C9443 * C31415 +
             C10762 * C30324 + C10763 * C4043) *
                C9204) *
               C31265 * C31580 +
           ((C9794 * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
                C9202 +
            (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
             C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
                C9203 +
            (C10096 * C30310 - (C9797 * C31408 + C9796 * C30318) +
             C10097 * C31415 - C11136 * C30324 - C11137 * C4043) *
                C9204) *
               C31265 * C31370) *
              C2799 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C9202 +
            (C586 * C30310 - (C585 * C31408 + C584 * C30318) + C587 * C31415 -
             C2476 * C30324 - C2477 * C4043) *
                C9203 +
            (C2476 * C30310 - (C587 * C31408 + C586 * C30318) + C2477 * C31415 -
             C11028 * C30324 - C11029 * C4043) *
                C9204) *
               C31265 * C31580 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C9202 +
            (C1052 * C30318 + C1053 * C31408 - C2338 * C30310 - C2339 * C31415 +
             C10920 * C30324 + C10921 * C4043) *
                C9203 +
            (C2338 * C30318 + C2339 * C31408 - C10920 * C30310 -
             C10921 * C31415 + (C113 * C10911 + C31490 * C10912) * C30324 +
             (C113 * C10913 + C31490 * C10914) * C4043) *
                C9204) *
               C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C3467 +
                (C113 * C123 + C31490 * C136) * C3465 -
                (C113 * C513 + C31490 * C523) * C3468 -
                (C113 * C524 + C31490 * C543) * C31412) *
                   C31504 * C104 +
               (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
                  C31308 * C31654 +
              ((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
               (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 +
               C3493 * C106) *
                  C31308 * C31647 +
              (C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
               (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
                  C31308 * C31634 +
              (C3493 * C104 +
               (C3484 - (C3483 + C3482) + C3485) * C31504 * C105 +
               ((C113 * C833 + C31490 * C834) * C3468 -
                (C172 * C3465 + C173 * C3467) +
                (C113 * C835 + C31490 * C836) * C31412) *
                   C31504 * C106) *
                  C31308 * C31615) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C3467 +
                 (C113 * C123 + C31490 * C136) * C3465 -
                 (C113 * C513 + C31490 * C523) * C3468 -
                 (C113 * C524 + C31490 * C543) * C31412) *
                    C31504 * C104 +
                (C3470 + C3471 - C3472 - C3473) * C31504 * C105 +
                C3492 * C106) *
                   C31648 +
               (((C113 * C1013 + C31490 * C1018) * C3468 -
                 ((C113 * C319 + C31490 * C337) * C3465 +
                  (C113 * C307 + C31490 * C320) * C3467) +
                 (C113 * C1019 + C31490 * C1028) * C31412) *
                    C31504 * C104 +
                (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
                (C3644 - (C3645 + C3646) + C3647) * C31504 * C106) *
                   C31636 +
               (((C113 * C308 + C31490 * C321) * C3467 +
                 (C113 * C322 + C31490 * C338) * C3465 -
                 (C113 * C1388 + C31490 * C1400) * C3468 -
                 (C113 * C1401 + C31490 * C1415) * C31412) *
                    C31504 * C104 +
                (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
                (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
                   C31611) *
                  C2799 +
              (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
                (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 +
                C3493 * C106) *
                   C31648 +
               ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
                (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
                (C378 * C3467 + C379 * C3465 - C1057 * C3468 - C1058 * C31412) *
                    C31504 * C106) *
                   C31636 +
               ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
                (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
                ((C113 * C1691 + C31490 * C1692) * C3468 -
                 (C380 * C3465 + C381 * C3467) +
                 (C113 * C1693 + C31490 * C1694) * C31412) *
                    C31504 * C106) *
                   C31611) *
                  C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 -
            (C113 * C513 + C31490 * C523) * C3758 -
            (C113 * C524 + C31490 * C543) * C31653 +
            (C113 * C514 + C31490 * C525) * C3759 +
            (C113 * C526 + C31490 * C544) * C31644 -
            (C113 * C2147 + C31490 * C2153) * C3760 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
               C31504 * C105 +
           (C3770 + C3771 - C3772 - C3773 + C3774 + C3775 - C3776 - C3777) *
               C31504 * C106) *
              C31308 * C2799 +
          ((C3764 - (C3763 + C3762) + C3765 - C3766 - C3767 + C3768 + C3769) *
               C31504 * C104 +
           (C3772 - (C3771 + C3770) + C3773 - C3774 - C3775 + C3776 + C3777) *
               C31504 * C105 +
           (C593 * C3758 - (C168 * C31656 + C169 * C3757) + C594 * C31653 -
            C595 * C3759 - C596 * C31644 +
            (C113 * C2451 + C31490 * C2452) * C3760 +
            (C113 * C2453 + C31490 * C2454) * C31627) *
               C31504 * C106) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C31654 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3468 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C3465 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3467) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C31647 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C3467 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C3465 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C3468 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C31634 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C3468 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C3465 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C3467) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3757 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31656 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3758 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31653 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C3759 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31644 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C3760 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31308 * C2799 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3758 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31656 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3757) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31653 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C3759 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31644 +
           (C5039 * C2149 + C5035 * C2157 + C5040 * C2582 + C5036 * C2586 +
            C5041 * C6802 + C5037 * C6803) *
               C3760 +
           (C5039 * C2158 + C5035 * C2167 + C5040 * C2587 + C5036 * C2591 +
            C5041 * C6804 + C5037 * C6805) *
               C31627) *
              C31504 * C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
               C9203 +
           (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
               C9204) *
              C31265 * C31308 * C31654 +
          ((C3472 - (C3471 + C3470) + C3473) * C9202 +
           (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
               C9203 +
           (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
               C9204) *
              C31265 * C31308 * C31647 +
          (C3490 * C9202 +
           (C589 * C3467 + C590 * C3465 - C591 * C3468 - C592 * C31412) *
               C9203 +
           (C591 * C3467 + C592 * C3465 - C2478 * C3468 - C2479 * C31412) *
               C9204) *
              C31265 * C31308 * C31634 +
          (C3491 * C9202 +
           (C595 * C3468 - (C594 * C3465 + C593 * C3467) + C596 * C31412) *
               C9203 +
           ((C113 * C2451 + C31490 * C2452) * C3468 -
            (C596 * C3465 + C595 * C3467) +
            (C113 * C2453 + C31490 * C2454) * C31412) *
               C9204) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C31648 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C3467 + C10101 * C3465 - C10102 * C3468 -
             C10103 * C31412) *
                C9204) *
               C31265 * C31611) *
              C2799 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C31648 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31636 +
           ((C3650 - (C3649 + C3648) + C3651) * C9202 +
            (C10352 * C3468 - (C1709 * C3465 + C1708 * C3467) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C3468 -
             (C10353 * C3465 + C10352 * C3467) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 - C9438 * C3758 -
            C9439 * C31653 + C9440 * C3759 + C9441 * C31644 - C9442 * C3760 -
            C9443 * C31627) *
               C9202 +
           (C9438 * C3757 + C9439 * C31656 - C9440 * C3758 - C9441 * C31653 +
            C9442 * C3759 + C9443 * C31644 - C10762 * C3760 - C10763 * C31627) *
               C9203 +
           (C9440 * C3757 + C9441 * C31656 - C9442 * C3758 - C9443 * C31653 +
            C10762 * C3759 + C10763 * C31644 - C10764 * C3760 -
            C10765 * C31627) *
               C9204) *
              C31265 * C31308 * C2799 +
          ((C3764 - (C3763 + C3762) + C3765 - C3766 - C3767 + C3768 + C3769) *
               C9202 +
           (C586 * C3758 - (C585 * C31656 + C584 * C3757) + C587 * C31653 -
            C2476 * C3759 - C2477 * C31644 + C11028 * C3760 + C11029 * C31627) *
               C9203 +
           (C2476 * C3758 - (C587 * C31656 + C586 * C3757) + C2477 * C31653 -
            C11028 * C3759 - C11029 * C31644 +
            (C113 * C11019 + C31490 * C11020) * C3760 +
            (C113 * C11021 + C31490 * C11022) * C31627) *
               C9204) *
              C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C30318 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31408 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C30310 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31415 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C30324 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C4043) *
              C31504 * C31265 * C31308 * C31286 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C30310 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31408 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C30318) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31415 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C30324 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C4043) *
              C31504 * C31265 * C31308 * C31294 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C30318 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31408 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C30310 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31415 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C30324 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C4043) *
              C31504 * C31265 * C31308 * C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 -
            (C113 * C513 + C31490 * C523) * C30310 -
            (C113 * C524 + C31490 * C543) * C31415 +
            (C113 * C514 + C31490 * C525) * C30324 +
            (C113 * C526 + C31490 * C544) * C4043) *
               C31504 * C104 +
           (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
           C4071 * C106) *
              C31308 * C31286 +
          ((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
           (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
           (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
              C31308 * C31294 +
          (C4071 * C104 +
           (C4062 + C4061 - C4060 - C4063 + C4064 + C4065) * C31504 * C105 +
           (C170 * C30318 + C171 * C31408 - C858 * C30310 - C859 * C31415 +
            (C113 * C522 + C31490 * C541) * C30324 +
            (C113 * C542 + C31490 * C552) * C4043) *
               C31504 * C106) *
              C31308 * C3074)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
            C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
               C9202 +
           (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
            C9442 * C30324 + C9443 * C4043) *
               C9203 +
           (C9440 * C30318 + C9441 * C31408 - C9442 * C30310 - C9443 * C31415 +
            C10762 * C30324 + C10763 * C4043) *
               C9204) *
              C31265 * C31308 * C31286 +
          ((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C9202 +
           (C586 * C30310 - (C585 * C31408 + C584 * C30318) + C587 * C31415 -
            C2476 * C30324 - C2477 * C4043) *
               C9203 +
           (C2476 * C30310 - (C587 * C31408 + C586 * C30318) + C2477 * C31415 -
            C11028 * C30324 - C11029 * C4043) *
               C9204) *
              C31265 * C31308 * C31294 +
          (C4070 * C9202 +
           (C589 * C30318 + C590 * C31408 - C591 * C30310 - C592 * C31415 +
            C2478 * C30324 + C2479 * C4043) *
               C9203 +
           (C591 * C30318 + C592 * C31408 - C2478 * C30310 - C2479 * C31415 +
            (C113 * C2152 + C31490 * C2163) * C30324 +
            (C113 * C2164 + C31490 * C2170) * C4043) *
               C9204) *
              C31265 * C31308 * C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31648 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
            (C3644 - (C3645 + C3646) + C3647) * C31504 * C106) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 -
             (C113 * C1388 + C31490 * C1400) * C3468 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
            (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
               C31611) *
              C2799 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31648 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C378 * C3467 + C379 * C3465 - C1057 * C3468 - C1058 * C31412) *
                C31504 * C106) *
               C31636 +
           ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
            (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C3468 -
             (C380 * C3465 + C381 * C3467) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31308 * C31654 +
          ((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
           (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
              C31308 * C31647 +
          (C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
           (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
              C31308 * C31634 +
          (C3493 * C104 + (C3484 - (C3483 + C3482) + C3485) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C3468 -
            (C172 * C3465 + C173 * C3467) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C31654 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3468 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C3465 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3467) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C31647 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C3467 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C3465 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C3468 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C31634 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C3468 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C3465 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C3467) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
               C9203 +
           (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
               C9204) *
              C31265 * C31308 * C31654 +
          ((C3472 - (C3471 + C3470) + C3473) * C9202 +
           (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
               C9203 +
           (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
               C9204) *
              C31265 * C31308 * C31647 +
          (C3490 * C9202 +
           (C589 * C3467 + C590 * C3465 - C591 * C3468 - C592 * C31412) *
               C9203 +
           (C591 * C3467 + C592 * C3465 - C2478 * C3468 - C2479 * C31412) *
               C9204) *
              C31265 * C31308 * C31634 +
          (C3491 * C9202 +
           (C595 * C3468 - (C594 * C3465 + C593 * C3467) + C596 * C31412) *
               C9203 +
           ((C113 * C2451 + C31490 * C2452) * C3468 -
            (C596 * C3465 + C595 * C3467) +
            (C113 * C2453 + C31490 * C2454) * C31412) *
               C9204) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C9203 +
            (C9440 * C3467 + C9441 * C3465 - C9442 * C3468 - C9443 * C31412) *
                C9204) *
               C31265 * C31648 +
           ((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C9203 +
            (C10096 * C3468 - (C9797 * C3465 + C9796 * C3467) +
             C10097 * C31412) *
                C9204) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C3467 + C10101 * C3465 - C10102 * C3468 -
             C10103 * C31412) *
                C9204) *
               C31265 * C31611) *
              C2799 +
          (((C3472 - (C3471 + C3470) + C3473) * C9202 +
            (C586 * C3468 - (C585 * C3465 + C584 * C3467) + C587 * C31412) *
                C9203 +
            (C2476 * C3468 - (C587 * C3465 + C586 * C3467) + C2477 * C31412) *
                C9204) *
               C31265 * C31648 +
           ((C3642 + C3641 - C3640 - C3643) * C9202 +
            (C1052 * C3467 + C1053 * C3465 - C2338 * C3468 - C2339 * C31412) *
                C9203 +
            (C2338 * C3467 + C2339 * C3465 - C10920 * C3468 - C10921 * C31412) *
                C9204) *
               C31265 * C31636 +
           ((C3650 - (C3649 + C3648) + C3651) * C9202 +
            (C10352 * C3468 - (C1709 * C3465 + C1708 * C3467) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C3468 -
             (C10353 * C3465 + C10352 * C3467) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1519 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1520 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C1521 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C31566 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1520 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1519 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C1521 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31580 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C713 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31580) *
              C714 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31580 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C715 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C713 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31580) *
              C714 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C715 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1520 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C1521 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C31566 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1520 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C1521 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C31580 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31370) *
              C713 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31370 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31580) *
              C714 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31580 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31370) *
              C715 +
          ((C722 * C9202 + (C1057 * C114 + C1058 * C31325) * C9203 +
            ((C113 * C2317 + C31490 * C2318) * C114 +
             (C113 * C2319 + C31490 * C2320) * C31325) *
                C9204) *
               C31265 * C31370 -
           ((C596 * C31325 + C595 * C114) * C9204 +
            (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
               C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1519 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1520 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            (C10098 * C114 + C10099 * C31325) * C9203 +
            (C10100 * C114 + C10101 * C31325) * C9204) *
               C31265 * C1521 -
           (((C113 * C5898 + C31490 * C5903) * C31325 +
             (C113 * C5894 + C31490 * C5897) * C114) *
                C9204 +
            ((C113 * C1817 + C31490 * C1822) * C31325 +
             (C113 * C1813 + C31490 * C1816) * C114) *
                C9203 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C9202) *
               C31265 * C31621) *
              C31566 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1520 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1519 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C1521 +
           ((C1545 + C1544) * C9202 +
            ((C113 * C1814 + C31490 * C1818) * C114 +
             (C113 * C1819 + C31490 * C1823) * C31325) *
                C9203 +
            ((C113 * C6700 + C31490 * C6701) * C114 +
             (C113 * C6702 + C31490 * C6703) * C31325) *
                C9204) *
               C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C1519 +
          (((C113 * C1013 + C31490 * C1018) * C832 -
            ((C113 * C319 + C31490 * C337) * C31581 +
             (C113 * C307 + C31490 * C320) * C831) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
              C1520 +
          (((C113 * C308 + C31490 * C321) * C831 +
            (C113 * C322 + C31490 * C338) * C31581 -
            (C113 * C1388 + C31490 * C1400) * C832 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
           (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
              C1521 +
          (((C113 * C1813 + C31490 * C1816) * C832 -
            ((C113 * C1261 + C31490 * C1271) * C31581 +
             (C113 * C1253 + C31490 * C1262) * C831) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C832 -
            (C1540 * C31581 + C1541 * C831) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C832 -
            (C1538 * C31581 + C1539 * C831) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31370) *
              C302 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C31580 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31370) *
              C303 +
          ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
            (C850 + C851 - C862 - C863) * C31504 * C106) *
               C31580 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C832 -
             (C728 * C31581 + C729 * C831) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C302 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C1519 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C832 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31581 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C831) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C1520 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C831 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31581 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C832 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C1521 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C832 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31581 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C831) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            ((C113 * C2581 + C31490 * C2584) * C832 -
             (C9797 * C31581 + C9796 * C831) +
             (C113 * C2585 + C31490 * C2590) * C31412) *
                C9204) *
               C31265 * C31370) *
              C302 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C31580 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 -
             (C113 * C2582 + C31490 * C2586) * C832 -
             (C113 * C2587 + C31490 * C2591) * C31412) *
                C9204) *
               C31265 * C31370) *
              C303 +
          ((C864 * C9202 +
            (C589 * C831 + C590 * C31581 - C591 * C832 - C592 * C31412) *
                C9203 +
            (C591 * C831 + C592 * C31581 - C2478 * C832 - C2479 * C31412) *
                C9204) *
               C31265 * C31580 +
           (C1066 * C9202 +
            (C2340 * C832 - (C1056 * C31581 + C1054 * C831) + C2341 * C31412) *
                C9203 +
            ((C113 * C2583 + C31490 * C2588) * C832 -
             (C2341 * C31581 + C2340 * C831) +
             (C113 * C2589 + C31490 * C2592) * C31412) *
                C9204) *
               C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
               C9203 +
           (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
               C9204) *
              C31265 * C1519 +
          ((C9794 * C832 -
            ((C113 * C319 + C31490 * C337) * C31581 +
             (C113 * C307 + C31490 * C320) * C831) +
            C9795 * C31412) *
               C9202 +
           (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
               C9203 +
           (C10096 * C832 - (C9797 * C31581 + C9796 * C831) + C10097 * C31412) *
               C9204) *
              C31265 * C1520 +
          (((C113 * C308 + C31490 * C321) * C831 +
            (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
            C10099 * C31412) *
               C9202 +
           (C10098 * C831 + C10099 * C31581 - C10100 * C832 - C10101 * C31412) *
               C9203 +
           (C10100 * C831 + C10101 * C31581 - C10102 * C832 - C10103 * C31412) *
               C9204) *
              C31265 * C1521 +
          ((C10460 * C832 -
            ((C113 * C1261 + C31490 * C1271) * C31581 +
             (C113 * C1253 + C31490 * C1262) * C831) +
            C10461 * C31412) *
               C9202 +
           (C10462 * C832 - (C10461 * C31581 + C10460 * C831) +
            C10463 * C31412) *
               C9203 +
           ((C113 * C6904 + C31490 * C6905) * C832 -
            (C10463 * C31581 + C10462 * C831) +
            (C113 * C6906 + C31490 * C6907) * C31412) *
               C9204) *
              C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C114 +
                (C113 * C123 + C31490 * C136) * C31325) *
                   C31504 * C104 +
               (C174 + C175) * C31504 * C105 + C187 * C106) *
                  C31308 * C108 -
              (C188 * C106 + (C177 + C176) * C31504 * C105 +
               (C175 + C174) * C31504 * C104) *
                  C31308 * C109 +
              (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                  C31308 * C110 -
              ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
               C188 * C104) *
                  C31308 * C111 +
              (C189 * C104 + (C183 + C182) * C31504 * C105 +
               ((C113 * C121 + C31490 * C134) * C114 +
                (C113 * C135 + C31490 * C142) * C31325) *
                   C31504 * C106) *
                  C31308 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C31648 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31636 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C31611) *
                  C302 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                (C390 + C391) * C31504 * C106) *
                   C31636 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C31648 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C31611) *
                  C303 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C31648 -
               (((C113 * C331 + C31490 * C343) * C31325 +
                 (C113 * C313 + C31490 * C332) * C114) *
                    C31504 * C106 +
                (C391 + C390) * C31504 * C105 + C396 * C104) *
                   C31636 +
               (C397 * C104 + (C393 + C392) * C31504 * C105 +
                ((C113 * C314 + C31490 * C333) * C114 +
                 (C113 * C334 + C31490 * C344) * C31325) *
                    C31504 * C106) *
                   C31611) *
                  C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C31308 * C302 +
          ((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
           (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
           (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
              C31308 * C303 +
          (C613 * C104 +
           (C577 + C576 - C605 - C606 + C607 + C608) * C31504 * C105 +
           (C170 * C510 + C171 * C31649 - (C113 * C521 + C31490 * C539) * C511 -
            (C113 * C540 + C31490 * C551) * C31638 +
            (C113 * C522 + C31490 * C541) * C512 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C1177 +
          (((C113 * C1013 + C31490 * C1018) * C511 -
            ((C113 * C319 + C31490 * C337) * C31649 +
             (C113 * C307 + C31490 * C320) * C510) +
            (C113 * C1019 + C31490 * C1028) * C31638 -
            (C113 * C1385 + C31490 * C1394) * C512 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C511 - (C372 * C31649 + C373 * C510) + C1053 * C31638 -
            (C113 * C1386 + C31490 * C1396) * C512 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C511 - (C370 * C31649 + C371 * C510) + C1056 * C31638 -
            (C113 * C1387 + C31490 * C1398) * C512 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C1178 +
          (((C113 * C308 + C31490 * C321) * C510 +
            (C113 * C322 + C31490 * C338) * C31649 -
            (C113 * C1388 + C31490 * C1400) * C511 -
            (C113 * C1401 + C31490 * C1415) * C31638 +
            (C113 * C1389 + C31490 * C1402) * C512 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C510 + C375 * C31649 -
            (C113 * C1390 + C31490 * C1404) * C511 -
            (C113 * C1405 + C31490 * C1417) * C31638 +
            (C113 * C1391 + C31490 * C1406) * C512 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C510 + C377 * C31649 -
            (C113 * C1392 + C31490 * C1408) * C511 -
            (C113 * C1409 + C31490 * C1419) * C31638 +
            (C113 * C1393 + C31490 * C1410) * C512 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C302 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C511 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31649 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C510) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31638 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C512 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C510 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31649 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C511 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31638 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C512 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C1177 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C511 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31649 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C510) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31638 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C512 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C1178 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C510 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31649 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C511 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31638 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C512 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           ((C113 * C513 + C31490 * C523) * C114 +
            (C113 * C524 + C31490 * C543) * C31325) *
               C9203 +
           ((C113 * C514 + C31490 * C525) * C114 +
            (C113 * C526 + C31490 * C544) * C31325) *
               C9204) *
              C31265 * C31308 * C108 -
          ((C587 * C31325 + C586 * C114) * C9204 +
           (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
              C31265 * C31308 * C109 +
          (C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
           (C591 * C114 + C592 * C31325) * C9204) *
              C31265 * C31308 * C110 -
          ((C596 * C31325 + C595 * C114) * C9204 +
           (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
              C31265 * C31308 * C111 +
          (C186 * C9202 + (C858 * C114 + C859 * C31325) * C9203 +
           ((C113 * C522 + C31490 * C541) * C114 +
            (C113 * C542 + C31490 * C552) * C31325) *
               C9204) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            ((C113 * C513 + C31490 * C523) * C114 +
             (C113 * C524 + C31490 * C543) * C31325) *
                C9203 +
            ((C113 * C514 + C31490 * C525) * C114 +
             (C113 * C526 + C31490 * C544) * C31325) *
                C9204) *
               C31265 * C31648 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C302 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31636 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31648 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C303 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31648 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31636 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
            C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
               C9202 +
           (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
            C9442 * C512 + C9443 * C31614) *
               C9203 +
           (C9440 * C510 + C9441 * C31649 - C9442 * C511 - C9443 * C31638 +
            (C113 * C2148 + C31490 * C2155) * C512 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C31308 * C302 +
          ((C597 - (C555 + C554) + C598 - C599 - C600) * C9202 +
           (C586 * C511 - (C585 * C31649 + C584 * C510) + C587 * C31638 -
            C2476 * C512 - C2477 * C31614) *
               C9203 +
           (C2476 * C511 - (C587 * C31649 + C586 * C510) + C2477 * C31638 -
            (C113 * C2150 + C31490 * C2159) * C512 -
            (C113 * C2160 + C31490 * C2168) * C31614) *
               C9204) *
              C31265 * C31308 * C303 +
          (C612 * C9202 +
           (C589 * C510 + C590 * C31649 - C591 * C511 - C592 * C31638 +
            C2478 * C512 + C2479 * C31614) *
               C9203 +
           (C591 * C510 + C592 * C31649 - C2478 * C511 - C2479 * C31638 +
            (C113 * C2152 + C31490 * C2163) * C512 +
            (C113 * C2164 + C31490 * C2170) * C31614) *
               C9204) *
              C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1177 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31645 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1178 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1177 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C31632 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C1177 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C1178 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           (C9438 * C114 + C9439 * C31325) * C9203 +
           (C9440 * C114 + C9441 * C31325) * C9204) *
              C31265 * C1245 -
          ((C9797 * C31325 + C9796 * C114) * C9204 +
           (C9795 * C31325 + C9794 * C114) * C9203 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C9202) *
              C31265 * C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C9202 +
           ((C113 * C1388 + C31490 * C1400) * C114 +
            (C113 * C1401 + C31490 * C1415) * C31325) *
               C9203 +
           ((C113 * C1389 + C31490 * C1402) * C114 +
            (C113 * C1403 + C31490 * C1416) * C31325) *
               C9204) *
              C31265 * C1247 -
          (((C113 * C5898 + C31490 * C5903) * C31325 +
            (C113 * C5894 + C31490 * C5897) * C114) *
               C9204 +
           ((C113 * C1817 + C31490 * C1822) * C31325 +
            (C113 * C1813 + C31490 * C1816) * C114) *
               C9203 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C9202) *
              C31265 * C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C9202 +
           ((C113 * C5895 + C31490 * C5899) * C114 +
            (C113 * C5900 + C31490 * C5904) * C31325) *
               C9203 +
           ((C113 * C5896 + C31490 * C5901) * C114 +
            (C113 * C5902 + C31490 * C5905) * C31325) *
               C9204) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
            C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
               C9202 +
           (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
            C9442 * C512 + C9443 * C31614) *
               C9203 +
           (C9440 * C510 + C9441 * C31649 - C9442 * C511 - C9443 * C31638 +
            (C113 * C2148 + C31490 * C2155) * C512 +
            (C113 * C2156 + C31490 * C2166) * C31614) *
               C9204) *
              C31265 * C1177 +
          ((C9794 * C511 -
            ((C113 * C319 + C31490 * C337) * C31649 +
             (C113 * C307 + C31490 * C320) * C510) +
            C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
               C9202 +
           (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
            C10096 * C512 - C10097 * C31614) *
               C9203 +
           (C10096 * C511 - (C9797 * C31649 + C9796 * C510) + C10097 * C31638 -
            (C113 * C6543 + C31490 * C6547) * C512 -
            (C113 * C6549 + C31490 * C6552) * C31614) *
               C9204) *
              C31265 * C1178 +
          (((C113 * C308 + C31490 * C321) * C510 +
            (C113 * C322 + C31490 * C338) * C31649 - C10098 * C511 -
            C10099 * C31638 + C10100 * C512 + C10101 * C31614) *
               C9202 +
           (C10098 * C510 + C10099 * C31649 - C10100 * C511 - C10101 * C31638 +
            C10102 * C512 + C10103 * C31614) *
               C9203 +
           (C10100 * C510 + C10101 * C31649 - C10102 * C511 - C10103 * C31638 +
            (C113 * C6544 + C31490 * C6548) * C512 +
            (C113 * C6550 + C31490 * C6553) * C31614) *
               C9204) *
              C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C1177 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 -
             (C113 * C1388 + C31490 * C1400) * C832 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
            (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
               C31611) *
              C31566 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C1177 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C1178 +
           ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
            (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C832 -
             (C380 * C31581 + C381 * C831) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C31308 * C713 +
          ((C840 - (C839 + C838) + C841) * C31504 * C104 +
           (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
              C31308 * C714 +
          (C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
           (C850 + C851 - C862 - C863) * C31504 * C106) *
              C31308 * C715 +
          (C867 * C104 + (C862 - (C851 + C850) + C863) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C832 -
            (C172 * C31581 + C173 * C831) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C713 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C832 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31581 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C831) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C831 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31581 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C832 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C715 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C832 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31581 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C831) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
            C9439 * C31412) *
               C9202 +
           (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
               C9203 +
           (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
               C9204) *
              C31265 * C31308 * C713 +
          ((C840 - (C839 + C838) + C841) * C9202 +
           (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
               C9203 +
           (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
               C9204) *
              C31265 * C31308 * C714 +
          (C864 * C9202 +
           (C589 * C831 + C590 * C31581 - C591 * C832 - C592 * C31412) * C9203 +
           (C591 * C831 + C592 * C31581 - C2478 * C832 - C2479 * C31412) *
               C9204) *
              C31265 * C31308 * C715 +
          (C865 * C9202 +
           (C595 * C832 - (C594 * C31581 + C593 * C831) + C596 * C31412) *
               C9203 +
           ((C113 * C2451 + C31490 * C2452) * C832 -
            (C596 * C31581 + C595 * C831) +
            (C113 * C2453 + C31490 * C2454) * C31412) *
               C9204) *
              C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C9202 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C9203 +
            (C9440 * C831 + C9441 * C31581 - C9442 * C832 - C9443 * C31412) *
                C9204) *
               C31265 * C1177 +
           ((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C9202 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C9203 +
            (C10096 * C832 - (C9797 * C31581 + C9796 * C831) +
             C10097 * C31412) *
                C9204) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
             C10099 * C31412) *
                C9202 +
            (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
             C10101 * C31412) *
                C9203 +
            (C10100 * C831 + C10101 * C31581 - C10102 * C832 -
             C10103 * C31412) *
                C9204) *
               C31265 * C31611) *
              C31566 +
          (((C840 - (C839 + C838) + C841) * C9202 +
            (C586 * C832 - (C585 * C31581 + C584 * C831) + C587 * C31412) *
                C9203 +
            (C2476 * C832 - (C587 * C31581 + C586 * C831) + C2477 * C31412) *
                C9204) *
               C31265 * C1177 +
           ((C1037 + C1036 - C1059 - C1060) * C9202 +
            (C1052 * C831 + C1053 * C31581 - C2338 * C832 - C2339 * C31412) *
                C9203 +
            (C2338 * C831 + C2339 * C31581 -
             (C113 * C2582 + C31490 * C2586) * C832 -
             (C113 * C2587 + C31490 * C2591) * C31412) *
                C9204) *
               C31265 * C1178 +
           ((C1712 - (C1697 + C1696) + C1713) * C9202 +
            (C10352 * C832 - (C1709 * C31581 + C1708 * C831) +
             C10353 * C31412) *
                C9203 +
            ((C113 * C6802 + C31490 * C6803) * C832 -
             (C10353 * C31581 + C10352 * C831) +
             (C113 * C6804 + C31490 * C6805) * C31412) *
                C9204) *
               C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31648 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C302 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            (C390 + C391) * C31504 * C106) *
               C31636 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31648 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C303 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31648 -
           (((C113 * C331 + C31490 * C343) * C31325 +
             (C113 * C313 + C31490 * C332) * C114) *
                C31504 * C106 +
            (C391 + C390) * C31504 * C105 + C396 * C104) *
               C31636 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C31308 * C108 -
          (C188 * C106 + (C177 + C176) * C31504 * C105 +
           (C175 + C174) * C31504 * C104) *
              C31308 * C109 +
          (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C31308 *
              C110 -
          ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
           C188 * C104) *
              C31308 * C111 +
          (C189 * C104 + (C183 + C182) * C31504 * C105 +
           ((C113 * C121 + C31490 * C134) * C114 +
            (C113 * C135 + C31490 * C142) * C31325) *
               C31504 * C106) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           ((C113 * C513 + C31490 * C523) * C114 +
            (C113 * C524 + C31490 * C543) * C31325) *
               C9203 +
           ((C113 * C514 + C31490 * C525) * C114 +
            (C113 * C526 + C31490 * C544) * C31325) *
               C9204) *
              C31265 * C31308 * C108 -
          ((C587 * C31325 + C586 * C114) * C9204 +
           (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
              C31265 * C31308 * C109 +
          (C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
           (C591 * C114 + C592 * C31325) * C9204) *
              C31265 * C31308 * C110 -
          ((C596 * C31325 + C595 * C114) * C9204 +
           (C594 * C31325 + C593 * C114) * C9203 + C185 * C9202) *
              C31265 * C31308 * C111 +
          (C186 * C9202 + (C858 * C114 + C859 * C31325) * C9203 +
           ((C113 * C522 + C31490 * C541) * C114 +
            (C113 * C542 + C31490 * C552) * C31325) *
               C9204) *
              C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            ((C113 * C513 + C31490 * C523) * C114 +
             (C113 * C524 + C31490 * C543) * C31325) *
                C9203 +
            ((C113 * C514 + C31490 * C525) * C114 +
             (C113 * C526 + C31490 * C544) * C31325) *
                C9204) *
               C31265 * C31648 -
           (((C113 * C1395 + C31490 * C1412) * C31325 +
             (C113 * C1385 + C31490 * C1394) * C114) *
                C9204 +
            ((C113 * C1019 + C31490 * C1028) * C31325 +
             (C113 * C1013 + C31490 * C1018) * C114) *
                C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C302 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C31636 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C31648 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C303 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C31648 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C31636 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C9202 +
            (C9438 * C114 + C9439 * C31325) * C9203 +
            (C9440 * C114 + C9441 * C31325) * C9204) *
               C31265 * C1177 -
           ((C9797 * C31325 + C9796 * C114) * C9204 +
            (C9795 * C31325 + C9794 * C114) * C9203 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C9202) *
               C31265 * C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C9202 +
            ((C113 * C1388 + C31490 * C1400) * C114 +
             (C113 * C1401 + C31490 * C1415) * C31325) *
                C9203 +
            ((C113 * C1389 + C31490 * C1402) * C114 +
             (C113 * C1403 + C31490 * C1416) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31645 +
          (((C385 + C384) * C9202 + (C1052 * C114 + C1053 * C31325) * C9203 +
            (C2338 * C114 + C2339 * C31325) * C9204) *
               C31265 * C1178 -
           ((C587 * C31325 + C586 * C114) * C9204 +
            (C585 * C31325 + C584 * C114) * C9203 + (C175 + C174) * C9202) *
               C31265 * C1177 -
           (((C113 * C1407 + C31490 * C1418) * C31325 +
             (C113 * C1391 + C31490 * C1406) * C114) *
                C9204 +
            (C1709 * C31325 + C1708 * C114) * C9203 + (C387 + C386) * C9202) *
               C31265 * C31611) *
              C31632 +
          ((C184 * C9202 + (C589 * C114 + C590 * C31325) * C9203 +
            (C591 * C114 + C592 * C31325) * C9204) *
               C31265 * C1177 -
           ((C2341 * C31325 + C2340 * C114) * C9204 +
            (C1056 * C31325 + C1054 * C114) * C9203 + C394 * C9202) *
               C31265 * C1178 +
           (C395 * C9202 + (C1710 * C114 + C1711 * C31325) * C9203 +
            ((C113 * C1393 + C31490 * C1410) * C114 +
             (C113 * C1411 + C31490 * C1420) * C31325) *
                C9204) *
               C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C9202 +
           (C9438 * C114 + C9439 * C31325) * C9203 +
           (C9440 * C114 + C9441 * C31325) * C9204) *
              C31265 * C1245 -
          ((C9797 * C31325 + C9796 * C114) * C9204 +
           (C9795 * C31325 + C9794 * C114) * C9203 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C9202) *
              C31265 * C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C9202 +
           ((C113 * C1388 + C31490 * C1400) * C114 +
            (C113 * C1401 + C31490 * C1415) * C31325) *
               C9203 +
           ((C113 * C1389 + C31490 * C1402) * C114 +
            (C113 * C1403 + C31490 * C1416) * C31325) *
               C9204) *
              C31265 * C1247 -
          (((C113 * C5898 + C31490 * C5903) * C31325 +
            (C113 * C5894 + C31490 * C5897) * C114) *
               C9204 +
           ((C113 * C1817 + C31490 * C1822) * C31325 +
            (C113 * C1813 + C31490 * C1816) * C114) *
               C9203 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C9202) *
              C31265 * C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C9202 +
           ((C113 * C5895 + C31490 * C5899) * C114 +
            (C113 * C5900 + C31490 * C5904) * C31325) *
               C9203 +
           ((C113 * C5896 + C31490 * C5901) * C114 +
            (C113 * C5902 + C31490 * C5905) * C31325) *
               C9204) *
              C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31366 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31373 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C3071) *
              C31286 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31373 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31366 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C3071) *
              C31294 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31366 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31373 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C3071) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C31366 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C31373 +
           ((((C113 * C308 + C31490 * C321) * C831 +
              (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C1696 + C1697 - C1712 - C1713) * C19145 +
             (C20650 + C20651 - C20652 - C20653) * C19146) *
                C13454) *
               C3071) *
              C2799 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C31366 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C31373 +
           (((C1712 - (C1697 + C1696) + C1713) * C19145 +
             (C20652 - (C20651 + C20650) + C20653) * C19146) *
                C13453 +
            ((C1714 - (C1703 + C1702) + C1715) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C832 -
              (C1711 * C31581 + C1710 * C831) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31655 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31651 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31641 -
           (((C20454 + C20455) * C19146 + (C1544 + C1545) * C19145) * C13454 +
            ((C10461 * C31325 + C10460 * C114) * C19146 +
             ((C113 * C1261 + C31490 * C1271) * C31325 +
              (C113 * C1253 + C31490 * C1262) * C114) *
                 C19145) *
                C13453) *
               C31621) *
              C2799 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31651 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31655 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31641 +
           (((C1545 + C1544) * C19145 + (C20455 + C20454) * C19146) * C13453 +
            ((C1543 + C1542) * C19145 +
             ((C113 * C1815 + C31490 * C1820) * C114 +
              (C113 * C1821 + C31490 * C1824) * C31325) *
                 C19146) *
                C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C2691 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31370) *
              C31654 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31370 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C2691) *
              C31647 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C2691 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31370) *
              C31634 +
          (((C722 * C19145 + (C19599 + C19598) * C19146) * C13453 +
            ((C731 + C730) * C19145 +
             ((C113 * C1017 + C31490 * C1026) * C114 +
              (C113 * C1027 + C31490 * C1032) * C31325) *
                 C19146) *
                C13454) *
               C31370 -
           (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
            ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C510 +
              (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
              C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                 C19145 +
             (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
              C9442 * C512 + C9443 * C31614) *
                 C19146) *
                C13453 +
            ((C554 + C555 - C597 - C598 + C599 + C600) * C19145 +
             (C19456 + C19457 - C19458 - C19459 + C19460 + C19461) * C19146) *
                C13454) *
               C2691 +
           (((C9794 * C511 -
              ((C113 * C319 + C31490 * C337) * C31649 +
               (C113 * C307 + C31490 * C320) * C510) +
              C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
                 C19145 +
             (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
              C10096 * C512 - C10097 * C31614) *
                 C19146) *
                C13453 +
            ((C2948 - (C2949 + C2950) + C2951 - C2952 - C2953) * C19145 +
             (C22092 - (C22093 + C22094) + C22095 - C22096 - C22097) * C19146) *
                C13454) *
               C31370) *
              C2799 +
          ((((C597 - (C555 + C554) + C598 - C599 - C600) * C19145 +
             (C19458 - (C19457 + C19456) + C19459 - C19460 - C19461) * C19146) *
                C13453 +
            ((C601 - (C565 + C564) + C602 - C603 - C604) * C19145 +
             (C19462 - (C19463 + C19464) + C19465 - C19466 - C19467) * C19146) *
                C13454) *
               C2691 +
           (((C2950 + C2949 - C2948 - C2951 + C2952 + C2953) * C19145 +
             (C22094 + C22093 - C22092 - C22095 + C22096 + C22097) * C19146) *
                C13453 +
            ((C2956 + C2955 - C2954 - C2957 + C2958 + C2959) * C19145 +
             (C1054 * C510 + C1056 * C31649 - C2340 * C511 - C2341 * C31638 +
              (C113 * C2583 + C31490 * C2588) * C512 +
              (C113 * C2589 + C31490 * C2592) * C31614) *
                 C19146) *
                C13454) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C2691 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C31370) *
              C31286 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C2691 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C31370) *
              C31294 +
          (((C864 * C19145 + (C19736 + C19735 - C19734 - C19737) * C19146) *
                C13453 +
            ((C848 + C847 - C846 - C849) * C19145 +
             (C19738 + C19739 - C19740 - C19741) * C19146) *
                C13454) *
               C2691 +
           ((C1066 * C19145 + (C19942 - (C19941 + C19940) + C19943) * C19146) *
                C13453 +
            ((C1063 - (C1047 + C1046) + C1064) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C832 -
              (C1058 * C31581 + C1057 * C831) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C2691 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31370) *
              C31654 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31370 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C2691) *
              C31647 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C2691 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31370) *
              C31634 +
          (((C722 * C19145 + (C19599 + C19598) * C19146) * C13453 +
            ((C731 + C730) * C19145 +
             ((C113 * C1017 + C31490 * C1026) * C114 +
              (C113 * C1027 + C31490 * C1032) * C31325) *
                 C19146) *
                C13454) *
               C31370 -
           (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
            ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31655 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31651 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31641 -
           (((C20454 + C20455) * C19146 + (C1544 + C1545) * C19145) * C13454 +
            ((C10461 * C31325 + C10460 * C114) * C19146 +
             ((C113 * C1261 + C31490 * C1271) * C31325 +
              (C113 * C1253 + C31490 * C1262) * C114) *
                 C19145) *
                C13453) *
               C31621) *
              C2799 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31651 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31655 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31641 +
           (((C1545 + C1544) * C19145 + (C20455 + C20454) * C19146) * C13453 +
            ((C1543 + C1542) * C19145 +
             ((C113 * C1815 + C31490 * C1820) * C114 +
              (C113 * C1821 + C31490 * C1824) * C31325) *
                 C19146) *
                C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C31366 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31373 +
           ((((C113 * C308 + C31490 * C321) * C3467 +
              (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C3648 + C3649 - C3650 - C3651) * C19145 +
             (C22972 + C22973 - C22974 - C22975) * C19146) *
                C13454) *
               C3071) *
              C31566 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C31366 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C23308 + C23309 - C23310 - C23311) * C19146) *
                C13454) *
               C31373 +
           (((C3650 - (C3649 + C3648) + C3651) * C19145 +
             (C22974 - (C22973 + C22972) + C22975) * C19146) *
                C13453 +
            ((C3654 - (C3653 + C3652) + C3655) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C3468 -
              (C1711 * C3465 + C1710 * C3467) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C3071) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
             C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                C19145 +
            (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
             C9442 * C30324 + C9443 * C4043) *
                C19146) *
               C13453 +
           ((C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C19145 +
            (C23458 + C23459 - C23460 - C23461 + C23462 + C23463) * C19146) *
               C13454) *
              C31366 +
          (((C9794 * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
                C19145 +
            (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
             C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
                C19146) *
               C13453 +
           ((C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C19145 +
            (C23664 - (C23665 + C23666) + C23667 - C23668 - C23669) * C19146) *
               C13454) *
              C31373 +
          ((((C113 * C308 + C31490 * C321) * C30318 +
             (C113 * C322 + C31490 * C338) * C31408 - C10098 * C30310 -
             C10099 * C31415 + C10100 * C30324 + C10101 * C4043) *
                C19145 +
            (C10098 * C30318 + C10099 * C31408 - C10100 * C30310 -
             C10101 * C31415 + C10102 * C30324 + C10103 * C4043) *
                C19146) *
               C13453 +
           ((C374 * C30318 + C375 * C31408 - C1708 * C30310 - C1709 * C31415 +
             C10352 * C30324 + C10353 * C4043) *
                C19145 +
            (C1708 * C30318 + C1709 * C31408 - C10352 * C30310 -
             C10353 * C31415 + (C113 * C6802 + C31490 * C6803) * C30324 +
             (C113 * C6804 + C31490 * C6805) * C4043) *
                C19146) *
               C13454) *
              C3071) *
         C31281) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C3470 + C3471 - C3472 - C3473) * C19145 +
            (C22762 + C22763 - C22764 - C22765) * C19146) *
               C13454) *
              C31655 +
          (((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C19145 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C19146) *
               C13453 +
           ((C3640 - (C3641 + C3642) + C3643) * C19145 +
            (C22968 - (C22969 + C22970) + C22971) * C19146) *
               C13454) *
              C31651 +
          ((((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
             C10099 * C31412) *
                C19145 +
            (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
             C10101 * C31412) *
                C19146) *
               C13453 +
           ((C3648 + C3649 - C3650 - C3651) * C19145 +
            (C22972 + C22973 - C22974 - C22975) * C19146) *
               C13454) *
              C31641 +
          (((C10460 * C3468 -
             ((C113 * C1261 + C31490 * C1271) * C3465 +
              (C113 * C1253 + C31490 * C1262) * C3467) +
             C10461 * C31412) *
                C19145 +
            (C10462 * C3468 - (C10461 * C3465 + C10460 * C3467) +
             C10463 * C31412) *
                C19146) *
               C13453 +
           ((C20453 * C3468 - (C1540 * C3465 + C1541 * C3467) +
             C20452 * C31412) *
                C19145 +
            ((C113 * C6700 + C31490 * C6701) * C3468 -
             (C20452 * C3465 + C20453 * C3467) +
             (C113 * C6702 + C31490 * C6703) * C31412) *
                C19146) *
               C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C2691 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31370) *
              C31645 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C2691 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C23308 + C23309 - C23310 - C23311) * C19146) *
                C13454) *
               C31370) *
              C31632 +
          (((C3490 * C19145 + (C22768 + C22767 - C22766 - C22769) * C19146) *
                C13453 +
            ((C3480 + C3479 - C3478 - C3481) * C19145 +
             (C22770 + C22771 - C22772 - C22773) * C19146) *
                C13454) *
               C2691 +
           ((C3930 * C19145 + (C23310 - (C23309 + C23308) + C23311) * C19146) *
                C13453 +
            ((C3927 - (C3926 + C3925) + C3928) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C3468 -
              (C1058 * C3465 + C1057 * C3467) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3757 +
             (C113 * C123 + C31490 * C136) * C31656 - C9438 * C3758 -
             C9439 * C31653 + C9440 * C3759 + C9441 * C31644 - C9442 * C3760 -
             C9443 * C31627) *
                C19145 +
            (C9438 * C3757 + C9439 * C31656 - C9440 * C3758 - C9441 * C31653 +
             C9442 * C3759 + C9443 * C31644 - C10762 * C3760 -
             C10763 * C31627) *
                C19146) *
               C13453 +
           ((C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
                C19145 +
            (C23106 + C23107 - C23108 - C23109 + C23110 + C23111 - C23112 -
             C23113) *
                C19146) *
               C13454) *
              C2691 +
          (((C9794 * C3758 -
             ((C113 * C319 + C31490 * C337) * C31656 +
              (C113 * C307 + C31490 * C320) * C3757) +
             C9795 * C31653 - C9796 * C3759 - C9797 * C31644 + C10096 * C3760 +
             C10097 * C31627) *
                C19145 +
            (C9796 * C3758 - (C9795 * C31656 + C9794 * C3757) + C9797 * C31653 -
             C10096 * C3759 - C10097 * C31644 + C11136 * C3760 +
             C11137 * C31627) *
                C19146) *
               C13453 +
           ((C1052 * C3758 - (C372 * C31656 + C373 * C3757) + C1053 * C31653 -
             C2338 * C3759 - C2339 * C31644 + C10920 * C3760 +
             C10921 * C31627) *
                C19145 +
            (C2338 * C3758 - (C1053 * C31656 + C1052 * C3757) + C2339 * C31653 -
             C10920 * C3759 - C10921 * C31644 +
             (C113 * C10911 + C31490 * C10912) * C3760 +
             (C113 * C10913 + C31490 * C10914) * C31627) *
                C19146) *
               C13454) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C30318 +
              (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
              C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                 C19145 +
             (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 -
              C9441 * C31415 + C9442 * C30324 + C9443 * C4043) *
                 C19146) *
                C13453 +
            ((C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C19145 +
             (C23458 + C23459 - C23460 - C23461 + C23462 + C23463) * C19146) *
                C13454) *
               C2691 +
           (((C9794 * C30310 -
              ((C113 * C319 + C31490 * C337) * C31408 +
               (C113 * C307 + C31490 * C320) * C30318) +
              C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
                 C19145 +
             (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
              C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
                 C19146) *
                C13453 +
            ((C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C19145 +
             (C23664 - (C23665 + C23666) + C23667 - C23668 - C23669) * C19146) *
                C13454) *
               C31370) *
              C31566 +
          ((((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C19145 +
             (C23460 - (C23459 + C23458) + C23461 - C23462 - C23463) * C19146) *
                C13453 +
            ((C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C19145 +
             (C23464 - (C23465 + C23466) + C23467 - C23468 - C23469) * C19146) *
                C13454) *
               C2691 +
           (((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C19145 +
             (C23666 + C23665 - C23664 - C23667 + C23668 + C23669) * C19146) *
                C13453 +
            ((C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C19145 +
             (C1054 * C30318 + C1056 * C31408 - C2340 * C30310 -
              C2341 * C31415 + (C113 * C2583 + C31490 * C2588) * C30324 +
              (C113 * C2589 + C31490 * C2592) * C4043) *
                 C19146) *
                C13454) *
               C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C2691 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31370) *
              C31645 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C2691 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C23308 + C23309 - C23310 - C23311) * C19146) *
                C13454) *
               C31370) *
              C31632 +
          (((C3490 * C19145 + (C22768 + C22767 - C22766 - C22769) * C19146) *
                C13453 +
            ((C3480 + C3479 - C3478 - C3481) * C19145 +
             (C22770 + C22771 - C22772 - C22773) * C19146) *
                C13454) *
               C2691 +
           ((C3930 * C19145 + (C23310 - (C23309 + C23308) + C23311) * C19146) *
                C13453 +
            ((C3927 - (C3926 + C3925) + C3928) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C3468 -
              (C1058 * C3465 + C1057 * C3467) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C3470 + C3471 - C3472 - C3473) * C19145 +
            (C22762 + C22763 - C22764 - C22765) * C19146) *
               C13454) *
              C31655 +
          (((C9794 * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             C9795 * C31412) *
                C19145 +
            (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) + C9797 * C31412) *
                C19146) *
               C13453 +
           ((C3640 - (C3641 + C3642) + C3643) * C19145 +
            (C22968 - (C22969 + C22970) + C22971) * C19146) *
               C13454) *
              C31651 +
          ((((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
             C10099 * C31412) *
                C19145 +
            (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
             C10101 * C31412) *
                C19146) *
               C13453 +
           ((C3648 + C3649 - C3650 - C3651) * C19145 +
            (C22972 + C22973 - C22974 - C22975) * C19146) *
               C13454) *
              C31641 +
          (((C10460 * C3468 -
             ((C113 * C1261 + C31490 * C1271) * C3465 +
              (C113 * C1253 + C31490 * C1262) * C3467) +
             C10461 * C31412) *
                C19145 +
            (C10462 * C3468 - (C10461 * C3465 + C10460 * C3467) +
             C10463 * C31412) *
                C19146) *
               C13453 +
           ((C20453 * C3468 - (C1540 * C3465 + C1541 * C3467) +
             C20452 * C31412) *
                C19145 +
            ((C113 * C6700 + C31490 * C6701) * C3468 -
             (C20452 * C3465 + C20453 * C3467) +
             (C113 * C6702 + C31490 * C6703) * C31412) *
                C19146) *
               C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1519 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1520 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C1521 -
           (((C20454 + C20455) * C19146 + (C1544 + C1545) * C19145) * C13454 +
            ((C10461 * C31325 + C10460 * C114) * C19146 +
             ((C113 * C1261 + C31490 * C1271) * C31325 +
              (C113 * C1253 + C31490 * C1262) * C114) *
                 C19145) *
                C13453) *
               C31621) *
              C31566 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1520 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1519 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C1521 +
           (((C1545 + C1544) * C19145 + (C20455 + C20454) * C19146) * C13453 +
            ((C1543 + C1542) * C19145 +
             ((C113 * C1815 + C31490 * C1820) * C114 +
              (C113 * C1821 + C31490 * C1824) * C31325) *
                 C19146) *
                C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31580 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31370) *
              C713 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31370 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31580) *
              C714 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31580 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31370) *
              C715 +
          (((C722 * C19145 + (C19599 + C19598) * C19146) * C13453 +
            ((C731 + C730) * C19145 +
             ((C113 * C1017 + C31490 * C1026) * C114 +
              (C113 * C1027 + C31490 * C1032) * C31325) *
                 C19146) *
                C13454) *
               C31370 -
           (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
            ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C1938 +
              (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
              C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                 C19145 +
             (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
              C9442 * C1940 + C9443 * C31614) *
                 C19146) *
                C13453 +
            ((C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C19145 +
             (C20930 + C20931 - C20932 - C20933 + C20934 + C20935) * C19146) *
                C13454) *
               C31580 +
           (((C9794 * C1939 -
              ((C113 * C319 + C31490 * C337) * C1935 +
               (C113 * C307 + C31490 * C320) * C1938) +
              C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
                 C19145 +
             (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
              C10096 * C1940 - C10097 * C31614) *
                 C19146) *
                C13453 +
            ((C2322 - (C2323 + C2324) + C2325 - C2342 - C2343) * C19145 +
             (C21364 - (C21365 + C21366) + C21367 - C21368 - C21369) * C19146) *
                C13454) *
               C31370) *
              C31566 +
          ((((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C19145 +
             (C20932 - (C20931 + C20930) + C20933 - C20934 - C20935) * C19146) *
                C13453 +
            ((C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C19145 +
             (C20936 - (C20937 + C20938) + C20939 - C20940 - C20941) * C19146) *
                C13454) *
               C31580 +
           (((C2324 + C2323 - C2322 - C2325 + C2342 + C2343) * C19145 +
             (C21366 + C21365 - C21364 - C21367 + C21368 + C21369) * C19146) *
                C13453 +
            ((C2332 + C2331 - C2330 - C2333 + C2344 + C2345) * C19145 +
             (C1054 * C1938 + C1056 * C1935 - C2340 * C1939 - C2341 * C1936 +
              (C113 * C2583 + C31490 * C2588) * C1940 +
              (C113 * C2589 + C31490 * C2592) * C31614) *
                 C19146) *
                C13454) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C838 + C839 - C840 - C841) * C19145 +
            (C19730 + C19731 - C19732 - C19733) * C19146) *
               C13454) *
              C1519 +
          (((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C19145 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C19146) *
               C13453 +
           ((C1059 - (C1036 + C1037) + C1060) * C19145 +
            (C19936 - (C19937 + C19938) + C19939) * C19146) *
               C13454) *
              C1520 +
          ((((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
             C10099 * C31412) *
                C19145 +
            (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
             C10101 * C31412) *
                C19146) *
               C13453 +
           ((C1696 + C1697 - C1712 - C1713) * C19145 +
            (C20650 + C20651 - C20652 - C20653) * C19146) *
               C13454) *
              C1521 +
          (((C10460 * C832 -
             ((C113 * C1261 + C31490 * C1271) * C31581 +
              (C113 * C1253 + C31490 * C1262) * C831) +
             C10461 * C31412) *
                C19145 +
            (C10462 * C832 - (C10461 * C31581 + C10460 * C831) +
             C10463 * C31412) *
                C19146) *
               C13453 +
           ((C20453 * C832 - (C1540 * C31581 + C1541 * C831) +
             C20452 * C31412) *
                C19145 +
            ((C113 * C6700 + C31490 * C6701) * C832 -
             (C20452 * C31581 + C20453 * C831) +
             (C113 * C6702 + C31490 * C6703) * C31412) *
                C19146) *
               C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C31580 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C31370) *
              C302 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C31580 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C31370) *
              C303 +
          (((C864 * C19145 + (C19736 + C19735 - C19734 - C19737) * C19146) *
                C13453 +
            ((C848 + C847 - C846 - C849) * C19145 +
             (C19738 + C19739 - C19740 - C19741) * C19146) *
                C13454) *
               C31580 +
           ((C1066 * C19145 + (C19942 - (C19941 + C19940) + C19943) * C19146) *
                C13453 +
            ((C1063 - (C1047 + C1046) + C1064) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C832 -
              (C1058 * C31581 + C1057 * C831) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C2447 +
             (C113 * C123 + C31490 * C136) * C2443 - C9438 * C2448 -
             C9439 * C2444 + C9440 * C2449 + C9441 * C2445 - C9442 * C2450 -
             C9443 * C31627) *
                C19145 +
            (C9438 * C2447 + C9439 * C2443 - C9440 * C2448 - C9441 * C2444 +
             C9442 * C2449 + C9443 * C2445 - C10762 * C2450 - C10763 * C31627) *
                C19146) *
               C13453 +
           ((C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
                C19145 +
            (C21500 + C21501 - C21502 - C21503 + C21504 + C21505 - C21506 -
             C21507) *
                C19146) *
               C13454) *
              C31580 +
          (((C9794 * C2448 -
             ((C113 * C319 + C31490 * C337) * C2443 +
              (C113 * C307 + C31490 * C320) * C2447) +
             C9795 * C2444 - C9796 * C2449 - C9797 * C2445 + C10096 * C2450 +
             C10097 * C31627) *
                C19145 +
            (C9796 * C2448 - (C9795 * C2443 + C9794 * C2447) + C9797 * C2444 -
             C10096 * C2449 - C10097 * C2445 + C11136 * C2450 +
             C11137 * C31627) *
                C19146) *
               C13453 +
           ((C1052 * C2448 - (C372 * C2443 + C373 * C2447) + C1053 * C2444 -
             C2338 * C2449 - C2339 * C2445 + C10920 * C2450 + C10921 * C31627) *
                C19145 +
            (C2338 * C2448 - (C1053 * C2443 + C1052 * C2447) + C2339 * C2444 -
             C10920 * C2449 - C10921 * C2445 +
             (C113 * C10911 + C31490 * C10912) * C2450 +
             (C113 * C10913 + C31490 * C10914) * C31627) *
                C19146) *
               C13454) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C19145 +
                (C9438 * C114 + C9439 * C31325) * C19146) *
                   C13453 +
               ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
                  C31308 * C108 -
              (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
               ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
                  C31308 * C109 +
              ((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
               ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
                  C31308 * C110 -
              (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
               ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
                  C31308 * C111 +
              ((C186 * C19145 + (C19155 + C19154) * C19146) * C13453 +
               ((C183 + C182) * C19145 +
                ((C113 * C833 + C31490 * C834) * C114 +
                 (C113 * C835 + C31490 * C836) * C31325) *
                    C19146) *
                   C13454) *
                  C31308 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31490 * C122) * C114 +
                  (C113 * C123 + C31490 * C136) * C31325) *
                     C19145 +
                 (C9438 * C114 + C9439 * C31325) * C19146) *
                    C13453 +
                ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) *
                    C13454) *
                   C31648 -
               (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
                ((C9795 * C31325 + C9794 * C114) * C19146 +
                 ((C113 * C319 + C31490 * C337) * C31325 +
                  (C113 * C307 + C31490 * C320) * C114) *
                     C19145) *
                    C13453) *
                   C31636 +
               ((((C113 * C308 + C31490 * C321) * C114 +
                  (C113 * C322 + C31490 * C338) * C31325) *
                     C19145 +
                 (C10098 * C114 + C10099 * C31325) * C19146) *
                    C13453 +
                ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) *
                    C13454) *
                   C31611) *
                  C302 +
              ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
                ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) *
                    C13454) *
                   C31636 -
               (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
                ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) *
                    C13453) *
                   C31648 -
               (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
                ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) *
                    C13453) *
                   C31611) *
                  C303 +
              (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
                ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) *
                    C13454) *
                   C31648 -
               (((C1058 * C31325 + C1057 * C114) * C19146 +
                 (C391 + C390) * C19145) *
                    C13454 +
                ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
                   C31636 +
               ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
                ((C393 + C392) * C19145 +
                 ((C113 * C1691 + C31490 * C1692) * C114 +
                  (C113 * C1693 + C31490 * C1694) * C31325) *
                     C19146) *
                    C13454) *
                   C31611) *
                  C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
             C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                C19145 +
            (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
             C9442 * C512 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C554 + C555 - C597 - C598 + C599 + C600) * C19145 +
            (C19456 + C19457 - C19458 - C19459 + C19460 + C19461) * C19146) *
               C13454) *
              C31308 * C302 +
          (((C597 - (C555 + C554) + C598 - C599 - C600) * C19145 +
            (C19458 - (C19457 + C19456) + C19459 - C19460 - C19461) * C19146) *
               C13453 +
           ((C601 - (C565 + C564) + C602 - C603 - C604) * C19145 +
            (C19462 - (C19463 + C19464) + C19465 - C19466 - C19467) * C19146) *
               C13454) *
              C31308 * C303 +
          ((C612 * C19145 +
            (C19464 + C19463 - C19462 - C19465 + C19466 + C19467) * C19146) *
               C13453 +
           ((C577 + C576 - C605 - C606 + C607 + C608) * C19145 +
            (C593 * C510 + C594 * C31649 - C595 * C511 - C596 * C31638 +
             (C113 * C2451 + C31490 * C2452) * C512 +
             (C113 * C2453 + C31490 * C2454) * C31614) *
                C19146) *
               C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1177 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C31645 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1178 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1177 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C31632 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C1177 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C1178 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C1245 -
          (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
           ((C9795 * C31325 + C9794 * C114) * C19146 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C19145) *
               C13453) *
              C1246 +
          ((((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C19145 +
            (C10098 * C114 + C10099 * C31325) * C19146) *
               C13453 +
           ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
              C1247 -
          ((((C113 * C1819 + C31490 * C1823) * C31325 +
             (C113 * C1814 + C31490 * C1818) * C114) *
                C19146 +
            (C1544 + C1545) * C19145) *
               C13454 +
           ((C10461 * C31325 + C10460 * C114) * C19146 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C19145) *
               C13453) *
              C1248 +
          ((((C113 * C1254 + C31490 * C1263) * C114 +
             (C113 * C1264 + C31490 * C1272) * C31325) *
                C19145 +
            ((C113 * C5895 + C31490 * C5899) * C114 +
             (C113 * C5900 + C31490 * C5904) * C31325) *
                C19146) *
               C13453 +
           (((C113 * C1255 + C31490 * C1265) * C114 +
             (C113 * C1266 + C31490 * C1273) * C31325) *
                C19145 +
            ((C113 * C6154 + C31490 * C6155) * C114 +
             (C113 * C6156 + C31490 * C6157) * C31325) *
                C19146) *
               C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
             C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                C19145 +
            (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
             C9442 * C512 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C554 + C555 - C597 - C598 + C599 + C600) * C19145 +
            (C19456 + C19457 - C19458 - C19459 + C19460 + C19461) * C19146) *
               C13454) *
              C1177 +
          (((C9794 * C511 -
             ((C113 * C319 + C31490 * C337) * C31649 +
              (C113 * C307 + C31490 * C320) * C510) +
             C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
                C19145 +
            (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
             C10096 * C512 - C10097 * C31614) *
                C19146) *
               C13453 +
           ((C2948 - (C2949 + C2950) + C2951 - C2952 - C2953) * C19145 +
            (C2338 * C511 - (C1053 * C31649 + C1052 * C510) + C2339 * C31638 -
             C10920 * C512 - C10921 * C31614) *
                C19146) *
               C13454) *
              C1178 +
          ((((C113 * C308 + C31490 * C321) * C510 +
             (C113 * C322 + C31490 * C338) * C31649 - C10098 * C511 -
             C10099 * C31638 + C10100 * C512 + C10101 * C31614) *
                C19145 +
            (C10098 * C510 + C10099 * C31649 - C10100 * C511 - C10101 * C31638 +
             C10102 * C512 + C10103 * C31614) *
                C19146) *
               C13453 +
           ((C374 * C510 + C375 * C31649 - C1708 * C511 - C1709 * C31638 +
             C10352 * C512 + C10353 * C31614) *
                C19145 +
            (C1708 * C510 + C1709 * C31649 - C10352 * C511 - C10353 * C31638 +
             (C113 * C6802 + C31490 * C6803) * C512 +
             (C113 * C6804 + C31490 * C6805) * C31614) *
                C19146) *
               C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
             C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                C19145 +
            (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
             C9442 * C1940 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C19145 +
            (C20930 + C20931 - C20932 - C20933 + C20934 + C20935) * C19146) *
               C13454) *
              C31308 * C31645 +
          (((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C19145 +
            (C20932 - (C20931 + C20930) + C20933 - C20934 - C20935) * C19146) *
               C13453 +
           ((C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C19145 +
            (C20936 - (C20937 + C20938) + C20939 - C20940 - C20941) * C19146) *
               C13454) *
              C31308 * C31632 +
          ((C1964 * C19145 +
            (C20938 + C20937 - C20936 - C20939 + C20940 + C20941) * C19146) *
               C13453 +
           ((C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C19145 +
            (C593 * C1938 + C594 * C1935 - C595 * C1939 - C596 * C1936 +
             (C113 * C2451 + C31490 * C2452) * C1940 +
             (C113 * C2453 + C31490 * C2454) * C31614) *
                C19146) *
               C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
             C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                C19145 +
            (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
             C9442 * C1940 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C19145 +
            (C20930 + C20931 - C20932 - C20933 + C20934 + C20935) * C19146) *
               C13454) *
              C31648 +
          (((C9794 * C1939 -
             ((C113 * C319 + C31490 * C337) * C1935 +
              (C113 * C307 + C31490 * C320) * C1938) +
             C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
                C19145 +
            (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
             C10096 * C1940 - C10097 * C31614) *
                C19146) *
               C13453 +
           ((C2322 - (C2323 + C2324) + C2325 - C2342 - C2343) * C19145 +
            (C2338 * C1939 - (C1053 * C1935 + C1052 * C1938) + C2339 * C1936 -
             C10920 * C1940 - C10921 * C31614) *
                C19146) *
               C13454) *
              C31636 +
          ((((C113 * C308 + C31490 * C321) * C1938 +
             (C113 * C322 + C31490 * C338) * C1935 - C10098 * C1939 -
             C10099 * C1936 + C10100 * C1940 + C10101 * C31614) *
                C19145 +
            (C10098 * C1938 + C10099 * C1935 - C10100 * C1939 - C10101 * C1936 +
             C10102 * C1940 + C10103 * C31614) *
                C19146) *
               C13453 +
           ((C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
             C10352 * C1940 + C10353 * C31614) *
                C19145 +
            (C1708 * C1938 + C1709 * C1935 - C10352 * C1939 - C10353 * C1936 +
             (C113 * C6802 + C31490 * C6803) * C1940 +
             (C113 * C6804 + C31490 * C6805) * C31614) *
                C19146) *
               C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2142 +
            (C113 * C123 + C31490 * C136) * C2137 - C9438 * C2143 -
            C9439 * C2138 + C9440 * C2144 + C9441 * C2139 - C9442 * C2145 -
            C9443 * C2140 + C10762 * C2146 + C10763 * C2141) *
               C19145 +
           (C9438 * C2142 + C9439 * C2137 - C9440 * C2143 - C9441 * C2138 +
            C9442 * C2144 + C9443 * C2139 - C10762 * C2145 - C10763 * C2140 +
            C10764 * C2146 + C10765 * C2141) *
               C19146) *
              C13453 +
          ((C164 * C2142 + C165 * C2137 - C584 * C2143 - C585 * C2138 +
            C586 * C2144 + C587 * C2139 - C2476 * C2145 - C2477 * C2140 +
            C11028 * C2146 + C11029 * C2141) *
               C19145 +
           (C584 * C2142 + C585 * C2137 - C586 * C2143 - C587 * C2138 +
            C2476 * C2144 + C2477 * C2139 - C11028 * C2145 - C11029 * C2140 +
            (C113 * C11019 + C31490 * C11020) * C2146 +
            (C113 * C11021 + C31490 * C11022) * C2141) *
               C19146) *
              C13454) *
         C31308 * C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C1177 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C831 +
              (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C1696 + C1697 - C1712 - C1713) * C19145 +
             (C20650 + C20651 - C20652 - C20653) * C19146) *
                C13454) *
               C31611) *
              C31566 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C1177 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C1178 +
           (((C1712 - (C1697 + C1696) + C1713) * C19145 +
             (C20652 - (C20651 + C20650) + C20653) * C19146) *
                C13453 +
            ((C1714 - (C1703 + C1702) + C1715) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C832 -
              (C1711 * C31581 + C1710 * C831) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C838 + C839 - C840 - C841) * C19145 +
            (C19730 + C19731 - C19732 - C19733) * C19146) *
               C13454) *
              C31308 * C713 +
          (((C840 - (C839 + C838) + C841) * C19145 +
            (C19732 - (C19731 + C19730) + C19733) * C19146) *
               C13453 +
           ((C844 - (C843 + C842) + C845) * C19145 +
            (C19734 - (C19735 + C19736) + C19737) * C19146) *
               C13454) *
              C31308 * C714 +
          ((C864 * C19145 + (C19736 + C19735 - C19734 - C19737) * C19146) *
               C13453 +
           ((C848 + C847 - C846 - C849) * C19145 +
            (C19738 + C19739 - C19740 - C19741) * C19146) *
               C13454) *
              C31308 * C715 +
          ((C865 * C19145 + (C19740 - (C19739 + C19738) + C19741) * C19146) *
               C13453 +
           ((C862 - (C851 + C850) + C863) * C19145 +
            ((C113 * C522 + C31490 * C541) * C832 -
             (C859 * C31581 + C858 * C831) +
             (C113 * C542 + C31490 * C552) * C31412) *
                C19146) *
               C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C2447 +
             (C113 * C123 + C31490 * C136) * C2443 - C9438 * C2448 -
             C9439 * C2444 + C9440 * C2449 + C9441 * C2445 - C9442 * C2450 -
             C9443 * C31627) *
                C19145 +
            (C9438 * C2447 + C9439 * C2443 - C9440 * C2448 - C9441 * C2444 +
             C9442 * C2449 + C9443 * C2445 - C10762 * C2450 - C10763 * C31627) *
                C19146) *
               C13453 +
           ((C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
                C19145 +
            (C21500 + C21501 - C21502 - C21503 + C21504 + C21505 - C21506 -
             C21507) *
                C19146) *
               C13454) *
              C31308 * C31566 +
          (((C2458 - (C2457 + C2456) + C2459 - C2460 - C2461 + C2480 + C2481) *
                C19145 +
            (C21502 - (C21501 + C21500) + C21503 - C21504 - C21505 + C21506 +
             C21507) *
                C19146) *
               C13453 +
           ((C2468 - (C2467 + C2466) + C2469 - C2470 - C2471 + C2482 + C2483) *
                C19145 +
            (C591 * C2448 - (C590 * C2443 + C589 * C2447) + C592 * C2444 -
             C2478 * C2449 - C2479 * C2445 +
             (C113 * C2152 + C31490 * C2163) * C2450 +
             (C113 * C2164 + C31490 * C2170) * C31627) *
                C19146) *
               C13454) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31648 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31636 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C302 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31636 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31648 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C303 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31648 -
           (((C1058 * C31325 + C1057 * C114) * C19146 +
             (C391 + C390) * C19145) *
                C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31636 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C31308 * C108 -
          (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
           ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
              C31308 * C109 +
          ((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
           ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
              C31308 * C110 -
          (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
           ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
              C31308 * C111 +
          ((C186 * C19145 + (C19155 + C19154) * C19146) * C13453 +
           ((C183 + C182) * C19145 + ((C113 * C833 + C31490 * C834) * C114 +
                                      (C113 * C835 + C31490 * C836) * C31325) *
                                         C19146) *
               C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1177 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C31645 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1178 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1177 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C31632 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C1177 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C1178 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C1245 -
          (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
           ((C9795 * C31325 + C9794 * C114) * C19146 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C19145) *
               C13453) *
              C1246 +
          ((((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C19145 +
            (C10098 * C114 + C10099 * C31325) * C19146) *
               C13453 +
           ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
              C1247 -
          ((((C113 * C1819 + C31490 * C1823) * C31325 +
             (C113 * C1814 + C31490 * C1818) * C114) *
                C19146 +
            (C1544 + C1545) * C19145) *
               C13454 +
           ((C10461 * C31325 + C10460 * C114) * C19146 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C19145) *
               C13453) *
              C1248 +
          ((((C113 * C1254 + C31490 * C1263) * C114 +
             (C113 * C1264 + C31490 * C1272) * C31325) *
                C19145 +
            ((C113 * C5895 + C31490 * C5899) * C114 +
             (C113 * C5900 + C31490 * C5904) * C31325) *
                C19146) *
               C13453 +
           (((C113 * C1255 + C31490 * C1265) * C114 +
             (C113 * C1266 + C31490 * C1273) * C31325) *
                C19145 +
            ((C113 * C6154 + C31490 * C6155) * C114 +
             (C113 * C6156 + C31490 * C6157) * C31325) *
                C19146) *
               C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
             C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                C19145 +
            (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
             C9442 * C1940 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C19145 +
            (C20930 + C20931 - C20932 - C20933 + C20934 + C20935) * C19146) *
               C13454) *
              C31308 * C31645 +
          (((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C19145 +
            (C20932 - (C20931 + C20930) + C20933 - C20934 - C20935) * C19146) *
               C13453 +
           ((C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C19145 +
            (C20936 - (C20937 + C20938) + C20939 - C20940 - C20941) * C19146) *
               C13454) *
              C31308 * C31632 +
          ((C1964 * C19145 +
            (C20938 + C20937 - C20936 - C20939 + C20940 + C20941) * C19146) *
               C13453 +
           ((C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C19145 +
            (C593 * C1938 + C594 * C1935 - C595 * C1939 - C596 * C1936 +
             (C113 * C2451 + C31490 * C2452) * C1940 +
             (C113 * C2453 + C31490 * C2454) * C31614) *
                C19146) *
               C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 - C9438 * C1939 -
             C9439 * C1936 + C9440 * C1940 + C9441 * C31614) *
                C19145 +
            (C9438 * C1938 + C9439 * C1935 - C9440 * C1939 - C9441 * C1936 +
             C9442 * C1940 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C19145 +
            (C20930 + C20931 - C20932 - C20933 + C20934 + C20935) * C19146) *
               C13454) *
              C31648 +
          (((C9794 * C1939 -
             ((C113 * C319 + C31490 * C337) * C1935 +
              (C113 * C307 + C31490 * C320) * C1938) +
             C9795 * C1936 - C9796 * C1940 - C9797 * C31614) *
                C19145 +
            (C9796 * C1939 - (C9795 * C1935 + C9794 * C1938) + C9797 * C1936 -
             C10096 * C1940 - C10097 * C31614) *
                C19146) *
               C13453 +
           ((C2322 - (C2323 + C2324) + C2325 - C2342 - C2343) * C19145 +
            (C2338 * C1939 - (C1053 * C1935 + C1052 * C1938) + C2339 * C1936 -
             C10920 * C1940 - C10921 * C31614) *
                C19146) *
               C13454) *
              C31636 +
          ((((C113 * C308 + C31490 * C321) * C1938 +
             (C113 * C322 + C31490 * C338) * C1935 - C10098 * C1939 -
             C10099 * C1936 + C10100 * C1940 + C10101 * C31614) *
                C19145 +
            (C10098 * C1938 + C10099 * C1935 - C10100 * C1939 - C10101 * C1936 +
             C10102 * C1940 + C10103 * C31614) *
                C19146) *
               C13453 +
           ((C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
             C10352 * C1940 + C10353 * C31614) *
                C19145 +
            (C1708 * C1938 + C1709 * C1935 - C10352 * C1939 - C10353 * C1936 +
             (C113 * C6802 + C31490 * C6803) * C1940 +
             (C113 * C6804 + C31490 * C6805) * C31614) *
                C19146) *
               C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C31580 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31370) *
              C31286 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C31580 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C23308 + C23309 - C23310 - C23311) * C19146) *
                C13454) *
               C31370) *
              C31294 +
          (((C3490 * C19145 + (C22768 + C22767 - C22766 - C22769) * C19146) *
                C13453 +
            ((C3480 + C3479 - C3478 - C3481) * C19145 +
             (C22770 + C22771 - C22772 - C22773) * C19146) *
                C13454) *
               C31580 +
           ((C3930 * C19145 + (C23310 - (C23309 + C23308) + C23311) * C19146) *
                C13453 +
            ((C3927 - (C3926 + C3925) + C3928) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C3468 -
              (C1058 * C3465 + C1057 * C3467) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C30318 +
              (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
              C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                 C19145 +
             (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 -
              C9441 * C31415 + C9442 * C30324 + C9443 * C4043) *
                 C19146) *
                C13453 +
            ((C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C19145 +
             (C23458 + C23459 - C23460 - C23461 + C23462 + C23463) * C19146) *
                C13454) *
               C31580 +
           (((C9794 * C30310 -
              ((C113 * C319 + C31490 * C337) * C31408 +
               (C113 * C307 + C31490 * C320) * C30318) +
              C9795 * C31415 - C9796 * C30324 - C9797 * C4043) *
                 C19145 +
             (C9796 * C30310 - (C9795 * C31408 + C9794 * C30318) +
              C9797 * C31415 - C10096 * C30324 - C10097 * C4043) *
                 C19146) *
                C13453 +
            ((C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C19145 +
             (C23664 - (C23665 + C23666) + C23667 - C23668 - C23669) * C19146) *
                C13454) *
               C31370) *
              C2799 +
          ((((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C19145 +
             (C23460 - (C23459 + C23458) + C23461 - C23462 - C23463) * C19146) *
                C13453 +
            ((C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C19145 +
             (C23464 - (C23465 + C23466) + C23467 - C23468 - C23469) * C19146) *
                C13454) *
               C31580 +
           (((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C19145 +
             (C23666 + C23665 - C23664 - C23667 + C23668 + C23669) * C19146) *
                C13453 +
            ((C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C19145 +
             (C1054 * C30318 + C1056 * C31408 - C2340 * C30310 -
              C2341 * C31415 + (C113 * C2583 + C31490 * C2588) * C30324 +
              (C113 * C2589 + C31490 * C2592) * C4043) *
                 C19146) *
                C13454) *
               C31370) *
              C31291)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C31648 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31636 +
           ((((C113 * C308 + C31490 * C321) * C3467 +
              (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C3648 + C3649 - C3650 - C3651) * C19145 +
             (C22972 + C22973 - C22974 - C22975) * C19146) *
                C13454) *
               C31611) *
              C2799 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C31648 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C1054 * C3467 + C1056 * C3465 - C2340 * C3468 - C2341 * C31412) *
                 C19146) *
                C13454) *
               C31636 +
           (((C3650 - (C3649 + C3648) + C3651) * C19145 +
             (C22974 - (C22973 + C22972) + C22975) * C19146) *
                C13453 +
            ((C3654 - (C3653 + C3652) + C3655) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C3468 -
              (C1711 * C3465 + C1710 * C3467) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C3470 + C3471 - C3472 - C3473) * C19145 +
            (C22762 + C22763 - C22764 - C22765) * C19146) *
               C13454) *
              C31308 * C31654 +
          (((C3472 - (C3471 + C3470) + C3473) * C19145 +
            (C22764 - (C22763 + C22762) + C22765) * C19146) *
               C13453 +
           ((C3476 - (C3475 + C3474) + C3477) * C19145 +
            (C22766 - (C22767 + C22768) + C22769) * C19146) *
               C13454) *
              C31308 * C31647 +
          ((C3490 * C19145 + (C22768 + C22767 - C22766 - C22769) * C19146) *
               C13453 +
           ((C3480 + C3479 - C3478 - C3481) * C19145 +
            (C22770 + C22771 - C22772 - C22773) * C19146) *
               C13454) *
              C31308 * C31634 +
          ((C3491 * C19145 + (C22772 - (C22771 + C22770) + C22773) * C19146) *
               C13453 +
           ((C3484 - (C3483 + C3482) + C3485) * C19145 +
            ((C113 * C522 + C31490 * C541) * C3468 -
             (C859 * C3465 + C858 * C3467) +
             (C113 * C542 + C31490 * C552) * C31412) *
                C19146) *
               C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3757 +
             (C113 * C123 + C31490 * C136) * C31656 - C9438 * C3758 -
             C9439 * C31653 + C9440 * C3759 + C9441 * C31644 - C9442 * C3760 -
             C9443 * C31627) *
                C19145 +
            (C9438 * C3757 + C9439 * C31656 - C9440 * C3758 - C9441 * C31653 +
             C9442 * C3759 + C9443 * C31644 - C10762 * C3760 -
             C10763 * C31627) *
                C19146) *
               C13453 +
           ((C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
                C19145 +
            (C23106 + C23107 - C23108 - C23109 + C23110 + C23111 - C23112 -
             C23113) *
                C19146) *
               C13454) *
              C31308 * C2799 +
          (((C3764 - (C3763 + C3762) + C3765 - C3766 - C3767 + C3768 + C3769) *
                C19145 +
            (C23108 - (C23107 + C23106) + C23109 - C23110 - C23111 + C23112 +
             C23113) *
                C19146) *
               C13453 +
           ((C3772 - (C3771 + C3770) + C3773 - C3774 - C3775 + C3776 + C3777) *
                C19145 +
            (C591 * C3758 - (C590 * C31656 + C589 * C3757) + C592 * C31653 -
             C2478 * C3759 - C2479 * C31644 +
             (C113 * C2152 + C31490 * C2163) * C3760 +
             (C113 * C2164 + C31490 * C2170) * C31627) *
                C19146) *
               C13454) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 - C9438 * C30310 -
             C9439 * C31415 + C9440 * C30324 + C9441 * C4043) *
                C19145 +
            (C9438 * C30318 + C9439 * C31408 - C9440 * C30310 - C9441 * C31415 +
             C9442 * C30324 + C9443 * C4043) *
                C19146) *
               C13453 +
           ((C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C19145 +
            (C23458 + C23459 - C23460 - C23461 + C23462 + C23463) * C19146) *
               C13454) *
              C31308 * C31286 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C19145 +
            (C23460 - (C23459 + C23458) + C23461 - C23462 - C23463) * C19146) *
               C13453 +
           ((C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C19145 +
            (C23464 - (C23465 + C23466) + C23467 - C23468 - C23469) * C19146) *
               C13454) *
              C31308 * C31294 +
          ((C4070 * C19145 +
            (C23466 + C23465 - C23464 - C23467 + C23468 + C23469) * C19146) *
               C13453 +
           ((C4062 + C4061 - C4060 - C4063 + C4064 + C4065) * C19145 +
            (C593 * C30318 + C594 * C31408 - C595 * C30310 - C596 * C31415 +
             (C113 * C2451 + C31490 * C2452) * C30324 +
             (C113 * C2453 + C31490 * C2454) * C4043) *
                C19146) *
               C13454) *
              C31308 * C3074)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C3470 + C3471 - C3472 - C3473) * C19145 +
            (C22762 + C22763 - C22764 - C22765) * C19146) *
               C13454) *
              C31308 * C31654 +
          (((C3472 - (C3471 + C3470) + C3473) * C19145 +
            (C22764 - (C22763 + C22762) + C22765) * C19146) *
               C13453 +
           ((C3476 - (C3475 + C3474) + C3477) * C19145 +
            (C22766 - (C22767 + C22768) + C22769) * C19146) *
               C13454) *
              C31308 * C31647 +
          ((C3490 * C19145 + (C22768 + C22767 - C22766 - C22769) * C19146) *
               C13453 +
           ((C3480 + C3479 - C3478 - C3481) * C19145 +
            (C22770 + C22771 - C22772 - C22773) * C19146) *
               C13454) *
              C31308 * C31634 +
          ((C3491 * C19145 + (C22772 - (C22771 + C22770) + C22773) * C19146) *
               C13453 +
           ((C3484 - (C3483 + C3482) + C3485) * C19145 +
            ((C113 * C522 + C31490 * C541) * C3468 -
             (C859 * C3465 + C858 * C3467) +
             (C113 * C542 + C31490 * C552) * C31412) *
                C19146) *
               C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C3467 +
              (C113 * C123 + C31490 * C136) * C3465 - C9438 * C3468 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C3467 + C9439 * C3465 - C9440 * C3468 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C3470 + C3471 - C3472 - C3473) * C19145 +
             (C22762 + C22763 - C22764 - C22765) * C19146) *
                C13454) *
               C31648 +
           (((C9794 * C3468 -
              ((C113 * C319 + C31490 * C337) * C3465 +
               (C113 * C307 + C31490 * C320) * C3467) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C3468 - (C9795 * C3465 + C9794 * C3467) +
              C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C3640 - (C3641 + C3642) + C3643) * C19145 +
             (C22968 - (C22969 + C22970) + C22971) * C19146) *
                C13454) *
               C31636 +
           ((((C113 * C308 + C31490 * C321) * C3467 +
              (C113 * C322 + C31490 * C338) * C3465 - C10098 * C3468 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C3467 + C10099 * C3465 - C10100 * C3468 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C3648 + C3649 - C3650 - C3651) * C19145 +
             (C22972 + C22973 - C22974 - C22975) * C19146) *
                C13454) *
               C31611) *
              C2799 +
          ((((C3472 - (C3471 + C3470) + C3473) * C19145 +
             (C22764 - (C22763 + C22762) + C22765) * C19146) *
                C13453 +
            ((C3476 - (C3475 + C3474) + C3477) * C19145 +
             (C22766 - (C22767 + C22768) + C22769) * C19146) *
                C13454) *
               C31648 +
           (((C3642 + C3641 - C3640 - C3643) * C19145 +
             (C22970 + C22969 - C22968 - C22971) * C19146) *
                C13453 +
            ((C3646 + C3645 - C3644 - C3647) * C19145 +
             (C1054 * C3467 + C1056 * C3465 - C2340 * C3468 - C2341 * C31412) *
                 C19146) *
                C13454) *
               C31636 +
           (((C3650 - (C3649 + C3648) + C3651) * C19145 +
             (C22974 - (C22973 + C22972) + C22975) * C19146) *
                C13453 +
            ((C3654 - (C3653 + C3652) + C3655) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C3468 -
              (C1711 * C3465 + C1710 * C3467) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31580 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31370) *
              C713 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31370 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31580) *
              C714 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31580 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31370) *
              C715 +
          (((C722 * C19145 + (C19599 + C19598) * C19146) * C13453 +
            ((C731 + C730) * C19145 +
             ((C113 * C1017 + C31490 * C1026) * C114 +
              (C113 * C1027 + C31490 * C1032) * C31325) *
                 C19146) *
                C13454) *
               C31370 -
           (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
            ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1519 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1520 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C1521 -
           (((C20454 + C20455) * C19146 + (C1544 + C1545) * C19145) * C13454 +
            ((C10461 * C31325 + C10460 * C114) * C19146 +
             ((C113 * C1261 + C31490 * C1271) * C31325 +
              (C113 * C1253 + C31490 * C1262) * C114) *
                 C19145) *
                C13453) *
               C31621) *
              C31566 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1520 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1519 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C1521 +
           (((C1545 + C1544) * C19145 + (C20455 + C20454) * C19146) * C13453 +
            ((C1543 + C1542) * C19145 +
             ((C113 * C1815 + C31490 * C1820) * C114 +
              (C113 * C1821 + C31490 * C1824) * C31325) *
                 C19146) *
                C13454) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C31580 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C31370) *
              C302 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C31580 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C31370) *
              C303 +
          (((C864 * C19145 + (C19736 + C19735 - C19734 - C19737) * C19146) *
                C13453 +
            ((C848 + C847 - C846 - C849) * C19145 +
             (C19738 + C19739 - C19740 - C19741) * C19146) *
                C13454) *
               C31580 +
           ((C1066 * C19145 + (C19942 - (C19941 + C19940) + C19943) * C19146) *
                C13453 +
            ((C1063 - (C1047 + C1046) + C1064) * C19145 +
             ((C113 * C2317 + C31490 * C2318) * C832 -
              (C1058 * C31581 + C1057 * C831) +
              (C113 * C2319 + C31490 * C2320) * C31412) *
                 C19146) *
                C13454) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C838 + C839 - C840 - C841) * C19145 +
            (C19730 + C19731 - C19732 - C19733) * C19146) *
               C13454) *
              C1519 +
          (((C9794 * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             C9795 * C31412) *
                C19145 +
            (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                C19146) *
               C13453 +
           ((C1059 - (C1036 + C1037) + C1060) * C19145 +
            (C19936 - (C19937 + C19938) + C19939) * C19146) *
               C13454) *
              C1520 +
          ((((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
             C10099 * C31412) *
                C19145 +
            (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
             C10101 * C31412) *
                C19146) *
               C13453 +
           ((C1696 + C1697 - C1712 - C1713) * C19145 +
            (C20650 + C20651 - C20652 - C20653) * C19146) *
               C13454) *
              C1521 +
          (((C10460 * C832 -
             ((C113 * C1261 + C31490 * C1271) * C31581 +
              (C113 * C1253 + C31490 * C1262) * C831) +
             C10461 * C31412) *
                C19145 +
            (C10462 * C832 - (C10461 * C31581 + C10460 * C831) +
             C10463 * C31412) *
                C19146) *
               C13453 +
           ((C20453 * C832 - (C1540 * C31581 + C1541 * C831) +
             C20452 * C31412) *
                C19145 +
            ((C113 * C6700 + C31490 * C6701) * C832 -
             (C20452 * C31581 + C20453 * C831) +
             (C113 * C6702 + C31490 * C6703) * C31412) *
                C19146) *
               C13454) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31648 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31636 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C302 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31636 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31648 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C303 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31648 -
           (((C1058 * C31325 + C1057 * C114) * C19146 +
             (C391 + C390) * C19145) *
                C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31636 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C31308 * C108 -
          (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
           ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
              C31308 * C109 +
          ((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
           ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
              C31308 * C110 -
          (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
           ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
              C31308 * C111 +
          ((C186 * C19145 + (C19155 + C19154) * C19146) * C13453 +
           ((C183 + C182) * C19145 + ((C113 * C833 + C31490 * C834) * C114 +
                                      (C113 * C835 + C31490 * C836) * C31325) *
                                         C19146) *
               C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
             C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                C19145 +
            (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
             C9442 * C512 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C554 + C555 - C597 - C598 + C599 + C600) * C19145 +
            (C19456 + C19457 - C19458 - C19459 + C19460 + C19461) * C19146) *
               C13454) *
              C31308 * C302 +
          (((C597 - (C555 + C554) + C598 - C599 - C600) * C19145 +
            (C19458 - (C19457 + C19456) + C19459 - C19460 - C19461) * C19146) *
               C13453 +
           ((C601 - (C565 + C564) + C602 - C603 - C604) * C19145 +
            (C19462 - (C19463 + C19464) + C19465 - C19466 - C19467) * C19146) *
               C13454) *
              C31308 * C303 +
          ((C612 * C19145 +
            (C19464 + C19463 - C19462 - C19465 + C19466 + C19467) * C19146) *
               C13453 +
           ((C577 + C576 - C605 - C606 + C607 + C608) * C19145 +
            (C593 * C510 + C594 * C31649 - C595 * C511 - C596 * C31638 +
             (C113 * C2451 + C31490 * C2452) * C512 +
             (C113 * C2453 + C31490 * C2454) * C31614) *
                C19146) *
               C13454) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1177 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C31645 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1178 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1177 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C31632 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C1177 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C1178 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C1245 -
          (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
           ((C9795 * C31325 + C9794 * C114) * C19146 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C19145) *
               C13453) *
              C1246 +
          ((((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C19145 +
            (C10098 * C114 + C10099 * C31325) * C19146) *
               C13453 +
           ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
              C1247 -
          ((((C113 * C1819 + C31490 * C1823) * C31325 +
             (C113 * C1814 + C31490 * C1818) * C114) *
                C19146 +
            (C1544 + C1545) * C19145) *
               C13454 +
           ((C10461 * C31325 + C10460 * C114) * C19146 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C19145) *
               C13453) *
              C1248 +
          ((((C113 * C1254 + C31490 * C1263) * C114 +
             (C113 * C1264 + C31490 * C1272) * C31325) *
                C19145 +
            ((C113 * C5895 + C31490 * C5899) * C114 +
             (C113 * C5900 + C31490 * C5904) * C31325) *
                C19146) *
               C13453 +
           (((C113 * C1255 + C31490 * C1265) * C114 +
             (C113 * C1266 + C31490 * C1273) * C31325) *
                C19145 +
            ((C113 * C6154 + C31490 * C6155) * C114 +
             (C113 * C6156 + C31490 * C6157) * C31325) *
                C19146) *
               C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 - C9438 * C511 -
             C9439 * C31638 + C9440 * C512 + C9441 * C31614) *
                C19145 +
            (C9438 * C510 + C9439 * C31649 - C9440 * C511 - C9441 * C31638 +
             C9442 * C512 + C9443 * C31614) *
                C19146) *
               C13453 +
           ((C554 + C555 - C597 - C598 + C599 + C600) * C19145 +
            (C19456 + C19457 - C19458 - C19459 + C19460 + C19461) * C19146) *
               C13454) *
              C1177 +
          (((C9794 * C511 -
             ((C113 * C319 + C31490 * C337) * C31649 +
              (C113 * C307 + C31490 * C320) * C510) +
             C9795 * C31638 - C9796 * C512 - C9797 * C31614) *
                C19145 +
            (C9796 * C511 - (C9795 * C31649 + C9794 * C510) + C9797 * C31638 -
             C10096 * C512 - C10097 * C31614) *
                C19146) *
               C13453 +
           ((C2948 - (C2949 + C2950) + C2951 - C2952 - C2953) * C19145 +
            (C2338 * C511 - (C1053 * C31649 + C1052 * C510) + C2339 * C31638 -
             C10920 * C512 - C10921 * C31614) *
                C19146) *
               C13454) *
              C1178 +
          ((((C113 * C308 + C31490 * C321) * C510 +
             (C113 * C322 + C31490 * C338) * C31649 - C10098 * C511 -
             C10099 * C31638 + C10100 * C512 + C10101 * C31614) *
                C19145 +
            (C10098 * C510 + C10099 * C31649 - C10100 * C511 - C10101 * C31638 +
             C10102 * C512 + C10103 * C31614) *
                C19146) *
               C13453 +
           ((C374 * C510 + C375 * C31649 - C1708 * C511 - C1709 * C31638 +
             C10352 * C512 + C10353 * C31614) *
                C19145 +
            (C1708 * C510 + C1709 * C31649 - C10352 * C511 - C10353 * C31638 +
             (C113 * C6802 + C31490 * C6803) * C512 +
             (C113 * C6804 + C31490 * C6805) * C31614) *
                C19146) *
               C13454) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
             C9439 * C31412) *
                C19145 +
            (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                C19146) *
               C13453 +
           ((C838 + C839 - C840 - C841) * C19145 +
            (C19730 + C19731 - C19732 - C19733) * C19146) *
               C13454) *
              C31308 * C713 +
          (((C840 - (C839 + C838) + C841) * C19145 +
            (C19732 - (C19731 + C19730) + C19733) * C19146) *
               C13453 +
           ((C844 - (C843 + C842) + C845) * C19145 +
            (C19734 - (C19735 + C19736) + C19737) * C19146) *
               C13454) *
              C31308 * C714 +
          ((C864 * C19145 + (C19736 + C19735 - C19734 - C19737) * C19146) *
               C13453 +
           ((C848 + C847 - C846 - C849) * C19145 +
            (C19738 + C19739 - C19740 - C19741) * C19146) *
               C13454) *
              C31308 * C715 +
          ((C865 * C19145 + (C19740 - (C19739 + C19738) + C19741) * C19146) *
               C13453 +
           ((C862 - (C851 + C850) + C863) * C19145 +
            ((C113 * C522 + C31490 * C541) * C832 -
             (C859 * C31581 + C858 * C831) +
             (C113 * C542 + C31490 * C552) * C31412) *
                C19146) *
               C13454) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C831 +
              (C113 * C123 + C31490 * C136) * C31581 - C9438 * C832 -
              C9439 * C31412) *
                 C19145 +
             (C9438 * C831 + C9439 * C31581 - C9440 * C832 - C9441 * C31412) *
                 C19146) *
                C13453 +
            ((C838 + C839 - C840 - C841) * C19145 +
             (C19730 + C19731 - C19732 - C19733) * C19146) *
                C13454) *
               C1177 +
           (((C9794 * C832 -
              ((C113 * C319 + C31490 * C337) * C31581 +
               (C113 * C307 + C31490 * C320) * C831) +
              C9795 * C31412) *
                 C19145 +
             (C9796 * C832 - (C9795 * C31581 + C9794 * C831) + C9797 * C31412) *
                 C19146) *
                C13453 +
            ((C1059 - (C1036 + C1037) + C1060) * C19145 +
             (C19936 - (C19937 + C19938) + C19939) * C19146) *
                C13454) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C831 +
              (C113 * C322 + C31490 * C338) * C31581 - C10098 * C832 -
              C10099 * C31412) *
                 C19145 +
             (C10098 * C831 + C10099 * C31581 - C10100 * C832 -
              C10101 * C31412) *
                 C19146) *
                C13453 +
            ((C1696 + C1697 - C1712 - C1713) * C19145 +
             (C20650 + C20651 - C20652 - C20653) * C19146) *
                C13454) *
               C31611) *
              C31566 +
          ((((C840 - (C839 + C838) + C841) * C19145 +
             (C19732 - (C19731 + C19730) + C19733) * C19146) *
                C13453 +
            ((C844 - (C843 + C842) + C845) * C19145 +
             (C19734 - (C19735 + C19736) + C19737) * C19146) *
                C13454) *
               C1177 +
           (((C1037 + C1036 - C1059 - C1060) * C19145 +
             (C19938 + C19937 - C19936 - C19939) * C19146) *
                C13453 +
            ((C1043 + C1042 - C1061 - C1062) * C19145 +
             (C19940 + C19941 - C19942 - C19943) * C19146) *
                C13454) *
               C1178 +
           (((C1712 - (C1697 + C1696) + C1713) * C19145 +
             (C20652 - (C20651 + C20650) + C20653) * C19146) *
                C13453 +
            ((C1714 - (C1703 + C1702) + C1715) * C19145 +
             ((C113 * C1393 + C31490 * C1410) * C832 -
              (C1711 * C31581 + C1710 * C831) +
              (C113 * C1411 + C31490 * C1420) * C31412) *
                 C19146) *
                C13454) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C31308 * C108 -
          (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
           ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
              C31308 * C109 +
          ((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
           ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
              C31308 * C110 -
          (((C19154 + C19155) * C19146 + (C181 + C180) * C19145) * C13454 +
           ((C19153 + C19152) * C19146 + C185 * C19145) * C13453) *
              C31308 * C111 +
          ((C186 * C19145 + (C19155 + C19154) * C19146) * C13453 +
           ((C183 + C182) * C19145 + ((C113 * C833 + C31490 * C834) * C114 +
                                      (C113 * C835 + C31490 * C836) * C31325) *
                                         C19146) *
               C13454) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C31648 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C31636 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C302 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C31636 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C31648 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C303 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C31648 -
           (((C1058 * C31325 + C1057 * C114) * C19146 +
             (C391 + C390) * C19145) *
                C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C31636 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31490 * C122) * C114 +
              (C113 * C123 + C31490 * C136) * C31325) *
                 C19145 +
             (C9438 * C114 + C9439 * C31325) * C19146) *
                C13453 +
            ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
               C1177 -
           (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
            ((C9795 * C31325 + C9794 * C114) * C19146 +
             ((C113 * C319 + C31490 * C337) * C31325 +
              (C113 * C307 + C31490 * C320) * C114) *
                 C19145) *
                C13453) *
               C1178 +
           ((((C113 * C308 + C31490 * C321) * C114 +
              (C113 * C322 + C31490 * C338) * C31325) *
                 C19145 +
             (C10098 * C114 + C10099 * C31325) * C19146) *
                C13453 +
            ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
               C31611) *
              C31645 +
          ((((C385 + C384) * C19145 + (C19303 + C19302) * C19146) * C13453 +
            ((C383 + C382) * C19145 + (C19306 + C19307) * C19146) * C13454) *
               C1178 -
           (((C19150 + C19151) * C19146 + (C177 + C176) * C19145) * C13454 +
            ((C19149 + C19148) * C19146 + (C175 + C174) * C19145) * C13453) *
               C1177 -
           (((C19308 + C19309) * C19146 + (C389 + C388) * C19145) * C13454 +
            ((C19305 + C19304) * C19146 + (C387 + C386) * C19145) * C13453) *
               C31611) *
              C31632 +
          (((C184 * C19145 + (C19151 + C19150) * C19146) * C13453 +
            ((C179 + C178) * C19145 + (C19152 + C19153) * C19146) * C13454) *
               C1177 -
           (((C19598 + C19599) * C19146 + (C391 + C390) * C19145) * C13454 +
            ((C19307 + C19306) * C19146 + C394 * C19145) * C13453) *
               C1178 +
           ((C395 * C19145 + (C19309 + C19308) * C19146) * C13453 +
            ((C393 + C392) * C19145 +
             ((C113 * C1691 + C31490 * C1692) * C114 +
              (C113 * C1693 + C31490 * C1694) * C31325) *
                 C19146) *
                C13454) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C19145 +
            (C9438 * C114 + C9439 * C31325) * C19146) *
               C13453 +
           ((C174 + C175) * C19145 + (C19148 + C19149) * C19146) * C13454) *
              C1245 -
          (((C19302 + C19303) * C19146 + (C384 + C385) * C19145) * C13454 +
           ((C9795 * C31325 + C9794 * C114) * C19146 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C19145) *
               C13453) *
              C1246 +
          ((((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C19145 +
            (C10098 * C114 + C10099 * C31325) * C19146) *
               C13453 +
           ((C386 + C387) * C19145 + (C19304 + C19305) * C19146) * C13454) *
              C1247 -
          ((((C113 * C1819 + C31490 * C1823) * C31325 +
             (C113 * C1814 + C31490 * C1818) * C114) *
                C19146 +
            (C1544 + C1545) * C19145) *
               C13454 +
           ((C10461 * C31325 + C10460 * C114) * C19146 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C19145) *
               C13453) *
              C1248 +
          ((((C113 * C1254 + C31490 * C1263) * C114 +
             (C113 * C1264 + C31490 * C1272) * C31325) *
                C19145 +
            ((C113 * C5895 + C31490 * C5899) * C114 +
             (C113 * C5900 + C31490 * C5904) * C31325) *
                C19146) *
               C13453 +
           (((C113 * C1255 + C31490 * C1265) * C114 +
             (C113 * C1266 + C31490 * C1273) * C31325) *
                C19145 +
            ((C113 * C6154 + C31490 * C6155) * C114 +
             (C113 * C6156 + C31490 * C6157) * C31325) *
                C19146) *
               C13454) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31366 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C3071) *
              C31286 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31373 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31366 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C3071) *
              C31294 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31366 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31373 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C3071) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C3071) *
              C31286 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31373 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C3071) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31366 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31373 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C3071) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C31366 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 -
             (C113 * C1388 + C31490 * C1400) * C832 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
            (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
               C3071) *
              C2799 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C31366 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31373 +
           ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
            (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C832 -
             (C380 * C31581 + C381 * C831) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C3071) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31655 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31651 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31641 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C2799 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31651 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31655 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31641 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C2691 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C31654 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C2691) *
              C31647 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C2691 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C31634 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C510 +
             (C113 * C123 + C31490 * C136) * C31649 -
             (C113 * C513 + C31490 * C523) * C511 -
             (C113 * C524 + C31490 * C543) * C31638 +
             (C113 * C514 + C31490 * C525) * C512 +
             (C113 * C526 + C31490 * C544) * C31614) *
                C31504 * C104 +
            (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
            C613 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C511 -
             ((C113 * C319 + C31490 * C337) * C31649 +
              (C113 * C307 + C31490 * C320) * C510) +
             (C113 * C1019 + C31490 * C1028) * C31638 -
             (C113 * C1385 + C31490 * C1394) * C512 -
             (C113 * C1395 + C31490 * C1412) * C31614) *
                C31504 * C104 +
            (C2948 - (C2949 + C2950) + C2951 - C2952 - C2953) * C31504 * C105 +
            (C2954 - (C2955 + C2956) + C2957 - C2958 - C2959) * C31504 * C106) *
               C31370) *
              C2799 +
          (((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
            (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
            (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
               C2691 +
           ((C2950 + C2949 - C2948 - C2951 + C2952 + C2953) * C31504 * C104 +
            (C2956 + C2955 - C2954 - C2957 + C2958 + C2959) * C31504 * C105 +
            (C378 * C510 + C379 * C31649 - C1057 * C511 - C1058 * C31638 +
             (C113 * C2317 + C31490 * C2318) * C512 +
             (C113 * C2319 + C31490 * C2320) * C31614) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C31654 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C2691) *
              C31647 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C31634 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31651 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31641 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C2799 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31651 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31641 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C510 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31649 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C511 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31638 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C512 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C31614) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C511 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31649 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C510) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31638 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C512 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C31614) *
               C31504 * C31265 * C31370) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C511 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31649 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C510) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31638 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C512 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C31614) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C510 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31649 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C511 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31638 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C512 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31370) *
              C31286 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C2691 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31370) *
              C31294 +
          ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
            (C850 + C851 - C862 - C863) * C31504 * C106) *
               C2691 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C832 -
             (C728 * C31581 + C729 * C831) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31286 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C2691 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C31654 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C2691) *
              C31647 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C2691 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C31634 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31655 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31651 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31641 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C2799 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31651 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31655 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31641 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C31654 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C2691) *
              C31647 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C2691 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C31634 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C2691) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31651 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31641 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C2799 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31651 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31655 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31641 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31366 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31373 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 -
             (C113 * C1388 + C31490 * C1400) * C3468 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
            (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
               C3071) *
              C31566 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31366 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31373 +
           ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
            (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C3468 -
             (C380 * C3465 + C381 * C3467) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31366 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31373 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C3071) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 -
            (C113 * C513 + C31490 * C523) * C30310 -
            (C113 * C524 + C31490 * C543) * C31415 +
            (C113 * C514 + C31490 * C525) * C30324 +
            (C113 * C526 + C31490 * C544) * C4043) *
               C31504 * C104 +
           (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
           C4071 * C106) *
              C31366 +
          (((C113 * C1013 + C31490 * C1018) * C30310 -
            ((C113 * C319 + C31490 * C337) * C31408 +
             (C113 * C307 + C31490 * C320) * C30318) +
            (C113 * C1019 + C31490 * C1028) * C31415 -
            (C113 * C1385 + C31490 * C1394) * C30324 -
            (C113 * C1395 + C31490 * C1412) * C4043) *
               C31504 * C104 +
           (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
           (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
              C31373 +
          (((C113 * C308 + C31490 * C321) * C30318 +
            (C113 * C322 + C31490 * C338) * C31408 -
            (C113 * C1388 + C31490 * C1400) * C30310 -
            (C113 * C1401 + C31490 * C1415) * C31415 +
            (C113 * C1389 + C31490 * C1402) * C30324 +
            (C113 * C1403 + C31490 * C1416) * C4043) *
               C31504 * C104 +
           (C374 * C30318 + C375 * C31408 - C1708 * C30310 - C1709 * C31415 +
            (C113 * C1391 + C31490 * C1406) * C30324 +
            (C113 * C1407 + C31490 * C1418) * C4043) *
               C31504 * C105 +
           (C376 * C30318 + C377 * C31408 - C1710 * C30310 - C1711 * C31415 +
            (C113 * C1393 + C31490 * C1410) * C30324 +
            (C113 * C1411 + C31490 * C1420) * C4043) *
               C31504 * C106) *
              C3071) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C30318 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31408 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C30310 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31415 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C30324 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C4043) *
              C31504 * C31265 * C31366 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C30310 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31408 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C30318) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31415 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C30324 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C4043) *
              C31504 * C31265 * C31373 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C30318 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31408 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C30310 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31415 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C30324 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C4043) *
              C31504 * C31265 * C3071) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31655 +
          (((C113 * C1013 + C31490 * C1018) * C3468 -
            ((C113 * C319 + C31490 * C337) * C3465 +
             (C113 * C307 + C31490 * C320) * C3467) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
              C31651 +
          (((C113 * C308 + C31490 * C321) * C3467 +
            (C113 * C322 + C31490 * C338) * C3465 -
            (C113 * C1388 + C31490 * C1400) * C3468 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
           (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
              C31641 +
          (((C113 * C1813 + C31490 * C1816) * C3468 -
            ((C113 * C1261 + C31490 * C1271) * C3465 +
             (C113 * C1253 + C31490 * C1262) * C3467) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C3468 -
            (C1540 * C3465 + C1541 * C3467) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C3468 -
            (C1538 * C3465 + C1539 * C3467) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31370) *
              C31645 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C2691 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31370) *
              C31632 +
          ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
            (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
               C2691 +
           (C3931 * C104 + (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C3468 -
             (C728 * C3465 + C729 * C3467) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 -
            (C113 * C513 + C31490 * C523) * C3758 -
            (C113 * C524 + C31490 * C543) * C31653 +
            (C113 * C514 + C31490 * C525) * C3759 +
            (C113 * C526 + C31490 * C544) * C31644 -
            (C113 * C2147 + C31490 * C2153) * C3760 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
               C31504 * C105 +
           (C3770 + C3771 - C3772 - C3773 + C3774 + C3775 - C3776 - C3777) *
               C31504 * C106) *
              C2691 +
          (((C113 * C1013 + C31490 * C1018) * C3758 -
            ((C113 * C319 + C31490 * C337) * C31656 +
             (C113 * C307 + C31490 * C320) * C3757) +
            (C113 * C1019 + C31490 * C1028) * C31653 -
            (C113 * C1385 + C31490 * C1394) * C3759 -
            (C113 * C1395 + C31490 * C1412) * C31644 +
            (C113 * C2581 + C31490 * C2584) * C3760 +
            (C113 * C2585 + C31490 * C2590) * C31627) *
               C31504 * C104 +
           (C1052 * C3758 - (C372 * C31656 + C373 * C3757) + C1053 * C31653 -
            C2338 * C3759 - C2339 * C31644 +
            (C113 * C2582 + C31490 * C2586) * C3760 +
            (C113 * C2587 + C31490 * C2591) * C31627) *
               C31504 * C105 +
           (C1054 * C3758 - (C370 * C31656 + C371 * C3757) + C1056 * C31653 -
            C2340 * C3759 - C2341 * C31644 +
            (C113 * C2583 + C31490 * C2588) * C3760 +
            (C113 * C2589 + C31490 * C2592) * C31627) *
               C31504 * C106) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31645 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31655 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3468 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C3465 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3467) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C31651 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C3467 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C3465 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C3468 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C31641 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C3468 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C3465 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C3467) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3757 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31656 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3758 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31653 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C3759 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31644 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C3760 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C2691 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3758 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31656 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3757) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31653 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C3759 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31644 +
           (C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6545 +
            C5041 * C6904 + C5037 * C6905) *
               C3760 +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6546 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31627) *
              C31504 * C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 -
             (C113 * C513 + C31490 * C523) * C30310 -
             (C113 * C524 + C31490 * C543) * C31415 +
             (C113 * C514 + C31490 * C525) * C30324 +
             (C113 * C526 + C31490 * C544) * C4043) *
                C31504 * C104 +
            (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
            C4071 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             (C113 * C1019 + C31490 * C1028) * C31415 -
             (C113 * C1385 + C31490 * C1394) * C30324 -
             (C113 * C1395 + C31490 * C1412) * C4043) *
                C31504 * C104 +
            (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
            (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
               C31370) *
              C31566 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
            (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
            (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
               C2691 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C31504 * C104 +
            (C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C31504 * C105 +
            (C378 * C30318 + C379 * C31408 - C1057 * C30310 - C1058 * C31415 +
             (C113 * C2317 + C31490 * C2318) * C30324 +
             (C113 * C2319 + C31490 * C2320) * C4043) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C30318 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31408 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C30310 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31415 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C30324 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C4043) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C30310 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31408 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C30318) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31415 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C30324 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C30310 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31408 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C30318) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31415 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C30324 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C4043) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C30318 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31408 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C30310 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31415 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C30324 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C2691 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31370) *
              C31645 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C2691 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31370) *
              C31632 +
          ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
            (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
               C2691 +
           (C3931 * C104 + (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C3468 -
             (C728 * C3465 + C729 * C3467) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31655 +
          (((C113 * C1013 + C31490 * C1018) * C3468 -
            ((C113 * C319 + C31490 * C337) * C3465 +
             (C113 * C307 + C31490 * C320) * C3467) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
              C31651 +
          (((C113 * C308 + C31490 * C321) * C3467 +
            (C113 * C322 + C31490 * C338) * C3465 -
            (C113 * C1388 + C31490 * C1400) * C3468 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
           (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
              C31641 +
          (((C113 * C1813 + C31490 * C1816) * C3468 -
            ((C113 * C1261 + C31490 * C1271) * C3465 +
             (C113 * C1253 + C31490 * C1262) * C3467) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C3468 -
            (C1540 * C3465 + C1541 * C3467) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C3468 -
            (C1538 * C3465 + C1539 * C3467) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31645 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C2691 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31655 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C3468 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C3465 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C3467) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C31651 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C3467 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C3465 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C3468 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C31641 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C3468 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C3465 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C3467) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1519 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1520 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C1521 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C31566 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1520 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1519 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C1521 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31580 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C713 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31580) *
              C714 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31580 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C715 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C1938 +
             (C113 * C123 + C31490 * C136) * C1935 -
             (C113 * C513 + C31490 * C523) * C1939 -
             (C113 * C524 + C31490 * C543) * C1936 +
             (C113 * C514 + C31490 * C525) * C1940 +
             (C113 * C526 + C31490 * C544) * C31614) *
                C31504 * C104 +
            (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
            C1965 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C1939 -
             ((C113 * C319 + C31490 * C337) * C1935 +
              (C113 * C307 + C31490 * C320) * C1938) +
             (C113 * C1019 + C31490 * C1028) * C1936 -
             (C113 * C1385 + C31490 * C1394) * C1940 -
             (C113 * C1395 + C31490 * C1412) * C31614) *
                C31504 * C104 +
            (C2322 - (C2323 + C2324) + C2325 - C2342 - C2343) * C31504 * C105 +
            (C2330 - (C2331 + C2332) + C2333 - C2344 - C2345) * C31504 * C106) *
               C31370) *
              C31566 +
          (((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 * C104 +
            (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 * C105 +
            (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 * C106) *
               C31580 +
           ((C2324 + C2323 - C2322 - C2325 + C2342 + C2343) * C31504 * C104 +
            (C2332 + C2331 - C2330 - C2333 + C2344 + C2345) * C31504 * C105 +
            (C378 * C1938 + C379 * C1935 - C1057 * C1939 - C1058 * C1936 +
             (C113 * C2317 + C31490 * C2318) * C1940 +
             (C113 * C2319 + C31490 * C2320) * C31614) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C713 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31580) *
              C714 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C715 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1520 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C1521 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C31566 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1520 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C1521 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C1938 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C1935 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C1939 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C1936 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C1940 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C31614) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C1939 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C1935 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C1938) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C1936 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C1940 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C1939 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C1935 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C1938) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C1936 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C1940 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C31614) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C1938 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C1935 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C1939 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C1936 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C1940 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C31614) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C1519 +
          (((C113 * C1013 + C31490 * C1018) * C832 -
            ((C113 * C319 + C31490 * C337) * C31581 +
             (C113 * C307 + C31490 * C320) * C831) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
              C1520 +
          (((C113 * C308 + C31490 * C321) * C831 +
            (C113 * C322 + C31490 * C338) * C31581 -
            (C113 * C1388 + C31490 * C1400) * C832 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
           (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
              C1521 +
          (((C113 * C1813 + C31490 * C1816) * C832 -
            ((C113 * C1261 + C31490 * C1271) * C31581 +
             (C113 * C1253 + C31490 * C1262) * C831) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C832 -
            (C1540 * C31581 + C1541 * C831) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C832 -
            (C1538 * C31581 + C1539 * C831) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31370) *
              C302 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C31580 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31370) *
              C303 +
          ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
            (C850 + C851 - C862 - C863) * C31504 * C106) *
               C31580 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C832 -
             (C728 * C31581 + C729 * C831) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 -
            (C113 * C513 + C31490 * C523) * C2448 -
            (C113 * C524 + C31490 * C543) * C2444 +
            (C113 * C514 + C31490 * C525) * C2449 +
            (C113 * C526 + C31490 * C544) * C2445 -
            (C113 * C2147 + C31490 * C2153) * C2450 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
               C31504 * C105 +
           (C2466 + C2467 - C2468 - C2469 + C2470 + C2471 - C2482 - C2483) *
               C31504 * C106) *
              C31580 +
          (((C113 * C1013 + C31490 * C1018) * C2448 -
            ((C113 * C319 + C31490 * C337) * C2443 +
             (C113 * C307 + C31490 * C320) * C2447) +
            (C113 * C1019 + C31490 * C1028) * C2444 -
            (C113 * C1385 + C31490 * C1394) * C2449 -
            (C113 * C1395 + C31490 * C1412) * C2445 +
            (C113 * C2581 + C31490 * C2584) * C2450 +
            (C113 * C2585 + C31490 * C2590) * C31627) *
               C31504 * C104 +
           (C1052 * C2448 - (C372 * C2443 + C373 * C2447) + C1053 * C2444 -
            C2338 * C2449 - C2339 * C2445 +
            (C113 * C2582 + C31490 * C2586) * C2450 +
            (C113 * C2587 + C31490 * C2591) * C31627) *
               C31504 * C105 +
           (C1054 * C2448 - (C370 * C2443 + C371 * C2447) + C1056 * C2444 -
            C2340 * C2449 - C2341 * C2445 +
            (C113 * C2583 + C31490 * C2588) * C2450 +
            (C113 * C2589 + C31490 * C2592) * C31627) *
               C31504 * C106) *
              C31370) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C302 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C1519 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C832 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31581 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C831) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C1520 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C831 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31581 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C832 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C1521 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C832 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31581 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C831) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C2447 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C2443 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C2448 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C2444 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C2449 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C2445 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C2450 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31580 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C2448 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C2443 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C2447) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C2444 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C2449 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C2445 +
           (C5039 * C2581 + C5035 * C2584 + C5040 * C6542 + C5036 * C6545 +
            C5041 * C6904 + C5037 * C6905) *
               C2450 +
           (C5039 * C2585 + C5035 * C2590 + C5040 * C6546 + C5036 * C6551 +
            C5041 * C6906 + C5037 * C6907) *
               C31627) *
              C31504 * C31265 * C31370) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31490 * C122) * C114 +
                (C113 * C123 + C31490 * C136) * C31325) *
                   C31504 * C104 +
               (C174 + C175) * C31504 * C105 + C187 * C106) *
                  C31308 * C108 -
              (C188 * C106 + (C177 + C176) * C31504 * C105 +
               (C175 + C174) * C31504 * C104) *
                  C31308 * C109 +
              (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                  C31308 * C110 -
              ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
               C188 * C104) *
                  C31308 * C111 +
              (C189 * C104 + (C183 + C182) * C31504 * C105 +
               ((C113 * C121 + C31490 * C134) * C114 +
                (C113 * C135 + C31490 * C142) * C31325) *
                   C31504 * C106) *
                  C31308 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31490 * C122) * C114 +
                 (C113 * C123 + C31490 * C136) * C31325) *
                    C31504 * C104 +
                (C174 + C175) * C31504 * C105 + C187 * C106) *
                   C31648 -
               (C396 * C106 + (C384 + C385) * C31504 * C105 +
                ((C113 * C319 + C31490 * C337) * C31325 +
                 (C113 * C307 + C31490 * C320) * C114) *
                    C31504 * C104) *
                   C31636 +
               (((C113 * C308 + C31490 * C321) * C114 +
                 (C113 * C322 + C31490 * C338) * C31325) *
                    C31504 * C104 +
                (C386 + C387) * C31504 * C105 + C397 * C106) *
                   C31611) *
                  C302 +
              (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
                (C390 + C391) * C31504 * C106) *
                   C31636 -
               (C188 * C106 + (C177 + C176) * C31504 * C105 +
                (C175 + C174) * C31504 * C104) *
                   C31648 -
               ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
                (C387 + C386) * C31504 * C104) *
                   C31611) *
                  C303 +
              ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
                   C31648 -
               (((C113 * C331 + C31490 * C343) * C31325 +
                 (C113 * C313 + C31490 * C332) * C114) *
                    C31504 * C106 +
                (C391 + C390) * C31504 * C105 + C396 * C104) *
                   C31636 +
               (C397 * C104 + (C393 + C392) * C31504 * C105 +
                ((C113 * C314 + C31490 * C333) * C114 +
                 (C113 * C334 + C31490 * C344) * C31325) *
                    C31504 * C106) *
                   C31611) *
                  C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C31308 * C302 +
          ((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
           (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
           (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
              C31308 * C303 +
          (C613 * C104 +
           (C577 + C576 - C605 - C606 + C607 + C608) * C31504 * C105 +
           (C170 * C510 + C171 * C31649 - (C113 * C521 + C31490 * C539) * C511 -
            (C113 * C540 + C31490 * C551) * C31638 +
            (C113 * C522 + C31490 * C541) * C512 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C1177 +
          (((C113 * C1013 + C31490 * C1018) * C511 -
            ((C113 * C319 + C31490 * C337) * C31649 +
             (C113 * C307 + C31490 * C320) * C510) +
            (C113 * C1019 + C31490 * C1028) * C31638 -
            (C113 * C1385 + C31490 * C1394) * C512 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C511 - (C372 * C31649 + C373 * C510) + C1053 * C31638 -
            (C113 * C1386 + C31490 * C1396) * C512 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C511 - (C370 * C31649 + C371 * C510) + C1056 * C31638 -
            (C113 * C1387 + C31490 * C1398) * C512 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C1178 +
          (((C113 * C308 + C31490 * C321) * C510 +
            (C113 * C322 + C31490 * C338) * C31649 -
            (C113 * C1388 + C31490 * C1400) * C511 -
            (C113 * C1401 + C31490 * C1415) * C31638 +
            (C113 * C1389 + C31490 * C1402) * C512 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C510 + C375 * C31649 -
            (C113 * C1390 + C31490 * C1404) * C511 -
            (C113 * C1405 + C31490 * C1417) * C31638 +
            (C113 * C1391 + C31490 * C1406) * C512 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C510 + C377 * C31649 -
            (C113 * C1392 + C31490 * C1408) * C511 -
            (C113 * C1409 + C31490 * C1419) * C31638 +
            (C113 * C1393 + C31490 * C1410) * C512 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31308 * C31645 +
          ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 * C104 +
           (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 * C105 +
           (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 * C106) *
              C31308 * C31632 +
          (C1965 * C104 +
           (C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C31504 * C105 +
           (C170 * C1938 + C171 * C1935 - C858 * C1939 - C859 * C1936 +
            (C113 * C522 + C31490 * C541) * C1940 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31648 +
          (((C113 * C1013 + C31490 * C1018) * C1939 -
            ((C113 * C319 + C31490 * C337) * C1935 +
             (C113 * C307 + C31490 * C320) * C1938) +
            (C113 * C1019 + C31490 * C1028) * C1936 -
            (C113 * C1385 + C31490 * C1394) * C1940 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C1939 - (C372 * C1935 + C373 * C1938) + C1053 * C1936 -
            (C113 * C1386 + C31490 * C1396) * C1940 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C1939 - (C370 * C1935 + C371 * C1938) + C1056 * C1936 -
            (C113 * C1387 + C31490 * C1398) * C1940 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C31636 +
          (((C113 * C308 + C31490 * C321) * C1938 +
            (C113 * C322 + C31490 * C338) * C1935 -
            (C113 * C1388 + C31490 * C1400) * C1939 -
            (C113 * C1401 + C31490 * C1415) * C1936 +
            (C113 * C1389 + C31490 * C1402) * C1940 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
            (C113 * C1391 + C31490 * C1406) * C1940 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C1938 + C377 * C1935 - C1710 * C1939 - C1711 * C1936 +
            (C113 * C1393 + C31490 * C1410) * C1940 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31490 * C122) * C2142 +
           (C113 * C123 + C31490 * C136) * C2137 -
           (C113 * C513 + C31490 * C523) * C2143 -
           (C113 * C524 + C31490 * C543) * C2138 +
           (C113 * C514 + C31490 * C525) * C2144 +
           (C113 * C526 + C31490 * C544) * C2139 -
           (C113 * C2147 + C31490 * C2153) * C2145 -
           (C113 * C2154 + C31490 * C2165) * C2140 +
           (C113 * C2148 + C31490 * C2155) * C2146 +
           (C113 * C2156 + C31490 * C2166) * C2141) *
              C31504 * C104 +
          (C164 * C2142 + C165 * C2137 - C584 * C2143 - C585 * C2138 +
           C586 * C2144 + C587 * C2139 -
           (C113 * C2149 + C31490 * C2157) * C2145 -
           (C113 * C2158 + C31490 * C2167) * C2140 +
           (C113 * C2150 + C31490 * C2159) * C2146 +
           (C113 * C2160 + C31490 * C2168) * C2141) *
              C31504 * C105 +
          (C166 * C2142 + C167 * C2137 - C589 * C2143 - C590 * C2138 +
           C591 * C2144 + C592 * C2139 -
           (C113 * C2151 + C31490 * C2161) * C2145 -
           (C113 * C2162 + C31490 * C2169) * C2140 +
           (C113 * C2152 + C31490 * C2163) * C2146 +
           (C113 * C2164 + C31490 * C2170) * C2141) *
              C31504 * C106) *
         C31308 * C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C302 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C511 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31649 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C510) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31638 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C512 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C510 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31649 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C511 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31638 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C512 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C1177 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C511 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31649 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C510) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31638 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C512 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C1178 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C510 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31649 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C511 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31638 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C512 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C31645 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C1939 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C1935 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C1938) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C1936 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C1940 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C31632 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C1938 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C1935 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C1939 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C1936 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C1940 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31648 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C1939 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C1935 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C1938) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C1936 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C1940 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C31636 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C1938 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C1935 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C1939 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C1936 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C1940 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
           C5041 * C308 + C5037 * C321) *
              C2142 +
          (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
           C5041 * C322 + C5037 * C338) *
              C2137 -
          (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
           C5039 * C513 + C5035 * C523) *
              C2143 -
          (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
           C5039 * C524 + C5035 * C543) *
              C2138 +
          (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
           C5041 * C1389 + C5037 * C1402) *
              C2144 +
          (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
           C5041 * C1403 + C5037 * C1416) *
              C2139 -
          (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
           C5039 * C2147 + C5035 * C2153) *
              C2145 -
          (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
           C5039 * C2154 + C5035 * C2165) *
              C2140 +
          (C5039 * C2148 + C5035 * C2155 + C5040 * C6543 + C5036 * C6547 +
           C5041 * C6544 + C5037 * C6548) *
              C2146 +
          (C5039 * C2156 + C5035 * C2166 + C5040 * C6549 + C5036 * C6552 +
           C5041 * C6550 + C5037 * C6553) *
              C2141) *
         C31504 * C31265 * C31308 * C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C1177 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 -
             (C113 * C1388 + C31490 * C1400) * C832 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
            (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
               C31611) *
              C31566 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C1177 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C1178 +
           ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
            (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C832 -
             (C380 * C31581 + C381 * C831) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C31308 * C713 +
          ((C840 - (C839 + C838) + C841) * C31504 * C104 +
           (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
              C31308 * C714 +
          (C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
           (C850 + C851 - C862 - C863) * C31504 * C106) *
              C31308 * C715 +
          (C867 * C104 + (C862 - (C851 + C850) + C863) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C832 -
            (C172 * C31581 + C173 * C831) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C2447 +
            (C113 * C123 + C31490 * C136) * C2443 -
            (C113 * C513 + C31490 * C523) * C2448 -
            (C113 * C524 + C31490 * C543) * C2444 +
            (C113 * C514 + C31490 * C525) * C2449 +
            (C113 * C526 + C31490 * C544) * C2445 -
            (C113 * C2147 + C31490 * C2153) * C2450 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C2456 + C2457 - C2458 - C2459 + C2460 + C2461 - C2480 - C2481) *
               C31504 * C105 +
           (C2466 + C2467 - C2468 - C2469 + C2470 + C2471 - C2482 - C2483) *
               C31504 * C106) *
              C31308 * C31566 +
          ((C2458 - (C2457 + C2456) + C2459 - C2460 - C2461 + C2480 + C2481) *
               C31504 * C104 +
           (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471 + C2482 + C2483) *
               C31504 * C105 +
           (C593 * C2448 - (C168 * C2443 + C169 * C2447) + C594 * C2444 -
            C595 * C2449 - C596 * C2445 +
            (C113 * C2451 + C31490 * C2452) * C2450 +
            (C113 * C2453 + C31490 * C2454) * C31627) *
               C31504 * C106) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C713 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C832 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31581 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C831) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C831 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31581 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C832 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C715 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C832 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31581 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C831) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C2447 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C2443 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C2448 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C2444 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C2449 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C2445 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C2450 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31308 * C31566 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C2448 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C2443 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C2447) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C2444 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C2449 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C2445 +
           (C5039 * C2149 + C5035 * C2157 + C5040 * C2582 + C5036 * C2586 +
            C5041 * C6802 + C5037 * C6803) *
               C2450 +
           (C5039 * C2158 + C5035 * C2167 + C5040 * C2587 + C5036 * C2591 +
            C5041 * C6804 + C5037 * C6805) *
               C31627) *
              C31504 * C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31648 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C302 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            (C390 + C391) * C31504 * C106) *
               C31636 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31648 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C303 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31648 -
           (((C113 * C331 + C31490 * C343) * C31325 +
             (C113 * C313 + C31490 * C332) * C114) *
                C31504 * C106 +
            (C391 + C390) * C31504 * C105 + C396 * C104) *
               C31636 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C31308 * C108 -
          (C188 * C106 + (C177 + C176) * C31504 * C105 +
           (C175 + C174) * C31504 * C104) *
              C31308 * C109 +
          (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C31308 *
              C110 -
          ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
           C188 * C104) *
              C31308 * C111 +
          (C189 * C104 + (C183 + C182) * C31504 * C105 +
           ((C113 * C121 + C31490 * C134) * C114 +
            (C113 * C135 + C31490 * C142) * C31325) *
               C31504 * C106) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31308 * C31645 +
          ((C1944 - (C1943 + C1942) + C1945 - C1946 - C1947) * C31504 * C104 +
           (C1950 - (C1949 + C1948) + C1951 - C1952 - C1953) * C31504 * C105 +
           (C1954 - (C1955 + C1956) + C1957 - C1958 - C1959) * C31504 * C106) *
              C31308 * C31632 +
          (C1965 * C104 +
           (C1956 + C1955 - C1954 - C1957 + C1958 + C1959) * C31504 * C105 +
           (C170 * C1938 + C171 * C1935 - C858 * C1939 - C859 * C1936 +
            (C113 * C522 + C31490 * C541) * C1940 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C1938 +
            (C113 * C123 + C31490 * C136) * C1935 -
            (C113 * C513 + C31490 * C523) * C1939 -
            (C113 * C524 + C31490 * C543) * C1936 +
            (C113 * C514 + C31490 * C525) * C1940 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C1942 + C1943 - C1944 - C1945 + C1946 + C1947) * C31504 * C105 +
           C1965 * C106) *
              C31648 +
          (((C113 * C1013 + C31490 * C1018) * C1939 -
            ((C113 * C319 + C31490 * C337) * C1935 +
             (C113 * C307 + C31490 * C320) * C1938) +
            (C113 * C1019 + C31490 * C1028) * C1936 -
            (C113 * C1385 + C31490 * C1394) * C1940 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C1939 - (C372 * C1935 + C373 * C1938) + C1053 * C1936 -
            (C113 * C1386 + C31490 * C1396) * C1940 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C1939 - (C370 * C1935 + C371 * C1938) + C1056 * C1936 -
            (C113 * C1387 + C31490 * C1398) * C1940 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C31636 +
          (((C113 * C308 + C31490 * C321) * C1938 +
            (C113 * C322 + C31490 * C338) * C1935 -
            (C113 * C1388 + C31490 * C1400) * C1939 -
            (C113 * C1401 + C31490 * C1415) * C1936 +
            (C113 * C1389 + C31490 * C1402) * C1940 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C1938 + C375 * C1935 - C1708 * C1939 - C1709 * C1936 +
            (C113 * C1391 + C31490 * C1406) * C1940 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C1938 + C377 * C1935 - C1710 * C1939 - C1711 * C1936 +
            (C113 * C1393 + C31490 * C1410) * C1940 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C31645 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C1939 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C1935 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C1938) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C1936 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C1940 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C31632 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C1938 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C1935 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C1939 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C1936 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C1940 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C1938 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C1935 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C1939 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C1936 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C1940 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31648 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C1939 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C1935 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C1938) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C1936 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C1940 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C31636 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C1938 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C1935 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C1939 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C1936 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C1940 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 + C3931 * C106) *
               C31370) *
              C31286 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31580 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C3925 + C3926 - C3927 - C3928) * C31504 * C106) *
               C31370) *
              C31294 +
          ((C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
            (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
               C31580 +
           (C3931 * C104 + (C3927 - (C3926 + C3925) + C3928) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C3468 -
             (C728 * C3465 + C729 * C3467) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31286 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31294 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C3467 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C3465 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C3468 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C3468 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C3465 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C3467) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C30318 +
             (C113 * C123 + C31490 * C136) * C31408 -
             (C113 * C513 + C31490 * C523) * C30310 -
             (C113 * C524 + C31490 * C543) * C31415 +
             (C113 * C514 + C31490 * C525) * C30324 +
             (C113 * C526 + C31490 * C544) * C4043) *
                C31504 * C104 +
            (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
            C4071 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C30310 -
             ((C113 * C319 + C31490 * C337) * C31408 +
              (C113 * C307 + C31490 * C320) * C30318) +
             (C113 * C1019 + C31490 * C1028) * C31415 -
             (C113 * C1385 + C31490 * C1394) * C30324 -
             (C113 * C1395 + C31490 * C1412) * C4043) *
                C31504 * C104 +
            (C4218 - (C4219 + C4220) + C4221 - C4222 - C4223) * C31504 * C105 +
            (C4224 - (C4225 + C4226) + C4227 - C4228 - C4229) * C31504 * C106) *
               C31370) *
              C2799 +
          (((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
            (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
            (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
               C31580 +
           ((C4220 + C4219 - C4218 - C4221 + C4222 + C4223) * C31504 * C104 +
            (C4226 + C4225 - C4224 - C4227 + C4228 + C4229) * C31504 * C105 +
            (C378 * C30318 + C379 * C31408 - C1057 * C30310 - C1058 * C31415 +
             (C113 * C2317 + C31490 * C2318) * C30324 +
             (C113 * C2319 + C31490 * C2320) * C4043) *
                C31504 * C106) *
               C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C30318 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31408 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C30310 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31415 +
            (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
             C5041 * C1389 + C5037 * C1402) *
                C30324 +
            (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
             C5041 * C1403 + C5037 * C1416) *
                C4043) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C30310 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31408 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C30318) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31415 -
            (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
             C5039 * C1385 + C5035 * C1394) *
                C30324 -
            (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
             C5039 * C1395 + C5035 * C1412) *
                C4043) *
               C31504 * C31265 * C31370) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C30310 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31408 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C30318) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31415 -
            (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
             C5039 * C516 + C5035 * C529) *
                C30324 -
            (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
             C5039 * C530 + C5035 * C546) *
                C4043) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C30318 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31408 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C30310 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31415 +
            (C5039 * C1386 + C5035 * C1396 + C5040 * C1391 + C5036 * C1406 +
             C5041 * C6700 + C5037 * C6701) *
                C30324 +
            (C5039 * C1397 + C5035 * C1413 + C5040 * C1407 + C5036 * C1418 +
             C5041 * C6702 + C5037 * C6703) *
                C4043) *
               C31504 * C31265 * C31370) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31648 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
            (C3644 - (C3645 + C3646) + C3647) * C31504 * C106) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 -
             (C113 * C1388 + C31490 * C1400) * C3468 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
            (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
               C31611) *
              C2799 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31648 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C378 * C3467 + C379 * C3465 - C1057 * C3468 - C1058 * C31412) *
                C31504 * C106) *
               C31636 +
           ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
            (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C3468 -
             (C380 * C3465 + C381 * C3467) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31308 * C31654 +
          ((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
           (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
              C31308 * C31647 +
          (C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
           (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
              C31308 * C31634 +
          (C3493 * C104 + (C3484 - (C3483 + C3482) + C3485) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C3468 -
            (C172 * C3465 + C173 * C3467) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3757 +
            (C113 * C123 + C31490 * C136) * C31656 -
            (C113 * C513 + C31490 * C523) * C3758 -
            (C113 * C524 + C31490 * C543) * C31653 +
            (C113 * C514 + C31490 * C525) * C3759 +
            (C113 * C526 + C31490 * C544) * C31644 -
            (C113 * C2147 + C31490 * C2153) * C3760 -
            (C113 * C2154 + C31490 * C2165) * C31627) *
               C31504 * C104 +
           (C3762 + C3763 - C3764 - C3765 + C3766 + C3767 - C3768 - C3769) *
               C31504 * C105 +
           (C3770 + C3771 - C3772 - C3773 + C3774 + C3775 - C3776 - C3777) *
               C31504 * C106) *
              C31308 * C2799 +
          ((C3764 - (C3763 + C3762) + C3765 - C3766 - C3767 + C3768 + C3769) *
               C31504 * C104 +
           (C3772 - (C3771 + C3770) + C3773 - C3774 - C3775 + C3776 + C3777) *
               C31504 * C105 +
           (C593 * C3758 - (C168 * C31656 + C169 * C3757) + C594 * C31653 -
            C595 * C3759 - C596 * C31644 +
            (C113 * C2451 + C31490 * C2452) * C3760 +
            (C113 * C2453 + C31490 * C2454) * C31627) *
               C31504 * C106) *
              C31308 * C31291)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C31654 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3468 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C3465 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3467) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C31647 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C3467 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C3465 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C3468 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C31634 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C3468 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C3465 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C3467) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3757 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31656 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3758 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31653 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C3759 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31644 -
           (C5041 * C6542 + C5037 * C6545 + C5040 * C2581 + C5036 * C2584 +
            C5039 * C2147 + C5035 * C2153) *
               C3760 -
           (C5041 * C6546 + C5037 * C6551 + C5040 * C2585 + C5036 * C2590 +
            C5039 * C2154 + C5035 * C2165) *
               C31627) *
              C31504 * C31265 * C31308 * C2799 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3758 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31656 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3757) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31653 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C3759 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31644 +
           (C5039 * C2149 + C5035 * C2157 + C5040 * C2582 + C5036 * C2586 +
            C5041 * C6802 + C5037 * C6803) *
               C3760 +
           (C5039 * C2158 + C5035 * C2167 + C5040 * C2587 + C5036 * C2591 +
            C5041 * C6804 + C5037 * C6805) *
               C31627) *
              C31504 * C31265 * C31308 * C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C30318 +
            (C113 * C123 + C31490 * C136) * C31408 -
            (C113 * C513 + C31490 * C523) * C30310 -
            (C113 * C524 + C31490 * C543) * C31415 +
            (C113 * C514 + C31490 * C525) * C30324 +
            (C113 * C526 + C31490 * C544) * C4043) *
               C31504 * C104 +
           (C4048 + C4049 - C4050 - C4051 + C4052 + C4053) * C31504 * C105 +
           C4071 * C106) *
              C31308 * C31286 +
          ((C4050 - (C4049 + C4048) + C4051 - C4052 - C4053) * C31504 * C104 +
           (C4056 - (C4055 + C4054) + C4057 - C4058 - C4059) * C31504 * C105 +
           (C4060 - (C4061 + C4062) + C4063 - C4064 - C4065) * C31504 * C106) *
              C31308 * C31294 +
          (C4071 * C104 +
           (C4062 + C4061 - C4060 - C4063 + C4064 + C4065) * C31504 * C105 +
           (C170 * C30318 + C171 * C31408 - C858 * C30310 - C859 * C31415 +
            (C113 * C522 + C31490 * C541) * C30324 +
            (C113 * C542 + C31490 * C552) * C4043) *
               C31504 * C106) *
              C31308 * C3074)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C30318 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31408 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C30310 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31415 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C30324 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C4043) *
              C31504 * C31265 * C31308 * C31286 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C30310 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31408 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C30318) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31415 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C30324 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C4043) *
              C31504 * C31265 * C31308 * C31294 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C30318 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31408 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C30310 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31415 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C30324 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C4043) *
              C31504 * C31265 * C31308 * C3074)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C3467 +
            (C113 * C123 + C31490 * C136) * C3465 -
            (C113 * C513 + C31490 * C523) * C3468 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
              C31308 * C31654 +
          ((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
           (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
              C31308 * C31647 +
          (C3492 * C104 + (C3480 + C3479 - C3478 - C3481) * C31504 * C105 +
           (C3482 + C3483 - C3484 - C3485) * C31504 * C106) *
              C31308 * C31634 +
          (C3493 * C104 + (C3484 - (C3483 + C3482) + C3485) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C3468 -
            (C172 * C3465 + C173 * C3467) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C3467 +
             (C113 * C123 + C31490 * C136) * C3465 -
             (C113 * C513 + C31490 * C523) * C3468 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C3470 + C3471 - C3472 - C3473) * C31504 * C105 + C3492 * C106) *
               C31648 +
           (((C113 * C1013 + C31490 * C1018) * C3468 -
             ((C113 * C319 + C31490 * C337) * C3465 +
              (C113 * C307 + C31490 * C320) * C3467) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C3640 - (C3641 + C3642) + C3643) * C31504 * C105 +
            (C3644 - (C3645 + C3646) + C3647) * C31504 * C106) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C3467 +
             (C113 * C322 + C31490 * C338) * C3465 -
             (C113 * C1388 + C31490 * C1400) * C3468 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C3648 + C3649 - C3650 - C3651) * C31504 * C105 +
            (C3652 + C3653 - C3654 - C3655) * C31504 * C106) *
               C31611) *
              C2799 +
          (((C3472 - (C3471 + C3470) + C3473) * C31504 * C104 +
            (C3476 - (C3475 + C3474) + C3477) * C31504 * C105 + C3493 * C106) *
               C31648 +
           ((C3642 + C3641 - C3640 - C3643) * C31504 * C104 +
            (C3646 + C3645 - C3644 - C3647) * C31504 * C105 +
            (C378 * C3467 + C379 * C3465 - C1057 * C3468 - C1058 * C31412) *
                C31504 * C106) *
               C31636 +
           ((C3650 - (C3649 + C3648) + C3651) * C31504 * C104 +
            (C3654 - (C3653 + C3652) + C3655) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C3468 -
             (C380 * C3465 + C381 * C3467) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C3467 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C3465 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C3468 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C31654 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C3468 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C3465 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C3467) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C31647 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C3467 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C3465 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C3468 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C31634 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C3468 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C3465 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C3467) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C3467 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C3465 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C3468 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C3468 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C3465 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C3467) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C3467 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C3465 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C3468 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C2799 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C3468 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C3465 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C3467) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31648 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C3467 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C3465 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C3468 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31636 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C3468 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C3465 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C3467) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31580 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31370) *
              C713 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C31370 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31580) *
              C714 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31580 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C31370) *
              C715 +
          ((C727 * C104 + (C731 + C730) * C31504 * C105 +
            ((C113 * C717 + C31490 * C718) * C114 +
             (C113 * C719 + C31490 * C720) * C31325) *
                C31504 * C106) *
               C31370 -
           ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
            C188 * C104) *
               C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1519 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1520 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C1521 -
           ((C1542 + C1543) * C31504 * C106 + (C1544 + C1545) * C31504 * C105 +
            ((C113 * C1261 + C31490 * C1271) * C31325 +
             (C113 * C1253 + C31490 * C1262) * C114) *
                C31504 * C104) *
               C31621) *
              C31566 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1520 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1519 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C1521 +
           ((C1545 + C1544) * C31504 * C104 + (C1543 + C1542) * C31504 * C105 +
            ((C113 * C1525 + C31490 * C1526) * C114 +
             (C113 * C1527 + C31490 * C1528) * C31325) *
                C31504 * C106) *
               C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31370) *
              C713 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31580) *
              C714 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31580 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31370) *
              C715 +
          (((C5039 * C311 + C5035 * C327 + C5040 * C312 + C5036 * C330 +
             C5041 * C1525 + C5037 * C1526) *
                C114 +
            (C5039 * C328 + C5035 * C341 + C5040 * C329 + C5036 * C342 +
             C5041 * C1527 + C5037 * C1528) *
                C31325) *
               C31504 * C31265 * C31370 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31325 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C114) *
               C31504 * C31265 * C31580) *
              C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1520 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C1521 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31325 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C114) *
               C31504 * C31265 * C31621) *
              C31566 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1520 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1519 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C1521 +
           ((C5039 * C1252 + C5035 * C1260 + C5040 * C1255 + C5036 * C1265 +
             C5041 * C6004 + C5037 * C6005) *
                C114 +
            (C5039 * C1259 + C5035 * C1270 + C5040 * C1266 + C5036 * C1273 +
             C5041 * C6006 + C5037 * C6007) *
                C31325) *
               C31504 * C31265 * C31621) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C31580 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C31370) *
              C302 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C31580 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C31370) *
              C303 +
          ((C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
            (C850 + C851 - C862 - C863) * C31504 * C106) *
               C31580 +
           (C1067 * C104 + (C1063 - (C1047 + C1046) + C1064) * C31504 * C105 +
            ((C113 * C1017 + C31490 * C1026) * C832 -
             (C728 * C31581 + C729 * C831) +
             (C113 * C1027 + C31490 * C1032) * C31412) *
                C31504 * C106) *
               C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C1519 +
          (((C113 * C1013 + C31490 * C1018) * C832 -
            ((C113 * C319 + C31490 * C337) * C31581 +
             (C113 * C307 + C31490 * C320) * C831) +
            (C113 * C1019 + C31490 * C1028) * C31412) *
               C31504 * C104 +
           (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
              C1520 +
          (((C113 * C308 + C31490 * C321) * C831 +
            (C113 * C322 + C31490 * C338) * C31581 -
            (C113 * C1388 + C31490 * C1400) * C832 -
            (C113 * C1401 + C31490 * C1415) * C31412) *
               C31504 * C104 +
           (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
           (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
              C1521 +
          (((C113 * C1813 + C31490 * C1816) * C832 -
            ((C113 * C1261 + C31490 * C1271) * C31581 +
             (C113 * C1253 + C31490 * C1262) * C831) +
            (C113 * C1817 + C31490 * C1822) * C31412) *
               C31504 * C104 +
           ((C113 * C1814 + C31490 * C1818) * C832 -
            (C1540 * C31581 + C1541 * C831) +
            (C113 * C1819 + C31490 * C1823) * C31412) *
               C31504 * C105 +
           ((C113 * C1815 + C31490 * C1820) * C832 -
            (C1538 * C31581 + C1539 * C831) +
            (C113 * C1821 + C31490 * C1824) * C31412) *
               C31504 * C106) *
              C31621) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C31370) *
              C302 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C31370) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C831 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31581 -
            (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
             C5039 * C517 + C5035 * C531) *
                C832 -
            (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
             C5039 * C532 + C5035 * C547) *
                C31412) *
               C31504 * C31265 * C31580 +
           ((C5039 * C1015 + C5035 * C1022 + C5040 * C1392 + C5036 * C1408 +
             C5041 * C1815 + C5037 * C1820) *
                C832 -
            ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
              C5039 * C315 + C5035 * C335) *
                 C31581 +
             (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
              C5039 * C305 + C5035 * C316) *
                 C831) +
            (C5039 * C1023 + C5035 * C1030 + C5040 * C1409 + C5036 * C1419 +
             C5041 * C1821 + C5037 * C1824) *
                C31412) *
               C31504 * C31265 * C31370) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C1519 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C832 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31581 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C831) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31412) *
              C31504 * C31265 * C1520 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C831 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31581 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C832 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31412) *
              C31504 * C31265 * C1521 +
          ((C5039 * C1813 + C5035 * C1816 + C5040 * C5895 + C5036 * C5899 +
            C5041 * C6256 + C5037 * C6257) *
               C832 -
           ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
             C5039 * C1261 + C5035 * C1271) *
                C31581 +
            (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
             C5039 * C1253 + C5035 * C1262) *
                C831) +
           (C5039 * C1817 + C5035 * C1822 + C5040 * C5900 + C5036 * C5904 +
            C5041 * C6258 + C5037 * C6259) *
               C31412) *
              C31504 * C31265 * C31621) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31648 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C302 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            (C390 + C391) * C31504 * C106) *
               C31636 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31648 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C303 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31648 -
           (((C113 * C331 + C31490 * C343) * C31325 +
             (C113 * C313 + C31490 * C332) * C114) *
                C31504 * C106 +
            (C391 + C390) * C31504 * C105 + C396 * C104) *
               C31636 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C31308 * C108 -
          (C188 * C106 + (C177 + C176) * C31504 * C105 +
           (C175 + C174) * C31504 * C104) *
              C31308 * C109 +
          (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C31308 *
              C110 -
          ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
           C188 * C104) *
              C31308 * C111 +
          (C189 * C104 + (C183 + C182) * C31504 * C105 +
           ((C113 * C121 + C31490 * C134) * C114 +
            (C113 * C135 + C31490 * C142) * C31325) *
               C31504 * C106) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C31308 * C302 +
          ((C597 - (C555 + C554) + C598 - C599 - C600) * C31504 * C104 +
           (C601 - (C565 + C564) + C602 - C603 - C604) * C31504 * C105 +
           (C605 - (C576 + C577) + C606 - C607 - C608) * C31504 * C106) *
              C31308 * C303 +
          (C613 * C104 +
           (C577 + C576 - C605 - C606 + C607 + C608) * C31504 * C105 +
           (C170 * C510 + C171 * C31649 - (C113 * C521 + C31490 * C539) * C511 -
            (C113 * C540 + C31490 * C551) * C31638 +
            (C113 * C522 + C31490 * C541) * C512 +
            (C113 * C542 + C31490 * C552) * C31614) *
               C31504 * C106) *
              C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C510 +
            (C113 * C123 + C31490 * C136) * C31649 -
            (C113 * C513 + C31490 * C523) * C511 -
            (C113 * C524 + C31490 * C543) * C31638 +
            (C113 * C514 + C31490 * C525) * C512 +
            (C113 * C526 + C31490 * C544) * C31614) *
               C31504 * C104 +
           (C554 + C555 - C597 - C598 + C599 + C600) * C31504 * C105 +
           C613 * C106) *
              C1177 +
          (((C113 * C1013 + C31490 * C1018) * C511 -
            ((C113 * C319 + C31490 * C337) * C31649 +
             (C113 * C307 + C31490 * C320) * C510) +
            (C113 * C1019 + C31490 * C1028) * C31638 -
            (C113 * C1385 + C31490 * C1394) * C512 -
            (C113 * C1395 + C31490 * C1412) * C31614) *
               C31504 * C104 +
           (C1052 * C511 - (C372 * C31649 + C373 * C510) + C1053 * C31638 -
            (C113 * C1386 + C31490 * C1396) * C512 -
            (C113 * C1397 + C31490 * C1413) * C31614) *
               C31504 * C105 +
           (C1054 * C511 - (C370 * C31649 + C371 * C510) + C1056 * C31638 -
            (C113 * C1387 + C31490 * C1398) * C512 -
            (C113 * C1399 + C31490 * C1414) * C31614) *
               C31504 * C106) *
              C1178 +
          (((C113 * C308 + C31490 * C321) * C510 +
            (C113 * C322 + C31490 * C338) * C31649 -
            (C113 * C1388 + C31490 * C1400) * C511 -
            (C113 * C1401 + C31490 * C1415) * C31638 +
            (C113 * C1389 + C31490 * C1402) * C512 +
            (C113 * C1403 + C31490 * C1416) * C31614) *
               C31504 * C104 +
           (C374 * C510 + C375 * C31649 -
            (C113 * C1390 + C31490 * C1404) * C511 -
            (C113 * C1405 + C31490 * C1417) * C31638 +
            (C113 * C1391 + C31490 * C1406) * C512 +
            (C113 * C1407 + C31490 * C1418) * C31614) *
               C31504 * C105 +
           (C376 * C510 + C377 * C31649 -
            (C113 * C1392 + C31490 * C1408) * C511 -
            (C113 * C1409 + C31490 * C1419) * C31638 +
            (C113 * C1393 + C31490 * C1410) * C512 +
            (C113 * C1411 + C31490 * C1420) * C31614) *
               C31504 * C106) *
              C31611) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C31308 * C302 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C511 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31649 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C510) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31638 -
           (C5041 * C1391 + C5037 * C1406 + C5040 * C1386 + C5036 * C1396 +
            C5039 * C516 + C5035 * C529) *
               C512 -
           (C5041 * C1407 + C5037 * C1418 + C5040 * C1397 + C5036 * C1413 +
            C5039 * C530 + C5035 * C546) *
               C31614) *
              C31504 * C31265 * C31308 * C303 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C510 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31649 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C511 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31638 +
           (C5039 * C518 + C5035 * C533 + C5040 * C1387 + C5036 * C1398 +
            C5041 * C1393 + C5037 * C1410) *
               C512 +
           (C5039 * C534 + C5035 * C548 + C5040 * C1399 + C5036 * C1414 +
            C5041 * C1411 + C5037 * C1420) *
               C31614) *
              C31504 * C31265 * C31308 * C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C510 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31649 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C511 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31638 +
           (C5039 * C514 + C5035 * C525 + C5040 * C1385 + C5036 * C1394 +
            C5041 * C1389 + C5037 * C1402) *
               C512 +
           (C5039 * C526 + C5035 * C544 + C5040 * C1395 + C5036 * C1412 +
            C5041 * C1403 + C5037 * C1416) *
               C31614) *
              C31504 * C31265 * C1177 +
          ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
            C5041 * C1813 + C5037 * C1816) *
               C511 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31649 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C510) +
           (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
            C5041 * C1817 + C5037 * C1822) *
               C31638 -
           (C5041 * C5894 + C5037 * C5897 + C5040 * C1389 + C5036 * C1402 +
            C5039 * C1385 + C5035 * C1394) *
               C512 -
           (C5041 * C5898 + C5037 * C5903 + C5040 * C1403 + C5036 * C1416 +
            C5039 * C1395 + C5035 * C1412) *
               C31614) *
              C31504 * C31265 * C1178 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C510 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31649 -
           (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
            C5039 * C1388 + C5035 * C1400) *
               C511 -
           (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
            C5039 * C1401 + C5035 * C1415) *
               C31638 +
           (C5039 * C1389 + C5035 * C1402 + C5040 * C5894 + C5036 * C5897 +
            C5041 * C5896 + C5037 * C5901) *
               C512 +
           (C5039 * C1403 + C5035 * C1416 + C5040 * C5898 + C5036 * C5903 +
            C5041 * C5902 + C5037 * C5905) *
               C31614) *
              C31504 * C31265 * C31611) *
         C31281) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C831 +
            (C113 * C123 + C31490 * C136) * C31581 -
            (C113 * C513 + C31490 * C523) * C832 -
            (C113 * C524 + C31490 * C543) * C31412) *
               C31504 * C104 +
           (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
              C31308 * C713 +
          ((C840 - (C839 + C838) + C841) * C31504 * C104 +
           (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
              C31308 * C714 +
          (C866 * C104 + (C848 + C847 - C846 - C849) * C31504 * C105 +
           (C850 + C851 - C862 - C863) * C31504 * C106) *
              C31308 * C715 +
          (C867 * C104 + (C862 - (C851 + C850) + C863) * C31504 * C105 +
           ((C113 * C833 + C31490 * C834) * C832 -
            (C172 * C31581 + C173 * C831) +
            (C113 * C835 + C31490 * C836) * C31412) *
               C31504 * C106) *
              C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C831 +
             (C113 * C123 + C31490 * C136) * C31581 -
             (C113 * C513 + C31490 * C523) * C832 -
             (C113 * C524 + C31490 * C543) * C31412) *
                C31504 * C104 +
            (C838 + C839 - C840 - C841) * C31504 * C105 + C866 * C106) *
               C1177 +
           (((C113 * C1013 + C31490 * C1018) * C832 -
             ((C113 * C319 + C31490 * C337) * C31581 +
              (C113 * C307 + C31490 * C320) * C831) +
             (C113 * C1019 + C31490 * C1028) * C31412) *
                C31504 * C104 +
            (C1059 - (C1036 + C1037) + C1060) * C31504 * C105 + C1067 * C106) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C831 +
             (C113 * C322 + C31490 * C338) * C31581 -
             (C113 * C1388 + C31490 * C1400) * C832 -
             (C113 * C1401 + C31490 * C1415) * C31412) *
                C31504 * C104 +
            (C1696 + C1697 - C1712 - C1713) * C31504 * C105 +
            (C1702 + C1703 - C1714 - C1715) * C31504 * C106) *
               C31611) *
              C31566 +
          (((C840 - (C839 + C838) + C841) * C31504 * C104 +
            (C844 - (C843 + C842) + C845) * C31504 * C105 + C867 * C106) *
               C1177 +
           ((C1037 + C1036 - C1059 - C1060) * C31504 * C104 +
            (C1043 + C1042 - C1061 - C1062) * C31504 * C105 +
            (C1046 + C1047 - C1063 - C1064) * C31504 * C106) *
               C1178 +
           ((C1712 - (C1697 + C1696) + C1713) * C31504 * C104 +
            (C1714 - (C1703 + C1702) + C1715) * C31504 * C105 +
            ((C113 * C1691 + C31490 * C1692) * C832 -
             (C380 * C31581 + C381 * C831) +
             (C113 * C1693 + C31490 * C1694) * C31412) *
                C31504 * C106) *
               C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C831 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31581 -
           (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
            C5039 * C513 + C5035 * C523) *
               C832 -
           (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
            C5039 * C524 + C5035 * C543) *
               C31412) *
              C31504 * C31265 * C31308 * C713 +
          ((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
            C5041 * C1390 + C5037 * C1404) *
               C832 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31581 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C831) +
           (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
            C5041 * C1405 + C5037 * C1417) *
               C31412) *
              C31504 * C31265 * C31308 * C714 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C831 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31581 -
           (C5041 * C1392 + C5037 * C1408 + C5040 * C1015 + C5036 * C1022 +
            C5039 * C517 + C5035 * C531) *
               C832 -
           (C5041 * C1409 + C5037 * C1419 + C5040 * C1023 + C5036 * C1030 +
            C5039 * C532 + C5035 * C547) *
               C31412) *
              C31504 * C31265 * C31308 * C715 +
          ((C5039 * C519 + C5035 * C535 + C5040 * C1016 + C5036 * C1024 +
            C5041 * C1691 + C5037 * C1692) *
               C832 -
           ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
             C5039 * C128 + C5035 * C139) *
                C31581 +
            (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
             C5039 * C118 + C5035 * C129) *
                C831) +
           (C5039 * C536 + C5035 * C549 + C5040 * C1025 + C5036 * C1031 +
            C5041 * C1693 + C5037 * C1694) *
               C31412) *
              C31504 * C31265 * C31308 * C31615)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C831 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31581 -
            (C5041 * C1388 + C5037 * C1400 + C5040 * C1013 + C5036 * C1018 +
             C5039 * C513 + C5035 * C523) *
                C832 -
            (C5041 * C1401 + C5037 * C1415 + C5040 * C1019 + C5036 * C1028 +
             C5039 * C524 + C5035 * C543) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C1013 + C5035 * C1018 + C5040 * C1388 + C5036 * C1400 +
             C5041 * C1813 + C5037 * C1816) *
                C832 -
            ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
              C5039 * C319 + C5035 * C337) *
                 C31581 +
             (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
              C5039 * C307 + C5035 * C320) *
                 C831) +
            (C5039 * C1019 + C5035 * C1028 + C5040 * C1401 + C5036 * C1415 +
             C5041 * C1817 + C5037 * C1822) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C831 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31581 -
            (C5041 * C5895 + C5037 * C5899 + C5040 * C1813 + C5036 * C1816 +
             C5039 * C1388 + C5035 * C1400) *
                C832 -
            (C5041 * C5900 + C5037 * C5904 + C5040 * C1817 + C5036 * C1822 +
             C5039 * C1401 + C5035 * C1415) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31566 +
          (((C5039 * C515 + C5035 * C527 + C5040 * C1014 + C5036 * C1020 +
             C5041 * C1390 + C5037 * C1404) *
                C832 -
            ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
              C5039 * C125 + C5035 * C137) *
                 C31581 +
             (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
              C5039 * C116 + C5035 * C124) *
                 C831) +
            (C5039 * C528 + C5035 * C545 + C5040 * C1021 + C5036 * C1029 +
             C5041 * C1405 + C5037 * C1417) *
                C31412) *
               C31504 * C31265 * C1177 +
           ((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C831 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31581 -
            (C5041 * C1814 + C5037 * C1818 + C5040 * C1390 + C5036 * C1404 +
             C5039 * C1014 + C5035 * C1020) *
                C832 -
            (C5041 * C1819 + C5037 * C1823 + C5040 * C1405 + C5036 * C1417 +
             C5039 * C1021 + C5035 * C1029) *
                C31412) *
               C31504 * C31265 * C1178 +
           ((C5039 * C1390 + C5035 * C1404 + C5040 * C1814 + C5036 * C1818 +
             C5041 * C6154 + C5037 * C6155) *
                C832 -
            ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
              C5039 * C324 + C5035 * C339) *
                 C31581 +
             (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
              C5039 * C309 + C5035 * C323) *
                 C831) +
            (C5039 * C1405 + C5035 * C1417 + C5040 * C1819 + C5036 * C1823 +
             C5041 * C6156 + C5037 * C6157) *
                C31412) *
               C31504 * C31265 * C31611) *
              C31291)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C31308 * C108 -
          (C188 * C106 + (C177 + C176) * C31504 * C105 +
           (C175 + C174) * C31504 * C104) *
              C31308 * C109 +
          (C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C31308 *
              C110 -
          ((C182 + C183) * C31504 * C106 + (C181 + C180) * C31504 * C105 +
           C188 * C104) *
              C31308 * C111 +
          (C189 * C104 + (C183 + C182) * C31504 * C105 +
           ((C113 * C121 + C31490 * C134) * C114 +
            (C113 * C135 + C31490 * C142) * C31325) *
               C31504 * C106) *
              C31308 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C31648 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C31636 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C302 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            (C390 + C391) * C31504 * C106) *
               C31636 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C31648 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C303 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) *
               C31648 -
           (((C113 * C331 + C31490 * C343) * C31325 +
             (C113 * C313 + C31490 * C332) * C114) *
                C31504 * C106 +
            (C391 + C390) * C31504 * C105 + C396 * C104) *
               C31636 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31490 * C122) * C114 +
             (C113 * C123 + C31490 * C136) * C31325) *
                C31504 * C104 +
            (C174 + C175) * C31504 * C105 + C187 * C106) *
               C1177 -
           (C396 * C106 + (C384 + C385) * C31504 * C105 +
            ((C113 * C319 + C31490 * C337) * C31325 +
             (C113 * C307 + C31490 * C320) * C114) *
                C31504 * C104) *
               C1178 +
           (((C113 * C308 + C31490 * C321) * C114 +
             (C113 * C322 + C31490 * C338) * C31325) *
                C31504 * C104 +
            (C386 + C387) * C31504 * C105 + C397 * C106) *
               C31611) *
              C31645 +
          (((C385 + C384) * C31504 * C104 + (C383 + C382) * C31504 * C105 +
            C727 * C106) *
               C1178 -
           (C188 * C106 + (C177 + C176) * C31504 * C105 +
            (C175 + C174) * C31504 * C104) *
               C1177 -
           ((C392 + C393) * C31504 * C106 + (C389 + C388) * C31504 * C105 +
            (C387 + C386) * C31504 * C104) *
               C31611) *
              C31632 +
          ((C187 * C104 + (C179 + C178) * C31504 * C105 + C189 * C106) * C1177 -
           ((C730 + C731) * C31504 * C106 + (C391 + C390) * C31504 * C105 +
            C396 * C104) *
               C1178 +
           (C397 * C104 + (C393 + C392) * C31504 * C105 +
            ((C113 * C314 + C31490 * C333) * C114 +
             (C113 * C334 + C31490 * C344) * C31325) *
                C31504 * C106) *
               C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31490 * C122) * C114 +
            (C113 * C123 + C31490 * C136) * C31325) *
               C31504 * C104 +
           (C174 + C175) * C31504 * C105 + C187 * C106) *
              C1245 -
          (C396 * C106 + (C384 + C385) * C31504 * C105 +
           ((C113 * C319 + C31490 * C337) * C31325 +
            (C113 * C307 + C31490 * C320) * C114) *
               C31504 * C104) *
              C1246 +
          (((C113 * C308 + C31490 * C321) * C114 +
            (C113 * C322 + C31490 * C338) * C31325) *
               C31504 * C104 +
           (C386 + C387) * C31504 * C105 + C397 * C106) *
              C1247 -
          (((C113 * C1257 + C31490 * C1269) * C31325 +
            (C113 * C1251 + C31490 * C1258) * C114) *
               C31504 * C106 +
           ((C113 * C1259 + C31490 * C1270) * C31325 +
            (C113 * C1252 + C31490 * C1260) * C114) *
               C31504 * C105 +
           ((C113 * C1261 + C31490 * C1271) * C31325 +
            (C113 * C1253 + C31490 * C1262) * C114) *
               C31504 * C104) *
              C1248 +
          (((C113 * C1254 + C31490 * C1263) * C114 +
            (C113 * C1264 + C31490 * C1272) * C31325) *
               C31504 * C104 +
           ((C113 * C1255 + C31490 * C1265) * C114 +
            (C113 * C1266 + C31490 * C1273) * C31325) *
               C31504 * C105 +
           ((C113 * C1256 + C31490 * C1267) * C114 +
            (C113 * C1268 + C31490 * C1274) * C31325) *
               C31504 * C106) *
              C1249) *
         C31281) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C31308 * C108 -
          ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
            C5039 * C125 + C5035 * C137) *
               C31325 +
           (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
            C5039 * C116 + C5035 * C124) *
               C114) *
              C31504 * C31265 * C31308 * C109 +
          ((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
            C5041 * C310 + C5037 * C325) *
               C114 +
           (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
            C5041 * C326 + C5037 * C340) *
               C31325) *
              C31504 * C31265 * C31308 * C110 -
          ((C5041 * C329 + C5037 * C342 + C5040 * C328 + C5036 * C341 +
            C5039 * C128 + C5035 * C139) *
               C31325 +
           (C5041 * C312 + C5037 * C330 + C5040 * C311 + C5036 * C327 +
            C5039 * C118 + C5035 * C129) *
               C114) *
              C31504 * C31265 * C31308 * C111 +
          ((C5039 * C119 + C5035 * C130 + C5040 * C313 + C5036 * C332 +
            C5041 * C314 + C5037 * C333) *
               C114 +
           (C5039 * C131 + C5035 * C140 + C5040 * C331 + C5036 * C343 +
            C5041 * C334 + C5037 * C344) *
               C31325) *
              C31504 * C31265 * C31308 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C302 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C31636 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C303 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C31648 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C31636 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
             C5041 * C308 + C5037 * C321) *
                C114 +
            (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
             C5041 * C322 + C5037 * C338) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
             C5039 * C319 + C5035 * C337) *
                C31325 +
            (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
             C5039 * C307 + C5035 * C320) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
             C5041 * C1254 + C5037 * C1263) *
                C114 +
            (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
             C5041 * C1264 + C5037 * C1272) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31645 +
          (((C5039 * C306 + C5035 * C318 + C5040 * C309 + C5036 * C323 +
             C5041 * C1252 + C5037 * C1260) *
                C114 +
            (C5039 * C317 + C5035 * C336 + C5040 * C324 + C5036 * C339 +
             C5041 * C1259 + C5037 * C1270) *
                C31325) *
               C31504 * C31265 * C1178 -
           ((C5041 * C324 + C5037 * C339 + C5040 * C317 + C5036 * C336 +
             C5039 * C125 + C5035 * C137) *
                C31325 +
            (C5041 * C309 + C5037 * C323 + C5040 * C306 + C5036 * C318 +
             C5039 * C116 + C5035 * C124) *
                C114) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1266 + C5037 * C1273 + C5040 * C1259 + C5036 * C1270 +
             C5039 * C324 + C5035 * C339) *
                C31325 +
            (C5041 * C1255 + C5037 * C1265 + C5040 * C1252 + C5036 * C1260 +
             C5039 * C309 + C5035 * C323) *
                C114) *
               C31504 * C31265 * C31611) *
              C31632 +
          (((C5039 * C117 + C5035 * C126 + C5040 * C305 + C5036 * C316 +
             C5041 * C310 + C5037 * C325) *
                C114 +
            (C5039 * C127 + C5035 * C138 + C5040 * C315 + C5036 * C335 +
             C5041 * C326 + C5037 * C340) *
                C31325) *
               C31504 * C31265 * C1177 -
           ((C5041 * C1257 + C5037 * C1269 + C5040 * C326 + C5036 * C340 +
             C5039 * C315 + C5035 * C335) *
                C31325 +
            (C5041 * C1251 + C5037 * C1258 + C5040 * C310 + C5036 * C325 +
             C5039 * C305 + C5035 * C316) *
                C114) *
               C31504 * C31265 * C1178 +
           ((C5039 * C310 + C5035 * C325 + C5040 * C1251 + C5036 * C1258 +
             C5041 * C1256 + C5037 * C1267) *
                C114 +
            (C5039 * C326 + C5035 * C340 + C5040 * C1257 + C5036 * C1269 +
             C5041 * C1268 + C5037 * C1274) *
                C31325) *
               C31504 * C31265 * C31611) *
              C31605)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5039 * C115 + C5035 * C122 + C5040 * C307 + C5036 * C320 +
            C5041 * C308 + C5037 * C321) *
               C114 +
           (C5039 * C123 + C5035 * C136 + C5040 * C319 + C5036 * C337 +
            C5041 * C322 + C5037 * C338) *
               C31325) *
              C31504 * C31265 * C1245 -
          ((C5041 * C1261 + C5037 * C1271 + C5040 * C322 + C5036 * C338 +
            C5039 * C319 + C5035 * C337) *
               C31325 +
           (C5041 * C1253 + C5037 * C1262 + C5040 * C308 + C5036 * C321 +
            C5039 * C307 + C5035 * C320) *
               C114) *
              C31504 * C31265 * C1246 +
          ((C5039 * C308 + C5035 * C321 + C5040 * C1253 + C5036 * C1262 +
            C5041 * C1254 + C5037 * C1263) *
               C114 +
           (C5039 * C322 + C5035 * C338 + C5040 * C1261 + C5036 * C1271 +
            C5041 * C1264 + C5037 * C1272) *
               C31325) *
              C31504 * C31265 * C1247 -
          ((C5041 * C5778 + C5037 * C5782 + C5040 * C1264 + C5036 * C1272 +
            C5039 * C1261 + C5035 * C1271) *
               C31325 +
           (C5041 * C5776 + C5037 * C5779 + C5040 * C1254 + C5036 * C1263 +
            C5039 * C1253 + C5035 * C1262) *
               C114) *
              C31504 * C31265 * C1248 +
          ((C5039 * C1254 + C5035 * C1263 + C5040 * C5776 + C5036 * C5779 +
            C5041 * C5777 + C5037 * C5780) *
               C114 +
           (C5039 * C1264 + C5035 * C1272 + C5040 * C5778 + C5036 * C5782 +
            C5041 * C5781 + C5037 * C5783) *
               C31325) *
              C31504 * C31265 * C1249) *
         C31281) /
            (p * q * std::sqrt(p + q));
}
