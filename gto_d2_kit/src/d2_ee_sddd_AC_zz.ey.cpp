/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AC_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_13_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30372 = ce * de;
    const double C30371 = ce + de;
    const double C30370 = 0 * de;
    const double C30369 = zC - zD;
    const double C30410 = 0 * ce;
    const double C30405 = 0 * de;
    const double C30404 = 0 * de;
    const double C30455 = 0 * de;
    const double C30501 = ae * be;
    const double C30500 = ae + be;
    const double C30499 = 0 * be;
    const double C30498 = zA - zB;
    const double C30517 = p + q;
    const double C30516 = p * q;
    const double C30525 = ae * ce;
    const double C30524 = zP - zQ;
    const double C30522 = bs[3];
    const double C30531 = bs[4];
    const double C30529 = xP - xQ;
    const double C30540 = bs[5];
    const double C30549 = bs[6];
    const double C30564 = bs[7];
    const double C30592 = bs[2];
    const double C30687 = yP - yQ;
    const double C115 = bs[0];
    const double C31610 = xA - xB;
    const double C31626 = xC - xD;
    const double C31655 = yC - yD;
    const double C31840 = yA - yB;
    const double C30373 = std::pow(C30371, 2);
    const double C30388 = 2 * C30371;
    const double C30406 = C30370 / C30371;
    const double C30374 = C30372 * C30369;
    const double C30407 = C30369 * C30370;
    const double C31673 = std::pow(C30369, 2);
    const double C31756 = C30369 * de;
    const double C31754 = C30369 * ce;
    const double C30417 = C30410 / C30371;
    const double C30412 = C30369 * C30405;
    const double C30456 = C30455 / C30371;
    const double C30502 = std::pow(C30500, 2);
    const double C30533 = C30371 * C30500;
    const double C31915 = 2 * C30500;
    const double C30503 = C30501 * C30498;
    const double C31852 = std::pow(C30498, 2);
    const double C31947 = C30498 * ae;
    const double C30518 = 2 * C30516;
    const double C30527 = std::pow(C30524, 2);
    const double C30596 = C30524 * ae;
    const double C30594 = C30524 * ce;
    const double C30542 = std::pow(C30529, 2);
    const double C30697 = std::pow(C30687, 2);
    const double C31611 = std::pow(C31610, 2);
    const double C31914 = C31610 * ae;
    const double C31629 = C31626 * de;
    const double C31628 = C31626 * ce;
    const double C31627 = std::pow(C31626, 2);
    const double C31656 = std::pow(C31655, 2);
    const double C31714 = C31655 * de;
    const double C31712 = C31655 * ce;
    const double C31841 = std::pow(C31840, 2);
    const double C31946 = C31840 * ae;
    const double C30375 = 2 * C30373;
    const double C31926 = 4 * C30373;
    const double C31641 = std::pow(C30388, -1);
    const double C31927 = C30373 * C30388;
    const double C31923 = std::pow(C30388, -2);
    const double C30415 = C30407 / C30371;
    const double C31674 = C31673 * C30372;
    const double C31930 = std::pow(C31754, 2);
    const double C30418 = C30412 / C30371;
    const double C30504 = 2 * C30502;
    const double C31950 = std::pow(C31915, -2);
    const double C31948 = std::pow(C31915, -1);
    const double C31853 = C31852 * C30501;
    const double C30520 = C30518 / C30517;
    const double C136 =
        (-((std::pow(zP - zQ, 2) * bs[2] * std::pow(C30518 / C30517, 2) -
            (bs[1] * C30518) / C30517) *
           ae * ce) /
         C30371) /
        C30500;
    const double C116 = -(C30529 * bs[1] * C30518) / C30517;
    const double C304 = -(C30687 * bs[1] * C30518) / C30517;
    const double C508 = -(C30524 * bs[1] * C30518) / C30517;
    const double C30534 = C30527 * C30531;
    const double C30543 = C30527 * C30540;
    const double C30552 = C30527 * C30549;
    const double C30568 = C30527 * C30564;
    const double C30598 = C30522 * C30596;
    const double C30605 = C30531 * C30596;
    const double C30614 = C30540 * C30596;
    const double C30629 = C30549 * C30596;
    const double C30658 = C30564 * C30596;
    const double C122 = (-(bs[1] * C30596 * C30518) / C30517) / C30500;
    const double C30597 = C30522 * C30594;
    const double C30603 = C30531 * C30594;
    const double C30612 = C30540 * C30594;
    const double C30625 = C30549 * C30594;
    const double C30652 = C30564 * C30594;
    const double C123 = (bs[1] * C30594 * C30518) / (C30517 * C30371);
    const double C31612 = C31611 * C30501;
    const double C31916 = std::pow(C31628, 2);
    const double C31630 = C31627 * C30372;
    const double C31657 = C31656 * C30372;
    const double C31928 = std::pow(C31712, 2);
    const double C31842 = C31841 * C30501;
    const double C30409 = C30370 / C30375;
    const double C30414 = C30405 / C30375;
    const double C30413 = C30404 / C30375;
    const double C31959 = C30371 * C31926;
    const double C31960 = 4 * C31927;
    const double C30419 = 0 - C30415;
    const double C31675 = C31674 / C30371;
    const double C30422 = 0 - C30418;
    const double C31854 = C31853 / C30500;
    const double C30523 = -C30520;
    const double C30532 = std::pow(C30520, 4);
    const double C30550 = std::pow(C30520, 6);
    const double C30591 = std::pow(C30520, 2);
    const double C137 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C30520, 2) +
            std::pow(zP - zQ, 2) * bs[3] * std::pow(-C30520, 3)) *
           ae * ce) /
         C30371) /
        C30500;
    const double C31613 = C31612 / C30500;
    const double C31631 = C31630 / C30371;
    const double C31658 = C31657 / C30371;
    const double C31843 = C31842 / C30500;
    const double C30423 = C30419 * ce;
    const double C31676 = -C31675;
    const double C30426 = C30422 * ce;
    const double C31855 = -C31854;
    const double C30526 = std::pow(C30523, 3);
    const double C30541 = std::pow(C30523, 5);
    const double C30565 = std::pow(C30523, 7);
    const double C30535 = C30534 * C30532;
    const double C30539 = C30531 * C30532;
    const double C30607 = C30532 * C30605;
    const double C30606 = C30532 * C30603;
    const double C30553 = C30552 * C30550;
    const double C30563 = C30549 * C30550;
    const double C30635 = C30550 * C30629;
    const double C30631 = C30550 * C30625;
    const double C30595 = C30592 * C30591;
    const double C124 = (C30529 * C30591 * C30592 * C30596) / C30500;
    const double C125 = -(C30529 * C30591 * C30592 * C30594) / C30371;
    const double C316 = -(C30687 * C30591 * C30592 * C30594) / C30371;
    const double C317 = (C30687 * C30591 * C30592 * C30596) / C30500;
    const double C518 = (C30524 * C30591 * C30592 * C30596) / C30500 -
                        (ae * bs[1] * C30518) / (C30517 * C30500);
    const double C519 = (ce * bs[1] * C30518) / (C30517 * C30371) -
                        (C30524 * C30591 * C30592 * C30594) / C30371;
    const double C31614 = -C31613;
    const double C31632 = -C31631;
    const double C31659 = -C31658;
    const double C31844 = -C31843;
    const double C30427 = C30423 / C30371;
    const double C31677 = std::exp(C31676);
    const double C30430 = C30426 / C30371;
    const double C31856 = std::exp(C31855);
    const double C30530 = C30522 * C30526;
    const double C30600 = C30526 * C30598;
    const double C30599 = C30526 * C30597;
    const double C138 =
        (-((C30522 * C30526 + C30527 * bs[4] * std::pow(C30520, 4)) * C30525 *
           std::pow(xP - xQ, 2)) /
         C30371) /
            C30500 -
        ((bs[2] * std::pow(C30520, 2) + C30527 * C30522 * C30526) * C30525) /
            (C30371 * C30500);
    const double C334 =
        (-((yP - yQ) *
           (bs[2] * std::pow(C30520, 2) + C30527 * C30522 * C30526) * C30525) /
         C30371) /
        C30500;
    const double C538 =
        (-(C30591 * C30592 * C30524 * ae * ce) / C30371) / C30500 -
        (ae * C30591 * C30592 * C30524 * ce) / C30533 -
        (C30524 * (C30592 * C30591 + C30527 * C30522 * C30526) * C30525) /
            C30533;
    const double C30544 = C30543 * C30541;
    const double C30548 = C30540 * C30541;
    const double C30617 = C30541 * C30614;
    const double C30615 = C30541 * C30612;
    const double C30570 = C30568 * C30565;
    const double C30665 = C30565 * C30658;
    const double C30661 = C30565 * C30652;
    const double C30613 = C30539 * C30542;
    const double C30626 = C30529 * C30539;
    const double C30715 = C30539 * C30697;
    const double C30758 = C30539 * ae;
    const double C30756 = C30539 * C30527;
    const double C30755 = C30524 * C30539;
    const double C30754 = C30539 * ce;
    const double C30864 = C30687 * C30539;
    const double C30609 = C30529 * C30607;
    const double C30703 = C30687 * C30607;
    const double C30745 = C30524 * C30607;
    const double C30750 = C30607 * ce;
    const double C30608 = C30529 * C30606;
    const double C30701 = C30687 * C30606;
    const double C30742 = C30524 * C30606;
    const double C30751 = ae * C30606;
    const double C30655 = C30563 * C30542;
    const double C30939 = C30563 * C30697;
    const double C31041 = C30529 * C30563;
    const double C31149 = C30563 * ae;
    const double C31143 = C30563 * C30527;
    const double C31142 = C30524 * C30563;
    const double C31141 = C30563 * ce;
    const double C31302 = C30687 * C30563;
    const double C30639 = C30635 * C30542;
    const double C30657 = C30529 * C30635;
    const double C30920 = C30635 * C30697;
    const double C30941 = C30687 * C30635;
    const double C31088 = C30524 * C30635;
    const double C31135 = C30635 * ce;
    const double C30637 = C30631 * C30542;
    const double C30651 = C30529 * C30631;
    const double C30916 = C30631 * C30697;
    const double C30935 = C30687 * C30631;
    const double C31082 = C30524 * C30631;
    const double C31136 = ae * C30631;
    const double C117 = C30595 * C30542 - (bs[1] * C30518) / C30517;
    const double C303 = C30687 * C30529 * C30595;
    const double C305 = C30595 * C30697 - (bs[1] * C30518) / C30517;
    const double C509 = C30595 * C30527 - (bs[1] * C30518) / C30517;
    const double C510 = C30524 * C30529 * C30595;
    const double C1004 = C30524 * C30687 * C30595;
    const double C31615 = std::exp(C31614);
    const double C31633 = std::exp(C31632);
    const double C31660 = std::exp(C31659);
    const double C31845 = std::exp(C31844);
    const double C30431 = C30427 - C30414;
    const double C30376 = C30374 * C31677;
    const double C114 = -(2 * ce * de * (zC - zD) * C31677) / (ce + de);
    const double C31755 = C31677 / C30388;
    const double C31757 = C31677 * C31754;
    const double C31764 = C31641 * C31677;
    const double C31940 = C31677 * C31756;
    const double C31966 = C31923 * C31677;
    const double C31964 = C31677 * C31930;
    const double C30434 = C30430 - C30413;
    const double C147 = C31856 * C137;
    const double C145 = C31856 * C124;
    const double C5136 = C31856 * C317;
    const double C30505 = C30503 * C31856;
    const double C113 = -(2 * ae * be * (zA - zB) * C31856) / (ae + be);
    const double C31981 = C31856 * C31947;
    const double C9495 =
        (C31856 * std::pow(C31947, 2)) / C30502 + C31856 / C31915;
    const double C9497 = C31950 * C31856;
    const double C19181 = C31948 * C31856;
    const double C30536 = C30530 + C30535;
    const double C30604 = C30529 * C30530;
    const double C30702 = C30687 * C30530;
    const double C30746 = C30530 * ae;
    const double C30744 = C30524 * C30530;
    const double C30743 = C30530 * ce;
    const double C118 =
        2 * C30529 * C30595 + C30529 * (C30595 + C30530 * C30542);
    const double C302 = C30687 * (C30595 + C30530 * C30542);
    const double C512 = C30524 * (C30595 + C30530 * C30542);
    const double C1243 =
        2 * C30687 * C30595 + C30687 * (C30595 + C30530 * C30697);
    const double C1378 = C30524 * (C30595 + C30530 * C30697);
    const double C2136 =
        2 * C30524 * C30595 + C30524 * (C30595 + C30530 * C30527);
    const double C126 = (C30591 * C30592 * C30596 + C30600 * C30542) / C30500;
    const double C129 =
        (2 * C30529 * C30600 + C30529 * (C30600 + C30607 * C30542)) / C30500;
    const double C313 = (C30687 * (C30600 + C30607 * C30542)) / C30500;
    const double C315 = (C30687 * C30529 * C30600) / C30500;
    const double C318 = (C30591 * C30592 * C30596 + C30600 * C30697) / C30500;
    const double C520 =
        (C30591 * C30592 * C30596 + C30524 * (C30524 * C30600 + C30595 * ae) +
         C30524 * C30595 * ae) /
        C30500;
    const double C522 =
        (C30524 * C30529 * C30600 + C30529 * C30595 * ae) / C30500;
    const double C526 = (C30524 * (C30600 + C30607 * C30542) +
                         (C30595 + C30530 * C30542) * ae) /
                        C30500;
    const double C1009 =
        (C30524 * C30687 * C30600 + C30687 * C30595 * ae) / C30500;
    const double C1252 =
        (2 * C30687 * C30600 + C30687 * (C30600 + C30607 * C30697)) / C30500;
    const double C1390 = (C30524 * (C30600 + C30607 * C30697) +
                          (C30595 + C30530 * C30697) * ae) /
                         C30500;
    const double C127 = -(C30599 * C30542 + C30591 * C30592 * C30594) / C30371;
    const double C128 = (-2 * C30529 * C30599) / C30371 -
                        (C30529 * (C30606 * C30542 + C30599)) / C30371;
    const double C312 = -(C30687 * (C30606 * C30542 + C30599)) / C30371;
    const double C314 = -(C30687 * C30529 * C30599) / C30371;
    const double C319 = -(C30599 * C30697 + C30591 * C30592 * C30594) / C30371;
    const double C521 = -(C30524 * (C30524 * C30599 + C30595 * ce) +
                          C30591 * C30592 * C30594 + C30524 * C30595 * ce) /
                        C30371;
    const double C523 =
        -(C30524 * C30529 * C30599 + C30529 * C30595 * ce) / C30371;
    const double C527 = -(C30524 * (C30606 * C30542 + C30599) +
                          (C30595 + C30530 * C30542) * ce) /
                        C30371;
    const double C1010 =
        -(C30524 * C30687 * C30599 + C30687 * C30595 * ce) / C30371;
    const double C1251 = (-2 * C30687 * C30599) / C30371 -
                         (C30687 * (C30606 * C30697 + C30599)) / C30371;
    const double C1391 = -(C30524 * (C30606 * C30697 + C30599) +
                           (C30595 + C30530 * C30697) * ce) /
                         C30371;
    const double C151 = C31856 * C138;
    const double C5138 = C31856 * C334;
    const double C30545 = C30539 + C30544;
    const double C30554 = C30548 + C30553;
    const double C30627 = C30548 * C30542;
    const double C30654 = C30529 * C30548;
    const double C30918 = C30548 * C30697;
    const double C30938 = C30687 * C30548;
    const double C31089 = C30548 * ae;
    const double C31085 = C30548 * C30527;
    const double C31084 = C30524 * C30548;
    const double C31083 = C30548 * ce;
    const double C30619 = C30617 * C30542;
    const double C30628 = C30529 * C30617;
    const double C30716 = C30617 * C30697;
    const double C30757 = C30524 * C30617;
    const double C30865 = C30687 * C30617;
    const double C31078 = C30617 * ce;
    const double C30618 = C30615 * C30542;
    const double C30624 = C30529 * C30615;
    const double C30714 = C30615 * C30697;
    const double C30753 = C30524 * C30615;
    const double C30863 = C30687 * C30615;
    const double C31079 = ae * C30615;
    const double C30571 = C30563 + C30570;
    const double C30669 = C30665 * C30542;
    const double C30942 = C30665 * C30697;
    const double C31043 = C30529 * C30665;
    const double C31148 = C30524 * C30665;
    const double C31305 = C30687 * C30665;
    const double C30667 = C30661 * C30542;
    const double C30936 = C30661 * C30697;
    const double C31039 = C30529 * C30661;
    const double C31140 = C30524 * C30661;
    const double C31301 = C30687 * C30661;
    const double C30616 = C30530 + C30613;
    const double C30632 = 2 * C30626;
    const double C30706 = C30687 * C30626;
    const double C30782 = C30626 * ae;
    const double C30780 = C30524 * C30626;
    const double C30779 = C30626 * ce;
    const double C30718 = C30530 + C30715;
    const double C30764 = C30530 + C30756;
    const double C30766 = C30755 * ae;
    const double C30763 = C30755 * ce;
    const double C31086 = 2 * C30755;
    const double C30870 = C30864 * ae;
    const double C30868 = C30524 * C30864;
    const double C30867 = C30864 * ce;
    const double C30917 = 2 * C30864;
    const double C320 = (C30529 * C30600 + C30609 * C30697) / C30500;
    const double C30759 = C30750 / C30371;
    const double C321 = -(C30608 * C30697 + C30529 * C30599) / C30371;
    const double C30760 = C30751 / C30533;
    const double C30663 = C30548 + C30655;
    const double C30947 = C30548 + C30939;
    const double C31046 = C31041 * C30697;
    const double C31212 = C30687 * C31041;
    const double C31253 = C31041 * ae;
    const double C31249 = C31041 * C30527;
    const double C31248 = C30524 * C31041;
    const double C31247 = C31041 * ce;
    const double C31161 = C30548 + C31143;
    const double C31163 = C31142 * ae;
    const double C31160 = C31142 * ce;
    const double C31317 = C31302 * ae;
    const double C31315 = C31302 * C30527;
    const double C31314 = C30524 * C31302;
    const double C31313 = C31302 * ce;
    const double C30642 = C30617 + C30639;
    const double C30664 = 2 * C30657;
    const double C30724 = C30657 * C30697;
    const double C30793 = C30524 * C30657;
    const double C30877 = C30687 * C30657;
    const double C31242 = C30657 * ce;
    const double C30924 = C30617 + C30920;
    const double C30948 = 2 * C30941;
    const double C30982 = C30524 * C30941;
    const double C31297 = C30941 * ce;
    const double C31154 = C31135 / C30371;
    const double C30640 = C30637 + C30615;
    const double C30660 = -2 * C30651;
    const double C30722 = C30651 * C30697;
    const double C30789 = C30524 * C30651;
    const double C30875 = C30687 * C30651;
    const double C31243 = ae * C30651;
    const double C30922 = C30916 + C30615;
    const double C30944 = -2 * C30935;
    const double C30978 = C30524 * C30935;
    const double C31298 = ae * C30935;
    const double C31155 = C31136 / C30533;
    const double C31949 = C31615 * C31914;
    const double C103 =
        (C31615 * std::pow(C31914, 2)) / C30502 + C31615 / C31915;
    const double C105 = C31950 * C31615;
    const double C13646 = C31948 * C31615;
    const double C31635 = C31633 * C31628;
    const double C31634 = C31633 / C30388;
    const double C31643 = C31641 * C31633;
    const double C31919 = C31633 * C31629;
    const double C31957 = C31923 * C31633;
    const double C31951 = C31633 * C31916;
    const double C31713 = C31660 / C30388;
    const double C31715 = C31660 * C31712;
    const double C31722 = C31641 * C31660;
    const double C31934 = C31660 * C31714;
    const double C31963 = C31923 * C31660;
    const double C31961 = C31660 * C31928;
    const double C31980 = C31845 * C31946;
    const double C5021 =
        (C31845 * std::pow(C31946, 2)) / C30502 + C31845 / C31915;
    const double C5023 = C31950 * C31845;
    const double C13648 = C31948 * C31845;
    const double C30436 = C30431 / C30388;
    const double C30435 = C30369 * C30431;
    const double C30389 = 2 * C30376;
    const double C30411 = C30376 / C30373;
    const double C507 = ((0 * ce) / C30371 - C30376 / C30373) / (2 * C30371) +
                        (0 * ce) / C30371;
    const double C824 =
        ((C31677 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
        C30370 / C30375;
    const double C825 = (0 * ce) / C30371 - C30376 / C30373;
    const double C1925 = (C31677 * std::pow(C31756, 2)) / C30373 + C31755;
    const double C31758 = C31757 * C31756;
    const double C31763 = C31757 / C30375;
    const double C31933 = C31757 / C30371;
    const double C31931 = C31641 * C31757;
    const double C506 =
        (((C31677 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
         C30370 / C30375) /
            (2 * C30371) +
        ((C30369 * ((0 * ce) / C30371 - C30376 / C30373) + C31764) * ce) /
            C30371;
    const double C31765 = C31764 * C31756;
    const double C31944 = C31754 * C31764;
    const double C31943 = 2 * C31764;
    const double C31979 = C31764 / C31926;
    const double C2130 = C31764 / C31960;
    const double C4029 = C31764 / C30388;
    const double C31975 = C31940 / C30371;
    const double C1926 = (-2 * C31641 * C31940) / C30371;
    const double C31989 = C31964 / C30373;
    const double C30440 = C30434 + C30406;
    const double C9500 = ((0 * ae) / C30500 - C30505 / C30502) / (2 * C30500) +
                         (0 * ae) / C30500;
    const double C19182 =
        ((C31856 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
        C30499 / C30504;
    const double C19183 = (0 * ae) / C30500 - C30505 / C30502;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C349 = C113 * C303;
    const double C551 = C113 * C510;
    const double C5139 = C113 * C305;
    const double C5137 = C113 * C316;
    const double C5135 = C113 * C304;
    const double C5618 = C113 * C1004;
    const double C9496 = (2 * C31948 * C31981) / C30500;
    const double C19180 = C31981 / C30500;
    const double C9499 =
        (((C31856 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
         C30499 / C30504) /
            (2 * C30500) +
        ((C30498 * ((0 * ae) / C30500 - C30505 / C30502) + C19181) * ae) /
            C30500;
    const double C30537 = C30536 * C30525;
    const double C524 =
        (C30529 * C30600 + C30524 * (C30524 * C30609 + C30604 * ae) +
         C30524 * C30604 * ae) /
        C30500;
    const double C525 = -(C30524 * (C30524 * C30608 + C30604 * ce) +
                          C30529 * C30599 + C30524 * C30604 * ce) /
                        C30371;
    const double C1011 =
        (C30524 * C30687 * C30609 + C30687 * C30604 * ae) / C30500;
    const double C1012 =
        -(C30524 * C30687 * C30608 + C30687 * C30604 * ce) / C30371;
    const double C306 = C30529 * C30595 + C30604 * C30697;
    const double C511 = C30529 * C30595 + C30604 * C30527;
    const double C1005 = C30524 * C30687 * C30604;
    const double C1242 =
        2 * C30687 * C30604 + C30687 * (C30604 + C30626 * C30697);
    const double C1380 = C30524 * (C30604 + C30626 * C30697);
    const double C2138 =
        2 * C30524 * C30604 + C30524 * (C30604 + C30626 * C30527);
    const double C1384 =
        (C30687 * C30600 + C30524 * (C30524 * C30703 + C30702 * ae) +
         C30524 * C30702 * ae) /
        C30500;
    const double C1385 = -(C30524 * (C30524 * C30701 + C30702 * ce) +
                           C30687 * C30599 + C30524 * C30702 * ce) /
                         C30371;
    const double C1375 = C30687 * C30595 + C30702 * C30527;
    const double C2570 =
        2 * C30524 * C30702 + C30524 * (C30702 + C30864 * C30527);
    const double C30748 = C30745 + C30746;
    const double C30747 = C30742 + C30743;
    const double C154 = C113 * C118;
    const double C345 = C113 * C302;
    const double C561 = C113 * C512;
    const double C5145 = C113 * C1243;
    const double C5624 = C113 * C1378;
    const double C149 = C31856 * C126;
    const double C155 = C31856 * C129;
    const double C346 = C31856 * C313;
    const double C350 = C31856 * C315;
    const double C5140 = C31856 * C318;
    const double C552 = C31856 * C522;
    const double C19188 = C19181 * C522;
    const double C562 = C31856 * C526;
    const double C19198 = C19181 * C526;
    const double C5619 = C31856 * C1009;
    const double C25022 = C19181 * C1009;
    const double C5146 = C31856 * C1252;
    const double C5625 = C31856 * C1390;
    const double C25032 = C19181 * C1390;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C343 = C113 * C312;
    const double C347 = C113 * C314;
    const double C5141 = C113 * C319;
    const double C553 = C113 * C523;
    const double C563 = C113 * C527;
    const double C5620 = C113 * C1010;
    const double C5143 = C113 * C1251;
    const double C5626 = C113 * C1391;
    const double C30546 = C30545 * C30525;
    const double C30555 = C30554 * C30525;
    const double C30633 = C30539 + C30627;
    const double C30662 = 2 * C30654;
    const double C30723 = C30654 * C30697;
    const double C30794 = C30654 * ae;
    const double C30792 = C30654 * C30527;
    const double C30791 = C30524 * C30654;
    const double C30790 = C30654 * ce;
    const double C30876 = C30687 * C30654;
    const double C30923 = C30539 + C30918;
    const double C30946 = 2 * C30938;
    const double C30983 = C30938 * ae;
    const double C30981 = C30938 * C30527;
    const double C30980 = C30524 * C30938;
    const double C30979 = C30938 * ce;
    const double C31099 = C31088 + C31089;
    const double C31098 = C30539 + C31085;
    const double C31100 = C31084 * ae;
    const double C31097 = C31084 * ce;
    const double C31144 = 2 * C31084;
    const double C31096 = C31082 + C31083;
    const double C30621 = C30607 + C30619;
    const double C30634 = 2 * C30628;
    const double C30707 = C30687 * C30628;
    const double C30781 = C30524 * C30628;
    const double C30786 = C30628 * ce;
    const double C1250 =
        (2 * C30687 * C30609 + C30687 * (C30609 + C30628 * C30697)) / C30500;
    const double C1394 = (C30524 * (C30609 + C30628 * C30697) +
                          (C30604 + C30626 * C30697) * ae) /
                         C30500;
    const double C30719 = C30607 + C30716;
    const double C30765 = C30757 + C30758;
    const double C30869 = C30524 * C30865;
    const double C30919 = 2 * C30865;
    const double C30975 = C30865 * ce;
    const double C31092 = C31078 / C30371;
    const double C30620 = C30618 + C30606;
    const double C30630 = -2 * C30624;
    const double C30705 = C30687 * C30624;
    const double C30778 = C30524 * C30624;
    const double C30787 = ae * C30624;
    const double C1249 = (-2 * C30687 * C30608) / C30371 -
                         (C30687 * (C30624 * C30697 + C30608)) / C30371;
    const double C1395 = -(C30524 * (C30624 * C30697 + C30608) +
                           (C30604 + C30626 * C30697) * ce) /
                         C30371;
    const double C30717 = C30714 + C30606;
    const double C30762 = C30753 + C30754;
    const double C30866 = C30524 * C30863;
    const double C30915 = -2 * C30863;
    const double C30976 = ae * C30863;
    const double C31093 = C31079 / C30533;
    const double C30572 = C30571 * C30525;
    const double C30672 = C30635 + C30669;
    const double C30949 = C30635 + C30942;
    const double C31047 = C31043 * C30697;
    const double C31213 = C30687 * C31043;
    const double C31252 = C30524 * C31043;
    const double C31162 = C31148 + C31149;
    const double C31316 = C30524 * C31305;
    const double C30670 = C30667 + C30631;
    const double C30945 = C30936 + C30631;
    const double C31045 = C31039 * C30697;
    const double C31211 = C30687 * C31039;
    const double C31246 = C30524 * C31039;
    const double C31159 = C31140 + C31141;
    const double C31312 = C30524 * C31301;
    const double C119 = 3 * (C30595 + C30530 * C30542) +
                        C30529 * (2 * C30604 + C30529 * C30616);
    const double C307 = C30595 + C30530 * C30542 + C30616 * C30697;
    const double C308 = C30687 * (2 * C30604 + C30529 * C30616);
    const double C513 = C30595 + C30530 * C30542 + C30616 * C30527;
    const double C514 = C30524 * (2 * C30604 + C30529 * C30616);
    const double C1006 = C30524 * C30687 * C30616;
    const double C1376 = C30687 * C30604 + C30706 * C30527;
    const double C1244 = 3 * (C30595 + C30530 * C30697) +
                         C30687 * (2 * C30702 + C30687 * C30718);
    const double C1379 = C30595 + C30530 * C30697 + C30718 * C30527;
    const double C1803 = C30524 * (2 * C30702 + C30687 * C30718);
    const double C2137 = 3 * (C30595 + C30530 * C30527) +
                         C30524 * (2 * C30744 + C30524 * C30764);
    const double C352 = C31856 * C320;
    const double C30767 = -C30759;
    const double C353 = C113 * C321;
    const double C30668 = C30529 * C30663;
    const double C30731 = C30663 * C30697;
    const double C30830 = C30663 * ae;
    const double C30828 = C30663 * C30527;
    const double C30827 = C30524 * C30663;
    const double C30826 = C30663 * ce;
    const double C30888 = C30687 * C30663;
    const double C30952 = C30687 * C30947;
    const double C31019 = C30947 * ae;
    const double C31017 = C30947 * C30527;
    const double C31016 = C30524 * C30947;
    const double C31015 = C30947 * ce;
    const double C31049 = C30654 + C31046;
    const double C31222 = C31212 * ae;
    const double C31220 = C31212 * C30527;
    const double C31219 = C30524 * C31212;
    const double C31218 = C31212 * ce;
    const double C31262 = C30654 + C31249;
    const double C31264 = C31248 * ae;
    const double C31261 = C31248 * ce;
    const double C31171 = C31161 * ae;
    const double C31169 = C30524 * C31161;
    const double C31168 = C31161 * ce;
    const double C31323 = C30938 + C31315;
    const double C31325 = C31314 * ae;
    const double C31322 = C31314 * ce;
    const double C30644 = C30529 * C30642;
    const double C30656 = 3 * C30642;
    const double C30711 = C30687 * C30642;
    const double C30817 = C30524 * C30642;
    const double C30822 = C30642 * ce;
    const double C30727 = C30628 + C30724;
    const double C30881 = C30524 * C30877;
    const double C31042 = 2 * C30877;
    const double C31208 = C30877 * ce;
    const double C31256 = C31242 / C30371;
    const double C30927 = C30687 * C30924;
    const double C30940 = 3 * C30924;
    const double C31006 = C30524 * C30924;
    const double C31011 = C30924 * ce;
    const double C31308 = C31297 / C30371;
    const double C31166 = -C31154;
    const double C30643 = C30529 * C30640;
    const double C30650 = -3 * C30640;
    const double C30709 = C30687 * C30640;
    const double C30814 = C30524 * C30640;
    const double C30823 = ae * C30640;
    const double C30666 = C30660 / C30371;
    const double C30725 = C30722 + C30624;
    const double C30878 = C30524 * C30875;
    const double C31038 = -2 * C30875;
    const double C31209 = ae * C30875;
    const double C31257 = C31243 / C30533;
    const double C30925 = C30687 * C30922;
    const double C30934 = -3 * C30922;
    const double C31003 = C30524 * C30922;
    const double C31012 = ae * C30922;
    const double C30950 = C30944 / C30371;
    const double C31309 = C31298 / C30533;
    const double C104 = (2 * C31948 * C31949) / C30500;
    const double C13645 = C31949 / C30500;
    const double C31636 = C31635 * C31629;
    const double C31642 = C31635 / C30375;
    const double C31920 = C31641 * C31635;
    const double C31918 = C31635 / C30371;
    const double C299 = (C31633 * std::pow(C31629, 2)) / C30373 + C31634;
    const double C31644 = C31643 * C31629;
    const double C31924 = C31628 * C31643;
    const double C31922 = 2 * C31643;
    const double C31967 = C31643 / C31926;
    const double C112 = C31643 / C31960;
    const double C3063 = C31643 / C30388;
    const double C31953 = C31919 / C30371;
    const double C300 = (-2 * C31641 * C31919) / C30371;
    const double C31982 = C31951 / C30373;
    const double C1167 = (C31660 * std::pow(C31714, 2)) / C30373 + C31713;
    const double C31716 = C31715 * C31714;
    const double C31721 = C31715 / C30375;
    const double C31932 = C31715 / C30371;
    const double C31929 = C31641 * C31715;
    const double C31723 = C31722 * C31714;
    const double C31938 = C31712 * C31722;
    const double C31937 = 2 * C31722;
    const double C31973 = C31722 / C31926;
    const double C1239 = C31722 / C31960;
    const double C3060 = C31722 / C30388;
    const double C31969 = C31934 / C30371;
    const double C1168 = (-2 * C31641 * C31934) / C30371;
    const double C31987 = C31961 / C30373;
    const double C5022 = (2 * C31948 * C31980) / C30500;
    const double C13647 = C31980 / C30500;
    const double C30441 = C30435 + 0;
    const double C30408 = C30369 * C30389;
    const double C1929 =
        ((-C30370 / C30371) / C30388 -
         ((C31677 - (C30369 * C30389) / C30371) * de) / C30371) /
            C30388 -
        ((C30369 * ((-C30389 / C30371) / C30388 - (0 * de) / C30371) + C31764) *
         de) /
            C30371;
    const double C1930 =
        ((-C30389 / C30371) / C30388 - (0 * de) / C30371) / C30388 -
        (0 * de) / C30371;
    const double C3457 = (-C30389 / C30371) / C30388 - (0 * de) / C30371;
    const double C30421 = C30417 - C30411;
    const double C31759 = C31758 / C30373;
    const double C505 =
        (((0 - (C30369 * C30370) / C30371) * ce) / C30371 - (0 * de) / C30375) /
            (2 * C30371) +
        ((C30369 * (((C31677 - (C30369 * 2 * C30376) / C30371) * ce) / C30371 -
                    C30370 / C30375) +
          C31933) *
         ce) /
            C30371 +
        (0 * ce) / C30371 - C30376 / C30373;
    const double C31965 = 2 * C31931;
    const double C31766 = C31765 / C30371;
    const double C31978 = C31944 / C30375;
    const double C31994 = C31933 - C31975;
    const double C3454 = -C31975;
    const double C32001 = C31989 + C31755;
    const double C30444 = C30440 / C30388;
    const double C19205 = C19182 * C128;
    const double C19201 = C19182 * C118;
    const double C19199 = C19182 * C117;
    const double C19195 = C19182 * C127;
    const double C19189 = C19182 * C125;
    const double C19185 = C19182 * C116;
    const double C19399 = C19182 * C312;
    const double C19395 = C19182 * C302;
    const double C19391 = C19182 * C321;
    const double C19385 = C19182 * C303;
    const double C19381 = C19182 * C314;
    const double C19593 = C19182 * C527;
    const double C19589 = C19182 * C512;
    const double C19579 = C19182 * C523;
    const double C19575 = C19182 * C510;
    const double C25033 = C19182 * C305;
    const double C25029 = C19182 * C319;
    const double C25023 = C19182 * C316;
    const double C25019 = C19182 * C304;
    const double C25649 = C19182 * C1010;
    const double C25645 = C19182 * C1004;
    const double C25887 = C19182 * C1251;
    const double C25883 = C19182 * C1243;
    const double C26065 = C19182 * C1391;
    const double C26061 = C19182 * C1378;
    const double C19197 = C19183 * C512;
    const double C19193 = C19183 * C527;
    const double C19191 = C19183 * C523;
    const double C19187 = C19183 * C510;
    const double C25031 = C19183 * C1378;
    const double C25027 = C19183 * C1391;
    const double C25025 = C19183 * C1010;
    const double C25021 = C19183 * C1004;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C5150 = C5137 + C5138;
    const double C5149 = C5135 + C5136;
    const double C19202 = C19180 * C129;
    const double C19200 = C19180 * C126;
    const double C19196 = C19180 * C138;
    const double C19190 = C19180 * C137;
    const double C19186 = C19180 * C124;
    const double C19396 = C19180 * C313;
    const double C19388 = C19180 * C320;
    const double C19386 = C19180 * C315;
    const double C19590 = C19180 * C526;
    const double C19576 = C19180 * C522;
    const double C25034 = C19180 * C318;
    const double C25024 = C19180 * C334;
    const double C25020 = C19180 * C317;
    const double C25646 = C19180 * C1009;
    const double C25884 = C19180 * C1252;
    const double C26062 = C19180 * C1390;
    const double C9498 =
        (((0 - (C30498 * C30499) / C30500) * ae) / C30500 - (0 * be) / C30504) /
            (2 * C30500) +
        ((C30498 * (((C31856 - (C30498 * 2 * C30505) / C30500) * ae) / C30500 -
                    C30499 / C30504) +
          C19180) *
         ae) /
            C30500 +
        (0 * ae) / C30500 - C30505 / C30502;
    const double C139 =
        (-2 * C30529 * C30537) / C30533 +
        C30529 * ((-((C30531 * C30532 + C30527 * bs[5] * std::pow(C30523, 5)) *
                     C30525 * std::pow(C30529, 2)) /
                   C30371) /
                      C30500 -
                  C30537 / C30533);
    const double C333 = (-((yP - yQ) * C30529 * C30537) / C30371) / C30500;
    const double C335 =
        (-(C30537 * std::pow(yP - yQ, 2)) / C30371) / C30500 -
        ((bs[2] * std::pow(C30520, 2) + C30527 * C30522 * C30526) * C30525) /
            C30533;
    const double C539 =
        (-(ae * (C30524 * C30599 + C30595 * ce)) / C30371) / C30500 -
        ((C30595 + C30527 * C30522 * C30526) * C30525) / C30533 -
        ((C30524 * C30600 + C30595 * ae) * ce) / C30533 +
        C30524 * ((-(C30600 * ce) / C30371) / C30500 - (ae * C30599) / C30533 -
                  (C30524 * C30537) / C30533);
    const double C540 = (-(C30529 * C30600 * ce) / C30371) / C30500 -
                        (ae * C30529 * C30599) / C30533 -
                        (C30524 * C30529 * C30537) / C30533;
    const double C1019 = (-(C30687 * C30600 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30599) / C30533 -
                         (C30524 * C30687 * C30537) / C30533;
    const double C556 = C31856 * C524;
    const double C19582 = C19180 * C524;
    const double C19574 = C19181 * C524;
    const double C557 = C113 * C525;
    const double C19585 = C19182 * C525;
    const double C19577 = C19183 * C525;
    const double C1026 = C31856 * C1011;
    const double C19384 = C19181 * C1011;
    const double C20100 = C19180 * C1011;
    const double C1029 = C113 * C1012;
    const double C19379 = C19183 * C1012;
    const double C20103 = C19182 * C1012;
    const double C351 = C113 * C306;
    const double C19387 = C19182 * C306;
    const double C555 = C113 * C511;
    const double C19581 = C19182 * C511;
    const double C19573 = C19183 * C511;
    const double C1025 = C113 * C1005;
    const double C19383 = C19183 * C1005;
    const double C20099 = C19182 * C1005;
    const double C1526 = C113 * C1242;
    const double C20633 = C19182 * C1242;
    const double C1688 = C113 * C1380;
    const double C19389 = C19183 * C1380;
    const double C20835 = C19182 * C1380;
    const double C2451 = C113 * C2138;
    const double C19583 = C19183 * C2138;
    const double C21687 = C19182 * C2138;
    const double C5963 = C31856 * C1384;
    const double C25644 = C19181 * C1384;
    const double C26054 = C19180 * C1384;
    const double C5964 = C113 * C1385;
    const double C25647 = C19183 * C1385;
    const double C26057 = C19182 * C1385;
    const double C5962 = C113 * C1375;
    const double C25643 = C19183 * C1375;
    const double C26053 = C19182 * C1375;
    const double C7096 = C113 * C2570;
    const double C26055 = C19183 * C2570;
    const double C27385 = C19182 * C2570;
    const double C2142 = (2 * (C30524 * C30600 + C30595 * ae) +
                          C30524 * (C30600 + C30524 * C30748 + C30744 * ae) +
                          (C30595 + C30530 * C30527) * ae) /
                         C30500;
    const double C2143 =
        (-2 * (C30524 * C30599 + C30595 * ce)) / C30371 -
        (C30524 * (C30524 * C30747 + C30599 + C30744 * ce)) / C30371 -
        ((C30595 + C30530 * C30527) * ce) / C30371;
    const double C166 = C148 + C149;
    const double C169 = C154 + C155;
    const double C368 = C345 + C346;
    const double C370 = C349 + C350;
    const double C5151 = C5139 + C5140;
    const double C579 = C551 + C552;
    const double C584 = C561 + C562;
    const double C5628 = C5618 + C5619;
    const double C5154 = C5145 + C5146;
    const double C5630 = C5624 + C5625;
    const double C167 = C150 + C151;
    const double C30551 = C30546 / C30533;
    const double C30694 = C30529 * C30546;
    const double C30752 = C30524 * C30546;
    const double C30862 = C30687 * C30546;
    const double C140 =
        3 * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533) +
        C30529 *
            ((-2 * C30529 * C30546) / C30533 +
             C30529 *
                 ((-((C30540 * C30541 + C30527 * bs[6] * std::pow(C30520, 6)) *
                     C30525 * C30542) /
                   C30371) /
                      C30500 -
                  C30546 / C30533));
    const double C332 =
        (yP - yQ) * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533);
    const double C336 =
        (-(C30529 * C30546 * std::pow(yP - yQ, 2)) / C30371) / C30500 -
        (C30529 * C30537) / C30533;
    const double C541 =
        (-(ae * (C30524 * C30608 + C30604 * ce)) / C30371) / C30500 -
        (C30529 * C30537) / C30533 -
        ((C30524 * C30609 + C30604 * ae) * ce) / C30533 +
        C30524 * ((-(C30609 * ce) / C30371) / C30500 - (ae * C30608) / C30533 -
                  (C30524 * C30529 * C30546) / C30533);
    const double C542 =
        (-((C30600 + C30607 * C30542) * ce) / C30371) / C30500 -
        (ae * (C30606 * C30542 + C30599)) / C30533 +
        C30524 * ((-(C30546 * C30542) / C30371) / C30500 - C30537 / C30533);
    const double C1020 = (-(C30687 * C30609 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30608) / C30533 -
                         (C30524 * C30687 * C30529 * C30546) / C30533;
    const double C1261 =
        (-2 * C30687 * C30537) / C30533 +
        C30687 * ((-(C30546 * std::pow(C30687, 2)) / C30371) / C30500 -
                  C30537 / C30533);
    const double C1402 =
        (-(ae * (C30524 * C30701 + C30702 * ce)) / C30371) / C30500 -
        (C30687 * C30537) / C30533 -
        ((C30524 * C30703 + C30702 * ae) * ce) / C30533 +
        C30524 * ((-(C30703 * ce) / C30371) / C30500 - (ae * C30701) / C30533 -
                  (C30524 * C30687 * C30546) / C30533);
    const double C1405 =
        (-((C30600 + C30607 * C30697) * ce) / C30371) / C30500 -
        (ae * (C30606 * C30697 + C30599)) / C30533 +
        C30524 * ((-(C30546 * C30697) / C30371) / C30500 - C30537 / C30533);
    const double C2154 =
        2 * ((-(C30600 * ce) / C30371) / C30500 - (ae * C30599) / C30533 -
             (C30524 * C30537) / C30533) -
        (ae * (C30524 * C30747 + C30599 + C30744 * ce)) / C30533 -
        ((C30600 + C30524 * C30748 + C30744 * ae) * ce) / C30533 +
        C30524 *
            ((-(ae * C30747) / C30371) / C30500 - C30537 / C30533 -
             (C30748 * ce) / C30533 +
             C30524 * ((-(C30607 * ce) / C30371) / C30500 -
                       (ae * C30606) / C30533 - (C30524 * C30546) / C30533));
    const double C30556 = C30555 * C30542;
    const double C30566 = C30555 / C30533;
    const double C30562 = C30529 * C30555;
    const double C30898 = C30555 * C30697;
    const double C30904 = C30687 * C30555;
    const double C31080 = C30524 * C30555;
    const double C30638 = C30529 * C30633;
    const double C30653 = 3 * C30633;
    const double C30710 = C30687 * C30633;
    const double C30818 = C30633 * ae;
    const double C30816 = C30524 * C30633;
    const double C30815 = C30633 * ce;
    const double C1241 =
        2 * C30687 * C30616 + C30687 * (C30616 + C30633 * C30697);
    const double C1382 = C30524 * (C30616 + C30633 * C30697);
    const double C2140 =
        2 * C30524 * C30616 + C30524 * (C30616 + C30633 * C30527);
    const double C30726 = C30626 + C30723;
    const double C30801 = C30793 + C30794;
    const double C30800 = C30626 + C30792;
    const double C30802 = C30791 * ae;
    const double C30799 = C30791 * ce;
    const double C31250 = 2 * C30791;
    const double C30798 = C30789 + C30790;
    const double C30882 = C30876 * ae;
    const double C30880 = C30524 * C30876;
    const double C30879 = C30876 * ce;
    const double C31040 = 2 * C30876;
    const double C2571 =
        2 * C30524 * C30706 + C30524 * (C30706 + C30876 * C30527);
    const double C30926 = C30687 * C30923;
    const double C30937 = 3 * C30923;
    const double C31007 = C30923 * ae;
    const double C31005 = C30524 * C30923;
    const double C31004 = C30923 * ce;
    const double C6712 =
        2 * C30524 * C30718 + C30524 * (C30718 + C30923 * C30527);
    const double C30990 = C30982 + C30983;
    const double C30989 = C30864 + C30981;
    const double C30991 = C30980 * ae;
    const double C30988 = C30980 * ce;
    const double C31303 = 2 * C30980;
    const double C30987 = C30978 + C30979;
    const double C31106 = C30524 * C31099;
    const double C31147 = 2 * C31099;
    const double C31134 = C31099 * ce;
    const double C31107 = C31098 * ae;
    const double C31105 = C30524 * C31098;
    const double C31104 = C31098 * ce;
    const double C31145 = 3 * C31098;
    const double C31103 = C30524 * C31096;
    const double C31139 = -2 * C31096;
    const double C31133 = ae * C31096;
    const double C130 = (3 * (C30600 + C30607 * C30542) +
                         C30529 * (2 * C30609 + C30529 * C30621)) /
                        C30500;
    const double C322 = (C30600 + C30607 * C30542 + C30621 * C30697) / C30500;
    const double C324 = (C30687 * (2 * C30609 + C30529 * C30621)) / C30500;
    const double C528 =
        (C30600 + C30607 * C30542 + C30524 * (C30524 * C30621 + C30616 * ae) +
         C30524 * C30616 * ae) /
        C30500;
    const double C530 = (C30524 * (2 * C30609 + C30529 * C30621) +
                         (2 * C30604 + C30529 * C30616) * ae) /
                        C30500;
    const double C1013 =
        (C30524 * C30687 * C30621 + C30687 * C30616 * ae) / C30500;
    const double C1248 =
        (2 * C30687 * C30621 + C30687 * (C30621 + C30642 * C30697)) / C30500;
    const double C1398 = (C30524 * (C30621 + C30642 * C30697) +
                          (C30616 + C30633 * C30697) * ae) /
                         C30500;
    const double C1386 =
        (C30687 * C30609 + C30524 * (C30524 * C30707 + C30706 * ae) +
         C30524 * C30706 * ae) /
        C30500;
    const double C30784 = C30781 + C30782;
    const double C30795 = C30786 / C30371;
    const double C1527 = C31856 * C1250;
    const double C20634 = C19180 * C1250;
    const double C1689 = C31856 * C1394;
    const double C19390 = C19181 * C1394;
    const double C20836 = C19180 * C1394;
    const double C1253 = (3 * (C30600 + C30607 * C30697) +
                          C30687 * (2 * C30703 + C30687 * C30719)) /
                         C30500;
    const double C1392 =
        (C30600 + C30607 * C30697 + C30524 * (C30524 * C30719 + C30718 * ae) +
         C30524 * C30718 * ae) /
        C30500;
    const double C1806 = (C30524 * (2 * C30703 + C30687 * C30719) +
                          (2 * C30702 + C30687 * C30718) * ae) /
                         C30500;
    const double C30769 = C30524 * C30765;
    const double C31087 = 2 * C30765;
    const double C31077 = C30765 * ce;
    const double C30872 = C30869 + C30870;
    const double C30984 = C30975 / C30371;
    const double C31102 = -C31092;
    const double C131 =
        (-3 * (C30606 * C30542 + C30599)) / C30371 +
        C30529 * ((-2 * C30608) / C30371 - (C30529 * C30620) / C30371);
    const double C323 = -(C30620 * C30697 + C30606 * C30542 + C30599) / C30371;
    const double C325 =
        C30687 * ((-2 * C30608) / C30371 - (C30529 * C30620) / C30371);
    const double C529 = -(C30524 * (C30524 * C30620 + C30616 * ce) +
                          C30606 * C30542 + C30599 + C30524 * C30616 * ce) /
                        C30371;
    const double C531 =
        C30524 * ((-2 * C30608) / C30371 - (C30529 * C30620) / C30371) -
        ((2 * C30604 + C30529 * C30616) * ce) / C30371;
    const double C1014 =
        -(C30524 * C30687 * C30620 + C30687 * C30616 * ce) / C30371;
    const double C1247 = (-2 * C30687 * C30620) / C30371 -
                         (C30687 * (C30640 * C30697 + C30620)) / C30371;
    const double C1399 = -(C30524 * (C30640 * C30697 + C30620) +
                           (C30616 + C30633 * C30697) * ce) /
                         C30371;
    const double C30636 = C30630 / C30371;
    const double C1387 = -(C30524 * (C30524 * C30705 + C30706 * ce) +
                           C30687 * C30608 + C30524 * C30706 * ce) /
                         C30371;
    const double C30783 = C30778 + C30779;
    const double C30796 = C30787 / C30533;
    const double C1524 = C113 * C1249;
    const double C20629 = C19182 * C1249;
    const double C1690 = C113 * C1395;
    const double C19393 = C19183 * C1395;
    const double C20839 = C19182 * C1395;
    const double C1254 =
        (-3 * (C30606 * C30697 + C30599)) / C30371 +
        C30687 * ((-2 * C30701) / C30371 - (C30687 * C30717) / C30371);
    const double C1393 = -(C30524 * (C30524 * C30717 + C30718 * ce) +
                           C30606 * C30697 + C30599 + C30524 * C30718 * ce) /
                         C30371;
    const double C1807 =
        C30524 * ((-2 * C30701) / C30371 - (C30687 * C30717) / C30371) -
        ((2 * C30702 + C30687 * C30718) * ce) / C30371;
    const double C30768 = C30524 * C30762;
    const double C31081 = -2 * C30762;
    const double C31076 = ae * C30762;
    const double C30871 = C30866 + C30867;
    const double C30921 = C30915 / C30371;
    const double C30985 = C30976 / C30533;
    const double C30573 = C30572 * C30542;
    const double C30905 = C30572 * C30697;
    const double C30965 = C30529 * C30572;
    const double C31137 = C30524 * C30572;
    const double C31299 = C30687 * C30572;
    const double C30675 = C30529 * C30672;
    const double C30732 = C30672 * C30697;
    const double C30829 = C30524 * C30672;
    const double C30889 = C30687 * C30672;
    const double C30953 = C30687 * C30949;
    const double C31018 = C30524 * C30949;
    const double C31050 = C30657 + C31047;
    const double C31221 = C30524 * C31213;
    const double C31263 = C31252 + C31253;
    const double C31170 = C30524 * C31162;
    const double C31324 = C31316 + C31317;
    const double C30673 = C30529 * C30670;
    const double C30730 = C30670 * C30697;
    const double C30825 = C30524 * C30670;
    const double C30887 = C30687 * C30670;
    const double C30951 = C30687 * C30945;
    const double C31014 = C30524 * C30945;
    const double C31048 = C31045 + C30651;
    const double C31217 = C30524 * C31211;
    const double C31260 = C31246 + C31247;
    const double C31167 = C30524 * C31159;
    const double C31321 = C31312 + C31313;
    const double C156 = C113 * C119;
    const double C19215 = C19182 * C119;
    const double C355 = C113 * C307;
    const double C19409 = C19182 * C307;
    const double C359 = C113 * C308;
    const double C19757 = C19182 * C308;
    const double C565 = C113 * C513;
    const double C19599 = C19182 * C513;
    const double C19591 = C19183 * C513;
    const double C569 = C113 * C514;
    const double C19203 = C19183 * C514;
    const double C19895 = C19182 * C514;
    const double C1031 = C113 * C1006;
    const double C19397 = C19183 * C1006;
    const double C20109 = C19182 * C1006;
    const double C2315 = C113 * C1376;
    const double C20101 = C19183 * C1376;
    const double C21545 = C19182 * C1376;
    const double C5817 = C113 * C1244;
    const double C25897 = C19182 * C1244;
    const double C5970 = C113 * C1379;
    const double C26071 = C19182 * C1379;
    const double C26063 = C19183 * C1379;
    const double C5974 = C113 * C1803;
    const double C25885 = C19183 * C1803;
    const double C26545 = C19182 * C1803;
    const double C30770 = C30767 / C30500;
    const double C30671 = C30662 + C30668;
    const double C30734 = C30633 + C30731;
    const double C30835 = C30633 + C30828;
    const double C30837 = C30827 * ae;
    const double C30834 = C30827 * ce;
    const double C30894 = C30888 * ae;
    const double C30892 = C30524 * C30888;
    const double C30891 = C30888 * ce;
    const double C30955 = C30946 + C30952;
    const double C31024 = C30923 + C31017;
    const double C31026 = C31016 * ae;
    const double C31023 = C31016 * ce;
    const double C31052 = C30687 * C31049;
    const double C31063 = C31049 * ae;
    const double C31061 = C30524 * C31049;
    const double C31060 = C31049 * ce;
    const double C31227 = C30876 + C31220;
    const double C31229 = C31219 * ae;
    const double C31226 = C31219 * ce;
    const double C31271 = C31262 * ae;
    const double C31269 = C30524 * C31262;
    const double C31268 = C31262 * ce;
    const double C31177 = C31144 + C31169;
    const double C31176 = C31168 / C30371;
    const double C31332 = C31323 * ae;
    const double C31330 = C30524 * C31323;
    const double C31329 = C31323 * ce;
    const double C30646 = C30634 + C30644;
    const double C30831 = C30822 / C30371;
    const double C1255 = (3 * (C30609 + C30628 * C30697) +
                          C30687 * (2 * C30707 + C30687 * C30727)) /
                         C30500;
    const double C31214 = C31208 / C30371;
    const double C31266 = -C31256;
    const double C30930 = C30919 + C30927;
    const double C31020 = C31011 / C30371;
    const double C31319 = -C31308;
    const double C31174 = C31166 / C30500;
    const double C30645 = C30643 / C30371;
    const double C30659 = C30650 / C30371;
    const double C30832 = C30823 / C30533;
    const double C1256 =
        (-3 * (C30624 * C30697 + C30608)) / C30371 +
        C30687 * ((-2 * C30705) / C30371 - (C30687 * C30725) / C30371);
    const double C31044 = C31038 / C30371;
    const double C31215 = C31209 / C30533;
    const double C30928 = C30925 / C30371;
    const double C30943 = C30934 / C30371;
    const double C31021 = C31012 / C30533;
    const double C31637 = C31636 / C30373;
    const double C31954 = 2 * C31920;
    const double C31645 = C31644 / C30371;
    const double C31958 = C31924 / C30375;
    const double C31983 = C31918 - C31953;
    const double C2788 = -C31953;
    const double C31997 = C31982 + C31634;
    const double C31717 = C31716 / C30373;
    const double C31962 = 2 * C31929;
    const double C31724 = C31723 / C30371;
    const double C31972 = C31938 / C30375;
    const double C31991 = C31932 - C31969;
    const double C2680 = -C31969;
    const double C32000 = C31987 + C31713;
    const double C30445 = C30441 * de;
    const double C30416 = C30408 / C30371;
    const double C30425 = C30369 * C30421;
    const double C30454 = C30421 / C30388;
    const double C31760 = C31755 - C31759;
    const double C31990 = C31965 / C30371;
    const double C31767 = C31763 - C31766;
    const double C32004 = C31994 / C30388;
    const double C1928 =
        ((-(0 * de) / C30371) / C30388 -
         ((0 - (C30369 * C30370) / C30371) * de) / C30371) /
            C30388 -
        ((C30369 * ((-C30370 / C30371) / C30388 -
                    ((C31677 - (C30369 * C30389) / C30371) * de) / C30371) +
          C3454) *
         de) /
            C30371 +
        (-C30389 / C30371) / C30388 - (0 * de) / C30371;
    const double C19223 = C19197 + C19198;
    const double C19218 = C19187 + C19188;
    const double C25041 = C25031 + C25032;
    const double C25036 = C25021 + C25022;
    const double C175 = C165 * C31677;
    const double C550 = C165 * C32001;
    const double C832 = C165 * C31933;
    const double C1933 = C165 * C1925;
    const double C3460 = C165 * C3454;
    const double C174 = C164 * C114;
    const double C549 = C164 * C505;
    const double C831 = C164 * C824;
    const double C5157 = C5150 * C31677;
    const double C5617 = C5150 * C31933;
    const double C5959 = C5150 * C32001;
    const double C6627 = C5150 * C1925;
    const double C8113 = C5150 * C3454;
    const double C5156 = C5149 * C114;
    const double C5616 = C5149 * C824;
    const double C5958 = C5149 * C505;
    const double C19225 = C19201 + C19202;
    const double C19224 = C19199 + C19200;
    const double C19222 = C19195 + C19196;
    const double C19219 = C19189 + C19190;
    const double C19217 = C19185 + C19186;
    const double C19419 = C19395 + C19396;
    const double C19414 = C19385 + C19386;
    const double C19613 = C19589 + C19590;
    const double C19606 = C19575 + C19576;
    const double C25042 = C25033 + C25034;
    const double C25037 = C25023 + C25024;
    const double C25035 = C25019 + C25020;
    const double C25652 = C25645 + C25646;
    const double C25899 = C25883 + C25884;
    const double C26081 = C26061 + C26062;
    const double C153 = C31856 * C139;
    const double C19206 = C19180 * C139;
    const double C348 = C31856 * C333;
    const double C19382 = C19180 * C333;
    const double C5142 = C31856 * C335;
    const double C25030 = C19180 * C335;
    const double C554 = C31856 * C540;
    const double C19192 = C19181 * C540;
    const double C19580 = C19180 * C540;
    const double C5621 = C31856 * C1019;
    const double C25026 = C19181 * C1019;
    const double C25650 = C19180 * C1019;
    const double C371 = C351 + C352;
    const double C19415 = C19387 + C19388;
    const double C581 = C555 + C556;
    const double C19609 = C19581 + C19582;
    const double C19605 = C19573 + C19574;
    const double C1043 = C1025 + C1026;
    const double C19413 = C19383 + C19384;
    const double C20115 = C20099 + C20100;
    const double C5984 = C5962 + C5963;
    const double C25651 = C25643 + C25644;
    const double C26077 = C26053 + C26054;
    const double C176 = C166 * C114;
    const double C559 = C166 * C505;
    const double C835 = C166 * C824;
    const double C179 = C169 * C114;
    const double C572 = C169 * C505;
    const double C841 = C169 * C824;
    const double C380 = C368 * C114;
    const double C1034 = C368 * C824;
    const double C2945 = C368 * C505;
    const double C382 = C370 * C114;
    const double C1028 = C370 * C824;
    const double C2939 = C370 * C505;
    const double C5158 = C5151 * C114;
    const double C5622 = C5151 * C824;
    const double C5966 = C5151 * C505;
    const double C592 = C579 * C506;
    const double C833 = C579 * C825;
    const double C1934 = C579 * C1929;
    const double C3461 = C579 * C3457;
    const double C596 = C584 * C506;
    const double C837 = C584 * C825;
    const double C1940 = C584 * C1929;
    const double C3465 = C584 * C3457;
    const double C5632 = C5628 * C825;
    const double C5960 = C5628 * C506;
    const double C6628 = C5628 * C1929;
    const double C8114 = C5628 * C3457;
    const double C5161 = C5154 * C114;
    const double C5977 = C5154 * C505;
    const double C6271 = C5154 * C824;
    const double C5634 = C5630 * C825;
    const double C5968 = C5630 * C506;
    const double C6634 = C5630 * C1929;
    const double C8118 = C5630 * C3457;
    const double C177 = C167 * C31677;
    const double C560 = C167 * C32001;
    const double C836 = C167 * C31933;
    const double C1939 = C167 * C1925;
    const double C3464 = C167 * C3454;
    const double C1262 =
        3 * ((-(C30546 * C30697) / C30371) / C30500 - C30537 / C30533) +
        C30687 * ((-2 * C30687 * C30546) / C30533 +
                  C30687 * ((-(C30555 * C30697) / C30371) / C30500 - C30551));
    const double C1406 =
        (-(C30546 * C30697) / C30371) / C30500 - C30537 / C30533 -
        (ae * (C30524 * C30717 + C30718 * ce)) / C30533 -
        ((C30524 * C30719 + C30718 * ae) * ce) / C30533 +
        C30524 * ((-(C30719 * ce) / C30371) / C30500 - (ae * C30717) / C30533 +
                  C30524 * ((-(C30555 * C30697) / C30371) / C30500 - C30551));
    const double C1812 =
        (((-2 * C30701) / C30371 - (C30687 * C30717) / C30371) * ae) / C30500 -
        ((2 * C30703 + C30687 * C30719) * ce) / C30533 +
        C30524 * ((-2 * C30687 * C30546) / C30533 +
                  C30687 * ((-(C30555 * C30697) / C30371) / C30500 - C30551));
    const double C30761 = C30752 / C30533;
    const double C159 = C31856 * C140;
    const double C19212 = C19180 * C140;
    const double C344 = C31856 * C332;
    const double C19400 = C19180 * C332;
    const double C354 = C31856 * C336;
    const double C19392 = C19180 * C336;
    const double C558 = C31856 * C541;
    const double C19586 = C19180 * C541;
    const double C19578 = C19181 * C541;
    const double C564 = C31856 * C542;
    const double C19194 = C19181 * C542;
    const double C19594 = C19180 * C542;
    const double C1030 = C31856 * C1020;
    const double C19380 = C19181 * C1020;
    const double C20104 = C19180 * C1020;
    const double C5144 = C31856 * C1261;
    const double C25888 = C19180 * C1261;
    const double C5965 = C31856 * C1402;
    const double C25648 = C19181 * C1402;
    const double C26058 = C19180 * C1402;
    const double C5627 = C31856 * C1405;
    const double C25028 = C19181 * C1405;
    const double C26066 = C19180 * C1405;
    const double C30557 = C30556 / C30371;
    const double C30567 = -2 * C30562;
    const double C30788 = C30524 * C30562;
    const double C30874 = C30687 * C30562;
    const double C30966 = C30562 / C30533;
    const double C1260 =
        (-2 * C30687 * C30694) / C30533 +
        C30687 * ((-(C30562 * std::pow(C30687, 2)) / C30371) / C30500 -
                  C30694 / C30533);
    const double C1263 =
        3 * ((-(C30562 * C30697) / C30371) / C30500 - C30694 / C30533) +
        C30687 * ((-2 * C30687 * C30562) / C30533 +
                  C30687 * ((-(C30529 * C30572 * C30697) / C30371) / C30500 -
                            C30562 / C30533));
    const double C1403 =
        (-(ae * (C30524 * C30705 + C30706 * ce)) / C30371) / C30500 -
        (C30687 * C30694) / C30533 -
        ((C30524 * C30707 + C30706 * ae) * ce) / C30533 +
        C30524 * ((-(C30707 * ce) / C30371) / C30500 - (ae * C30705) / C30533 -
                  (C30524 * C30687 * C30562) / C30533);
    const double C1407 =
        (-((C30609 + C30628 * C30697) * ce) / C30371) / C30500 -
        (ae * (C30624 * C30697 + C30608)) / C30533 +
        C30524 * ((-(C30562 * C30697) / C30371) / C30500 - C30694 / C30533);
    const double C1813 =
        (((-2 * C30705) / C30371 - (C30687 * C30725) / C30371) * ae) / C30500 -
        ((2 * C30707 + C30687 * C30727) * ce) / C30533 +
        C30524 * ((-2 * C30687 * C30562) / C30533 +
                  C30687 * ((-(C30529 * C30572 * C30697) / C30371) / C30500 -
                            C30562 / C30533));
    const double C30899 = C30898 / C30371;
    const double C30906 = -2 * C30904;
    const double C30977 = C30524 * C30904;
    const double C31295 = C30904 / C30533;
    const double C31094 = C31080 / C30533;
    const double C30641 = C30632 + C30638;
    const double C1388 =
        (C30687 * C30621 + C30524 * (C30524 * C30711 + C30710 * ae) +
         C30524 * C30710 * ae) /
        C30500;
    const double C1389 = -(C30524 * (C30524 * C30709 + C30710 * ce) +
                           C30687 * C30620 + C30524 * C30710 * ce) /
                         C30371;
    const double C1377 = C30687 * C30616 + C30710 * C30527;
    const double C2572 =
        2 * C30524 * C30710 + C30524 * (C30710 + C30888 * C30527);
    const double C30820 = C30817 + C30818;
    const double C30819 = C30814 + C30815;
    const double C1522 = C113 * C1241;
    const double C1694 = C113 * C1382;
    const double C19407 = C19183 * C1382;
    const double C2461 = C113 * C2140;
    const double C19597 = C19183 * C2140;
    const double C1408 =
        (-(C30562 * C30697) / C30371) / C30500 - C30694 / C30533 -
        (ae * (C30524 * C30725 + C30726 * ce)) / C30533 -
        ((C30524 * C30727 + C30726 * ae) * ce) / C30533 +
        C30524 * ((-(C30727 * ce) / C30371) / C30500 - (ae * C30725) / C30533 +
                  C30524 * ((-(C30529 * C30572 * C30697) / C30371) / C30500 -
                            C30562 / C30533));
    const double C1396 =
        (C30609 + C30628 * C30697 + C30524 * (C30524 * C30727 + C30726 * ae) +
         C30524 * C30726 * ae) /
        C30500;
    const double C1397 = -(C30524 * (C30524 * C30725 + C30726 * ce) +
                           C30624 * C30697 + C30608 + C30524 * C30726 * ce) /
                         C30371;
    const double C1808 = (C30524 * (2 * C30707 + C30687 * C30727) +
                          (2 * C30706 + C30687 * C30726) * ae) /
                         C30500;
    const double C1809 =
        C30524 * ((-2 * C30705) / C30371 - (C30687 * C30725) / C30371) -
        ((2 * C30706 + C30687 * C30726) * ce) / C30371;
    const double C1245 = 3 * (C30604 + C30626 * C30697) +
                         C30687 * (2 * C30706 + C30687 * C30726);
    const double C1381 = C30604 + C30626 * C30697 + C30726 * C30527;
    const double C1804 = C30524 * (2 * C30706 + C30687 * C30726);
    const double C6983 =
        2 * C30524 * C30726 + C30524 * (C30726 + C31049 * C30527);
    const double C30805 = C30524 * C30801;
    const double C31251 = 2 * C30801;
    const double C31241 = C30801 * ce;
    const double C2139 = 3 * (C30604 + C30626 * C30527) +
                         C30524 * (2 * C30780 + C30524 * C30800);
    const double C30804 = C30524 * C30798;
    const double C31245 = -2 * C30798;
    const double C31240 = ae * C30798;
    const double C30884 = C30881 + C30882;
    const double C30883 = C30878 + C30879;
    const double C15957 = C113 * C2571;
    const double C21543 = C19183 * C2571;
    const double C30929 = C30917 + C30926;
    const double C31009 = C31006 + C31007;
    const double C31008 = C31003 + C31004;
    const double C7106 = C113 * C6712;
    const double C26069 = C19183 * C6712;
    const double C30994 = C30524 * C30990;
    const double C31304 = 2 * C30990;
    const double C31296 = C30990 * ce;
    const double C6711 = 3 * (C30702 + C30864 * C30527) +
                         C30524 * (2 * C30868 + C30524 * C30989);
    const double C30993 = C30524 * C30987;
    const double C31300 = -2 * C30987;
    const double C31294 = ae * C30987;
    const double C31113 = C30617 + C31106;
    const double C31153 = C31134 / C30533;
    const double C31112 = C31086 + C31105;
    const double C31111 = C31104 / C30371;
    const double C31110 = C31103 + C30615;
    const double C31158 = C31139 / C30371;
    const double C31152 = C31133 / C30371;
    const double C157 = C31856 * C130;
    const double C19216 = C19180 * C130;
    const double C356 = C31856 * C322;
    const double C19410 = C19180 * C322;
    const double C360 = C31856 * C324;
    const double C19758 = C19180 * C324;
    const double C566 = C31856 * C528;
    const double C19600 = C19180 * C528;
    const double C19592 = C19181 * C528;
    const double C570 = C31856 * C530;
    const double C19204 = C19181 * C530;
    const double C19896 = C19180 * C530;
    const double C1032 = C31856 * C1013;
    const double C19398 = C19181 * C1013;
    const double C20110 = C19180 * C1013;
    const double C1523 = C31856 * C1248;
    const double C1695 = C31856 * C1398;
    const double C19408 = C19181 * C1398;
    const double C2316 = C31856 * C1386;
    const double C20102 = C19181 * C1386;
    const double C21546 = C19180 * C1386;
    const double C2146 = (2 * (C30524 * C30609 + C30604 * ae) +
                          C30524 * (C30609 + C30524 * C30784 + C30780 * ae) +
                          (C30604 + C30626 * C30527) * ae) /
                         C30500;
    const double C30803 = -C30795;
    const double C1531 = C1526 + C1527;
    const double C20638 = C20633 + C20634;
    const double C1698 = C1688 + C1689;
    const double C19416 = C19389 + C19390;
    const double C20842 = C20835 + C20836;
    const double C5818 = C31856 * C1253;
    const double C25898 = C19180 * C1253;
    const double C5971 = C31856 * C1392;
    const double C26072 = C19180 * C1392;
    const double C26064 = C19181 * C1392;
    const double C5975 = C31856 * C1806;
    const double C25886 = C19181 * C1806;
    const double C26546 = C19180 * C1806;
    const double C30772 = C30607 + C30769;
    const double C31091 = C31077 / C30533;
    const double C2573 = (2 * (C30524 * C30703 + C30702 * ae) +
                          C30524 * (C30703 + C30524 * C30872 + C30868 * ae) +
                          (C30702 + C30864 * C30527) * ae) /
                         C30500;
    const double C30992 = -C30984;
    const double C31109 = C31102 / C30500;
    const double C158 = C113 * C131;
    const double C19211 = C19182 * C131;
    const double C357 = C113 * C323;
    const double C19405 = C19182 * C323;
    const double C361 = C113 * C325;
    const double C19753 = C19182 * C325;
    const double C567 = C113 * C529;
    const double C19603 = C19182 * C529;
    const double C19595 = C19183 * C529;
    const double C573 = C113 * C531;
    const double C19207 = C19183 * C531;
    const double C19899 = C19182 * C531;
    const double C1035 = C113 * C1014;
    const double C19401 = C19183 * C1014;
    const double C20113 = C19182 * C1014;
    const double C1520 = C113 * C1247;
    const double C1696 = C113 * C1399;
    const double C19403 = C19183 * C1399;
    const double C2317 = C113 * C1387;
    const double C20105 = C19183 * C1387;
    const double C21549 = C19182 * C1387;
    const double C2156 =
        2 * ((-(C30609 * ce) / C30371) / C30500 - (ae * C30608) / C30533 -
             (C30524 * C30694) / C30533) -
        (ae * (C30524 * C30783 + C30608 + C30780 * ce)) / C30533 -
        ((C30609 + C30524 * C30784 + C30780 * ae) * ce) / C30533 +
        C30524 *
            ((-(ae * C30783) / C30371) / C30500 - C30694 / C30533 -
             (C30784 * ce) / C30533 +
             C30524 * ((-(C30628 * ce) / C30371) / C30500 -
                       (ae * C30624) / C30533 - (C30524 * C30562) / C30533));
    const double C2147 =
        (-2 * (C30524 * C30608 + C30604 * ce)) / C30371 -
        (C30524 * (C30524 * C30783 + C30608 + C30780 * ce)) / C30371 -
        ((C30604 + C30626 * C30527) * ce) / C30371;
    const double C5819 = C113 * C1254;
    const double C25893 = C19182 * C1254;
    const double C5972 = C113 * C1393;
    const double C26075 = C19182 * C1393;
    const double C26067 = C19183 * C1393;
    const double C5978 = C113 * C1807;
    const double C25889 = C19183 * C1807;
    const double C26549 = C19182 * C1807;
    const double C30771 = C30768 + C30606;
    const double C31095 = C31081 / C30371;
    const double C31090 = C31076 / C30371;
    const double C2579 =
        2 * ((-(C30703 * ce) / C30371) / C30500 - (ae * C30701) / C30533 -
             (C30524 * C30862) / C30533) -
        (ae * (C30524 * C30871 + C30701 + C30868 * ce)) / C30533 -
        ((C30703 + C30524 * C30872 + C30868 * ae) * ce) / C30533 +
        C30524 * ((-(ae * C30871) / C30371) / C30500 - C30862 / C30533 -
                  (C30872 * ce) / C30533 +
                  C30524 * ((-(C30865 * ce) / C30371) / C30500 -
                            (ae * C30863) / C30533 -
                            (C30524 * C30687 * C30555) / C30533));
    const double C2574 =
        (-2 * (C30524 * C30701 + C30702 * ce)) / C30371 -
        (C30524 * (C30524 * C30871 + C30701 + C30868 * ce)) / C30371 -
        ((C30702 + C30864 * C30527) * ce) / C30371;
    const double C30574 = C30573 / C30371;
    const double C30907 = C30905 / C30371;
    const double C30967 = C30965 * C30697;
    const double C31210 = C30687 * C30965;
    const double C31244 = C30524 * C30965;
    const double C31156 = C31137 / C30533;
    const double C31310 = C30524 * C31299;
    const double C30678 = C30664 + C30675;
    const double C30735 = C30642 + C30732;
    const double C30836 = C30829 + C30830;
    const double C30893 = C30524 * C30889;
    const double C30956 = C30948 + C30953;
    const double C31025 = C31018 + C31019;
    const double C31053 = C30687 * C31050;
    const double C31062 = C30524 * C31050;
    const double C31228 = C31221 + C31222;
    const double C31270 = C30524 * C31263;
    const double C31178 = C30635 + C31170;
    const double C31331 = C30524 * C31324;
    const double C30676 = C30673 / C30371;
    const double C30733 = C30730 + C30640;
    const double C30833 = C30825 + C30826;
    const double C30890 = C30524 * C30887;
    const double C30954 = C30951 / C30371;
    const double C31022 = C31014 + C31015;
    const double C31051 = C30687 * C31048;
    const double C31059 = C30524 * C31048;
    const double C31225 = C31217 + C31218;
    const double C31267 = C30524 * C31260;
    const double C31175 = C31167 + C30631;
    const double C31328 = C30524 * C31321;
    const double C30773 = C30770 - C30760;
    const double C30674 = C30529 * C30671;
    const double C30850 = C30687 * C30671;
    const double C30857 = C30671 * ae;
    const double C30855 = C30524 * C30671;
    const double C30854 = C30671 * ce;
    const double C1246 = 3 * (C30616 + C30633 * C30697) +
                         C30687 * (2 * C30710 + C30687 * C30734);
    const double C1383 = C30616 + C30633 * C30697 + C30734 * C30527;
    const double C1805 = C30524 * (2 * C30710 + C30687 * C30734);
    const double C2141 = 3 * (C30616 + C30633 * C30527) +
                         C30524 * (2 * C30816 + C30524 * C30835);
    const double C30958 = C30687 * C30955;
    const double C31071 = C30955 * ae;
    const double C31069 = C30524 * C30955;
    const double C31068 = C30955 * ce;
    const double C6713 = 3 * (C30718 + C30923 * C30527) +
                         C30524 * (2 * C31005 + C30524 * C31024);
    const double C31055 = C31040 + C31052;
    const double C11123 = 3 * (C30706 + C30876 * C30527) +
                          C30524 * (2 * C30880 + C30524 * C31227);
    const double C31276 = C31250 + C31269;
    const double C31275 = C31268 / C30371;
    const double C31185 = C31177 * ae;
    const double C31183 = C30524 * C31177;
    const double C31182 = C31177 * ce;
    const double C31337 = C31303 + C31330;
    const double C31336 = C31329 / C30371;
    const double C133 = (4 * (2 * C30609 + C30529 * C30621) +
                         C30529 * (3 * C30621 + C30529 * C30646)) /
                        C30500;
    const double C327 =
        (2 * C30609 + C30529 * C30621 + C30646 * C30697) / C30500;
    const double C329 = (C30687 * (3 * C30621 + C30529 * C30646)) / C30500;
    const double C30838 = -C30831;
    const double C6112 = C31856 * C1255;
    const double C31223 = -C31214;
    const double C31273 = C31266 / C30500;
    const double C5810 = (4 * (2 * C30703 + C30687 * C30719) +
                          C30687 * (3 * C30719 + C30687 * C30930)) /
                         C30500;
    const double C31027 = -C31020;
    const double C31327 = C31319 / C30500;
    const double C31180 = C31174 - C31155;
    const double C30647 = C30636 - C30645;
    const double C6109 = C113 * C1256;
    const double C30931 = C30921 - C30928;
    const double C31638 = C31634 - C31637;
    const double C31984 = C31954 / C30371;
    const double C31646 = C31642 - C31645;
    const double C31998 = C31983 / C30388;
    const double C31718 = C31713 - C31717;
    const double C31988 = C31962 / C30371;
    const double C31725 = C31721 - C31724;
    const double C32002 = C31991 / C30388;
    const double C30447 = C30445 / C30371;
    const double C30420 = C31677 - C30416;
    const double C30429 = C30425 + C31764;
    const double C30457 = C30454 - C30456;
    const double C4041 = C167 * C31760;
    const double C4035 = C165 * C31760;
    const double C8637 = C5150 * C31760;
    const double C31941 = C31760 * C31754;
    const double C31977 = C31943 + C31760;
    const double C31945 = C31767 / C30388;
    const double C31942 = C31767 * C31754;
    const double C2432 = C32004 - (C31760 * C31756) / C30371;
    const double C1946 = C169 * C1928;
    const double C1938 = C166 * C1928;
    const double C1932 = C164 * C1928;
    const double C2321 = C368 * C1928;
    const double C2313 = C370 * C1928;
    const double C6640 = C5154 * C1928;
    const double C6632 = C5151 * C1928;
    const double C6626 = C5149 * C1928;
    const double C168 = C152 + C153;
    const double C19227 = C19205 + C19206;
    const double C369 = C347 + C348;
    const double C19412 = C19381 + C19382;
    const double C5152 = C5141 + C5142;
    const double C25040 = C25029 + C25030;
    const double C580 = C553 + C554;
    const double C19220 = C19191 + C19192;
    const double C19608 = C19579 + C19580;
    const double C5629 = C5620 + C5621;
    const double C25038 = C25025 + C25026;
    const double C25654 = C25649 + C25650;
    const double C383 = C371 * C114;
    const double C1686 = C371 * C824;
    const double C6876 = C371 * C1928;
    const double C7462 = C371 * C505;
    const double C594 = C581 * C507;
    const double C1936 = C581 * C1930;
    const double C1050 = C1043 * C825;
    const double C2311 = C1043 * C1929;
    const double C2937 = C1043 * C506;
    const double C3627 = C1043 * C3457;
    const double C5993 = C5984 * C507;
    const double C6630 = C5984 * C1930;
    const double C184 = C176 + C177;
    const double C583 = C559 + C560;
    const double C849 = C835 + C836;
    const double C5820 = C31856 * C1262;
    const double C25894 = C19180 * C1262;
    const double C5973 = C31856 * C1406;
    const double C26076 = C19180 * C1406;
    const double C26068 = C19181 * C1406;
    const double C5979 = C31856 * C1812;
    const double C25890 = C19181 * C1812;
    const double C26550 = C19180 * C1812;
    const double C367 = C343 + C344;
    const double C19421 = C19399 + C19400;
    const double C372 = C353 + C354;
    const double C19417 = C19391 + C19392;
    const double C582 = C557 + C558;
    const double C19611 = C19585 + C19586;
    const double C19607 = C19577 + C19578;
    const double C585 = C563 + C564;
    const double C19221 = C19193 + C19194;
    const double C19615 = C19593 + C19594;
    const double C1044 = C1029 + C1030;
    const double C19411 = C19379 + C19380;
    const double C20117 = C20103 + C20104;
    const double C5153 = C5143 + C5144;
    const double C25901 = C25887 + C25888;
    const double C5985 = C5964 + C5965;
    const double C25653 = C25647 + C25648;
    const double C26079 = C26057 + C26058;
    const double C5631 = C5626 + C5627;
    const double C25039 = C25027 + C25028;
    const double C26083 = C26065 + C26066;
    const double C30558 = -C30557;
    const double C30569 = C30567 / C30533;
    const double C30797 = C30788 / C30533;
    const double C1525 = C31856 * C1260;
    const double C20630 = C19180 * C1260;
    const double C6110 = C31856 * C1263;
    const double C2318 = C31856 * C1403;
    const double C20106 = C19181 * C1403;
    const double C21550 = C19180 * C1403;
    const double C1691 = C31856 * C1407;
    const double C19394 = C19181 * C1407;
    const double C20840 = C19180 * C1407;
    const double C6279 = C31856 * C1813;
    const double C20628 = C19181 * C1813;
    const double C30900 = -C30899;
    const double C30908 = C30906 / C30533;
    const double C30986 = C30977 / C30533;
    const double C532 =
        (2 * C30609 + C30529 * C30621 +
         C30524 * (C30524 * C30646 + C30641 * ae) + C30524 * C30641 * ae) /
        C30500;
    const double C534 = (C30524 * (3 * C30621 + C30529 * C30646) +
                         (3 * C30616 + C30529 * C30641) * ae) /
                        C30500;
    const double C1015 =
        (C30524 * C30687 * C30646 + C30687 * C30641 * ae) / C30500;
    const double C120 = 4 * (2 * C30604 + C30529 * C30616) +
                        C30529 * (3 * C30616 + C30529 * C30641);
    const double C309 = 2 * C30604 + C30529 * C30616 + C30641 * C30697;
    const double C310 = C30687 * (3 * C30616 + C30529 * C30641);
    const double C515 = 2 * C30604 + C30529 * C30616 + C30641 * C30527;
    const double C516 = C30524 * (3 * C30616 + C30529 * C30641);
    const double C1007 = C30524 * C30687 * C30641;
    const double C1515 =
        2 * C30687 * C30641 + C30687 * (C30641 + C30671 * C30697);
    const double C1681 = C30524 * (C30641 + C30671 * C30697);
    const double C2440 =
        2 * C30524 * C30641 + C30524 * (C30641 + C30671 * C30527);
    const double C2324 = C31856 * C1388;
    const double C20108 = C19181 * C1388;
    const double C2325 = C113 * C1389;
    const double C20111 = C19183 * C1389;
    const double C2323 = C113 * C1377;
    const double C20107 = C19183 * C1377;
    const double C2150 = (2 * (C30524 * C30621 + C30616 * ae) +
                          C30524 * (C30621 + C30524 * C30820 + C30816 * ae) +
                          (C30616 + C30633 * C30527) * ae) /
                         C30500;
    const double C2151 =
        (-2 * (C30524 * C30620 + C30616 * ce)) / C30371 -
        (C30524 * (C30524 * C30819 + C30620 + C30816 * ce)) / C30371 -
        ((C30616 + C30633 * C30527) * ce) / C30371;
    const double C6881 = C31856 * C1408;
    const double C20838 = C19181 * C1408;
    const double C6879 = C31856 * C1396;
    const double C20834 = C19181 * C1396;
    const double C6880 = C113 * C1397;
    const double C20837 = C19183 * C1397;
    const double C6277 = C31856 * C1808;
    const double C20632 = C19181 * C1808;
    const double C6278 = C113 * C1809;
    const double C20627 = C19183 * C1809;
    const double C6111 = C113 * C1245;
    const double C6878 = C113 * C1381;
    const double C20833 = C19183 * C1381;
    const double C6276 = C113 * C1804;
    const double C20631 = C19183 * C1804;
    const double C30808 = C30628 + C30805;
    const double C31255 = C31241 / C30533;
    const double C21685 = C19183 * C2139;
    const double C30807 = C30804 + C30624;
    const double C31259 = C31245 / C30371;
    const double C31254 = C31240 / C30371;
    const double C2575 = (2 * (C30524 * C30707 + C30706 * ae) +
                          C30524 * (C30707 + C30524 * C30884 + C30880 * ae) +
                          (C30706 + C30876 * C30527) * ae) /
                         C30500;
    const double C2580 =
        2 * ((-(C30707 * ce) / C30371) / C30500 - (ae * C30705) / C30533 -
             (C30524 * C30874) / C30533) -
        (ae * (C30524 * C30883 + C30705 + C30880 * ce)) / C30533 -
        ((C30707 + C30524 * C30884 + C30880 * ae) * ce) / C30533 +
        C30524 * ((-(ae * C30883) / C30371) / C30500 - C30874 / C30533 -
                  (C30884 * ce) / C30533 +
                  C30524 * ((-(C30877 * ce) / C30371) / C30500 -
                            (ae * C30875) / C30533 -
                            (C30524 * C30687 * C30529 * C30572) / C30533));
    const double C2576 =
        (-2 * (C30524 * C30705 + C30706 * ce)) / C30371 -
        (C30524 * (C30524 * C30883 + C30705 + C30880 * ce)) / C30371 -
        ((C30706 + C30876 * C30527) * ce) / C30371;
    const double C5948 =
        (2 * C30703 + C30687 * C30719 +
         C30524 * (C30524 * C30930 + C30929 * ae) + C30524 * C30929 * ae) /
        C30500;
    const double C5950 = (C30524 * (3 * C30719 + C30687 * C30930) +
                          (3 * C30718 + C30687 * C30929) * ae) /
                         C30500;
    const double C5807 = 4 * (2 * C30702 + C30687 * C30718) +
                         C30687 * (3 * C30718 + C30687 * C30929);
    const double C5945 = 2 * C30702 + C30687 * C30718 + C30929 * C30527;
    const double C5946 = C30524 * (3 * C30718 + C30687 * C30929);
    const double C7085 =
        2 * C30524 * C30929 + C30524 * (C30929 + C30955 * C30527);
    const double C6716 = (2 * (C30524 * C30719 + C30718 * ae) +
                          C30524 * (C30719 + C30524 * C31009 + C31005 * ae) +
                          (C30718 + C30923 * C30527) * ae) /
                         C30500;
    const double C6717 =
        (-2 * (C30524 * C30717 + C30718 * ce)) / C30371 -
        (C30524 * (C30524 * C31008 + C30717 + C31005 * ce)) / C30371 -
        ((C30718 + C30923 * C30527) * ce) / C30371;
    const double C30997 = C30865 + C30994;
    const double C31307 = C31296 / C30533;
    const double C27383 = C19183 * C6711;
    const double C30996 = C30993 + C30863;
    const double C31311 = C31300 / C30371;
    const double C31306 = C31294 / C30371;
    const double C31117 = C31113 + C31100;
    const double C10969 = 4 * (2 * C30744 + C30524 * C30764) +
                          C30524 * (3 * C30764 + C30524 * C31112);
    const double C31116 = C31110 + C31097;
    const double C31165 = -C31152;
    const double C170 = C156 + C157;
    const double C19232 = C19215 + C19216;
    const double C373 = C355 + C356;
    const double C19426 = C19409 + C19410;
    const double C375 = C359 + C360;
    const double C19762 = C19757 + C19758;
    const double C586 = C565 + C566;
    const double C19618 = C19599 + C19600;
    const double C19614 = C19591 + C19592;
    const double C588 = C569 + C570;
    const double C19226 = C19203 + C19204;
    const double C19902 = C19895 + C19896;
    const double C1045 = C1031 + C1032;
    const double C19420 = C19397 + C19398;
    const double C20120 = C20109 + C20110;
    const double C1529 = C1522 + C1523;
    const double C1700 = C1694 + C1695;
    const double C19425 = C19407 + C19408;
    const double C2327 = C2315 + C2316;
    const double C20116 = C20101 + C20102;
    const double C21552 = C21545 + C21546;
    const double C2452 = C31856 * C2146;
    const double C19584 = C19181 * C2146;
    const double C21688 = C19180 * C2146;
    const double C30806 = C30803 / C30500;
    const double C1535 = C1531 * C114;
    const double C6274 = C1531 * C824;
    const double C1702 = C1698 * C825;
    const double C3637 = C1698 * C3457;
    const double C6874 = C1698 * C1929;
    const double C7460 = C1698 * C506;
    const double C5826 = C5817 + C5818;
    const double C25906 = C25897 + C25898;
    const double C5987 = C5970 + C5971;
    const double C26086 = C26071 + C26072;
    const double C26082 = C26063 + C26064;
    const double C5989 = C5974 + C5975;
    const double C25900 = C25885 + C25886;
    const double C26552 = C26545 + C26546;
    const double C30775 = C30772 + C30766;
    const double C7097 = C31856 * C2573;
    const double C26056 = C19181 * C2573;
    const double C27386 = C19180 * C2573;
    const double C30995 = C30992 / C30500;
    const double C31115 = C31109 - C31093;
    const double C171 = C158 + C159;
    const double C19230 = C19211 + C19212;
    const double C2454 = C31856 * C2156;
    const double C19588 = C19181 * C2156;
    const double C21692 = C19180 * C2156;
    const double C2453 = C113 * C2147;
    const double C19587 = C19183 * C2147;
    const double C21691 = C19182 * C2147;
    const double C30774 = C30771 + C30763;
    const double C31101 = -C31090;
    const double C7099 = C31856 * C2579;
    const double C26060 = C19181 * C2579;
    const double C27390 = C19180 * C2579;
    const double C7098 = C113 * C2574;
    const double C26059 = C19183 * C2574;
    const double C27389 = C19182 * C2574;
    const double C30575 = -C30574;
    const double C30909 = -C30907;
    const double C30968 = C30967 / C30371;
    const double C31216 = C30524 * C31210;
    const double C31258 = C31244 / C30533;
    const double C31320 = C31310 / C30533;
    const double C30680 = C30529 * C30678;
    const double C30851 = C30687 * C30678;
    const double C30856 = C30524 * C30678;
    const double C1516 =
        (2 * C30687 * C30646 + C30687 * (C30646 + C30678 * C30697)) / C30500;
    const double C1682 = (C30524 * (C30646 + C30678 * C30697) +
                          (C30641 + C30671 * C30697) * ae) /
                         C30500;
    const double C1257 = (3 * (C30621 + C30642 * C30697) +
                          C30687 * (2 * C30711 + C30687 * C30735)) /
                         C30500;
    const double C1400 =
        (C30621 + C30642 * C30697 + C30524 * (C30524 * C30735 + C30734 * ae) +
         C30524 * C30734 * ae) /
        C30500;
    const double C1810 = (C30524 * (2 * C30711 + C30687 * C30735) +
                          (2 * C30710 + C30687 * C30734) * ae) /
                         C30500;
    const double C30840 = C30524 * C30836;
    const double C30896 = C30893 + C30894;
    const double C30959 = C30687 * C30956;
    const double C31070 = C30524 * C30956;
    const double C31029 = C30524 * C31025;
    const double C31056 = C31042 + C31053;
    const double C31065 = C31062 + C31063;
    const double C31232 = C30524 * C31228;
    const double C31277 = C30657 + C31270;
    const double C31184 = C31178 + C31163;
    const double C31338 = C30941 + C31331;
    const double C30679 = C30666 - C30676;
    const double C1258 =
        (-3 * (C30640 * C30697 + C30620)) / C30371 +
        C30687 * ((-2 * C30709) / C30371 - (C30687 * C30733) / C30371);
    const double C1401 = -(C30524 * (C30524 * C30733 + C30734 * ce) +
                           C30640 * C30697 + C30620 + C30524 * C30734 * ce) /
                         C30371;
    const double C1811 =
        C30524 * ((-2 * C30709) / C30371 - (C30687 * C30733) / C30371) -
        ((2 * C30710 + C30687 * C30734) * ce) / C30371;
    const double C30839 = C30524 * C30833;
    const double C30895 = C30890 + C30891;
    const double C30957 = C30950 - C30954;
    const double C31028 = C30524 * C31022;
    const double C31054 = C31051 / C30371;
    const double C31064 = C31059 + C31060;
    const double C31231 = C30524 * C31225;
    const double C31274 = C31267 + C30651;
    const double C31181 = C31175 + C31160;
    const double C31335 = C31328 + C30935;
    const double C30776 = C30773 - C30761;
    const double C30677 = C30653 + C30674;
    const double C2306 = C30687 * C30641 + C30850 * C30527;
    const double C30858 = C30854 / C30371;
    const double C30961 = C30937 + C30958;
    const double C31072 = C31068 / C30371;
    const double C6103 = 4 * (2 * C30706 + C30687 * C30726) +
                         C30687 * (3 * C30726 + C30687 * C31055);
    const double C6263 = C30524 * (3 * C30726 + C30687 * C31055);
    const double C6869 = 2 * C30706 + C30687 * C30726 + C31055 * C30527;
    const double C11225 = 4 * (2 * C30780 + C30524 * C30800) +
                          C30524 * (3 * C30800 + C30524 * C31276);
    const double C31190 = C31145 + C31183;
    const double C31189 = C31182 / C30371;
    const double C11327 = 4 * (2 * C30868 + C30524 * C30989) +
                          C30524 * (3 * C30989 + C30524 * C31337);
    const double C163 = C31856 * C133;
    const double C366 = C31856 * C327;
    const double C720 = C31856 * C329;
    const double C30841 = C30838 / C30500;
    const double C31230 = C31223 / C30500;
    const double C31279 = C31273 - C31257;
    const double C5824 = C31856 * C5810;
    const double C31030 = C31027 / C30500;
    const double C31334 = C31327 - C31309;
    const double C31187 = C31180 - C31156;
    const double C132 =
        4 * ((-2 * C30608) / C30371 - (C30529 * C30620) / C30371) +
        C30529 * ((-3 * C30620) / C30371 + C30529 * C30647);
    const double C326 =
        (-2 * C30608) / C30371 - (C30529 * C30620) / C30371 + C30647 * C30697;
    const double C328 = C30687 * ((-3 * C30620) / C30371 + C30529 * C30647);
    const double C533 = (-2 * C30608) / C30371 - (C30529 * C30620) / C30371 +
                        C30524 * (C30524 * C30647 - (C30641 * ce) / C30371) -
                        (C30524 * C30641 * ce) / C30371;
    const double C535 = C30524 * ((-3 * C30620) / C30371 + C30529 * C30647) -
                        ((3 * C30616 + C30529 * C30641) * ce) / C30371;
    const double C1016 =
        C30524 * C30687 * C30647 - (C30687 * C30641 * ce) / C30371;
    const double C5809 =
        4 * ((-2 * C30701) / C30371 - (C30687 * C30717) / C30371) +
        C30687 * ((-3 * C30717) / C30371 + C30687 * C30931);
    const double C5949 = (-2 * C30701) / C30371 - (C30687 * C30717) / C30371 +
                         C30524 * (C30524 * C30931 - (C30929 * ce) / C30371) -
                         (C30524 * C30929 * ce) / C30371;
    const double C5951 = C30524 * ((-3 * C30717) / C30371 + C30687 * C30931) -
                         ((3 * C30718 + C30687 * C30929) * ce) / C30371;
    const double C31917 = C31638 * C31628;
    const double C31956 = C31922 + C31638;
    const double C31925 = C31646 / C30388;
    const double C31921 = C31646 * C31628;
    const double C707 = C31998 - (C31638 * C31629) / C30371;
    const double C31935 = C31718 * C31712;
    const double C31971 = C31937 + C31718;
    const double C31939 = C31725 / C30388;
    const double C31936 = C31725 * C31712;
    const double C1509 = C32002 - (C31718 * C31714) / C30371;
    const double C30449 = C30444 - C30447;
    const double C30424 = C30420 * ce;
    const double C3456 = (-C30406) / C30388 - (C30420 * de) / C30371;
    const double C30433 = C30429 * de;
    const double C4038 = C581 * C30457;
    const double C8640 = C5984 * C30457;
    const double C2135 =
        (C30457 / C30388 + (0 * ce) / C30371) / C30388 - (0 * de) / C30371;
    const double C2439 = C30457 / C30388 - (0 * de) / C30371;
    const double C3747 = C30457 / C30388 + (0 * ce) / C30371;
    const double C31974 = C31941 / C30371;
    const double C31995 = C31977 / C30388;
    const double C31996 = C31978 + C31945;
    const double C2434 = C31945 - C31765 / C30375;
    const double C31976 = C31942 / C30371;
    const double C2456 = C167 * C2432;
    const double C2446 = C165 * C2432;
    const double C7091 = C5150 * C2432;
    const double C1950 = C1938 + C1939;
    const double C178 = C168 * C31677;
    const double C571 = C168 * C32001;
    const double C840 = C168 * C31933;
    const double C1945 = C168 * C1925;
    const double C3468 = C168 * C3454;
    const double C4047 = C168 * C31760;
    const double C381 = C369 * C31677;
    const double C1027 = C369 * C31933;
    const double C2312 = C369 * C1925;
    const double C2938 = C369 * C32001;
    const double C3628 = C369 * C3454;
    const double C4204 = C369 * C31760;
    const double C15952 = C369 * C2432;
    const double C5159 = C5152 * C31677;
    const double C5623 = C5152 * C31933;
    const double C5967 = C5152 * C32001;
    const double C6633 = C5152 * C1925;
    const double C7101 = C5152 * C2432;
    const double C8117 = C5152 * C3454;
    const double C8643 = C5152 * C31760;
    const double C593 = C580 * C31990;
    const double C834 = C580 * C31764;
    const double C1935 = C580 * C1926;
    const double C3462 = C580 * C31764;
    const double C4037 = C580 * C31767;
    const double C5633 = C5629 * C31764;
    const double C5961 = C5629 * C31990;
    const double C6629 = C5629 * C1926;
    const double C8115 = C5629 * C31764;
    const double C8639 = C5629 * C31767;
    const double C604 = C583 - C596;
    const double C853 = C849 - C837;
    const double C5827 = C5819 + C5820;
    const double C25904 = C25893 + C25894;
    const double C5988 = C5972 + C5973;
    const double C26088 = C26075 + C26076;
    const double C26084 = C26067 + C26068;
    const double C5990 = C5978 + C5979;
    const double C25902 = C25889 + C25890;
    const double C26554 = C26549 + C26550;
    const double C379 = C367 * C31677;
    const double C1033 = C367 * C31933;
    const double C2320 = C367 * C1925;
    const double C2944 = C367 * C32001;
    const double C3632 = C367 * C3454;
    const double C4210 = C367 * C31760;
    const double C384 = C372 * C31677;
    const double C1687 = C372 * C31933;
    const double C3636 = C372 * C3454;
    const double C6875 = C372 * C1925;
    const double C7461 = C372 * C32001;
    const double C8649 = C372 * C31760;
    const double C595 = C582 * C31966;
    const double C1937 = C582 * C31966;
    const double C4039 = C582 * C4029;
    const double C597 = C585 * C31990;
    const double C838 = C585 * C31764;
    const double C1941 = C585 * C1926;
    const double C3466 = C585 * C31764;
    const double C4043 = C585 * C31767;
    const double C1051 = C1044 * C31764;
    const double C2314 = C1044 * C1926;
    const double C2940 = C1044 * C31990;
    const double C3630 = C1044 * C31764;
    const double C4206 = C1044 * C31767;
    const double C5160 = C5153 * C31677;
    const double C5976 = C5153 * C32001;
    const double C6270 = C5153 * C31933;
    const double C6639 = C5153 * C1925;
    const double C8121 = C5153 * C3454;
    const double C9424 = C5153 * C31760;
    const double C5994 = C5985 * C31966;
    const double C6631 = C5985 * C31966;
    const double C8641 = C5985 * C4029;
    const double C5635 = C5631 * C31764;
    const double C5969 = C5631 * C31990;
    const double C6635 = C5631 * C1926;
    const double C8119 = C5631 * C31764;
    const double C8645 = C5631 * C31767;
    const double C30559 = C30558 / C30500;
    const double C1530 = C1524 + C1525;
    const double C20636 = C20629 + C20630;
    const double C6114 = C6109 + C6110;
    const double C2328 = C2317 + C2318;
    const double C20118 = C20105 + C20106;
    const double C21554 = C21549 + C21550;
    const double C1699 = C1690 + C1691;
    const double C19418 = C19393 + C19394;
    const double C20844 = C20839 + C20840;
    const double C30901 = C30900 / C30500;
    const double C576 = C31856 * C532;
    const double C19894 = C19181 * C532;
    const double C846 = C31856 * C534;
    const double C19214 = C19181 * C534;
    const double C1040 = C31856 * C1015;
    const double C19756 = C19181 * C1015;
    const double C162 = C113 * C120;
    const double C365 = C113 * C309;
    const double C719 = C113 * C310;
    const double C575 = C113 * C515;
    const double C19893 = C19183 * C515;
    const double C845 = C113 * C516;
    const double C19213 = C19183 * C516;
    const double C1039 = C113 * C1007;
    const double C19755 = C19183 * C1007;
    const double C2329 = C2323 + C2324;
    const double C20119 = C20107 + C20108;
    const double C2462 = C31856 * C2150;
    const double C19598 = C19181 * C2150;
    const double C2463 = C113 * C2151;
    const double C19601 = C19183 * C2151;
    const double C6883 = C6880 + C6881;
    const double C20843 = C20837 + C20838;
    const double C6283 = C6278 + C6279;
    const double C20635 = C20627 + C20628;
    const double C6115 = C6111 + C6112;
    const double C6882 = C6878 + C6879;
    const double C20841 = C20833 + C20834;
    const double C6282 = C6276 + C6277;
    const double C20637 = C20631 + C20632;
    const double C30811 = C30808 + C30802;
    const double C30810 = C30807 + C30799;
    const double C31265 = -C31254;
    const double C15958 = C31856 * C2575;
    const double C21544 = C19181 * C2575;
    const double C15960 = C31856 * C2580;
    const double C21548 = C19181 * C2580;
    const double C15959 = C113 * C2576;
    const double C21547 = C19183 * C2576;
    const double C5981 = C31856 * C5948;
    const double C26544 = C19181 * C5948;
    const double C6396 = C31856 * C5950;
    const double C25896 = C19181 * C5950;
    const double C5823 = C113 * C5807;
    const double C5980 = C113 * C5945;
    const double C26543 = C19183 * C5945;
    const double C6395 = C113 * C5946;
    const double C25895 = C19183 * C5946;
    const double C7107 = C31856 * C6716;
    const double C26070 = C19181 * C6716;
    const double C7108 = C113 * C6717;
    const double C26073 = C19183 * C6717;
    const double C31000 = C30997 + C30991;
    const double C30999 = C30996 + C30988;
    const double C31318 = -C31306;
    const double C31121 = C30524 * C31117;
    const double C31146 = 3 * C31117;
    const double C31132 = C31117 * ce;
    const double C31120 = C30524 * C31116;
    const double C31138 = -3 * C31116;
    const double C31131 = ae * C31116;
    const double C31173 = C31165 / C30500;
    const double C180 = C170 * C114;
    const double C843 = C170 * C824;
    const double C385 = C373 * C114;
    const double C1692 = C373 * C824;
    const double C387 = C375 * C114;
    const double C1037 = C375 * C824;
    const double C598 = C586 * C507;
    const double C1942 = C586 * C1930;
    const double C4044 = C586 * C30457;
    const double C600 = C588 * C506;
    const double C839 = C588 * C825;
    const double C1944 = C588 * C1929;
    const double C3467 = C588 * C3457;
    const double C1052 = C1045 * C825;
    const double C2319 = C1045 * C1929;
    const double C2943 = C1045 * C506;
    const double C3631 = C1045 * C3457;
    const double C1533 = C1529 * C114;
    const double C1704 = C1700 * C825;
    const double C3641 = C1700 * C3457;
    const double C2331 = C2327 * C1930;
    const double C2941 = C2327 * C507;
    const double C4207 = C2327 * C30457;
    const double C2465 = C2451 + C2452;
    const double C19610 = C19583 + C19584;
    const double C21694 = C21687 + C21688;
    const double C30809 = C30806 - C30796;
    const double C5830 = C5826 * C114;
    const double C6393 = C5826 * C824;
    const double C5996 = C5987 * C507;
    const double C6636 = C5987 * C1930;
    const double C8646 = C5987 * C30457;
    const double C5998 = C5989 * C506;
    const double C6269 = C5989 * C825;
    const double C6638 = C5989 * C1929;
    const double C8120 = C5989 * C3457;
    const double C2144 =
        (3 * (C30600 + C30524 * C30748 + C30744 * ae) +
         C30524 * (2 * C30748 + C30524 * C30775 + C30764 * ae) +
         (2 * C30744 + C30524 * C30764) * ae) /
        C30500;
    const double C7110 = C7096 + C7097;
    const double C26078 = C26055 + C26056;
    const double C27392 = C27385 + C27386;
    const double C30998 = C30995 - C30985;
    const double C31119 = C31115 - C31094;
    const double C181 = C171 * C31677;
    const double C844 = C171 * C31933;
    const double C3472 = C171 * C3454;
    const double C2466 = C2453 + C2454;
    const double C19612 = C19587 + C19588;
    const double C21696 = C21691 + C21692;
    const double C2145 =
        (-3 * (C30524 * C30747 + C30599 + C30744 * ce)) / C30371 +
        C30524 * ((-2 * C30747) / C30371 - (C30524 * C30774) / C30371 -
                  (C30764 * ce) / C30371) -
        ((2 * C30744 + C30524 * C30764) * ce) / C30371;
    const double C31108 = C31101 / C30500;
    const double C7111 = C7098 + C7099;
    const double C26080 = C26059 + C26060;
    const double C27394 = C27389 + C27390;
    const double C30576 = C30575 / C30500;
    const double C30910 = C30909 / C30500;
    const double C30969 = -C30968;
    const double C31224 = C31216 / C30533;
    const double C30682 = C30656 + C30680;
    const double C2307 =
        (C30687 * C30646 + C30524 * (C30524 * C30851 + C30850 * ae) +
         C30524 * C30850 * ae) /
        C30500;
    const double C30859 = C30856 + C30857;
    const double C30843 = C30642 + C30840;
    const double C2577 = (2 * (C30524 * C30711 + C30710 * ae) +
                          C30524 * (C30711 + C30524 * C30896 + C30892 * ae) +
                          (C30710 + C30888 * C30527) * ae) /
                         C30500;
    const double C30962 = C30940 + C30959;
    const double C31073 = C31070 + C31071;
    const double C31032 = C30924 + C31029;
    const double C6104 = (4 * (2 * C30707 + C30687 * C30727) +
                          C30687 * (3 * C30727 + C30687 * C31056)) /
                         C30500;
    const double C6264 = (C30524 * (3 * C30727 + C30687 * C31056) +
                          (3 * C30726 + C30687 * C31055) * ae) /
                         C30500;
    const double C6870 =
        (2 * C30707 + C30687 * C30727 +
         C30524 * (C30524 * C31056 + C31055 * ae) + C30524 * C31055 * ae) /
        C30500;
    const double C6984 = (2 * (C30524 * C30727 + C30726 * ae) +
                          C30524 * (C30727 + C30524 * C31065 + C31061 * ae) +
                          (C30726 + C31049 * C30527) * ae) /
                         C30500;
    const double C31235 = C30877 + C31232;
    const double C31281 = C31277 + C31264;
    const double C31191 = C30524 * C31184;
    const double C31342 = C31338 + C31325;
    const double C30681 = C30529 * C30679;
    const double C30849 = C30687 * C30679;
    const double C30853 = C30524 * C30679;
    const double C1517 =
        2 * C30687 * C30647 + C30687 * (C30647 + C30679 * C30697);
    const double C1683 = C30524 * (C30647 + C30679 * C30697) -
                         ((C30641 + C30671 * C30697) * ce) / C30371;
    const double C30842 = C30839 + C30640;
    const double C2578 =
        (-2 * (C30524 * C30709 + C30710 * ce)) / C30371 -
        (C30524 * (C30524 * C30895 + C30709 + C30892 * ce)) / C30371 -
        ((C30710 + C30888 * C30527) * ce) / C30371;
    const double C30960 = C30687 * C30957;
    const double C31067 = C30524 * C30957;
    const double C31031 = C31028 + C30922;
    const double C31057 = C31044 - C31054;
    const double C6985 =
        (-2 * (C30524 * C30725 + C30726 * ce)) / C30371 -
        (C30524 * (C30524 * C31064 + C30725 + C31061 * ce)) / C30371 -
        ((C30726 + C31049 * C30527) * ce) / C30371;
    const double C31234 = C31231 + C30875;
    const double C31280 = C31274 + C31261;
    const double C31188 = C30524 * C31181;
    const double C31341 = C31335 + C31322;
    const double C2155 =
        3 * ((-(ae * C30747) / C30371) / C30500 - C30537 / C30533 -
             (C30748 * ce) / C30533 + C30524 * C30776) +
        (((-2 * C30747) / C30371 - (C30524 * C30774) / C30371 -
          (C30764 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30748 + C30524 * C30775 + C30764 * ae) * ce) / C30533 +
        C30524 * (2 * C30776 - (ae * C30774) / C30533 - (C30775 * ce) / C30533 +
                  C30524 * ((-(ae * C30762) / C30371) / C30500 - C30551 -
                            (C30765 * ce) / C30533 +
                            C30524 * ((-(C30617 * ce) / C30371) / C30500 -
                                      (ae * C30615) / C30533 -
                                      (C30524 * C30555) / C30533)));
    const double C121 = 5 * (3 * C30616 + C30529 * C30641) +
                        C30529 * (4 * C30641 + C30529 * C30677);
    const double C311 = 3 * C30616 + C30529 * C30641 + C30677 * C30697;
    const double C517 = 3 * C30616 + C30529 * C30641 + C30677 * C30527;
    const double C711 = C30687 * (4 * C30641 + C30529 * C30677);
    const double C826 = C30524 * (4 * C30641 + C30529 * C30677);
    const double C1008 = C30524 * C30687 * C30677;
    const double C5808 = 5 * (3 * C30718 + C30687 * C30929) +
                         C30687 * (4 * C30929 + C30687 * C30961);
    const double C5947 = 3 * C30718 + C30687 * C30929 + C30961 * C30527;
    const double C6387 = C30524 * (4 * C30929 + C30687 * C30961);
    const double C10970 = 5 * (3 * C30764 + C30524 * C31112) +
                          C30524 * (4 * C31112 + C30524 * C31190);
    const double C30844 = C30841 - C30832;
    const double C31233 = C31230 - C31215;
    const double C31283 = C31279 - C31258;
    const double C31033 = C31030 - C31021;
    const double C31340 = C31334 - C31320;
    const double C31192 = C30524 * C31187;
    const double C160 = C113 * C132;
    const double C363 = C113 * C326;
    const double C717 = C113 * C328;
    const double C577 = C113 * C533;
    const double C19897 = C19183 * C533;
    const double C847 = C113 * C535;
    const double C19209 = C19183 * C535;
    const double C1041 = C113 * C1016;
    const double C19751 = C19183 * C1016;
    const double C5821 = C113 * C5809;
    const double C5982 = C113 * C5949;
    const double C26547 = C19183 * C5949;
    const double C6397 = C113 * C5951;
    const double C25891 = C19183 * C5951;
    const double C31952 = C31917 / C30371;
    const double C31985 = C31956 / C30388;
    const double C31986 = C31958 + C31925;
    const double C709 = C31925 - C31644 / C30375;
    const double C31955 = C31921 / C30371;
    const double C31968 = C31935 / C30371;
    const double C31992 = C31971 / C30388;
    const double C31993 = C31972 + C31939;
    const double C1511 = C31939 - C31723 / C30375;
    const double C31970 = C31936 / C30371;
    const double C30428 = C30424 / C30371;
    const double C3471 = C170 * C3456;
    const double C3469 = C169 * C3456;
    const double C3463 = C166 * C3456;
    const double C3459 = C164 * C3456;
    const double C3639 = C373 * C3456;
    const double C3635 = C371 * C3456;
    const double C3633 = C368 * C3456;
    const double C3629 = C370 * C3456;
    const double C3912 = C375 * C3456;
    const double C8125 = C1531 * C3456;
    const double C8122 = C5154 * C3456;
    const double C8116 = C5151 * C3456;
    const double C8112 = C5149 * C3456;
    const double C8899 = C5826 * C3456;
    const double C30439 = C30433 / C30371;
    const double C32008 = C31974 + C32004;
    const double C2433 = C31995 - (C31767 * C31756) / C30371;
    const double C3754 = C582 * C31996;
    const double C9009 = C5985 * C31996;
    const double C2129 = C31996 / C30388 - C31765 / C31959;
    const double C2450 = C582 * C2434;
    const double C7095 = C5985 * C2434;
    const double C32005 = C31976 + C31995;
    const double C1951 = C1950 - C1940;
    const double C185 = C178 + C179;
    const double C850 = C840 + C841;
    const double C13797 = C381 + C382;
    const double C13796 = C382 + C381;
    const double C14403 = C1027 + C1028;
    const double C14402 = C1028 + C1027;
    const double C15812 = C2312 + C2313;
    const double C15811 = C2313 + C2312;
    const double C16550 = C2938 + C2939;
    const double C16549 = C2939 + C2938;
    const double C5162 = C5158 + C5159;
    const double C6268 = C5622 + C5623;
    const double C5986 = C5966 + C5967;
    const double C6644 = C6632 + C6633;
    const double C5831 = C5827 * C31677;
    const double C6394 = C5827 * C31933;
    const double C8900 = C5827 * C3454;
    const double C5997 = C5988 * C31966;
    const double C6637 = C5988 * C31966;
    const double C7105 = C5988 * C2434;
    const double C8647 = C5988 * C4029;
    const double C9017 = C5988 * C31996;
    const double C5999 = C5990 * C31990;
    const double C6272 = C5990 * C31764;
    const double C6641 = C5990 * C1926;
    const double C8123 = C5990 * C31764;
    const double C9426 = C5990 * C31767;
    const double C391 = C379 + C380;
    const double C13799 = C380 + C379;
    const double C1046 = C1033 + C1034;
    const double C14404 = C1034 + C1033;
    const double C5147 = C384 + C383;
    const double C13798 = C383 + C384;
    const double C6273 = C1687 + C1686;
    const double C15110 = C1686 + C1687;
    const double C605 = C604 - C597;
    const double C857 = C853 - C838;
    const double C5816 = C5160 + C5161;
    const double C6392 = C6270 + C6271;
    const double C30560 = C30559 - C30551;
    const double C1534 = C1530 * C31677;
    const double C6275 = C1530 * C31933;
    const double C8126 = C1530 * C3454;
    const double C6116 = C6114 * C31677;
    const double C2332 = C2328 * C31966;
    const double C2942 = C2328 * C31966;
    const double C4208 = C2328 * C4029;
    const double C15956 = C2328 * C2434;
    const double C17561 = C2328 * C31996;
    const double C1703 = C1699 * C31764;
    const double C3638 = C1699 * C31764;
    const double C6877 = C1699 * C1926;
    const double C7463 = C1699 * C31990;
    const double C8651 = C1699 * C31767;
    const double C30902 = C30901 - C30551;
    const double C173 = C162 + C163;
    const double C378 = C365 + C366;
    const double C722 = C719 + C720;
    const double C590 = C575 + C576;
    const double C19901 = C19893 + C19894;
    const double C851 = C845 + C846;
    const double C19231 = C19213 + C19214;
    const double C1048 = C1039 + C1040;
    const double C19761 = C19755 + C19756;
    const double C2333 = C2329 * C1930;
    const double C2947 = C2329 * C507;
    const double C4213 = C2329 * C30457;
    const double C2467 = C2461 + C2462;
    const double C19617 = C19597 + C19598;
    const double C6885 = C6883 * C31966;
    const double C7465 = C6883 * C31966;
    const double C8653 = C6883 * C4029;
    const double C6287 = C6283 * C31764;
    const double C8128 = C6283 * C31764;
    const double C6117 = C6115 * C114;
    const double C6884 = C6882 * C1930;
    const double C7464 = C6882 * C507;
    const double C8652 = C6882 * C30457;
    const double C6286 = C6282 * C825;
    const double C8127 = C6282 * C3457;
    const double C2148 =
        (3 * (C30609 + C30524 * C30784 + C30780 * ae) +
         C30524 * (2 * C30784 + C30524 * C30811 + C30800 * ae) +
         (2 * C30780 + C30524 * C30800) * ae) /
        C30500;
    const double C2149 =
        (-3 * (C30524 * C30783 + C30608 + C30780 * ce)) / C30371 +
        C30524 * ((-2 * C30783) / C30371 - (C30524 * C30810) / C30371 -
                  (C30800 * ce) / C30371) -
        ((2 * C30780 + C30524 * C30800) * ce) / C30371;
    const double C31272 = C31265 / C30500;
    const double C15961 = C15957 + C15958;
    const double C21551 = C21543 + C21544;
    const double C15962 = C15959 + C15960;
    const double C21553 = C21547 + C21548;
    const double C5829 = C5823 + C5824;
    const double C5991 = C5980 + C5981;
    const double C26551 = C26543 + C26544;
    const double C6400 = C6395 + C6396;
    const double C25905 = C25895 + C25896;
    const double C7112 = C7106 + C7107;
    const double C26085 = C26069 + C26070;
    const double C6714 =
        (3 * (C30703 + C30524 * C30872 + C30868 * ae) +
         C30524 * (2 * C30872 + C30524 * C31000 + C30989 * ae) +
         (2 * C30868 + C30524 * C30989) * ae) /
        C30500;
    const double C6715 =
        (-3 * (C30524 * C30871 + C30701 + C30868 * ce)) / C30371 +
        C30524 * ((-2 * C30871) / C30371 - (C30524 * C30999) / C30371 -
                  (C30989 * ce) / C30371) -
        ((2 * C30868 + C30524 * C30989) * ce) / C30371;
    const double C31326 = C31318 / C30500;
    const double C31124 = C31087 + C31121;
    const double C31151 = C31132 / C30533;
    const double C31123 = C31120 / C30371;
    const double C31157 = C31138 / C30371;
    const double C31150 = C31131 / C30533;
    const double C31179 = C31173 - C30566;
    const double C2469 = C2465 * C2439;
    const double C3755 = C2465 * C3747;
    const double C30812 = C30809 - C30797;
    const double C7114 = C7110 * C2439;
    const double C9010 = C7110 * C3747;
    const double C31001 = C30998 - C30986;
    const double C31122 = C30524 * C31119;
    const double C31130 = 2 * C31119;
    const double C186 = C180 + C181;
    const double C2470 = C2466 * C31979;
    const double C3756 = C2466 * C31979;
    const double C31114 = C31108 - C30551;
    const double C7115 = C7111 * C31979;
    const double C9011 = C7111 * C31979;
    const double C30577 = C30576 - C30566;
    const double C30911 = C30910 - C30566;
    const double C30970 = C30969 / C30500;
    const double C134 = (5 * (3 * C30621 + C30529 * C30646) +
                         C30529 * (4 * C30646 + C30529 * C30682)) /
                        C30500;
    const double C330 =
        (3 * C30621 + C30529 * C30646 + C30682 * C30697) / C30500;
    const double C536 =
        (3 * C30621 + C30529 * C30646 +
         C30524 * (C30524 * C30682 + C30677 * ae) + C30524 * C30677 * ae) /
        C30500;
    const double C712 = (C30687 * (4 * C30646 + C30529 * C30682)) / C30500;
    const double C827 = (C30524 * (4 * C30646 + C30529 * C30682) +
                         (4 * C30641 + C30529 * C30677) * ae) /
                        C30500;
    const double C1017 =
        (C30524 * C30687 * C30682 + C30687 * C30677 * ae) / C30500;
    const double C2441 = (2 * (C30524 * C30646 + C30641 * ae) +
                          C30524 * (C30646 + C30524 * C30859 + C30855 * ae) +
                          (C30641 + C30671 * C30527) * ae) /
                         C30500;
    const double C30846 = C30843 + C30837;
    const double C5811 = (5 * (3 * C30719 + C30687 * C30930) +
                          C30687 * (4 * C30930 + C30687 * C30962)) /
                         C30500;
    const double C5952 =
        (3 * C30719 + C30687 * C30930 +
         C30524 * (C30524 * C30962 + C30961 * ae) + C30524 * C30961 * ae) /
        C30500;
    const double C6388 = (C30524 * (4 * C30930 + C30687 * C30962) +
                          (4 * C30929 + C30687 * C30961) * ae) /
                         C30500;
    const double C7086 = (2 * (C30524 * C30930 + C30929 * ae) +
                          C30524 * (C30930 + C30524 * C31073 + C31069 * ae) +
                          (C30929 + C30955 * C30527) * ae) /
                         C30500;
    const double C31035 = C31032 + C31026;
    const double C31238 = C31235 + C31229;
    const double C31285 = C30524 * C31281;
    const double C31194 = C31147 + C31191;
    const double C31345 = C30524 * C31342;
    const double C30683 = C30659 + C30681;
    const double C2308 = C30687 * C30647 +
                         C30524 * (C30524 * C30849 - (C30850 * ce) / C30371) -
                         (C30524 * C30850 * ce) / C30371;
    const double C30860 = C30853 - C30858;
    const double C30845 = C30842 + C30834;
    const double C30963 = C30943 + C30960;
    const double C31074 = C31067 - C31072;
    const double C31034 = C31031 + C31023;
    const double C6105 =
        4 * ((-2 * C30705) / C30371 - (C30687 * C30725) / C30371) +
        C30687 * ((-3 * C30725) / C30371 + C30687 * C31057);
    const double C6265 = C30524 * ((-3 * C30725) / C30371 + C30687 * C31057) -
                         ((3 * C30726 + C30687 * C31055) * ce) / C30371;
    const double C6871 = (-2 * C30705) / C30371 - (C30687 * C30725) / C30371 +
                         C30524 * (C30524 * C31057 - (C31055 * ce) / C30371) -
                         (C30524 * C31055 * ce) / C30371;
    const double C31237 = C31234 + C31226;
    const double C31284 = C30524 * C31280;
    const double C31193 = C31188 / C30371;
    const double C31344 = C30524 * C31341;
    const double C31236 = C31233 - C31224;
    const double C31286 = C30524 * C31283;
    const double C31343 = C30524 * C31340;
    const double C32006 = C31952 + C31998;
    const double C708 = C31985 - (C31646 * C31629) / C30371;
    const double C111 = C31986 / C30388 - C31644 / C31959;
    const double C31999 = C31955 + C31985;
    const double C32007 = C31968 + C32002;
    const double C1510 = C31992 - (C31725 * C31714) / C30371;
    const double C1238 = C31993 / C30388 - C31723 / C31959;
    const double C32003 = C31970 + C31992;
    const double C30432 = C30428 - C30409;
    const double C3476 = C3468 + C3469;
    const double C3475 = C3463 + C3464;
    const double C8124 = C3636 + C3635;
    const double C17419 = C3635 + C3636;
    const double C3911 = C3632 + C3633;
    const double C17758 = C3633 + C3632;
    const double C17418 = C3628 + C3629;
    const double C17417 = C3629 + C3628;
    const double C8898 = C8121 + C8122;
    const double C8129 = C8116 + C8117;
    const double C3758 = C167 * C32008;
    const double C3750 = C165 * C32008;
    const double C9013 = C5152 * C32008;
    const double C9005 = C5150 * C32008;
    const double C17557 = C369 * C32008;
    const double C2126 =
        (C32001 + 2 * C31760) / C30388 - (C32008 * C31756) / C30371;
    const double C2458 = C585 * C2433;
    const double C2448 = C580 * C2433;
    const double C7103 = C5631 * C2433;
    const double C7093 = C5629 * C2433;
    const double C15954 = C1044 * C2433;
    const double C3760 = C585 * C32005;
    const double C3752 = C580 * C32005;
    const double C9015 = C5631 * C32005;
    const double C9007 = C5629 * C32005;
    const double C17559 = C1044 * C32005;
    const double C2127 =
        (C31990 + 2 * C31767 + C32008) / C30388 - (C32005 * C31756) / C30371;
    const double C2128 = (C31966 + C31764 / C30371 + C32005) / C30388 -
                         (C31996 * C31756) / C30371;
    const double C1952 = C1951 - C1941;
    const double C854 = C839 - C850;
    const double C14406 = C1050 - C14403;
    const double C14405 = C14402 - C1050;
    const double C15814 = C2311 - C15812;
    const double C15813 = C15811 - C2311;
    const double C16552 = C2937 - C16550;
    const double C16551 = C16549 - C2937;
    const double C5163 = C5162 * C31615;
    const double C6280 = C6268 - C5634;
    const double C5995 = C5986 - C5968;
    const double C6645 = C6644 - C6634;
    const double C5834 = C5830 + C5831;
    const double C1056 = C1052 - C1046;
    const double C14407 = C14404 - C1052;
    const double C5155 = C5147 * C31615;
    const double C6281 = C1702 - C6273;
    const double C15111 = C15110 - C1702;
    const double C606 = C605 + C598;
    const double C5825 = C5816 * C31615;
    const double C6399 = C6269 - C6392;
    const double C141 =
        4 * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560) +
        C30529 *
            (3 * C30560 +
             C30529 * ((-2 * C30529 * C30555) / C30533 +
                       C30529 * ((-((C30549 * C30550 +
                                     C30527 * bs[7] * std::pow(C30523, 7)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30555 / C30533)));
    const double C337 = (-(C30546 * C30542) / C30371) / C30500 -
                        C30537 / C30533 + C30560 * std::pow(yP - yQ, 2);
    const double C338 =
        (yP - yQ) * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560);
    const double C543 = (-(C30546 * C30542) / C30371) / C30500 -
                        C30537 / C30533 -
                        (ae * (C30524 * C30620 + C30616 * ce)) / C30533 -
                        ((C30524 * C30621 + C30616 * ae) * ce) / C30533 +
                        C30524 * ((-(C30621 * ce) / C30371) / C30500 -
                                  (ae * C30620) / C30533 + C30524 * C30560);
    const double C544 =
        (((-2 * C30608) / C30371 - (C30529 * C30620) / C30371) * ae) / C30500 -
        ((2 * C30609 + C30529 * C30621) * ce) / C30533 +
        C30524 * ((-2 * C30529 * C30546) / C30533 + C30529 * C30560);
    const double C1021 = (-(C30687 * C30621 * ce) / C30371) / C30500 -
                         (ae * C30687 * C30620) / C30533 +
                         C30524 * C30687 * C30560;
    const double C6108 = C1535 + C1534;
    const double C14915 = C1534 + C1535;
    const double C5813 =
        4 * ((-2 * C30862) / C30533 + C30687 * C30902) +
        C30687 * (3 * C30902 +
                  C30687 * ((-2 * C30687 * C30555) / C30533 +
                            C30687 * ((-(C30572 * C30697) / C30371) / C30500 -
                                      C30566)));
    const double C183 = C173 * C114;
    const double C390 = C378 * C114;
    const double C724 = C722 * C114;
    const double C602 = C590 * C507;
    const double C1948 = C590 * C1930;
    const double C4050 = C590 * C30457;
    const double C855 = C851 * C825;
    const double C3473 = C851 * C3457;
    const double C1054 = C1048 * C825;
    const double C3914 = C1048 * C3457;
    const double C2471 = C2467 * C2439;
    const double C3763 = C2467 * C3747;
    const double C21686 = C19181 * C2148;
    const double C21689 = C19183 * C2149;
    const double C31278 = C31272 - C30966;
    const double C15963 = C15961 * C2439;
    const double C17562 = C15961 * C3747;
    const double C15964 = C15962 * C31979;
    const double C17563 = C15962 * C31979;
    const double C5833 = C5829 * C114;
    const double C6000 = C5991 * C507;
    const double C6642 = C5991 * C1930;
    const double C9427 = C5991 * C30457;
    const double C6403 = C6400 * C825;
    const double C8901 = C6400 * C3457;
    const double C7116 = C7112 * C2439;
    const double C9018 = C7112 * C3747;
    const double C27384 = C19181 * C6714;
    const double C27387 = C19183 * C6715;
    const double C31333 = C31326 - C31295;
    const double C31127 = C31124 + C31107;
    const double C31126 = C31095 - C31123;
    const double C31186 = C31179 - C31153;
    const double C2157 =
        3 * ((-(ae * C30783) / C30371) / C30500 - C30694 / C30533 -
             (C30784 * ce) / C30533 + C30524 * C30812) +
        (((-2 * C30783) / C30371 - (C30524 * C30810) / C30371 -
          (C30800 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30784 + C30524 * C30811 + C30800 * ae) * ce) / C30533 +
        C30524 * (2 * C30812 - (ae * C30810) / C30533 - (C30811 * ce) / C30533 +
                  C30524 * ((-(ae * C30798) / C30371) / C30500 -
                            C30562 / C30533 - (C30801 * ce) / C30533 +
                            C30524 * ((-(C30657 * ce) / C30371) / C30500 -
                                      (ae * C30651) / C30533 -
                                      (C30524 * C30529 * C30572) / C30533)));
    const double C6720 =
        3 * ((-(ae * C30871) / C30371) / C30500 - C30862 / C30533 -
             (C30872 * ce) / C30533 + C30524 * C31001) +
        (((-2 * C30871) / C30371 - (C30524 * C30999) / C30371 -
          (C30989 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30872 + C30524 * C31000 + C30989 * ae) * ce) / C30533 +
        C30524 * (2 * C31001 - (ae * C30999) / C30533 - (C31000 * ce) / C30533 +
                  C30524 * ((-(ae * C30987) / C30371) / C30500 -
                            C30904 / C30533 - (C30990 * ce) / C30533 +
                            C30524 * ((-(C30941 * ce) / C30371) / C30500 -
                                      (ae * C30935) / C30533 -
                                      (C30524 * C30687 * C30572) / C30533)));
    const double C31164 = C31130 - C31150;
    const double C31118 = C31114 - C31091;
    const double C30578 = C30529 * C30577;
    const double C30824 = C30524 * C30577;
    const double C30886 = C30687 * C30577;
    const double C1259 =
        2 * C30687 * C30560 + C30687 * (C30560 + C30577 * std::pow(C30687, 2));
    const double C1264 =
        3 * (C30560 + C30577 * C30697) +
        C30687 *
            (2 * C30687 * C30577 +
             C30687 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30697));
    const double C1404 =
        C30687 * C30560 - (ae * (C30524 * C30709 + C30710 * ce)) / C30533 -
        ((C30524 * C30711 + C30710 * ae) * ce) / C30533 +
        C30524 * ((-(C30711 * ce) / C30371) / C30500 - (ae * C30709) / C30533 +
                  C30524 * C30687 * C30577);
    const double C1409 =
        (-((C30621 + C30642 * C30697) * ce) / C30371) / C30500 -
        (ae * (C30640 * C30697 + C30620)) / C30533 +
        C30524 * (C30560 + C30577 * C30697);
    const double C1410 =
        C30560 + C30577 * C30697 -
        (ae * (C30524 * C30733 + C30734 * ce)) / C30533 -
        ((C30524 * C30735 + C30734 * ae) * ce) / C30533 +
        C30524 *
            ((-(C30735 * ce) / C30371) / C30500 - (ae * C30733) / C30533 +
             C30524 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30697));
    const double C1814 =
        (((-2 * C30709) / C30371 - (C30687 * C30733) / C30371) * ae) / C30500 -
        ((2 * C30711 + C30687 * C30735) * ce) / C30533 +
        C30524 *
            (2 * C30687 * C30577 +
             C30687 *
                 (C30577 +
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533) *
                      C30697));
    const double C2158 =
        2 * ((-(C30621 * ce) / C30371) / C30500 - (ae * C30620) / C30533 +
             C30524 * C30560) -
        (ae * (C30524 * C30819 + C30620 + C30816 * ce)) / C30533 -
        ((C30621 + C30524 * C30820 + C30816 * ae) * ce) / C30533 +
        C30524 * (C30560 - (ae * C30819) / C30533 - (C30820 * ce) / C30533 +
                  C30524 * ((-(C30642 * ce) / C30371) / C30500 -
                            (ae * C30640) / C30533 + C30524 * C30577));
    const double C30912 = C30687 * C30911;
    const double C31013 = C30524 * C30911;
    const double C6721 =
        2 * ((-(C30719 * ce) / C30371) / C30500 - (ae * C30717) / C30533 +
             C30524 * C30902) -
        (ae * (C30524 * C31008 + C30717 + C31005 * ce)) / C30533 -
        ((C30719 + C30524 * C31009 + C31005 * ae) * ce) / C30533 +
        C30524 * (C30902 - (ae * C31008) / C30533 - (C31009 * ce) / C30533 +
                  C30524 * ((-(C30924 * ce) / C30371) / C30500 -
                            (ae * C30922) / C30533 + C30524 * C30911));
    const double C30971 = C30970 - C30966;
    const double C2152 =
        (3 * (C30621 + C30524 * C30820 + C30816 * ae) +
         C30524 * (2 * C30820 + C30524 * C30846 + C30835 * ae) +
         (2 * C30816 + C30524 * C30835) * ae) /
        C30500;
    const double C6718 =
        (3 * (C30719 + C30524 * C31009 + C31005 * ae) +
         C30524 * (2 * C31009 + C30524 * C31035 + C31024 * ae) +
         (2 * C31005 + C30524 * C31024) * ae) /
        C30500;
    const double C11124 =
        (3 * (C30707 + C30524 * C30884 + C30880 * ae) +
         C30524 * (2 * C30884 + C30524 * C31238 + C31227 * ae) +
         (2 * C30880 + C30524 * C31227) * ae) /
        C30500;
    const double C31288 = C31251 + C31285;
    const double C31197 = C31194 + C31171;
    const double C31348 = C31304 + C31345;
    const double C1023 =
        (C30687 * C30683 * ae) / C30500 - (C30687 * C30682 * ce) / C30533 +
        C30524 * C30687 *
            (3 * C30577 +
             C30529 * ((-2 * C30529 * C30572) / C30533 +
                       C30529 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533)));
    const double C135 = 5 * ((-3 * C30620) / C30371 + C30529 * C30647) +
                        C30529 * (4 * C30647 + C30529 * C30683);
    const double C331 =
        (-3 * C30620) / C30371 + C30529 * C30647 + C30683 * C30697;
    const double C537 = (-3 * C30620) / C30371 + C30529 * C30647 +
                        C30524 * (C30524 * C30683 - (C30677 * ce) / C30371) -
                        (C30524 * C30677 * ce) / C30371;
    const double C713 = C30687 * (4 * C30647 + C30529 * C30683);
    const double C828 = C30524 * (4 * C30647 + C30529 * C30683) -
                        ((4 * C30641 + C30529 * C30677) * ce) / C30371;
    const double C1018 =
        C30524 * C30687 * C30683 - (C30687 * C30677 * ce) / C30371;
    const double C2442 =
        2 * (C30524 * C30647 - (C30641 * ce) / C30371) +
        C30524 * (C30647 + C30524 * C30860 - (C30855 * ce) / C30371) -
        ((C30641 + C30671 * C30527) * ce) / C30371;
    const double C2153 =
        (-3 * (C30524 * C30819 + C30620 + C30816 * ce)) / C30371 +
        C30524 * ((-2 * C30819) / C30371 - (C30524 * C30845) / C30371 -
                  (C30835 * ce) / C30371) -
        ((2 * C30816 + C30524 * C30835) * ce) / C30371;
    const double C5812 = 5 * ((-3 * C30717) / C30371 + C30687 * C30931) +
                         C30687 * (4 * C30931 + C30687 * C30963);
    const double C5953 = (-3 * C30717) / C30371 + C30687 * C30931 +
                         C30524 * (C30524 * C30963 - (C30961 * ce) / C30371) -
                         (C30524 * C30961 * ce) / C30371;
    const double C6389 = C30524 * (4 * C30931 + C30687 * C30963) -
                         ((4 * C30929 + C30687 * C30961) * ce) / C30371;
    const double C7087 =
        2 * (C30524 * C30931 - (C30929 * ce) / C30371) +
        C30524 * (C30931 + C30524 * C31074 - (C31069 * ce) / C30371) -
        ((C30929 + C30955 * C30527) * ce) / C30371;
    const double C6719 =
        (-3 * (C30524 * C31008 + C30717 + C31005 * ce)) / C30371 +
        C30524 * ((-2 * C31008) / C30371 - (C30524 * C31034) / C30371 -
                  (C31024 * ce) / C30371) -
        ((2 * C31005 + C30524 * C31024) * ce) / C30371;
    const double C11125 =
        (-3 * (C30524 * C30883 + C30705 + C30880 * ce)) / C30371 +
        C30524 * ((-2 * C30883) / C30371 - (C30524 * C31237) / C30371 -
                  (C31227 * ce) / C30371) -
        ((2 * C30880 + C30524 * C31227) * ce) / C30371;
    const double C31287 = C31284 / C30371;
    const double C31196 = C31158 - C31193;
    const double C31347 = C31344 / C30371;
    const double C11126 =
        3 * ((-(ae * C30883) / C30371) / C30500 - C30874 / C30533 -
             (C30884 * ce) / C30533 + C30524 * C31236) +
        (((-2 * C30883) / C30371 - (C30524 * C31237) / C30371 -
          (C31227 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30884 + C30524 * C31238 + C31227 * ae) * ce) / C30533 +
        C30524 * (2 * C31236 - (ae * C31237) / C30533 - (C31238 * ce) / C30533 +
                  C30524 * ((-(ae * C31225) / C30371) / C30500 -
                            C31210 / C30533 - (C31228 * ce) / C30533 +
                            C30524 * ((-(C31213 * ce) / C30371) / C30500 -
                                      (ae * C31211) / C30533 -
                                      (C30524 * C30687 * C30529 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533)));
    const double C108 =
        (C31997 + 2 * C31638) / C30388 - (C32006 * C31629) / C30371;
    const double C109 =
        (C31984 + 2 * C31646 + C32006) / C30388 - (C31999 * C31629) / C30371;
    const double C110 = (C31957 + C31643 / C30371 + C31999) / C30388 -
                        (C31986 * C31629) / C30371;
    const double C1235 =
        (C32000 + 2 * C31718) / C30388 - (C32007 * C31714) / C30371;
    const double C1236 =
        (C31988 + 2 * C31725 + C32007) / C30388 - (C32003 * C31714) / C30371;
    const double C1237 = (C31963 + C31722 / C30371 + C32003) / C30388 -
                         (C31993 * C31714) / C30371;
    const double C30438 = C30432 / C30388;
    const double C30437 = C30369 * C30432;
    const double C3478 = C3467 - C3476;
    const double C3477 = C3475 - C3465;
    const double C8130 = C3637 - C8124;
    const double C17422 = C17419 - C3637;
    const double C3916 = C3631 - C3911;
    const double C17759 = C17758 - C3631;
    const double C17421 = C3627 - C17418;
    const double C17420 = C17417 - C3627;
    const double C8903 = C8120 - C8898;
    const double C8131 = C8129 - C8118;
    const double C1953 = C1952 + C1942;
    const double C14409 = C14406 + C1051;
    const double C14408 = C14405 - C1051;
    const double C15816 = C15814 + C2314;
    const double C15815 = C15813 - C2314;
    const double C16554 = C16552 + C2940;
    const double C16553 = C16551 - C2940;
    const double C6284 = C6280 - C5635;
    const double C6002 = C5995 - C5969;
    const double C6646 = C6645 - C6635;
    const double C5835 = C5834 * C31615;
    const double C6285 = C6281 + C1703;
    const double C15112 = C15111 - C1703;
    const double C6402 = C6399 + C6272;
    const double C161 = C31856 * C141;
    const double C358 = C31856 * C337;
    const double C19406 = C19180 * C337;
    const double C362 = C31856 * C338;
    const double C19754 = C19180 * C338;
    const double C568 = C31856 * C543;
    const double C19604 = C19180 * C543;
    const double C19596 = C19181 * C543;
    const double C574 = C31856 * C544;
    const double C19208 = C19181 * C544;
    const double C19900 = C19180 * C544;
    const double C1036 = C31856 * C1021;
    const double C19402 = C19181 * C1021;
    const double C20114 = C19180 * C1021;
    const double C6113 = C6108 * C31615;
    const double C5822 = C31856 * C5813;
    const double C21693 = C21685 + C21686;
    const double C31282 = C31278 - C31255;
    const double C27391 = C27383 + C27384;
    const double C31339 = C31333 - C31307;
    const double C10971 =
        (4 * (2 * C30748 + C30524 * C30775 + C30764 * ae) +
         C30524 * (3 * C30775 + C30524 * C31127 + C31112 * ae) +
         (3 * C30764 + C30524 * C31112) * ae) /
        C30500;
    const double C31128 = C31126 - C31111;
    const double C31195 = C31186 + C31192;
    const double C21690 = C19181 * C2157;
    const double C27388 = C19181 * C6720;
    const double C31172 = C31164 - C31151;
    const double C31125 = C31118 + C31122;
    const double C30579 = C30569 + C30578;
    const double C30847 = C30844 + C30824;
    const double C2581 =
        2 * ((-(C30711 * ce) / C30371) / C30500 - (ae * C30709) / C30533 +
             C30524 * C30886) -
        (ae * (C30524 * C30895 + C30709 + C30892 * ce)) / C30533 -
        ((C30711 + C30524 * C30896 + C30892 * ae) * ce) / C30533 +
        C30524 * (C30886 - (ae * C30895) / C30533 - (C30896 * ce) / C30533 +
                  C30524 * ((-(C30889 * ce) / C30371) / C30500 -
                            (ae * C30887) / C30533 +
                            C30524 * C30687 *
                                ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533)));
    const double C1521 = C31856 * C1259;
    const double C2326 = C31856 * C1404;
    const double C20112 = C19181 * C1404;
    const double C1697 = C31856 * C1409;
    const double C19404 = C19181 * C1409;
    const double C2464 = C31856 * C2158;
    const double C19602 = C19181 * C2158;
    const double C30913 = C30908 + C30912;
    const double C31036 = C31033 + C31013;
    const double C7109 = C31856 * C6721;
    const double C26074 = C19181 * C6721;
    const double C6106 =
        4 * ((-2 * C30874) / C30533 + C30687 * C30971) +
        C30687 *
            (3 * C30971 +
             C30687 * ((-2 * C30687 * C30965) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30697) /
                                  C30371) /
                                     C30500 -
                                 C30965 / C30533)));
    const double C6266 =
        (((-3 * C30725) / C30371 +
          C30687 * ((-2 * C30875) / C30371 -
                    (C30687 * (C30529 * C30661 * C30697 + C30651)) / C30371)) *
         ae) /
            C30500 -
        ((3 * C30727 +
          C30687 *
              (2 * C30877 + C30687 * (C30657 + C30529 * C30665 * C30697))) *
         ce) /
            C30533 +
        C30524 *
            (3 * C30971 +
             C30687 * ((-2 * C30687 * C30965) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30697) /
                                  C30371) /
                                     C30500 -
                                 C30965 / C30533)));
    const double C6872 =
        (-2 * C30874) / C30533 + C30687 * C30971 +
        ((C30524 * C31057 - (C31055 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C31056 + C31055 * ae) * ce) / C30533 +
        C30524 *
            ((C31057 * ae) / C30500 - (C31056 * ce) / C30533 +
             C30524 * ((-2 * C30687 * C30965) / C30533 +
                       C30687 * ((-(C30529 *
                                    (C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30697) /
                                  C30371) /
                                     C30500 -
                                 C30965 / C30533)));
    const double C6986 =
        2 * ((-(C30727 * ce) / C30371) / C30500 - (ae * C30725) / C30533 +
             C30524 * C30971) -
        (ae * (C30524 * C31064 + C30725 + C31061 * ce)) / C30533 -
        ((C30727 + C30524 * C31065 + C31061 * ae) * ce) / C30533 +
        C30524 *
            (C30971 - (ae * C31064) / C30533 - (C31065 * ce) / C30533 +
             C30524 *
                 ((-(C31050 * ce) / C30371) / C30500 - (ae * C31048) / C30533 +
                  C30524 * ((-(C30529 *
                               (C30564 * C30565 +
                                C30527 * bs[8] * std::pow(C30520, 8)) *
                               C30525 * C30697) /
                             C30371) /
                                C30500 -
                            C30965 / C30533)));
    const double C31291 = C31288 + C31271;
    const double C31200 = C30524 * C31197;
    const double C31350 = C31348 + C31332;
    const double C31290 = C31259 - C31287;
    const double C31199 = C31196 - C31176;
    const double C31349 = C31311 - C31347;
    const double C30443 = C30438 - C30439;
    const double C30442 = C30437 + C31933;
    const double C3479 = C3477 - C3466;
    const double C8132 = C8130 + C3638;
    const double C17425 = C17422 - C3638;
    const double C17424 = C17421 + C3630;
    const double C17423 = C17420 - C3630;
    const double C8904 = C8903 + C8123;
    const double C8133 = C8131 - C8119;
    const double C15818 = C15816 - C2331;
    const double C15817 = C15815 + C2331;
    const double C16556 = C16554 - C2941;
    const double C16555 = C16553 + C2941;
    const double C6288 = C6284 * C31615;
    const double C6003 = C6002 + C5996;
    const double C6647 = C6646 + C6636;
    const double C6289 = C6285 * C31615;
    const double C6405 = C6402 * C31615;
    const double C172 = C160 + C161;
    const double C374 = C357 + C358;
    const double C19424 = C19405 + C19406;
    const double C376 = C361 + C362;
    const double C19760 = C19753 + C19754;
    const double C587 = C567 + C568;
    const double C19620 = C19603 + C19604;
    const double C19616 = C19595 + C19596;
    const double C589 = C573 + C574;
    const double C19228 = C19207 + C19208;
    const double C19904 = C19899 + C19900;
    const double C1047 = C1035 + C1036;
    const double C19422 = C19401 + C19402;
    const double C20122 = C20113 + C20114;
    const double C5828 = C5821 + C5822;
    const double C31289 = C31282 + C31286;
    const double C31346 = C31339 + C31343;
    const double C10972 =
        4 * ((-2 * C30747) / C30371 - (C30524 * C30774) / C30371 -
             (C30764 * ce) / C30371) +
        C30524 * ((-3 * C30774) / C30371 + C30524 * C31128 -
                  (C31112 * ce) / C30371) -
        ((3 * C30764 + C30524 * C31112) * ce) / C30371;
    const double C31198 = C30524 * C31195;
    const double C21695 = C21689 + C21690;
    const double C27393 = C27387 + C27388;
    const double C10975 =
        4 * (2 * C30776 - (ae * C30774) / C30533 - (C30775 * ce) / C30533 +
             C30524 * C31125) +
        (((-3 * C30774) / C30371 + C30524 * C31128 - (C31112 * ce) / C30371) *
         ae) /
            C30500 -
        ((3 * C30775 + C30524 * C31127 + C31112 * ae) * ce) / C30533 +
        C30524 *
            (3 * C31125 + (C31128 * ae) / C30500 - (C31127 * ce) / C30533 +
             C30524 *
                 (2 * C31119 - (ae * C31116) / C30533 - (C31117 * ce) / C30533 +
                  C30524 * ((-(ae * C31096) / C30371) / C30500 - C30566 -
                            (C31099 * ce) / C30533 +
                            C30524 * ((-(C30635 * ce) / C30371) / C30500 -
                                      (ae * C30631) / C30533 -
                                      (C30524 * C30572) / C30533))));
    const double C142 =
        5 * (3 * C30560 + C30529 * C30579) +
        C30529 * (4 * C30579 +
                  C30529 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C339 = (-2 * C30529 * C30546) / C30533 + C30529 * C30560 +
                        C30579 * std::pow(yP - yQ, 2);
    const double C340 = (yP - yQ) * (3 * C30560 + C30529 * C30579);
    const double C341 =
        3 * C30560 + C30529 * C30579 +
        (3 * C30577 +
         C30529 *
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533))) *
            std::pow(yP - yQ, 2);
    const double C545 =
        (-2 * C30529 * C30546) / C30533 + C30529 * C30560 +
        ((C30524 * C30647 - (C30641 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30646 + C30641 * ae) * ce) / C30533 +
        C30524 *
            ((C30647 * ae) / C30500 - (C30646 * ce) / C30533 + C30524 * C30579);
    const double C546 =
        (((-3 * C30620) / C30371 + C30529 * C30647) * ae) / C30500 -
        ((3 * C30621 + C30529 * C30646) * ce) / C30533 +
        C30524 * (3 * C30560 + C30529 * C30579);
    const double C547 =
        3 * C30560 + C30529 * C30579 +
        ((C30524 * C30683 - (C30677 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30682 + C30677 * ae) * ce) / C30533 +
        C30524 * ((C30683 * ae) / C30500 - (C30682 * ce) / C30533 +
                  C30524 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C714 =
        (yP - yQ) *
        (4 * C30579 +
         C30529 *
             (3 * C30577 +
              C30529 * ((-2 * C30529 * C30572) / C30533 +
                        C30529 * ((-((C30564 * C30565 +
                                      C30527 * bs[8] * std::pow(C30520, 8)) *
                                     C30525 * C30542) /
                                   C30371) /
                                      C30500 -
                                  C30572 / C30533))));
    const double C829 =
        ((4 * C30647 + C30529 * C30683) * ae) / C30500 -
        ((4 * C30646 + C30529 * C30682) * ce) / C30533 +
        C30524 * (4 * C30579 +
                  C30529 * (3 * C30577 +
                            C30529 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C1022 = (C30687 * C30647 * ae) / C30500 -
                         (C30687 * C30646 * ce) / C30533 +
                         C30524 * C30687 * C30579;
    const double C1518 =
        2 * C30687 * C30579 +
        C30687 *
            (C30579 +
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533)) *
                 C30697);
    const double C1684 =
        ((C30647 + C30679 * C30697) * ae) / C30500 -
        ((C30646 + C30678 * C30697) * ce) / C30533 +
        C30524 *
            (C30579 +
             ((-2 * C30529 * C30572) / C30533 +
              C30529 *
                  ((-((C30564 * C30565 + C30527 * bs[8] * std::pow(C30520, 8)) *
                      C30525 * C30542) /
                    C30371) /
                       C30500 -
                   C30572 / C30533)) *
                 C30697);
    const double C2309 =
        C30687 * C30579 +
        ((C30524 * C30849 - (C30850 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30851 + C30850 * ae) * ce) / C30533 +
        C30524 * ((C30849 * ae) / C30500 - (C30851 * ce) / C30533 +
                  C30524 * C30687 *
                      ((-2 * C30529 * C30572) / C30533 +
                       C30529 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533)));
    const double C2443 =
        2 * ((C30647 * ae) / C30500 - (C30646 * ce) / C30533 +
             C30524 * C30579) +
        ((C30647 + C30524 * C30860 - (C30855 * ce) / C30371) * ae) / C30500 -
        ((C30646 + C30524 * C30859 + C30855 * ae) * ce) / C30533 +
        C30524 * (C30579 + (C30860 * ae) / C30500 - (C30859 * ce) / C30533 +
                  C30524 * ((C30679 * ae) / C30500 - (C30678 * ce) / C30533 +
                            C30524 * ((-2 * C30529 * C30572) / C30533 +
                                      C30529 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30542) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C2159 =
        3 * (C30560 - (ae * C30819) / C30533 - (C30820 * ce) / C30533 +
             C30524 * C30847) +
        (((-2 * C30819) / C30371 - (C30524 * C30845) / C30371 -
          (C30835 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C30820 + C30524 * C30846 + C30835 * ae) * ce) / C30533 +
        C30524 *
            (2 * C30847 - (ae * C30845) / C30533 - (C30846 * ce) / C30533 +
             C30524 *
                 (C30577 - (ae * C30833) / C30533 - (C30836 * ce) / C30533 +
                  C30524 *
                      ((-(C30672 * ce) / C30371) / C30500 -
                       (ae * C30670) / C30533 +
                       C30524 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30542) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C1528 = C1520 + C1521;
    const double C2330 = C2325 + C2326;
    const double C20121 = C20111 + C20112;
    const double C1701 = C1696 + C1697;
    const double C19423 = C19403 + C19404;
    const double C2468 = C2463 + C2464;
    const double C19619 = C19601 + C19602;
    const double C5814 =
        5 * (3 * C30902 + C30687 * C30913) +
        C30687 * (4 * C30913 +
                  C30687 * (3 * C30911 +
                            C30687 * ((-2 * C30687 * C30572) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30697) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C5954 =
        (-2 * C30862) / C30533 + C30687 * C30902 +
        ((C30524 * C30931 - (C30929 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30930 + C30929 * ae) * ce) / C30533 +
        C30524 *
            ((C30931 * ae) / C30500 - (C30930 * ce) / C30533 + C30524 * C30913);
    const double C5955 =
        (((-3 * C30717) / C30371 + C30687 * C30931) * ae) / C30500 -
        ((3 * C30719 + C30687 * C30930) * ce) / C30533 +
        C30524 * (3 * C30902 + C30687 * C30913);
    const double C5956 =
        3 * C30902 + C30687 * C30913 +
        ((C30524 * C30963 - (C30961 * ce) / C30371) * ae) / C30500 -
        ((C30524 * C30962 + C30961 * ae) * ce) / C30533 +
        C30524 * ((C30963 * ae) / C30500 - (C30962 * ce) / C30533 +
                  C30524 * (3 * C30911 +
                            C30687 * ((-2 * C30687 * C30572) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30697) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C6390 =
        ((4 * C30931 + C30687 * C30963) * ae) / C30500 -
        ((4 * C30930 + C30687 * C30962) * ce) / C30533 +
        C30524 * (4 * C30913 +
                  C30687 * (3 * C30911 +
                            C30687 * ((-2 * C30687 * C30572) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30697) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C7088 =
        2 * ((C30931 * ae) / C30500 - (C30930 * ce) / C30533 +
             C30524 * C30913) +
        ((C30931 + C30524 * C31074 - (C31069 * ce) / C30371) * ae) / C30500 -
        ((C30930 + C30524 * C31073 + C31069 * ae) * ce) / C30533 +
        C30524 * (C30913 + (C31074 * ae) / C30500 - (C31073 * ce) / C30533 +
                  C30524 * ((C30957 * ae) / C30500 - (C30956 * ce) / C30533 +
                            C30524 * ((-2 * C30687 * C30572) / C30533 +
                                      C30687 * ((-((C30564 * C30565 +
                                                    C30527 * bs[8] *
                                                        std::pow(C30520, 8)) *
                                                   C30525 * C30697) /
                                                 C30371) /
                                                    C30500 -
                                                C30572 / C30533))));
    const double C6722 =
        3 * (C30902 - (ae * C31008) / C30533 - (C31009 * ce) / C30533 +
             C30524 * C31036) +
        (((-2 * C31008) / C30371 - (C30524 * C31034) / C30371 -
          (C31024 * ce) / C30371) *
         ae) /
            C30500 -
        ((2 * C31009 + C30524 * C31035 + C31024 * ae) * ce) / C30533 +
        C30524 *
            (2 * C31036 - (ae * C31034) / C30533 - (C31035 * ce) / C30533 +
             C30524 *
                 (C30911 - (ae * C31022) / C30533 - (C31025 * ce) / C30533 +
                  C30524 *
                      ((-(C30949 * ce) / C30371) / C30500 -
                       (ae * C30945) / C30533 +
                       C30524 * ((-((C30564 * C30565 +
                                     C30527 * bs[8] * std::pow(C30520, 8)) *
                                    C30525 * C30697) /
                                  C30371) /
                                     C30500 -
                                 C30572 / C30533))));
    const double C7113 = C7108 + C7109;
    const double C26087 = C26073 + C26074;
    const double C11226 =
        (4 * (2 * C30784 + C30524 * C30811 + C30800 * ae) +
         C30524 * (3 * C30811 + C30524 * C31291 + C31276 * ae) +
         (3 * C30800 + C30524 * C31276) * ae) /
        C30500;
    const double C31203 = C31146 + C31200;
    const double C11328 =
        (4 * (2 * C30872 + C30524 * C31000 + C30989 * ae) +
         C30524 * (3 * C31000 + C30524 * C31350 + C31337 * ae) +
         (3 * C30989 + C30524 * C31337) * ae) /
        C30500;
    const double C31292 = C31290 - C31275;
    const double C31202 = C30524 * C31199;
    const double C31351 = C31349 - C31336;
    const double C4046 = C588 * C30443;
    const double C4042 = C584 * C30443;
    const double C4036 = C579 * C30443;
    const double C4209 = C1045 * C30443;
    const double C4203 = C1043 * C30443;
    const double C8648 = C1698 * C30443;
    const double C8644 = C5630 * C30443;
    const double C8638 = C5628 * C30443;
    const double C9423 = C5989 * C30443;
    const double C2134 =
        (C30443 / C30388 + ((C30369 * C30457 + C4029) * ce) / C30371) / C30388 -
        ((C30369 * (C30457 / C30388 + (0 * ce) / C30371) + C31979) * de) /
            C30371;
    const double C2438 =
        C30443 / C30388 - ((C30369 * C30457 + C4029) * de) / C30371;
    const double C3746 =
        C30443 / C30388 + ((C30369 * C30457 + C4029) * ce) / C30371;
    const double C30446 = C30442 * de;
    const double C8134 = C8132 * C31615;
    const double C8905 = C8904 * C31615;
    const double C8135 = C8133 * C31615;
    const double C15820 = C15818 - C2332;
    const double C15819 = C15817 + C2332;
    const double C16558 = C16556 - C2942;
    const double C16557 = C16555 + C2942;
    const double C6004 = C6003 + C5997;
    const double C6648 = C6647 + C6637;
    const double C182 = C172 * C31677;
    const double C386 = C374 * C31677;
    const double C1693 = C374 * C31933;
    const double C3640 = C374 * C3454;
    const double C388 = C376 * C31677;
    const double C1038 = C376 * C31933;
    const double C3913 = C376 * C3454;
    const double C599 = C587 * C31966;
    const double C1943 = C587 * C31966;
    const double C2460 = C587 * C2434;
    const double C3762 = C587 * C31996;
    const double C4045 = C587 * C4029;
    const double C601 = C589 * C31990;
    const double C842 = C589 * C31764;
    const double C1947 = C589 * C1926;
    const double C3470 = C589 * C31764;
    const double C4049 = C589 * C31767;
    const double C1053 = C1047 * C31764;
    const double C2322 = C1047 * C1926;
    const double C2946 = C1047 * C31990;
    const double C3634 = C1047 * C31764;
    const double C4212 = C1047 * C31767;
    const double C5832 = C5828 * C31677;
    const double C31201 = C31172 + C31198;
    const double C364 = C31856 * C339;
    const double C718 = C31856 * C340;
    const double C578 = C31856 * C545;
    const double C19898 = C19181 * C545;
    const double C848 = C31856 * C546;
    const double C19210 = C19181 * C546;
    const double C1042 = C31856 * C1022;
    const double C19752 = C19181 * C1022;
    const double C1532 = C1528 * C31677;
    const double C2334 = C2330 * C31966;
    const double C2948 = C2330 * C31966;
    const double C4214 = C2330 * C4029;
    const double C1705 = C1701 * C31764;
    const double C3642 = C1701 * C31764;
    const double C2472 = C2468 * C31979;
    const double C3764 = C2468 * C31979;
    const double C5983 = C31856 * C5954;
    const double C26548 = C19181 * C5954;
    const double C6398 = C31856 * C5955;
    const double C25892 = C19181 * C5955;
    const double C7117 = C7113 * C31979;
    const double C9019 = C7113 * C31979;
    const double C31205 = C31203 + C31185;
    const double C11228 =
        4 * (2 * C30812 - (ae * C30810) / C30533 - (C30811 * ce) / C30533 +
             C30524 * C31289) +
        (((-3 * C30810) / C30371 + C30524 * C31292 - (C31276 * ce) / C30371) *
         ae) /
            C30500 -
        ((3 * C30811 + C30524 * C31291 + C31276 * ae) * ce) / C30533 +
        C30524 *
            (3 * C31289 + (C31292 * ae) / C30500 - (C31291 * ce) / C30533 +
             C30524 *
                 (2 * C31283 - (ae * C31280) / C30533 - (C31281 * ce) / C30533 +
                  C30524 * ((-(ae * C31260) / C30371) / C30500 -
                            C30965 / C30533 - (C31263 * ce) / C30533 +
                            C30524 * ((-(C31043 * ce) / C30371) / C30500 -
                                      (ae * C31039) / C30533 -
                                      (C30524 * C30529 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533))));
    const double C11227 =
        4 * ((-2 * C30783) / C30371 - (C30524 * C30810) / C30371 -
             (C30800 * ce) / C30371) +
        C30524 * ((-3 * C30810) / C30371 + C30524 * C31292 -
                  (C31276 * ce) / C30371) -
        ((3 * C30800 + C30524 * C31276) * ce) / C30371;
    const double C31204 = C31157 + C31202;
    const double C11330 =
        4 * (2 * C31001 - (ae * C30999) / C30533 - (C31000 * ce) / C30533 +
             C30524 * C31346) +
        (((-3 * C30999) / C30371 + C30524 * C31351 - (C31337 * ce) / C30371) *
         ae) /
            C30500 -
        ((3 * C31000 + C30524 * C31350 + C31337 * ae) * ce) / C30533 +
        C30524 *
            (3 * C31346 + (C31351 * ae) / C30500 - (C31350 * ce) / C30533 +
             C30524 *
                 (2 * C31340 - (ae * C31341) / C30533 - (C31342 * ce) / C30533 +
                  C30524 * ((-(ae * C31321) / C30371) / C30500 -
                            C31299 / C30533 - (C31324 * ce) / C30533 +
                            C30524 * ((-(C31305 * ce) / C30371) / C30500 -
                                      (ae * C31301) / C30533 -
                                      (C30524 * C30687 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533))));
    const double C11329 =
        4 * ((-2 * C30871) / C30371 - (C30524 * C30999) / C30371 -
             (C30989 * ce) / C30371) +
        C30524 * ((-3 * C30999) / C30371 + C30524 * C31351 -
                  (C31337 * ce) / C30371) -
        ((3 * C30989 + C30524 * C31337) * ce) / C30371;
    const double C2459 = C586 * C2438;
    const double C2449 = C581 * C2438;
    const double C7104 = C5987 * C2438;
    const double C7094 = C5984 * C2438;
    const double C15955 = C2327 * C2438;
    const double C3761 = C586 * C3746;
    const double C3753 = C581 * C3746;
    const double C9016 = C5987 * C3746;
    const double C9008 = C5984 * C3746;
    const double C17560 = C2327 * C3746;
    const double C30448 = C30446 / C30371;
    const double C6005 = C6004 * C31615;
    const double C6649 = C6648 * C31615;
    const double C392 = C385 + C386;
    const double C13800 = C386 + C385;
    const double C716 = C387 + C388;
    const double C14077 = C388 + C387;
    const double C607 = C606 + C599;
    const double C1954 = C1953 + C1943;
    const double C858 = C854 + C842;
    const double C3480 = C3478 + C3470;
    const double C1057 = C1056 + C1053;
    const double C14410 = C14407 - C1053;
    const double C3917 = C3916 + C3634;
    const double C17760 = C17759 - C3634;
    const double C377 = C363 + C364;
    const double C721 = C717 + C718;
    const double C591 = C577 + C578;
    const double C19903 = C19897 + C19898;
    const double C852 = C847 + C848;
    const double C19229 = C19209 + C19210;
    const double C1049 = C1041 + C1042;
    const double C19759 = C19751 + C19752;
    const double C5992 = C5982 + C5983;
    const double C26553 = C26547 + C26548;
    const double C6401 = C6397 + C6398;
    const double C25903 = C25891 + C25892;
    const double C10973 =
        (5 * (3 * C30775 + C30524 * C31127 + C31112 * ae) +
         C30524 * (4 * C31127 + C30524 * C31205 + C31190 * ae) +
         (4 * C31112 + C30524 * C31190) * ae) /
        C30500;
    const double C31206 = C31204 - C31189;
    const double C30450 = C30436 - C30448;
    const double C5148 = C392 * C31615;
    const double C389 = C377 * C31677;
    const double C723 = C721 * C31677;
    const double C603 = C591 * C31966;
    const double C1949 = C591 * C31966;
    const double C4051 = C591 * C4029;
    const double C856 = C852 * C31764;
    const double C3474 = C852 * C31764;
    const double C1055 = C1049 * C31764;
    const double C3915 = C1049 * C31764;
    const double C6001 = C5992 * C31966;
    const double C6643 = C5992 * C31966;
    const double C9428 = C5992 * C4029;
    const double C6404 = C6401 * C31764;
    const double C8902 = C6401 * C31764;
    const double C10976 =
        5 * (3 * C31125 + (C31128 * ae) / C30500 - (C31127 * ce) / C30533 +
             C30524 * C31201) +
        ((4 * C31128 + C30524 * C31206 - (C31190 * ce) / C30371) * ae) /
            C30500 -
        ((4 * C31127 + C30524 * C31205 + C31190 * ae) * ce) / C30533 +
        C30524 *
            (4 * C31201 + (C31206 * ae) / C30500 - (C31205 * ce) / C30533 +
             C30524 *
                 (3 * C31195 + (C31199 * ae) / C30500 - (C31197 * ce) / C30533 +
                  C30524 *
                      (2 * C31187 - (ae * C31181) / C30533 -
                       (C31184 * ce) / C30533 +
                       C30524 *
                           ((-(ae * C31159) / C30371) / C30500 -
                            C30572 / C30533 - (C31162 * ce) / C30533 +
                            C30524 * ((-(C30665 * ce) / C30371) / C30500 -
                                      (ae * C30661) / C30533 -
                                      (C30524 *
                                       (C30564 * C30565 +
                                        C30527 * bs[8] * std::pow(C30520, 8)) *
                                       C30525) /
                                          C30533)))));
    const double C10974 =
        5 * ((-3 * C30774) / C30371 + C30524 * C31128 -
             (C31112 * ce) / C30371) +
        C30524 * (4 * C31128 + C30524 * C31206 - (C31190 * ce) / C30371) -
        ((4 * C31112 + C30524 * C31190) * ce) / C30371;
    const double C30451 = C30450 + C30421;
    const double C4048 = C169 * C30451;
    const double C4040 = C166 * C30451;
    const double C4034 = C164 * C30451;
    const double C4211 = C368 * C30451;
    const double C4205 = C370 * C30451;
    const double C8650 = C371 * C30451;
    const double C8642 = C5151 * C30451;
    const double C8636 = C5149 * C30451;
    const double C9425 = C5154 * C30451;
    const double C2131 =
        (((((0 - (C30369 * C30404) / C30371) * ce) / C30371 -
           (0 * de) / C30375 + (2 * C30405) / C30371) /
              C30388 -
          ((C30369 * C30440 + 0) * de) / C30371 + C30414 - C30427) /
             C30388 +
         ((C30369 * C30449 + 0) * ce) / C30371) /
            C30388 -
        ((C30369 * (C30449 / C30388 +
                    ((C30369 * C30451 + C31760) * ce) / C30371 + C30443) +
          C32008) *
         de) /
            C30371 +
        C30451 / C30388 + ((C30369 * C30443 + C31767) * ce) / C30371 +
        2 * (C30421 / C30388 - (0 * de) / C30371);
    const double C2132 =
        (C30449 / C30388 + ((C30369 * C30451 + C31760) * ce) / C30371 +
         C30443) /
            C30388 -
        ((C30369 * (C30451 / C30388 +
                    ((C30369 * C30443 + C31767) * ce) / C30371 + 2 * C30457) +
          C32005) *
         de) /
            C30371 +
        2 * (C30443 / C30388 + ((C30369 * C30457 + C4029) * ce) / C30371);
    const double C2133 =
        (C30451 / C30388 + ((C30369 * C30443 + C31767) * ce) / C30371 +
         2 * C30457) /
            C30388 -
        ((C30369 *
              (C30443 / C30388 + ((C30369 * C30457 + C4029) * ce) / C30371) +
          C31996) *
         de) /
            C30371 +
        3 * (C30457 / C30388 + (0 * ce) / C30371);
    const double C2436 =
        C30449 / C30388 - ((C30369 * C30451 + C31760) * de) / C30371 + C30443;
    const double C2437 = C30451 / C30388 -
                         ((C30369 * C30443 + C31767) * de) / C30371 +
                         2 * C30457;
    const double C3744 =
        C30449 / C30388 + ((C30369 * C30451 + C31760) * ce) / C30371 + C30443;
    const double C3745 = C30451 / C30388 +
                         ((C30369 * C30443 + C31767) * ce) / C30371 +
                         2 * C30457;
    const double C4052 = C4040 + C4041;
    const double C18102 = C4204 + C4205;
    const double C18101 = C4205 + C4204;
    const double C9422 = C8642 + C8643;
    const double C2455 = C166 * C2436;
    const double C2445 = C164 * C2436;
    const double C7100 = C5151 * C2436;
    const double C7090 = C5149 * C2436;
    const double C15951 = C370 * C2436;
    const double C2457 = C584 * C2437;
    const double C2447 = C579 * C2437;
    const double C7102 = C5630 * C2437;
    const double C7092 = C5628 * C2437;
    const double C15953 = C1043 * C2437;
    const double C3757 = C166 * C3744;
    const double C3749 = C164 * C3744;
    const double C9012 = C5151 * C3744;
    const double C9004 = C5149 * C3744;
    const double C17556 = C370 * C3744;
    const double C3759 = C584 * C3745;
    const double C3751 = C579 * C3745;
    const double C9014 = C5630 * C3745;
    const double C9006 = C5628 * C3745;
    const double C17558 = C1043 * C3745;
    const double C4053 = C4052 - C4042;
    const double C18104 = C4203 - C18102;
    const double C18103 = C18101 - C4203;
    const double C9429 = C9422 - C8644;
    const double C4054 = C4053 - C4043;
    const double C18106 = C18104 + C4206;
    const double C18105 = C18103 - C4206;
    const double C9430 = C9429 - C8645;
    const double C4055 = C4054 + C4044;
    const double C18108 = C18106 - C4207;
    const double C18107 = C18105 + C4207;
    const double C9431 = C9430 + C8646;
    const double C4056 = C4055 + C4045;
    const double C18110 = C18108 - C4208;
    const double C18109 = C18107 + C4208;
    const double C9432 = C9431 + C8647;
    const double C9433 = C9432 * C31615;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C113 * C115 + C31856 * C122) * C114 +
                     (C113 * C123 + C31856 * C136) * C31677) *
                        C13645 +
                    (C174 + C175) * C13646) *
                       C13647 +
                   ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
                      C31718 -
                  ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
                   (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
                      C31725 +
                  ((C5162 * C13645 + C13798 * C13646) * C13647 +
                   ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
                      C3060) *
                     C31638 +
                 (((C13796 * C13645 + C13799 * C13646) * C13647 +
                   (C13798 * C13645 + C392 * C13646) * C13648) *
                      C31725 -
                  ((C391 * C13646 + C13797 * C13645) * C13648 +
                   ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
                      C31718 -
                  (((C1532 + C1533) * C13646 + C14915 * C13645) * C13648 +
                   (C13800 * C13646 + C5147 * C13645) * C13647) *
                      C3060) *
                     C31646 +
                 (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
                   (C13799 * C13645 + C716 * C13646) * C13648) *
                      C31718 -
                  (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
                   (C14077 * C13646 + C391 * C13645) * C13647) *
                      C31725 +
                  ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
                   ((C1533 + C1532) * C13645 +
                    ((C113 * C1515 + C31856 * C1516) * C114 +
                     (C113 * C1517 + C31856 * C1518) * C31677) *
                        C13646) *
                       C13648) *
                      C3060) *
                     C3063)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C31718 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C31725 +
           ((C6284 * C13645 + C15112 * C13646) * C13647 +
            ((C6271 + C6270 - C6269 - C6272) * C13645 +
             (C6274 + C6275 - C6286 - C6287) * C13646) *
                C13648) *
               C3060) *
              C2788 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C31718 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            (C15112 * C13645 + (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C31725 +
           ((C6285 * C13645 + (C1704 - (C1693 + C1692) + C1705) * C13646) *
                C13647 +
            ((C6286 - (C6275 + C6274) + C6287) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C825 -
              (C1528 * C31933 + C1529 * C824) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C32007 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C32003 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31993 -
           (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
            (C14915 * C13646 + C5816 * C13645) * C13647) *
               C31973) *
              C2788 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C32003 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C32007 -
           (((C1532 + C1533) * C13646 + C14915 * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31993 +
           ((C6108 * C13645 + (C1533 + C1532) * C13646) * C13647 +
            ((C6117 + C6116) * C13645 +
             ((C113 * C1246 + C31856 * C1257) * C114 +
              (C113 * C1258 + C31856 * C1264) * C31677) *
                 C13646) *
                C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C2680 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31722) *
              C32006 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31722 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C2680) *
              C31999 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C2680 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C31722) *
              C31986 +
          (((C716 * C13645 + (C724 + C723) * C13646) * C13647 +
            ((C390 + C389) * C13645 + ((C113 * C311 + C31856 * C330) * C114 +
                                       (C113 * C331 + C31856 * C341) * C31677) *
                                          C13646) *
                C13648) *
               C31722 -
           (((C723 + C724) * C13646 + C14077 * C13645) * C13648 +
            ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C505 +
              (C113 * C123 + C31856 * C136) * C32001 -
              (C113 * C508 + C31856 * C518) * C506 -
              (C113 * C519 + C31856 * C538) * C31990 +
              (C113 * C509 + C31856 * C520) * C507 +
              (C113 * C521 + C31856 * C539) * C31966) *
                 C13645 +
             (C549 + C550 - C592 - C593 + C594 + C595) * C13646) *
                C13647 +
            ((C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C13645 +
             C16557 * C13646) *
                C13648) *
               C2680 +
           (((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C13645 +
             C16558 * C13646) *
                C13647 +
            ((C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C13645 +
             (C7460 - (C7461 + C7462) + C7463 - C7464 - C7465) * C13646) *
                C13648) *
               C31722) *
              C2788 +
          ((((C592 - (C550 + C549) + C593 - C594 - C595) * C13645 +
             (C596 - (C560 + C559) + C597 - C598 - C599) * C13646) *
                C13647 +
            (C16558 * C13645 +
             (C2943 - (C2944 + C2945) + C2946 - C2947 - C2948) * C13646) *
                C13648) *
               C2680 +
           ((C16557 * C13645 +
             (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C13646) *
                C13647 +
            ((C7462 + C7461 - C7460 - C7463 + C7464 + C7465) * C13645 +
             (C373 * C505 + C374 * C32001 - C1700 * C506 - C1701 * C31990 +
              (C113 * C1383 + C31856 * C1400) * C507 +
              (C113 * C1401 + C31856 * C1410) * C31966) *
                 C13646) *
                C13648) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C2680 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C31722) *
              C31638 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C2680 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            (C15112 * C13645 + (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C31722) *
              C31646 +
          (((C857 * C13645 + (C841 + C840 - C839 - C842) * C13646) * C13647 +
            (C14410 * C13645 + (C1037 + C1038 - C1054 - C1055) * C13646) *
                C13648) *
               C2680 +
           ((C1057 * C13645 + (C1054 - (C1038 + C1037) + C1055) * C13646) *
                C13647 +
            ((C1704 - (C1693 + C1692) + C1705) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C825 -
              (C377 * C31933 + C378 * C824) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C2680 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31722) *
              C32006 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31722 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C2680) *
              C31999 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C2680 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C31722) *
              C31986 +
          (((C716 * C13645 + (C724 + C723) * C13646) * C13647 +
            ((C390 + C389) * C13645 + ((C113 * C311 + C31856 * C330) * C114 +
                                       (C113 * C331 + C31856 * C341) * C31677) *
                                          C13646) *
                C13648) *
               C31722 -
           (((C723 + C724) * C13646 + C14077 * C13645) * C13648 +
            ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C32007 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C32003 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31993 -
           (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
            (C14915 * C13646 + C5816 * C13645) * C13647) *
               C31973) *
              C2788 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C32003 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C32007 -
           (((C1532 + C1533) * C13646 + C14915 * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31993 +
           ((C6108 * C13645 + (C1533 + C1532) * C13646) * C13647 +
            ((C6117 + C6116) * C13645 +
             ((C113 * C1246 + C31856 * C1257) * C114 +
              (C113 * C1258 + C31856 * C1264) * C31677) *
                 C13646) *
                C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C31718 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31725 +
           ((C8133 * C13645 + C17425 * C13646) * C13647 +
            ((C8122 + C8121 - C8120 - C8123) * C13645 +
             (C8125 + C8126 - C8127 - C8128) * C13646) *
                C13648) *
               C3060) *
              C31918 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C31718 +
           ((C17423 * C13645 + C17760 * C13646) * C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31725 +
           ((C8132 * C13645 + (C3641 - (C3640 + C3639) + C3642) * C13646) *
                C13647 +
            ((C8127 - (C8126 + C8125) + C8128) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C3457 -
              (C1528 * C3454 + C1529 * C3456) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C115 + C31856 * C122) * C30451 +
                    (C113 * C123 + C31856 * C136) * C31760 -
                    (C113 * C508 + C31856 * C518) * C30443 -
                    (C113 * C519 + C31856 * C538) * C31767 +
                    (C113 * C509 + C31856 * C520) * C30457 +
                    (C113 * C521 + C31856 * C539) * C4029) *
                       C13645 +
                   (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C13646) *
                      C13647 +
                  ((C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C13645 +
                   C18109 * C13646) *
                      C13648) *
                     C31718 +
                 (((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C13645 +
                   C18110 * C13646) *
                      C13647 +
                  ((C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C13645 +
                   (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C13646) *
                      C13648) *
                     C31725 +
                 ((C9432 * C13645 +
                   (C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C13646) *
                      C13647 +
                  ((C9425 + C9424 - C9423 - C9426 + C9427 + C9428) * C13645 +
                   (C1531 * C30451 + C1530 * C31760 - C6282 * C30443 -
                    C6283 * C31767 + (C113 * C6869 + C31856 * C6870) * C30457 +
                    (C113 * C6871 + C31856 * C6872) * C4029) *
                       C13646) *
                      C13648) *
                     C3060) *
                C31633) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C3459 + C3460 - C3461 - C3462) * C13646) *
               C13647 +
           ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
               C13648) *
              C32007 +
          (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
               C13647 +
           ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
               C13648) *
              C32003 +
          ((C8133 * C13645 + C17425 * C13646) * C13647 +
           ((C8122 + C8121 - C8120 - C8123) * C13645 +
            (C8125 + C8126 - C8127 - C8128) * C13646) *
               C13648) *
              C31993 +
          ((C8904 * C13645 + (C8127 - (C8126 + C8125) + C8128) * C13646) *
               C13647 +
           ((C8901 - (C8900 + C8899) + C8902) * C13645 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C13646) *
               C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C2680 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31722) *
              C31997 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C2680 +
           ((C17423 * C13645 + C17760 * C13646) * C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31722) *
              C31984 +
          (((C3479 * C13645 + (C3469 + C3468 - C3467 - C3470) * C13646) *
                C13647 +
            (C17760 * C13645 + (C3912 + C3913 - C3914 - C3915) * C13646) *
                C13648) *
               C2680 +
           ((C3917 * C13645 + (C3914 - (C3913 + C3912) + C3915) * C13646) *
                C13647 +
            ((C3641 - (C3640 + C3639) + C3642) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C3457 -
              (C377 * C3454 + C378 * C3456) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3744 +
             (C113 * C123 + C31856 * C136) * C32008 -
             (C113 * C508 + C31856 * C518) * C3745 -
             (C113 * C519 + C31856 * C538) * C32005 +
             (C113 * C509 + C31856 * C520) * C3746 +
             (C113 * C521 + C31856 * C539) * C31996 -
             (C113 * C2136 + C31856 * C2142) * C3747 -
             (C113 * C2143 + C31856 * C2154) * C31979) *
                C13645 +
            (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
                C13646) *
               C13647 +
           ((C9004 + C9005 - C9006 - C9007 + C9008 + C9009 - C9010 - C9011) *
                C13645 +
            (C17556 + C17557 - C17558 - C17559 + C17560 + C17561 - C17562 -
             C17563) *
                C13646) *
               C13648) *
              C2680 +
          (((C9006 - (C9005 + C9004) + C9007 - C9008 - C9009 + C9010 + C9011) *
                C13645 +
            (C17558 - (C17557 + C17556) + C17559 - C17560 - C17561 + C17562 +
             C17563) *
                C13646) *
               C13647 +
           ((C9014 - (C9013 + C9012) + C9015 - C9016 - C9017 + C9018 + C9019) *
                C13645 +
            (C1698 * C3745 - (C372 * C32008 + C371 * C3744) + C1699 * C32005 -
             C6882 * C3746 - C6883 * C31996 +
             (C113 * C6983 + C31856 * C6984) * C3747 +
             (C113 * C6985 + C31856 * C6986) * C31979) *
                C13646) *
               C13648) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C30451 +
              (C113 * C123 + C31856 * C136) * C31760 -
              (C113 * C508 + C31856 * C518) * C30443 -
              (C113 * C519 + C31856 * C538) * C31767 +
              (C113 * C509 + C31856 * C520) * C30457 +
              (C113 * C521 + C31856 * C539) * C4029) *
                 C13645 +
             (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C13646) *
                C13647 +
            ((C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C13645 +
             C18109 * C13646) *
                C13648) *
               C2680 +
           (((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C13645 +
             C18110 * C13646) *
                C13647 +
            ((C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C13645 +
             (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C13646) *
                C13648) *
               C31722) *
              C31918 +
          ((((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C13645 +
             (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C13646) *
                C13647 +
            (C18110 * C13645 +
             (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C13646) *
                C13648) *
               C2680 +
           ((C18109 * C13645 +
             (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C13646) *
                C13647 +
            ((C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C13645 +
             (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
              (C113 * C1383 + C31856 * C1400) * C30457 +
              (C113 * C1401 + C31856 * C1410) * C4029) *
                 C13646) *
                C13648) *
               C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C2680 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31722) *
              C31997 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C2680 +
           ((C17423 * C13645 + C17760 * C13646) * C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31722) *
              C31984 +
          (((C3479 * C13645 + (C3469 + C3468 - C3467 - C3470) * C13646) *
                C13647 +
            (C17760 * C13645 + (C3912 + C3913 - C3914 - C3915) * C13646) *
                C13648) *
               C2680 +
           ((C3917 * C13645 + (C3914 - (C3913 + C3912) + C3915) * C13646) *
                C13647 +
            ((C3641 - (C3640 + C3639) + C3642) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C3457 -
              (C377 * C3454 + C378 * C3456) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C3459 + C3460 - C3461 - C3462) * C13646) *
               C13647 +
           ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
               C13648) *
              C32007 +
          (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
               C13647 +
           ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
               C13648) *
              C32003 +
          ((C8133 * C13645 + C17425 * C13646) * C13647 +
           ((C8122 + C8121 - C8120 - C8123) * C13645 +
            (C8125 + C8126 - C8127 - C8128) * C13646) *
               C13648) *
              C31993 +
          ((C8904 * C13645 + (C8127 - (C8126 + C8125) + C8128) * C13646) *
               C13647 +
           ((C8901 - (C8900 + C8899) + C8902) * C13645 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C13646) *
               C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1509 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1510 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C1511 -
           (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
            (C14915 * C13646 + C5816 * C13645) * C13647) *
               C31973) *
              C31918 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1510 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1509 -
           (((C1532 + C1533) * C13646 + C14915 * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C1511 +
           ((C6108 * C13645 + (C1533 + C1532) * C13646) * C13647 +
            ((C6117 + C6116) * C13645 +
             ((C113 * C1246 + C31856 * C1257) * C114 +
              (C113 * C1258 + C31856 * C1264) * C31677) *
                 C13646) *
                C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C31932 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31722) *
              C707 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31722 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C31932) *
              C708 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C31932 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C31722) *
              C709 +
          (((C716 * C13645 + (C724 + C723) * C13646) * C13647 +
            ((C390 + C389) * C13645 + ((C113 * C311 + C31856 * C330) * C114 +
                                       (C113 * C331 + C31856 * C341) * C31677) *
                                          C13646) *
                C13648) *
               C31722 -
           (((C723 + C724) * C13646 + C14077 * C13645) * C13648 +
            ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C1928 +
              (C113 * C123 + C31856 * C136) * C1925 -
              (C113 * C508 + C31856 * C518) * C1929 -
              (C113 * C519 + C31856 * C538) * C1926 +
              (C113 * C509 + C31856 * C520) * C1930 +
              (C113 * C521 + C31856 * C539) * C31966) *
                 C13645 +
             (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C13646) *
                C13647 +
            ((C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C13645 +
             C15819 * C13646) *
                C13648) *
               C31932 +
           (((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C13645 +
             C15820 * C13646) *
                C13647 +
            ((C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C13645 +
             (C6874 - (C6875 + C6876) + C6877 - C6884 - C6885) * C13646) *
                C13648) *
               C31722) *
              C31918 +
          ((((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C13645 +
             (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C13646) *
                C13647 +
            (C15820 * C13645 +
             (C2319 - (C2320 + C2321) + C2322 - C2333 - C2334) * C13646) *
                C13648) *
               C31932 +
           ((C15819 * C13645 +
             (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C13646) *
                C13647 +
            ((C6876 + C6875 - C6874 - C6877 + C6884 + C6885) * C13645 +
             (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
              (C113 * C1383 + C31856 * C1400) * C1930 +
              (C113 * C1401 + C31856 * C1410) * C31966) *
                 C13646) *
                C13648) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C831 + C832 - C833 - C834) * C13646) *
               C13647 +
           ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
               C13648) *
              C1509 +
          (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
               C13647 +
           ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
               C13648) *
              C1510 +
          ((C6284 * C13645 + C15112 * C13646) * C13647 +
           ((C6271 + C6270 - C6269 - C6272) * C13645 +
            (C6274 + C6275 - C6286 - C6287) * C13646) *
               C13648) *
              C1511 +
          ((C6402 * C13645 + (C6286 - (C6275 + C6274) + C6287) * C13646) *
               C13647 +
           ((C6403 - (C6394 + C6393) + C6404) * C13645 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C13646) *
               C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C31932 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C31722) *
              C299 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C31932 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            ((C1686 + C1687 - C1702 - C1703) * C13645 +
             (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C31722) *
              C300 +
          (((C857 * C13645 + (C841 + C840 - C839 - C842) * C13646) * C13647 +
            (C14410 * C13645 + (C1037 + C1038 - C1054 - C1055) * C13646) *
                C13648) *
               C31932 +
           ((C1057 * C13645 + (C1054 - (C1038 + C1037) + C1055) * C13646) *
                C13647 +
            ((C1704 - (C1693 + C1692) + C1705) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C825 -
              (C377 * C31933 + C378 * C824) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C2436 +
             (C113 * C123 + C31856 * C136) * C2432 -
             (C113 * C508 + C31856 * C518) * C2437 -
             (C113 * C519 + C31856 * C538) * C2433 +
             (C113 * C509 + C31856 * C520) * C2438 +
             (C113 * C521 + C31856 * C539) * C2434 -
             (C113 * C2136 + C31856 * C2142) * C2439 -
             (C113 * C2143 + C31856 * C2154) * C31979) *
                C13645 +
            (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
                C13646) *
               C13647 +
           ((C7090 + C7091 - C7092 - C7093 + C7094 + C7095 - C7114 - C7115) *
                C13645 +
            (C15951 + C15952 - C15953 - C15954 + C15955 + C15956 - C15963 -
             C15964) *
                C13646) *
               C13648) *
              C31932 +
          (((C7092 - (C7091 + C7090) + C7093 - C7094 - C7095 + C7114 + C7115) *
                C13645 +
            (C15953 - (C15952 + C15951) + C15954 - C15955 - C15956 + C15963 +
             C15964) *
                C13646) *
               C13647 +
           ((C7102 - (C7101 + C7100) + C7103 - C7104 - C7105 + C7116 + C7117) *
                C13645 +
            (C1698 * C2437 - (C372 * C2432 + C371 * C2436) + C1699 * C2433 -
             C6882 * C2438 - C6883 * C2434 +
             (C113 * C6983 + C31856 * C6984) * C2439 +
             (C113 * C6985 + C31856 * C6986) * C31979) *
                C13646) *
               C13648) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C13645 +
                (C174 + C175) * C13646) *
                   C13647 +
               ((C5156 + C5157) * C13645 + (C382 + C381) * C13646) * C13648) *
                  C31660 * C108 -
              ((C391 * C13646 + (C381 + C382) * C13645) * C13648 +
               ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
                  C31660 * C109 +
              ((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
               ((C380 + C379) * C13645 + C716 * C13646) * C13648) *
                  C31660 * C110 -
              (((C723 + C724) * C13646 + (C388 + C387) * C13645) * C13648 +
               ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
                  C31660 * C111 +
              ((C186 * C13645 + (C183 + C182) * C13646) * C13647 +
               ((C724 + C723) * C13645 +
                ((C113 * C711 + C31856 * C712) * C114 +
                 (C113 * C713 + C31856 * C714) * C31677) *
                    C13646) *
                   C13648) *
                  C31660 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31856 * C122) * C114 +
                  (C113 * C123 + C31856 * C136) * C31677) *
                     C13645 +
                 (C174 + C175) * C13646) *
                    C13647 +
                ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
                   C32000 -
               ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
                (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
                   C31988 +
               ((C5162 * C13645 + C13798 * C13646) * C13647 +
                ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
                   C31963) *
                  C299 +
              (((C13796 * C13645 + C13799 * C13646) * C13647 +
                (C13798 * C13645 + C392 * C13646) * C13648) *
                   C31988 -
               ((C391 * C13646 + C13797 * C13645) * C13648 +
                ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
                   C32000 -
               (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
                (C13800 * C13646 + C5147 * C13645) * C13647) *
                   C31963) *
                  C300 +
              (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
                (C13799 * C13645 + C716 * C13646) * C13648) *
                   C32000 -
               (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
                ((C388 + C387) * C13646 + C391 * C13645) * C13647) *
                   C31988 +
               ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
                ((C1533 + C1532) * C13645 +
                 ((C113 * C1515 + C31856 * C1516) * C114 +
                  (C113 * C1517 + C31856 * C1518) * C31677) *
                     C13646) *
                    C13648) *
                   C31963) *
                  C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C13646) *
               C13647 +
           ((C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C13645 +
            (C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C13646) *
               C13648) *
              C31660 * C299 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C13645 +
            (C596 - (C560 + C559) + C597 - C598 - C599) * C13646) *
               C13647 +
           ((C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C13645 +
            (C2943 - (C2944 + C2945) + C2946 - C2947 - C2948) * C13646) *
               C13648) *
              C31660 * C300 +
          ((C607 * C13645 +
            (C572 + C571 - C600 - C601 + C602 + C603) * C13646) *
               C13647 +
           ((C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C13645 +
            (C375 * C505 + C376 * C32001 - C1048 * C506 - C1049 * C31990 +
             (C113 * C2306 + C31856 * C2307) * C507 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C13646) *
               C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1167 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1168 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C31997 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1168 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1167 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C31984 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C1167 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C1168 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
              C1235 -
          ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
           (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
              C1236 +
          ((C5162 * C13645 + C13798 * C13646) * C13647 +
           ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
              C1237 -
          (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
           ((C1534 + C1535) * C13646 + C5816 * C13645) * C13647) *
              C1238 +
          ((C5834 * C13645 + (C6117 + C6116) * C13646) * C13647 +
           ((C5833 + C5832) * C13645 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C13646) *
               C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C13646) *
               C13647 +
           ((C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C13645 +
            (C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C13646) *
               C13648) *
              C1167 +
          (((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C13645 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C13646) *
               C13647 +
           ((C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C13645 +
            (C7460 - (C7461 + C7462) + C7463 - C7464 - C7465) * C13646) *
               C13648) *
              C1168 +
          ((C6004 * C13645 +
            (C7462 + C7461 - C7460 - C7463 + C7464 + C7465) * C13646) *
               C13647 +
           ((C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C13645 +
            (C1531 * C505 + C1530 * C32001 - C6282 * C506 - C6283 * C31990 +
             (C113 * C6869 + C31856 * C6870) * C507 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C13646) *
               C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C13646) *
               C13647 +
           ((C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C13645 +
            (C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C13646) *
               C13648) *
              C31660 * C31997 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C13645 +
            (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C13646) *
               C13647 +
           ((C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C13645 +
            (C2319 - (C2320 + C2321) + C2322 - C2333 - C2334) * C13646) *
               C13648) *
              C31660 * C31984 +
          ((C1954 * C13645 +
            (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C13646) *
               C13647 +
           ((C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C13645 +
            (C375 * C1928 + C376 * C1925 - C1048 * C1929 - C1049 * C1926 +
             (C113 * C2306 + C31856 * C2307) * C1930 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C13646) *
               C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C13646) *
               C13647 +
           ((C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C13645 +
            (C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C13646) *
               C13648) *
              C32000 +
          (((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C13645 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C13646) *
               C13647 +
           ((C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C13645 +
            (C6874 - (C6875 + C6876) + C6877 - C6884 - C6885) * C13646) *
               C13648) *
              C31988 +
          ((C6648 * C13645 +
            (C6876 + C6875 - C6874 - C6877 + C6884 + C6885) * C13646) *
               C13647 +
           ((C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C13645 +
            (C1531 * C1928 + C1530 * C1925 - C6282 * C1929 - C6283 * C1926 +
             (C113 * C6869 + C31856 * C6870) * C1930 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C13646) *
               C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2131 +
            (C113 * C123 + C31856 * C136) * C2126 -
            (C113 * C508 + C31856 * C518) * C2132 -
            (C113 * C519 + C31856 * C538) * C2127 +
            (C113 * C509 + C31856 * C520) * C2133 +
            (C113 * C521 + C31856 * C539) * C2128 -
            (C113 * C2136 + C31856 * C2142) * C2134 -
            (C113 * C2143 + C31856 * C2154) * C2129 +
            (C113 * C2137 + C31856 * C2144) * C2135 +
            (C113 * C2145 + C31856 * C2155) * C2130) *
               C13645 +
           (C164 * C2131 + C165 * C2126 - C579 * C2132 - C580 * C2127 +
            C581 * C2133 + C582 * C2128 - C2465 * C2134 - C2466 * C2129 +
            (C113 * C2139 + C31856 * C2148) * C2135 +
            (C113 * C2149 + C31856 * C2157) * C2130) *
               C13646) *
              C13647 +
          ((C5149 * C2131 + C5150 * C2126 - C5628 * C2132 - C5629 * C2127 +
            C5984 * C2133 + C5985 * C2128 - C7110 * C2134 - C7111 * C2129 +
            (C113 * C6711 + C31856 * C6714) * C2135 +
            (C113 * C6715 + C31856 * C6720) * C2130) *
               C13645 +
           (C370 * C2131 + C369 * C2126 - C1043 * C2132 - C1044 * C2127 +
            C2327 * C2133 + C2328 * C2128 -
            (C113 * C2571 + C31856 * C2575) * C2134 -
            (C113 * C2576 + C31856 * C2580) * C2129 +
            (C113 * C11123 + C31856 * C11124) * C2135 +
            (C113 * C11125 + C31856 * C11126) * C2130) *
               C13646) *
              C13648) *
         C31660 * C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C1167 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C1168 +
           ((C6284 * C13645 + C15112 * C13646) * C13647 +
            ((C6271 + C6270 - C6269 - C6272) * C13645 +
             (C6274 + C6275 - C6286 - C6287) * C13646) *
                C13648) *
               C31963) *
              C31918 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C1167 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            (C15112 * C13645 + (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C1168 +
           ((C6285 * C13645 + (C1704 - (C1693 + C1692) + C1705) * C13646) *
                C13647 +
            ((C6286 - (C6275 + C6274) + C6287) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C825 -
              (C1528 * C31933 + C1529 * C824) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C831 + C832 - C833 - C834) * C13646) *
               C13647 +
           ((C5616 + C5617 - C5632 - C5633) * C13645 +
            (C1028 + C1027 - C1050 - C1051) * C13646) *
               C13648) *
              C31660 * C707 +
          (((C833 - (C832 + C831) + C834) * C13645 +
            (C837 - (C836 + C835) + C838) * C13646) *
               C13647 +
           ((C1050 - (C1027 + C1028) + C1051) * C13645 + C1057 * C13646) *
               C13648) *
              C31660 * C708 +
          ((C857 * C13645 + (C841 + C840 - C839 - C842) * C13646) * C13647 +
           ((C1034 + C1033 - C1052 - C1053) * C13645 +
            (C1037 + C1038 - C1054 - C1055) * C13646) *
               C13648) *
              C31660 * C709 +
          ((C858 * C13645 + (C855 - (C844 + C843) + C856) * C13646) * C13647 +
           ((C1054 - (C1038 + C1037) + C1055) * C13645 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C13646) *
               C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C2436 +
             (C113 * C123 + C31856 * C136) * C2432 -
             (C113 * C508 + C31856 * C518) * C2437 -
             (C113 * C519 + C31856 * C538) * C2433 +
             (C113 * C509 + C31856 * C520) * C2438 +
             (C113 * C521 + C31856 * C539) * C2434 -
             (C113 * C2136 + C31856 * C2142) * C2439 -
             (C113 * C2143 + C31856 * C2154) * C31979) *
                C13645 +
            (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
                C13646) *
               C13647 +
           ((C7090 + C7091 - C7092 - C7093 + C7094 + C7095 - C7114 - C7115) *
                C13645 +
            (C15951 + C15952 - C15953 - C15954 + C15955 + C15956 - C15963 -
             C15964) *
                C13646) *
               C13648) *
              C31660 * C31918 +
          (((C2447 - (C2446 + C2445) + C2448 - C2449 - C2450 + C2469 + C2470) *
                C13645 +
            (C2457 - (C2456 + C2455) + C2458 - C2459 - C2460 + C2471 + C2472) *
                C13646) *
               C13647 +
           ((C15953 - (C15952 + C15951) + C15954 - C15955 - C15956 + C15963 +
             C15964) *
                C13645 +
            (C1045 * C2437 - (C367 * C2432 + C368 * C2436) + C1047 * C2433 -
             C2329 * C2438 - C2330 * C2434 +
             (C113 * C2572 + C31856 * C2577) * C2439 +
             (C113 * C2578 + C31856 * C2581) * C31979) *
                C13646) *
               C13648) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C32000 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31988 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C299 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31988 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C32000 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C300 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C32000 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            ((C388 + C387) * C13646 + C391 * C13645) * C13647) *
               C31988 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + (C382 + C381) * C13646) * C13648) *
              C31660 * C108 -
          ((C391 * C13646 + (C381 + C382) * C13645) * C13648 +
           ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
              C31660 * C109 +
          ((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
           ((C380 + C379) * C13645 + C716 * C13646) * C13648) *
              C31660 * C110 -
          (((C723 + C724) * C13646 + (C388 + C387) * C13645) * C13648 +
           ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
              C31660 * C111 +
          ((C186 * C13645 + (C183 + C182) * C13646) * C13647 +
           ((C724 + C723) * C13645 + ((C113 * C711 + C31856 * C712) * C114 +
                                      (C113 * C713 + C31856 * C714) * C31677) *
                                         C13646) *
               C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1167 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1168 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C31997 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1168 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1167 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C31984 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C1167 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C1168 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
              C1235 -
          ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
           (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
              C1236 +
          ((C5162 * C13645 + C13798 * C13646) * C13647 +
           ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
              C1237 -
          (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
           ((C1534 + C1535) * C13646 + C5816 * C13645) * C13647) *
              C1238 +
          ((C5834 * C13645 + (C6117 + C6116) * C13646) * C13647 +
           ((C5833 + C5832) * C13645 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C13646) *
               C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C13646) *
               C13647 +
           ((C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C13645 +
            (C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C13646) *
               C13648) *
              C31660 * C31997 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C13645 +
            (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C13646) *
               C13647 +
           ((C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C13645 +
            (C2319 - (C2320 + C2321) + C2322 - C2333 - C2334) * C13646) *
               C13648) *
              C31660 * C31984 +
          ((C1954 * C13645 +
            (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C13646) *
               C13647 +
           ((C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C13645 +
            (C375 * C1928 + C376 * C1925 - C1048 * C1929 - C1049 * C1926 +
             (C113 * C2306 + C31856 * C2307) * C1930 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C13646) *
               C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C13646) *
               C13647 +
           ((C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C13645 +
            (C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C13646) *
               C13648) *
              C32000 +
          (((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C13645 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C13646) *
               C13647 +
           ((C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C13645 +
            (C6874 - (C6875 + C6876) + C6877 - C6884 - C6885) * C13646) *
               C13648) *
              C31988 +
          ((C6648 * C13645 +
            (C6876 + C6875 - C6874 - C6877 + C6884 + C6885) * C13646) *
               C13647 +
           ((C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C13645 +
            (C1531 * C1928 + C1530 * C1925 - C6282 * C1929 - C6283 * C1926 +
             (C113 * C6869 + C31856 * C6870) * C1930 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C13646) *
               C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C31932 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31722) *
              C31638 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C31932 +
           ((C17423 * C13645 + C17760 * C13646) * C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31722) *
              C31646 +
          (((C3479 * C13645 + (C3469 + C3468 - C3467 - C3470) * C13646) *
                C13647 +
            (C17760 * C13645 + (C3912 + C3913 - C3914 - C3915) * C13646) *
                C13648) *
               C31932 +
           ((C3917 * C13645 + (C3914 - (C3913 + C3912) + C3915) * C13646) *
                C13647 +
            ((C3641 - (C3640 + C3639) + C3642) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C3457 -
              (C377 * C3454 + C378 * C3456) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C30451 +
              (C113 * C123 + C31856 * C136) * C31760 -
              (C113 * C508 + C31856 * C518) * C30443 -
              (C113 * C519 + C31856 * C538) * C31767 +
              (C113 * C509 + C31856 * C520) * C30457 +
              (C113 * C521 + C31856 * C539) * C4029) *
                 C13645 +
             (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C13646) *
                C13647 +
            ((C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C13645 +
             C18109 * C13646) *
                C13648) *
               C31932 +
           (((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C13645 +
             C18110 * C13646) *
                C13647 +
            ((C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C13645 +
             (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C13646) *
                C13648) *
               C31722) *
              C2788 +
          ((((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C13645 +
             (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C13646) *
                C13647 +
            (C18110 * C13645 +
             (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C13646) *
                C13648) *
               C31932 +
           ((C18109 * C13645 +
             (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C13646) *
                C13647 +
            ((C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C13645 +
             (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
              (C113 * C1383 + C31856 * C1400) * C30457 +
              (C113 * C1401 + C31856 * C1410) * C4029) *
                 C13646) *
                C13648) *
               C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C32000 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31988 +
           ((C8133 * C13645 + C17425 * C13646) * C13647 +
            ((C8122 + C8121 - C8120 - C8123) * C13645 +
             (C8125 + C8126 - C8127 - C8128) * C13646) *
                C13648) *
               C31963) *
              C2788 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C32000 +
           ((C17423 * C13645 + (C3633 + C3632 - C3631 - C3634) * C13646) *
                C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31988 +
           ((C8132 * C13645 + (C3641 - (C3640 + C3639) + C3642) * C13646) *
                C13647 +
            ((C8127 - (C8126 + C8125) + C8128) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C3457 -
              (C1528 * C3454 + C1529 * C3456) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C3459 + C3460 - C3461 - C3462) * C13646) *
               C13647 +
           ((C8112 + C8113 - C8114 - C8115) * C13645 +
            (C3629 + C3628 - C3627 - C3630) * C13646) *
               C13648) *
              C31660 * C32006 +
          (((C3461 - (C3460 + C3459) + C3462) * C13645 +
            (C3465 - (C3464 + C3463) + C3466) * C13646) *
               C13647 +
           ((C3627 - (C3628 + C3629) + C3630) * C13645 + C3917 * C13646) *
               C13648) *
              C31660 * C31999 +
          ((C3479 * C13645 + (C3469 + C3468 - C3467 - C3470) * C13646) *
               C13647 +
           ((C3633 + C3632 - C3631 - C3634) * C13645 +
            (C3912 + C3913 - C3914 - C3915) * C13646) *
               C13648) *
              C31660 * C31986 +
          ((C3480 * C13645 + (C3473 - (C3472 + C3471) + C3474) * C13646) *
               C13647 +
           ((C3914 - (C3913 + C3912) + C3915) * C13645 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C13646) *
               C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3744 +
             (C113 * C123 + C31856 * C136) * C32008 -
             (C113 * C508 + C31856 * C518) * C3745 -
             (C113 * C519 + C31856 * C538) * C32005 +
             (C113 * C509 + C31856 * C520) * C3746 +
             (C113 * C521 + C31856 * C539) * C31996 -
             (C113 * C2136 + C31856 * C2142) * C3747 -
             (C113 * C2143 + C31856 * C2154) * C31979) *
                C13645 +
            (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
                C13646) *
               C13647 +
           ((C9004 + C9005 - C9006 - C9007 + C9008 + C9009 - C9010 - C9011) *
                C13645 +
            (C17556 + C17557 - C17558 - C17559 + C17560 + C17561 - C17562 -
             C17563) *
                C13646) *
               C13648) *
              C31660 * C2788 +
          (((C3751 - (C3750 + C3749) + C3752 - C3753 - C3754 + C3755 + C3756) *
                C13645 +
            (C3759 - (C3758 + C3757) + C3760 - C3761 - C3762 + C3763 + C3764) *
                C13646) *
               C13647 +
           ((C17558 - (C17557 + C17556) + C17559 - C17560 - C17561 + C17562 +
             C17563) *
                C13645 +
            (C1045 * C3745 - (C367 * C32008 + C368 * C3744) + C1047 * C32005 -
             C2329 * C3746 - C2330 * C31996 +
             (C113 * C2572 + C31856 * C2577) * C3747 +
             (C113 * C2578 + C31856 * C2581) * C31979) *
                C13646) *
               C13648) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C13645 +
            (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C13646) *
               C13647 +
           ((C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C13645 +
            (C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C13646) *
               C13648) *
              C31660 * C31638 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C13645 +
            (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C13646) *
               C13647 +
           ((C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C13645 +
            (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C13646) *
               C13648) *
              C31660 * C31646 +
          ((C4056 * C13645 +
            (C4048 + C4047 - C4046 - C4049 + C4050 + C4051) * C13646) *
               C13647 +
           ((C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C13645 +
            (C375 * C30451 + C376 * C31760 - C1048 * C30443 - C1049 * C31767 +
             (C113 * C2306 + C31856 * C2307) * C30457 +
             (C113 * C2308 + C31856 * C2309) * C4029) *
                C13646) *
               C13648) *
              C31660 * C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C3459 + C3460 - C3461 - C3462) * C13646) *
               C13647 +
           ((C8112 + C8113 - C8114 - C8115) * C13645 +
            (C3629 + C3628 - C3627 - C3630) * C13646) *
               C13648) *
              C31660 * C32006 +
          (((C3461 - (C3460 + C3459) + C3462) * C13645 +
            (C3465 - (C3464 + C3463) + C3466) * C13646) *
               C13647 +
           ((C3627 - (C3628 + C3629) + C3630) * C13645 + C3917 * C13646) *
               C13648) *
              C31660 * C31999 +
          ((C3479 * C13645 + (C3469 + C3468 - C3467 - C3470) * C13646) *
               C13647 +
           ((C3633 + C3632 - C3631 - C3634) * C13645 +
            (C3912 + C3913 - C3914 - C3915) * C13646) *
               C13648) *
              C31660 * C31986 +
          ((C3480 * C13645 + (C3473 - (C3472 + C3471) + C3474) * C13646) *
               C13647 +
           ((C3914 - (C3913 + C3912) + C3915) * C13645 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C13646) *
               C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C3456 +
              (C113 * C123 + C31856 * C136) * C3454 -
              (C113 * C508 + C31856 * C518) * C3457 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C3459 + C3460 - C3461 - C3462) * C13646) *
                C13647 +
            ((C8112 + C8113 - C8114 - C8115) * C13645 + C17423 * C13646) *
                C13648) *
               C32000 +
           (((C8114 - (C8113 + C8112) + C8115) * C13645 + C17424 * C13646) *
                C13647 +
            ((C8118 - (C8117 + C8116) + C8119) * C13645 + C8132 * C13646) *
                C13648) *
               C31988 +
           ((C8133 * C13645 + C17425 * C13646) * C13647 +
            ((C8122 + C8121 - C8120 - C8123) * C13645 +
             (C8125 + C8126 - C8127 - C8128) * C13646) *
                C13648) *
               C31963) *
              C2788 +
          ((((C3461 - (C3460 + C3459) + C3462) * C13645 +
             (C3465 - (C3464 + C3463) + C3466) * C13646) *
                C13647 +
            (C17424 * C13645 + C3917 * C13646) * C13648) *
               C32000 +
           ((C17423 * C13645 + (C3633 + C3632 - C3631 - C3634) * C13646) *
                C13647 +
            (C17425 * C13645 + (C3639 + C3640 - C3641 - C3642) * C13646) *
                C13648) *
               C31988 +
           ((C8132 * C13645 + (C3641 - (C3640 + C3639) + C3642) * C13646) *
                C13647 +
            ((C8127 - (C8126 + C8125) + C8128) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C3457 -
              (C1528 * C3454 + C1529 * C3456) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C31932 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31722) *
              C707 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31722 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C31932) *
              C708 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C31932 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C31722) *
              C709 +
          (((C716 * C13645 + (C724 + C723) * C13646) * C13647 +
            ((C390 + C389) * C13645 + ((C113 * C311 + C31856 * C330) * C114 +
                                       (C113 * C331 + C31856 * C341) * C31677) *
                                          C13646) *
                C13648) *
               C31722 -
           (((C723 + C724) * C13646 + C14077 * C13645) * C13648 +
            ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1509 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1510 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C1511 -
           (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
            (C14915 * C13646 + C5816 * C13645) * C13647) *
               C31973) *
              C31918 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1510 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1509 -
           (((C1532 + C1533) * C13646 + C14915 * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C1511 +
           ((C6108 * C13645 + (C1533 + C1532) * C13646) * C13647 +
            ((C6117 + C6116) * C13645 +
             ((C113 * C1246 + C31856 * C1257) * C114 +
              (C113 * C1258 + C31856 * C1264) * C31677) *
                 C13646) *
                C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C31932 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C31722) *
              C299 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C31932 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            ((C1686 + C1687 - C1702 - C1703) * C13645 +
             (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C31722) *
              C300 +
          (((C857 * C13645 + (C841 + C840 - C839 - C842) * C13646) * C13647 +
            (C14410 * C13645 + (C1037 + C1038 - C1054 - C1055) * C13646) *
                C13648) *
               C31932 +
           ((C1057 * C13645 + (C1054 - (C1038 + C1037) + C1055) * C13646) *
                C13647 +
            ((C1704 - (C1693 + C1692) + C1705) * C13645 +
             ((C113 * C1681 + C31856 * C1682) * C825 -
              (C377 * C31933 + C378 * C824) +
              (C113 * C1683 + C31856 * C1684) * C31764) *
                 C13646) *
                C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C831 + C832 - C833 - C834) * C13646) *
               C13647 +
           ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
               C13648) *
              C1509 +
          (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
               C13647 +
           ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
               C13648) *
              C1510 +
          ((C6284 * C13645 + C15112 * C13646) * C13647 +
           ((C6271 + C6270 - C6269 - C6272) * C13645 +
            (C6274 + C6275 - C6286 - C6287) * C13646) *
               C13648) *
              C1511 +
          ((C6402 * C13645 + (C6286 - (C6275 + C6274) + C6287) * C13646) *
               C13647 +
           ((C6403 - (C6394 + C6393) + C6404) * C13645 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C13646) *
               C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C32000 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31988 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C299 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31988 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C32000 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C300 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C32000 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            ((C388 + C387) * C13646 + C391 * C13645) * C13647) *
               C31988 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + (C382 + C381) * C13646) * C13648) *
              C31660 * C108 -
          ((C391 * C13646 + (C381 + C382) * C13645) * C13648 +
           ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
              C31660 * C109 +
          ((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
           ((C380 + C379) * C13645 + C716 * C13646) * C13648) *
              C31660 * C110 -
          (((C723 + C724) * C13646 + (C388 + C387) * C13645) * C13648 +
           ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
              C31660 * C111 +
          ((C186 * C13645 + (C183 + C182) * C13646) * C13647 +
           ((C724 + C723) * C13645 + ((C113 * C711 + C31856 * C712) * C114 +
                                      (C113 * C713 + C31856 * C714) * C31677) *
                                         C13646) *
               C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C13646) *
               C13647 +
           ((C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C13645 +
            (C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C13646) *
               C13648) *
              C31660 * C299 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C13645 +
            (C596 - (C560 + C559) + C597 - C598 - C599) * C13646) *
               C13647 +
           ((C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C13645 +
            (C2943 - (C2944 + C2945) + C2946 - C2947 - C2948) * C13646) *
               C13648) *
              C31660 * C300 +
          ((C607 * C13645 +
            (C572 + C571 - C600 - C601 + C602 + C603) * C13646) *
               C13647 +
           ((C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C13645 +
            (C375 * C505 + C376 * C32001 - C1048 * C506 - C1049 * C31990 +
             (C113 * C2306 + C31856 * C2307) * C507 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C13646) *
               C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1167 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1168 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C31997 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1168 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1167 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C31984 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C1167 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C1168 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
              C1235 -
          ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
           (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
              C1236 +
          ((C5162 * C13645 + C13798 * C13646) * C13647 +
           ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
              C1237 -
          (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
           ((C1534 + C1535) * C13646 + C5816 * C13645) * C13647) *
              C1238 +
          ((C5834 * C13645 + (C6117 + C6116) * C13646) * C13647 +
           ((C5833 + C5832) * C13645 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C13646) *
               C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C13645 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C13646) *
               C13647 +
           ((C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C13645 +
            (C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C13646) *
               C13648) *
              C1167 +
          (((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C13645 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C13646) *
               C13647 +
           ((C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C13645 +
            (C7460 - (C7461 + C7462) + C7463 - C7464 - C7465) * C13646) *
               C13648) *
              C1168 +
          ((C6004 * C13645 +
            (C7462 + C7461 - C7460 - C7463 + C7464 + C7465) * C13646) *
               C13647 +
           ((C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C13645 +
            (C1531 * C505 + C1530 * C32001 - C6282 * C506 - C6283 * C31990 +
             (C113 * C6869 + C31856 * C6870) * C507 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C13646) *
               C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C13645 +
            (C831 + C832 - C833 - C834) * C13646) *
               C13647 +
           ((C5616 + C5617 - C5632 - C5633) * C13645 +
            (C1028 + C1027 - C1050 - C1051) * C13646) *
               C13648) *
              C31660 * C707 +
          (((C833 - (C832 + C831) + C834) * C13645 +
            (C837 - (C836 + C835) + C838) * C13646) *
               C13647 +
           ((C1050 - (C1027 + C1028) + C1051) * C13645 + C1057 * C13646) *
               C13648) *
              C31660 * C708 +
          ((C857 * C13645 + (C841 + C840 - C839 - C842) * C13646) * C13647 +
           ((C1034 + C1033 - C1052 - C1053) * C13645 +
            (C1037 + C1038 - C1054 - C1055) * C13646) *
               C13648) *
              C31660 * C709 +
          ((C858 * C13645 + (C855 - (C844 + C843) + C856) * C13646) * C13647 +
           ((C1054 - (C1038 + C1037) + C1055) * C13645 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C13646) *
               C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C824 +
              (C113 * C123 + C31856 * C136) * C31933 -
              (C113 * C508 + C31856 * C518) * C825 -
              (C113 * C519 + C31856 * C538) * C31764) *
                 C13645 +
             (C831 + C832 - C833 - C834) * C13646) *
                C13647 +
            ((C5616 + C5617 - C5632 - C5633) * C13645 + C14408 * C13646) *
                C13648) *
               C1167 +
           (((C5632 - (C5617 + C5616) + C5633) * C13645 + C14409 * C13646) *
                C13647 +
            ((C5634 - (C5623 + C5622) + C5635) * C13645 + C6285 * C13646) *
                C13648) *
               C1168 +
           ((C6284 * C13645 + C15112 * C13646) * C13647 +
            ((C6271 + C6270 - C6269 - C6272) * C13645 +
             (C6274 + C6275 - C6286 - C6287) * C13646) *
                C13648) *
               C31963) *
              C31918 +
          ((((C833 - (C832 + C831) + C834) * C13645 +
             (C837 - (C836 + C835) + C838) * C13646) *
                C13647 +
            (C14409 * C13645 + C1057 * C13646) * C13648) *
               C1167 +
           ((C14408 * C13645 + C14410 * C13646) * C13647 +
            (C15112 * C13645 + (C1692 + C1693 - C1704 - C1705) * C13646) *
                C13648) *
               C1168 +
           ((C6285 * C13645 + (C1704 - (C1693 + C1692) + C1705) * C13646) *
                C13647 +
            ((C6286 - (C6275 + C6274) + C6287) * C13645 +
             ((C113 * C1805 + C31856 * C1810) * C825 -
              (C1528 * C31933 + C1529 * C824) +
              (C113 * C1811 + C31856 * C1814) * C31764) *
                 C13646) *
                C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + (C382 + C381) * C13646) * C13648) *
              C31660 * C108 -
          ((C391 * C13646 + (C381 + C382) * C13645) * C13648 +
           ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
              C31660 * C109 +
          ((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
           ((C380 + C379) * C13645 + C716 * C13646) * C13648) *
              C31660 * C110 -
          (((C723 + C724) * C13646 + (C388 + C387) * C13645) * C13648 +
           ((C181 + C180) * C13646 + C185 * C13645) * C13647) *
              C31660 * C111 +
          ((C186 * C13645 + (C183 + C182) * C13646) * C13647 +
           ((C724 + C723) * C13645 + ((C113 * C711 + C31856 * C712) * C114 +
                                      (C113 * C713 + C31856 * C714) * C31677) *
                                         C13646) *
               C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C32000 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C31988 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C299 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C31988 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C32000 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C300 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C32000 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            ((C388 + C387) * C13646 + C391 * C13645) * C13647) *
               C31988 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31856 * C122) * C114 +
              (C113 * C123 + C31856 * C136) * C31677) *
                 C13645 +
             (C174 + C175) * C13646) *
                C13647 +
            ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
               C1167 -
           ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
            (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
               C1168 +
           ((C5162 * C13645 + C13798 * C13646) * C13647 +
            ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
               C31963) *
              C31997 +
          (((C13796 * C13645 + C13799 * C13646) * C13647 +
            (C13798 * C13645 + C392 * C13646) * C13648) *
               C1168 -
           ((C391 * C13646 + C13797 * C13645) * C13648 +
            ((C177 + C176) * C13646 + (C175 + C174) * C13645) * C13647) *
               C1167 -
           (((C1532 + C1533) * C13646 + (C1534 + C1535) * C13645) * C13648 +
            (C13800 * C13646 + C5147 * C13645) * C13647) *
               C31963) *
              C31984 +
          (((C184 * C13645 + (C179 + C178) * C13646) * C13647 +
            (C13799 * C13645 + C716 * C13646) * C13648) *
               C1167 -
           (((C389 + C390) * C13646 + C13800 * C13645) * C13648 +
            (C14077 * C13646 + C391 * C13645) * C13647) *
               C1168 +
           ((C392 * C13645 + (C390 + C389) * C13646) * C13647 +
            ((C1533 + C1532) * C13645 +
             ((C113 * C1515 + C31856 * C1516) * C114 +
              (C113 * C1517 + C31856 * C1518) * C31677) *
                 C13646) *
                C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C13645 +
            (C174 + C175) * C13646) *
               C13647 +
           ((C5156 + C5157) * C13645 + C13796 * C13646) * C13648) *
              C1235 -
          ((C5147 * C13646 + (C5159 + C5158) * C13645) * C13648 +
           (C13797 * C13646 + (C5157 + C5156) * C13645) * C13647) *
              C1236 +
          ((C5162 * C13645 + C13798 * C13646) * C13647 +
           ((C5161 + C5160) * C13645 + C6108 * C13646) * C13648) *
              C1237 -
          (((C6116 + C6117) * C13646 + (C5831 + C5830) * C13645) * C13648 +
           ((C1534 + C1535) * C13646 + C5816 * C13645) * C13647) *
              C1238 +
          ((C5834 * C13645 + (C6117 + C6116) * C13646) * C13647 +
           ((C5833 + C5832) * C13645 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C13646) *
               C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C31718 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31725 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
                C13648) *
               C3060) *
              C31638 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31725 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C31718 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C3060) *
              C31646 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C31718 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31725 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C3060) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C31718 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31725 +
           (((C25042 + C25041) * C824 + (C25040 + C25039) * C31933 -
             (C26082 + C26081) * C825 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C824 + (C25901 + C25902) * C31933 -
             (C26551 + C26552) * C825 - (C26553 + C26554) * C31764) *
                C31615 * C13648) *
               C3060) *
              C2788 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C31718 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31725 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C825 -
             ((C20635 + C20636) * C31933 + (C20637 + C20638) * C824) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C32007 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C32003 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
                C13648) *
               C31993 -
           (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
                C13648 +
            ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
                C13647) *
               C31973) *
              C2788 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C32003 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C32007 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31993 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
              C19181 * C6264) *
                 C114 +
             (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
              C19181 * C6266) *
                 C31677) *
                C31615 * C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C2680 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31722) *
              C32006 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31722 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C2680) *
              C31999 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C2680 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31722) *
              C31986 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C31615 *
                C13647 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C31615 * C13648) *
               C31722 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
                C13648 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
                C13647) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C505 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C32001 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C506 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31990 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C507 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C31966) *
                C31615 * C13647 +
            ((C25035 + C25036) * C505 + (C25037 + C25038) * C32001 -
             (C25651 + C25652) * C506 - (C25653 + C25654) * C31990 +
             (C26077 + C26078) * C507 + (C26079 + C26080) * C31966) *
                C31615 * C13648) *
               C2680 +
           (((C25652 + C25651) * C506 -
             ((C25038 + C25037) * C32001 + (C25036 + C25035) * C505) +
             (C25654 + C25653) * C31990 - (C26078 + C26077) * C507 -
             (C26080 + C26079) * C31966) *
                C31615 * C13647 +
            ((C26081 + C26082) * C506 -
             ((C25039 + C25040) * C32001 + (C25041 + C25042) * C505) +
             (C26083 + C26084) * C31990 - (C26085 + C26086) * C507 -
             (C26087 + C26088) * C31966) *
                C31615 * C13648) *
               C31722) *
              C2788 +
          ((((C19606 + C19605) * C506 -
             ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
             (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
             (C19612 + C19611) * C31966) *
                C31615 * C13647 +
            ((C20115 + C20116) * C506 -
             ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
             (C20117 + C20118) * C31990 - (C21551 + C21552) * C507 -
             (C21553 + C21554) * C31966) *
                C31615 * C13648) *
               C2680 +
           (((C19414 + C19413) * C505 + (C19412 + C19411) * C32001 -
             (C20116 + C20115) * C506 - (C20118 + C20117) * C31990 +
             (C21552 + C21551) * C507 + (C21554 + C21553) * C31966) *
                C31615 * C13647 +
            ((C19415 + C19416) * C505 + (C19417 + C19418) * C32001 -
             (C20841 + C20842) * C506 - (C20843 + C20844) * C31990 +
             (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
              C19181 * C6984) *
                 C507 +
             (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
              C19181 * C6986) *
                 C31966) *
                C31615 * C13648) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31638 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31646 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C2680 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31722) *
              C32006 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31722 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C2680) *
              C31999 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C2680 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31722) *
              C31986 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C31615 *
                C13647 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C31615 * C13648) *
               C31722 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
                C13648 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
                C13647) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C32007 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C32003 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
                C13648) *
               C31993 -
           (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
                C13648 +
            ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
                C13647) *
               C31973) *
              C2788 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C32003 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C32007 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31993 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
              C19181 * C6264) *
                 C114 +
             (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
              C19181 * C6266) *
                 C31677) *
                C31615 * C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C31718 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31725 +
           (((C25042 + C25041) * C3456 + (C25040 + C25039) * C3454 -
             (C26082 + C26081) * C3457 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C3456 + (C25901 + C25902) * C3454 -
             (C26551 + C26552) * C3457 - (C26553 + C26554) * C31764) *
                C31615 * C13648) *
               C3060) *
              C31918 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C31718 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31725 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C3457 -
             ((C20635 + C20636) * C3454 + (C20637 + C20638) * C3456) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C30451 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31760 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C30443 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31767 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C30457 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C4029) *
               C31615 * C13647 +
           ((C25035 + C25036) * C30451 + (C25037 + C25038) * C31760 -
            (C25651 + C25652) * C30443 - (C25653 + C25654) * C31767 +
            (C26077 + C26078) * C30457 + (C26079 + C26080) * C4029) *
               C31615 * C13648) *
              C31718 +
          (((C25652 + C25651) * C30443 -
            ((C25038 + C25037) * C31760 + (C25036 + C25035) * C30451) +
            (C25654 + C25653) * C31767 - (C26078 + C26077) * C30457 -
            (C26080 + C26079) * C4029) *
               C31615 * C13647 +
           ((C26081 + C26082) * C30443 -
            ((C25039 + C25040) * C31760 + (C25041 + C25042) * C30451) +
            (C26083 + C26084) * C31767 - (C26085 + C26086) * C30457 -
            (C26087 + C26088) * C4029) *
               C31615 * C13648) *
              C31725 +
          (((C25042 + C25041) * C30451 + (C25040 + C25039) * C31760 -
            (C26082 + C26081) * C30443 - (C26084 + C26083) * C31767 +
            (C26086 + C26085) * C30457 + (C26088 + C26087) * C4029) *
               C31615 * C13647 +
           ((C25899 + C25900) * C30451 + (C25901 + C25902) * C31760 -
            (C26551 + C26552) * C30443 - (C26553 + C26554) * C31767 +
            (C19182 * C5945 + C19180 * C5948 + C19183 * C7085 +
             C19181 * C7086) *
                C30457 +
            (C19182 * C5949 + C19180 * C5954 + C19183 * C7087 +
             C19181 * C7088) *
                C4029) *
               C31615 * C13648) *
              C3060) *
         C31633) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
            (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C32007 +
          (((C25652 + C25651) * C3457 -
            ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
            (C25654 + C25653) * C31764) *
               C31615 * C13647 +
           ((C26081 + C26082) * C3457 -
            ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
            (C26083 + C26084) * C31764) *
               C31615 * C13648) *
              C32003 +
          (((C25042 + C25041) * C3456 + (C25040 + C25039) * C3454 -
            (C26082 + C26081) * C3457 - (C26084 + C26083) * C31764) *
               C31615 * C13647 +
           ((C25899 + C25900) * C3456 + (C25901 + C25902) * C3454 -
            (C26551 + C26552) * C3457 - (C26553 + C26554) * C31764) *
               C31615 * C13648) *
              C31993 +
          (((C26552 + C26551) * C3457 -
            ((C25902 + C25901) * C3454 + (C25900 + C25899) * C3456) +
            (C26554 + C26553) * C31764) *
               C31615 * C13647 +
           ((C19182 * C5946 + C19180 * C5950 + C19183 * C5947 +
             C19181 * C5952) *
                C3457 -
            ((C25903 + C25904) * C3454 + (C25905 + C25906) * C3456) +
            (C19182 * C5951 + C19180 * C5955 + C19183 * C5953 +
             C19181 * C5956) *
                C31764) *
               C31615 * C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31997 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31984 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3744 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32008 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3745 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C32005 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C3746 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31996 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C3747 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3744 + (C25037 + C25038) * C32008 -
            (C25651 + C25652) * C3745 - (C25653 + C25654) * C32005 +
            (C26077 + C26078) * C3746 + (C26079 + C26080) * C31996 -
            (C27391 + C27392) * C3747 - (C27393 + C27394) * C31979) *
               C31615 * C13648) *
              C2680 +
          (((C25652 + C25651) * C3745 -
            ((C25038 + C25037) * C32008 + (C25036 + C25035) * C3744) +
            (C25654 + C25653) * C32005 - (C26078 + C26077) * C3746 -
            (C26080 + C26079) * C31996 + (C27392 + C27391) * C3747 +
            (C27394 + C27393) * C31979) *
               C31615 * C13647 +
           ((C26081 + C26082) * C3745 -
            ((C25039 + C25040) * C32008 + (C25041 + C25042) * C3744) +
            (C26083 + C26084) * C32005 - (C26085 + C26086) * C3746 -
            (C26087 + C26088) * C31996 +
            (C19182 * C6712 + C19180 * C6716 + C19183 * C6713 +
             C19181 * C6718) *
                C3747 +
            (C19182 * C6717 + C19180 * C6721 + C19183 * C6719 +
             C19181 * C6722) *
                C31979) *
               C31615 * C13648) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C30451 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31760 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C30443 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31767 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C30457 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C4029) *
                C31615 * C13647 +
            ((C25035 + C25036) * C30451 + (C25037 + C25038) * C31760 -
             (C25651 + C25652) * C30443 - (C25653 + C25654) * C31767 +
             (C26077 + C26078) * C30457 + (C26079 + C26080) * C4029) *
                C31615 * C13648) *
               C2680 +
           (((C25652 + C25651) * C30443 -
             ((C25038 + C25037) * C31760 + (C25036 + C25035) * C30451) +
             (C25654 + C25653) * C31767 - (C26078 + C26077) * C30457 -
             (C26080 + C26079) * C4029) *
                C31615 * C13647 +
            ((C26081 + C26082) * C30443 -
             ((C25039 + C25040) * C31760 + (C25041 + C25042) * C30451) +
             (C26083 + C26084) * C31767 - (C26085 + C26086) * C30457 -
             (C26087 + C26088) * C4029) *
                C31615 * C13648) *
               C31722) *
              C31918 +
          ((((C19606 + C19605) * C30443 -
             ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
             (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
             (C19612 + C19611) * C4029) *
                C31615 * C13647 +
            ((C20115 + C20116) * C30443 -
             ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
             (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
             (C21553 + C21554) * C4029) *
                C31615 * C13648) *
               C2680 +
           (((C19414 + C19413) * C30451 + (C19412 + C19411) * C31760 -
             (C20116 + C20115) * C30443 - (C20118 + C20117) * C31767 +
             (C21552 + C21551) * C30457 + (C21554 + C21553) * C4029) *
                C31615 * C13647 +
            ((C19415 + C19416) * C30451 + (C19417 + C19418) * C31760 -
             (C20841 + C20842) * C30443 - (C20843 + C20844) * C31767 +
             (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
              C19181 * C6984) *
                 C30457 +
             (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
              C19181 * C6986) *
                 C4029) *
                C31615 * C13648) *
               C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31997 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31984 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C2680 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
            (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C32007 +
          (((C25652 + C25651) * C3457 -
            ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
            (C25654 + C25653) * C31764) *
               C31615 * C13647 +
           ((C26081 + C26082) * C3457 -
            ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
            (C26083 + C26084) * C31764) *
               C31615 * C13648) *
              C32003 +
          (((C25042 + C25041) * C3456 + (C25040 + C25039) * C3454 -
            (C26082 + C26081) * C3457 - (C26084 + C26083) * C31764) *
               C31615 * C13647 +
           ((C25899 + C25900) * C3456 + (C25901 + C25902) * C3454 -
            (C26551 + C26552) * C3457 - (C26553 + C26554) * C31764) *
               C31615 * C13648) *
              C31993 +
          (((C26552 + C26551) * C3457 -
            ((C25902 + C25901) * C3454 + (C25900 + C25899) * C3456) +
            (C26554 + C26553) * C31764) *
               C31615 * C13647 +
           ((C19182 * C5946 + C19180 * C5950 + C19183 * C5947 +
             C19181 * C5952) *
                C3457 -
            ((C25903 + C25904) * C3454 + (C25905 + C25906) * C3456) +
            (C19182 * C5951 + C19180 * C5955 + C19183 * C5953 +
             C19181 * C5956) *
                C31764) *
               C31615 * C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1509 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1510 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
                C13648) *
               C1511 -
           (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
                C13648 +
            ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
                C13647) *
               C31973) *
              C31918 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1510 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1509 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C1511 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
              C19181 * C6264) *
                 C114 +
             (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
              C19181 * C6266) *
                 C31677) *
                C31615 * C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C31932 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31722) *
              C707 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31722 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C31932) *
              C708 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C31932 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31722) *
              C709 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C31615 *
                C13647 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C31615 * C13648) *
               C31722 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
                C13648 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
                C13647) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C1928 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C1925 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C1929 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C1926 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C1930 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C31966) *
                C31615 * C13647 +
            ((C25035 + C25036) * C1928 + (C25037 + C25038) * C1925 -
             (C25651 + C25652) * C1929 - (C25653 + C25654) * C1926 +
             (C26077 + C26078) * C1930 + (C26079 + C26080) * C31966) *
                C31615 * C13648) *
               C31932 +
           (((C25652 + C25651) * C1929 -
             ((C25038 + C25037) * C1925 + (C25036 + C25035) * C1928) +
             (C25654 + C25653) * C1926 - (C26078 + C26077) * C1930 -
             (C26080 + C26079) * C31966) *
                C31615 * C13647 +
            ((C26081 + C26082) * C1929 -
             ((C25039 + C25040) * C1925 + (C25041 + C25042) * C1928) +
             (C26083 + C26084) * C1926 - (C26085 + C26086) * C1930 -
             (C26087 + C26088) * C31966) *
                C31615 * C13648) *
               C31722) *
              C31918 +
          ((((C19606 + C19605) * C1929 -
             ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
             (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
             (C19612 + C19611) * C31966) *
                C31615 * C13647 +
            ((C20115 + C20116) * C1929 -
             ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
             (C20117 + C20118) * C1926 - (C21551 + C21552) * C1930 -
             (C21553 + C21554) * C31966) *
                C31615 * C13648) *
               C31932 +
           (((C19414 + C19413) * C1928 + (C19412 + C19411) * C1925 -
             (C20116 + C20115) * C1929 - (C20118 + C20117) * C1926 +
             (C21552 + C21551) * C1930 + (C21554 + C21553) * C31966) *
                C31615 * C13647 +
            ((C19415 + C19416) * C1928 + (C19417 + C19418) * C1925 -
             (C20841 + C20842) * C1929 - (C20843 + C20844) * C1926 +
             (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
              C19181 * C6984) *
                 C1930 +
             (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
              C19181 * C6986) *
                 C31966) *
                C31615 * C13648) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
            (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C1509 +
          (((C25652 + C25651) * C825 -
            ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
            (C25654 + C25653) * C31764) *
               C31615 * C13647 +
           ((C26081 + C26082) * C825 -
            ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
            (C26083 + C26084) * C31764) *
               C31615 * C13648) *
              C1510 +
          (((C25042 + C25041) * C824 + (C25040 + C25039) * C31933 -
            (C26082 + C26081) * C825 - (C26084 + C26083) * C31764) *
               C31615 * C13647 +
           ((C25899 + C25900) * C824 + (C25901 + C25902) * C31933 -
            (C26551 + C26552) * C825 - (C26553 + C26554) * C31764) *
               C31615 * C13648) *
              C1511 +
          (((C26552 + C26551) * C825 -
            ((C25902 + C25901) * C31933 + (C25900 + C25899) * C824) +
            (C26554 + C26553) * C31764) *
               C31615 * C13647 +
           ((C19182 * C5946 + C19180 * C5950 + C19183 * C5947 +
             C19181 * C5952) *
                C825 -
            ((C25903 + C25904) * C31933 + (C25905 + C25906) * C824) +
            (C19182 * C5951 + C19180 * C5955 + C19183 * C5953 +
             C19181 * C5956) *
                C31764) *
               C31615 * C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1378 + C19180 * C1390 + C19183 * C1379 +
              C19181 * C1392) *
                 C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C19182 * C1391 + C19180 * C1405 + C19183 * C1393 +
              C19181 * C1406) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C299 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C300 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C2436 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C2432 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C2437 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C2433 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C2438 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C2434 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C2439 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C31615 * C13647 +
           ((C25035 + C25036) * C2436 + (C25037 + C25038) * C2432 -
            (C25651 + C25652) * C2437 - (C25653 + C25654) * C2433 +
            (C26077 + C26078) * C2438 + (C26079 + C26080) * C2434 -
            (C27391 + C27392) * C2439 - (C27393 + C27394) * C31979) *
               C31615 * C13648) *
              C31932 +
          (((C25652 + C25651) * C2437 -
            ((C25038 + C25037) * C2432 + (C25036 + C25035) * C2436) +
            (C25654 + C25653) * C2433 - (C26078 + C26077) * C2438 -
            (C26080 + C26079) * C2434 + (C27392 + C27391) * C2439 +
            (C27394 + C27393) * C31979) *
               C31615 * C13647 +
           ((C26081 + C26082) * C2437 -
            ((C25039 + C25040) * C2432 + (C25041 + C25042) * C2436) +
            (C26083 + C26084) * C2433 - (C26085 + C26086) * C2438 -
            (C26087 + C26088) * C2434 +
            (C19182 * C6712 + C19180 * C6716 + C19183 * C6713 +
             C19181 * C6718) *
                C2439 +
            (C19182 * C6717 + C19180 * C6721 + C19183 * C6719 +
             C19181 * C6722) *
                C31979) *
               C31615 * C13648) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19182 * C115 + C19180 * C122 + C19183 * C508 +
                 C19181 * C518) *
                    C114 +
                (C19182 * C123 + C19180 * C136 + C19183 * C519 +
                 C19181 * C538) *
                    C31677) *
                   C31615 * C13647 +
               ((C19182 * C304 + C19180 * C317 + C19183 * C1004 +
                 C19181 * C1009) *
                    C114 +
                (C19182 * C316 + C19180 * C334 + C19183 * C1010 +
                 C19181 * C1019) *
                    C31677) *
                   C31615 * C13648) *
                  C31660 * C108 -
              (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) *
                   C31615 * C13648 +
               ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) *
                   C31615 * C13647) *
                  C31660 * C109 +
              (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) *
                   C31615 * C13647 +
               ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) *
                   C31615 * C13648) *
                  C31660 * C110 -
              (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) *
                   C31615 * C13648 +
               ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) *
                   C31615 * C13647) *
                  C31660 * C111 +
              (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) *
                   C31615 * C13647 +
               ((C19182 * C310 + C19180 * C329 + C19183 * C1008 +
                 C19181 * C1017) *
                    C114 +
                (C19182 * C328 + C19180 * C340 + C19183 * C1018 +
                 C19181 * C1023) *
                    C31677) *
                   C31615 * C13648) *
                  C31660 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C19182 * C115 + C19180 * C122 + C19183 * C508 +
                  C19181 * C518) *
                     C114 +
                 (C19182 * C123 + C19180 * C136 + C19183 * C519 +
                  C19181 * C538) *
                     C31677) *
                    C31615 * C13647 +
                ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) *
                    C31615 * C13648) *
                   C32000 -
               (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) *
                    C31615 * C13648 +
                ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) *
                    C31615 * C13647) *
                   C31988 +
               (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) *
                    C31615 * C13647 +
                ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
                  C19181 * C1806) *
                     C114 +
                 (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
                  C19181 * C1812) *
                     C31677) *
                    C31615 * C13648) *
                   C31963) *
                  C299 +
              ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) *
                    C31615 * C13647 +
                ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) *
                    C31615 * C13648) *
                   C31988 -
               (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) *
                    C31615 * C13648 +
                ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) *
                    C31615 * C13647) *
                   C32000 -
               (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) *
                    C31615 * C13648 +
                ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) *
                    C31615 * C13647) *
                   C31963) *
                  C300 +
              ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) *
                    C31615 * C13647 +
                ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) *
                    C31615 * C13648) *
                   C32000 -
               (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) *
                    C31615 * C13648 +
                ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) *
                    C31615 * C13647) *
                   C31988 +
               (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) *
                    C31615 * C13647 +
                ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
                  C19181 * C1810) *
                     C114 +
                 (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
                  C19181 * C1814) *
                     C31677) *
                    C31615 * C13648) *
                   C31963) *
                  C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C505 + (C25037 + C25038) * C32001 -
            (C19183 * C1375 + C19181 * C1384 + C19182 * C1004 +
             C19180 * C1009) *
                C506 -
            (C19183 * C1385 + C19181 * C1402 + C19182 * C1010 +
             C19180 * C1019) *
                C31990 +
            (C19182 * C1375 + C19180 * C1384 + C19183 * C2570 +
             C19181 * C2573) *
                C507 +
            (C19182 * C1385 + C19180 * C1402 + C19183 * C2574 +
             C19181 * C2579) *
                C31966) *
               C31615 * C13648) *
              C31660 * C299 +
          (((C19606 + C19605) * C506 -
            ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
            (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
            (C19612 + C19611) * C31966) *
               C31615 * C13647 +
           ((C20115 + C20116) * C506 -
            ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
            (C20117 + C20118) * C31990 - (C21551 + C21552) * C507 -
            (C21553 + C21554) * C31966) *
               C31615 * C13648) *
              C31660 * C300 +
          (((C19224 + C19223) * C505 + (C19222 + C19221) * C32001 -
            (C19614 + C19613) * C506 - (C19616 + C19615) * C31990 +
            (C19618 + C19617) * C507 + (C19620 + C19619) * C31966) *
               C31615 * C13647 +
           ((C19419 + C19420) * C505 + (C19421 + C19422) * C32001 -
            (C20119 + C20120) * C506 - (C20121 + C20122) * C31990 +
            (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
             C19181 * C2577) *
                C507 +
            (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
             C19181 * C2581) *
                C31966) *
               C31615 * C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1168 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1167 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
               C13648) *
              C1235 -
          (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
               C13648 +
           ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
               C13647) *
              C1236 +
          (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
               C13647 +
           ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
               C13648) *
              C1237 -
          (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
               C13648 +
           ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
               C13647) *
              C1238 +
          (((C25906 + C25905) * C114 + (C25904 + C25903) * C31677) * C31615 *
               C13647 +
           ((C19182 * C5807 + C19180 * C5810 + C19183 * C6387 +
             C19181 * C6388) *
                C114 +
            (C19182 * C5809 + C19180 * C5813 + C19183 * C6389 +
             C19181 * C6390) *
                C31677) *
               C31615 * C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C505 + (C25037 + C25038) * C32001 -
            (C25651 + C25652) * C506 - (C25653 + C25654) * C31990 +
            (C26077 + C26078) * C507 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C1167 +
          (((C25652 + C25651) * C506 -
            ((C25038 + C25037) * C32001 + (C25036 + C25035) * C505) +
            (C25654 + C25653) * C31990 - (C26078 + C26077) * C507 -
            (C26080 + C26079) * C31966) *
               C31615 * C13647 +
           ((C26081 + C26082) * C506 -
            ((C25039 + C25040) * C32001 + (C25041 + C25042) * C505) +
            (C26083 + C26084) * C31990 - (C26085 + C26086) * C507 -
            (C26087 + C26088) * C31966) *
               C31615 * C13648) *
              C1168 +
          (((C25042 + C25041) * C505 + (C25040 + C25039) * C32001 -
            (C26082 + C26081) * C506 - (C26084 + C26083) * C31990 +
            (C26086 + C26085) * C507 + (C26088 + C26087) * C31966) *
               C31615 * C13647 +
           ((C25899 + C25900) * C505 + (C25901 + C25902) * C32001 -
            (C19183 * C5945 + C19181 * C5948 + C19182 * C1803 +
             C19180 * C1806) *
                C506 -
            (C19183 * C5949 + C19181 * C5954 + C19182 * C1807 +
             C19180 * C1812) *
                C31990 +
            (C19182 * C5945 + C19180 * C5948 + C19183 * C7085 +
             C19181 * C7086) *
                C507 +
            (C19182 * C5949 + C19180 * C5954 + C19183 * C7087 +
             C19181 * C7088) *
                C31966) *
               C31615 * C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C1928 + (C25037 + C25038) * C1925 -
            (C25651 + C25652) * C1929 - (C25653 + C25654) * C1926 +
            (C26077 + C26078) * C1930 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C31660 * C31997 +
          (((C19606 + C19605) * C1929 -
            ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
            (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
            (C19612 + C19611) * C31966) *
               C31615 * C13647 +
           ((C20115 + C20116) * C1929 -
            ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
            (C20117 + C20118) * C1926 - (C21551 + C21552) * C1930 -
            (C21553 + C21554) * C31966) *
               C31615 * C13648) *
              C31660 * C31984 +
          (((C19224 + C19223) * C1928 + (C19222 + C19221) * C1925 -
            (C19614 + C19613) * C1929 - (C19616 + C19615) * C1926 +
            (C19618 + C19617) * C1930 + (C19620 + C19619) * C31966) *
               C31615 * C13647 +
           ((C19419 + C19420) * C1928 + (C19421 + C19422) * C1925 -
            (C20119 + C20120) * C1929 - (C20121 + C20122) * C1926 +
            (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
             C19181 * C2577) *
                C1930 +
            (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
             C19181 * C2581) *
                C31966) *
               C31615 * C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C1928 + (C25037 + C25038) * C1925 -
            (C25651 + C25652) * C1929 - (C25653 + C25654) * C1926 +
            (C26077 + C26078) * C1930 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C32000 +
          (((C25652 + C25651) * C1929 -
            ((C25038 + C25037) * C1925 + (C25036 + C25035) * C1928) +
            (C25654 + C25653) * C1926 - (C26078 + C26077) * C1930 -
            (C26080 + C26079) * C31966) *
               C31615 * C13647 +
           ((C26081 + C26082) * C1929 -
            ((C25039 + C25040) * C1925 + (C25041 + C25042) * C1928) +
            (C26083 + C26084) * C1926 - (C26085 + C26086) * C1930 -
            (C26087 + C26088) * C31966) *
               C31615 * C13648) *
              C31988 +
          (((C25042 + C25041) * C1928 + (C25040 + C25039) * C1925 -
            (C26082 + C26081) * C1929 - (C26084 + C26083) * C1926 +
            (C26086 + C26085) * C1930 + (C26088 + C26087) * C31966) *
               C31615 * C13647 +
           ((C25899 + C25900) * C1928 + (C25901 + C25902) * C1925 -
            (C26551 + C26552) * C1929 - (C26553 + C26554) * C1926 +
            (C19182 * C5945 + C19180 * C5948 + C19183 * C7085 +
             C19181 * C7086) *
                C1930 +
            (C19182 * C5949 + C19180 * C5954 + C19183 * C7087 +
             C19181 * C7088) *
                C31966) *
               C31615 * C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
               C2131 +
           (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
               C2126 -
           (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
               C2132 -
           (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
               C2127 +
           (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
               C2133 +
           (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
               C2128 -
           (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 + C19180 * C2142) *
               C2134 -
           (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 + C19180 * C2154) *
               C2129 +
           (C19182 * C2137 + C19180 * C2144 + C19183 * C10969 +
            C19181 * C10971) *
               C2135 +
           (C19182 * C2145 + C19180 * C2155 + C19183 * C10972 +
            C19181 * C10975) *
               C2130) *
              C31615 * C13647 +
          ((C25035 + C25036) * C2131 + (C25037 + C25038) * C2126 -
           (C25651 + C25652) * C2132 - (C25653 + C25654) * C2127 +
           (C26077 + C26078) * C2133 + (C26079 + C26080) * C2128 -
           (C19183 * C6711 + C19181 * C6714 + C19182 * C2570 + C19180 * C2573) *
               C2134 -
           (C19183 * C6715 + C19181 * C6720 + C19182 * C2574 + C19180 * C2579) *
               C2129 +
           (C19182 * C6711 + C19180 * C6714 + C19183 * C11327 +
            C19181 * C11328) *
               C2135 +
           (C19182 * C6715 + C19180 * C6720 + C19183 * C11329 +
            C19181 * C11330) *
               C2130) *
              C31615 * C13648) *
         C31660 * C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C1167 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C1168 +
           (((C25042 + C25041) * C824 + (C25040 + C25039) * C31933 -
             (C26082 + C26081) * C825 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C824 + (C25901 + C25902) * C31933 -
             (C19183 * C5945 + C19181 * C5948 + C19182 * C1803 +
              C19180 * C1806) *
                 C825 -
             (C19183 * C5949 + C19181 * C5954 + C19182 * C1807 +
              C19180 * C1812) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31918 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C1167 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C1168 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C825 -
             ((C20635 + C20636) * C31933 + (C20637 + C20638) * C824) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
            (C19183 * C1375 + C19181 * C1384 + C19182 * C1004 +
             C19180 * C1009) *
                C825 -
            (C19183 * C1385 + C19181 * C1402 + C19182 * C1010 +
             C19180 * C1019) *
                C31764) *
               C31615 * C13648) *
              C31660 * C707 +
          (((C19606 + C19605) * C825 -
            ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
            (C19608 + C19607) * C31764) *
               C31615 * C13647 +
           ((C20115 + C20116) * C825 -
            ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
            (C20117 + C20118) * C31764) *
               C31615 * C13648) *
              C31660 * C708 +
          (((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
            (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
               C31615 * C13647 +
           ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
            (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
               C31615 * C13648) *
              C31660 * C709 +
          (((C19902 + C19901) * C825 -
            ((C19228 + C19227) * C31933 + (C19226 + C19225) * C824) +
            (C19904 + C19903) * C31764) *
               C31615 * C13647 +
           ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
             C19181 * C2307) *
                C825 -
            ((C19759 + C19760) * C31933 + (C19761 + C19762) * C824) +
            (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
             C19181 * C2309) *
                C31764) *
               C31615 * C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C2436 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C2432 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C2437 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C2433 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C2438 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C2434 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C2439 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C31615 * C13647 +
           ((C25035 + C25036) * C2436 + (C25037 + C25038) * C2432 -
            (C25651 + C25652) * C2437 - (C25653 + C25654) * C2433 +
            (C26077 + C26078) * C2438 + (C26079 + C26080) * C2434 -
            (C19183 * C6711 + C19181 * C6714 + C19182 * C2570 +
             C19180 * C2573) *
                C2439 -
            (C19183 * C6715 + C19181 * C6720 + C19182 * C2574 +
             C19180 * C2579) *
                C31979) *
               C31615 * C13648) *
              C31660 * C31918 +
          (((C19606 + C19605) * C2437 -
            ((C19220 + C19219) * C2432 + (C19218 + C19217) * C2436) +
            (C19608 + C19607) * C2433 - (C19610 + C19609) * C2438 -
            (C19612 + C19611) * C2434 + (C21694 + C21693) * C2439 +
            (C21696 + C21695) * C31979) *
               C31615 * C13647 +
           ((C20115 + C20116) * C2437 -
            ((C19411 + C19412) * C2432 + (C19413 + C19414) * C2436) +
            (C20117 + C20118) * C2433 - (C21551 + C21552) * C2438 -
            (C21553 + C21554) * C2434 +
            (C19182 * C2571 + C19180 * C2575 + C19183 * C11123 +
             C19181 * C11124) *
                C2439 +
            (C19182 * C2576 + C19180 * C2580 + C19183 * C11125 +
             C19181 * C11126) *
                C31979) *
               C31615 * C13648) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31988 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C32000 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C19182 * C304 + C19180 * C317 + C19183 * C1004 + C19181 * C1009) *
                C114 +
            (C19182 * C316 + C19180 * C334 + C19183 * C1010 + C19181 * C1019) *
                C31677) *
               C31615 * C13648) *
              C31660 * C108 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
               C13648 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
               C13647) *
              C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
               C13647 +
           ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
               C13648) *
              C31660 * C110 -
          (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
               C13648 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
               C13647) *
              C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C31615 *
               C13647 +
           ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                C114 +
            (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                C31677) *
               C31615 * C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1168 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1167 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
               C13648) *
              C1235 -
          (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
               C13648 +
           ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
               C13647) *
              C1236 +
          (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
               C13647 +
           ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
               C13648) *
              C1237 -
          (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
               C13648 +
           ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
               C13647) *
              C1238 +
          (((C25906 + C25905) * C114 + (C25904 + C25903) * C31677) * C31615 *
               C13647 +
           ((C19182 * C5807 + C19180 * C5810 + C19183 * C6387 +
             C19181 * C6388) *
                C114 +
            (C19182 * C5809 + C19180 * C5813 + C19183 * C6389 +
             C19181 * C6390) *
                C31677) *
               C31615 * C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C1928 + (C25037 + C25038) * C1925 -
            (C25651 + C25652) * C1929 - (C25653 + C25654) * C1926 +
            (C26077 + C26078) * C1930 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C31660 * C31997 +
          (((C19606 + C19605) * C1929 -
            ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
            (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
            (C19612 + C19611) * C31966) *
               C31615 * C13647 +
           ((C20115 + C20116) * C1929 -
            ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
            (C20117 + C20118) * C1926 - (C21551 + C21552) * C1930 -
            (C21553 + C21554) * C31966) *
               C31615 * C13648) *
              C31660 * C31984 +
          (((C19224 + C19223) * C1928 + (C19222 + C19221) * C1925 -
            (C19614 + C19613) * C1929 - (C19616 + C19615) * C1926 +
            (C19618 + C19617) * C1930 + (C19620 + C19619) * C31966) *
               C31615 * C13647 +
           ((C19419 + C19420) * C1928 + (C19421 + C19422) * C1925 -
            (C20119 + C20120) * C1929 - (C20121 + C20122) * C1926 +
            (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
             C19181 * C2577) *
                C1930 +
            (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
             C19181 * C2581) *
                C31966) *
               C31615 * C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C1928 + (C25037 + C25038) * C1925 -
            (C25651 + C25652) * C1929 - (C25653 + C25654) * C1926 +
            (C26077 + C26078) * C1930 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C32000 +
          (((C25652 + C25651) * C1929 -
            ((C25038 + C25037) * C1925 + (C25036 + C25035) * C1928) +
            (C25654 + C25653) * C1926 - (C26078 + C26077) * C1930 -
            (C26080 + C26079) * C31966) *
               C31615 * C13647 +
           ((C26081 + C26082) * C1929 -
            ((C25039 + C25040) * C1925 + (C25041 + C25042) * C1928) +
            (C26083 + C26084) * C1926 - (C26085 + C26086) * C1930 -
            (C26087 + C26088) * C31966) *
               C31615 * C13648) *
              C31988 +
          (((C25042 + C25041) * C1928 + (C25040 + C25039) * C1925 -
            (C26082 + C26081) * C1929 - (C26084 + C26083) * C1926 +
            (C26086 + C26085) * C1930 + (C26088 + C26087) * C31966) *
               C31615 * C13647 +
           ((C25899 + C25900) * C1928 + (C25901 + C25902) * C1925 -
            (C26551 + C26552) * C1929 - (C26553 + C26554) * C1926 +
            (C19182 * C5945 + C19180 * C5948 + C19183 * C7085 +
             C19181 * C7086) *
                C1930 +
            (C19182 * C5949 + C19180 * C5954 + C19183 * C7087 +
             C19181 * C7088) *
                C31966) *
               C31615 * C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31638 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C31646 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C30451 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31760 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C30443 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31767 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C30457 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C4029) *
                C31615 * C13647 +
            ((C25035 + C25036) * C30451 + (C25037 + C25038) * C31760 -
             (C25651 + C25652) * C30443 - (C25653 + C25654) * C31767 +
             (C26077 + C26078) * C30457 + (C26079 + C26080) * C4029) *
                C31615 * C13648) *
               C31932 +
           (((C25652 + C25651) * C30443 -
             ((C25038 + C25037) * C31760 + (C25036 + C25035) * C30451) +
             (C25654 + C25653) * C31767 - (C26078 + C26077) * C30457 -
             (C26080 + C26079) * C4029) *
                C31615 * C13647 +
            ((C26081 + C26082) * C30443 -
             ((C25039 + C25040) * C31760 + (C25041 + C25042) * C30451) +
             (C26083 + C26084) * C31767 - (C26085 + C26086) * C30457 -
             (C26087 + C26088) * C4029) *
                C31615 * C13648) *
               C31722) *
              C2788 +
          ((((C19606 + C19605) * C30443 -
             ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
             (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
             (C19612 + C19611) * C4029) *
                C31615 * C13647 +
            ((C20115 + C20116) * C30443 -
             ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
             (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
             (C21553 + C21554) * C4029) *
                C31615 * C13648) *
               C31932 +
           (((C19414 + C19413) * C30451 + (C19412 + C19411) * C31760 -
             (C20116 + C20115) * C30443 - (C20118 + C20117) * C31767 +
             (C21552 + C21551) * C30457 + (C21554 + C21553) * C4029) *
                C31615 * C13647 +
            ((C19415 + C19416) * C30451 + (C19417 + C19418) * C31760 -
             (C20841 + C20842) * C30443 - (C20843 + C20844) * C31767 +
             (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
              C19181 * C6984) *
                 C30457 +
             (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
              C19181 * C6986) *
                 C4029) *
                C31615 * C13648) *
               C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C32000 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31988 +
           (((C25042 + C25041) * C3456 + (C25040 + C25039) * C3454 -
             (C26082 + C26081) * C3457 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C3456 + (C25901 + C25902) * C3454 -
             (C26551 + C26552) * C3457 - (C26553 + C26554) * C31764) *
                C31615 * C13648) *
               C31963) *
              C2788 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C32000 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31988 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C3457 -
             ((C20635 + C20636) * C3454 + (C20637 + C20638) * C3456) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
            (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C31660 * C32006 +
          (((C19606 + C19605) * C3457 -
            ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
            (C19608 + C19607) * C31764) *
               C31615 * C13647 +
           ((C20115 + C20116) * C3457 -
            ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
            (C20117 + C20118) * C31764) *
               C31615 * C13648) *
              C31660 * C31999 +
          (((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
            (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
               C31615 * C13647 +
           ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
            (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
               C31615 * C13648) *
              C31660 * C31986 +
          (((C19902 + C19901) * C3457 -
            ((C19228 + C19227) * C3454 + (C19226 + C19225) * C3456) +
            (C19904 + C19903) * C31764) *
               C31615 * C13647 +
           ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
             C19181 * C2307) *
                C3457 -
            ((C19759 + C19760) * C3454 + (C19761 + C19762) * C3456) +
            (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
             C19181 * C2309) *
                C31764) *
               C31615 * C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3744 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32008 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3745 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C32005 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C3746 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31996 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C3747 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3744 + (C25037 + C25038) * C32008 -
            (C25651 + C25652) * C3745 - (C25653 + C25654) * C32005 +
            (C26077 + C26078) * C3746 + (C26079 + C26080) * C31996 -
            (C27391 + C27392) * C3747 - (C27393 + C27394) * C31979) *
               C31615 * C13648) *
              C31660 * C2788 +
          (((C19606 + C19605) * C3745 -
            ((C19220 + C19219) * C32008 + (C19218 + C19217) * C3744) +
            (C19608 + C19607) * C32005 - (C19610 + C19609) * C3746 -
            (C19612 + C19611) * C31996 + (C21694 + C21693) * C3747 +
            (C21696 + C21695) * C31979) *
               C31615 * C13647 +
           ((C20115 + C20116) * C3745 -
            ((C19411 + C19412) * C32008 + (C19413 + C19414) * C3744) +
            (C20117 + C20118) * C32005 - (C21551 + C21552) * C3746 -
            (C21553 + C21554) * C31996 +
            (C19182 * C2571 + C19180 * C2575 + C19183 * C11123 +
             C19181 * C11124) *
                C3747 +
            (C19182 * C2576 + C19180 * C2580 + C19183 * C11125 +
             C19181 * C11126) *
                C31979) *
               C31615 * C13648) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C30451 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31760 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C30443 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31767 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C30457 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C4029) *
               C31615 * C13647 +
           ((C25035 + C25036) * C30451 + (C25037 + C25038) * C31760 -
            (C25651 + C25652) * C30443 - (C25653 + C25654) * C31767 +
            (C26077 + C26078) * C30457 + (C26079 + C26080) * C4029) *
               C31615 * C13648) *
              C31660 * C31638 +
          (((C19606 + C19605) * C30443 -
            ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
            (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
            (C19612 + C19611) * C4029) *
               C31615 * C13647 +
           ((C20115 + C20116) * C30443 -
            ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
            (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
            (C21553 + C21554) * C4029) *
               C31615 * C13648) *
              C31660 * C31646 +
          (((C19224 + C19223) * C30451 + (C19222 + C19221) * C31760 -
            (C19614 + C19613) * C30443 - (C19616 + C19615) * C31767 +
            (C19618 + C19617) * C30457 + (C19620 + C19619) * C4029) *
               C31615 * C13647 +
           ((C19419 + C19420) * C30451 + (C19421 + C19422) * C31760 -
            (C20119 + C20120) * C30443 - (C20121 + C20122) * C31767 +
            (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
             C19181 * C2577) *
                C30457 +
            (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
             C19181 * C2581) *
                C4029) *
               C31615 * C13648) *
              C31660 * C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
            (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C31660 * C32006 +
          (((C19606 + C19605) * C3457 -
            ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
            (C19608 + C19607) * C31764) *
               C31615 * C13647 +
           ((C20115 + C20116) * C3457 -
            ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
            (C20117 + C20118) * C31764) *
               C31615 * C13648) *
              C31660 * C31999 +
          (((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
            (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
               C31615 * C13647 +
           ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
            (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
               C31615 * C13648) *
              C31660 * C31986 +
          (((C19902 + C19901) * C3457 -
            ((C19228 + C19227) * C3454 + (C19226 + C19225) * C3456) +
            (C19904 + C19903) * C31764) *
               C31615 * C13647 +
           ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
             C19181 * C2307) *
                C3457 -
            ((C19759 + C19760) * C3454 + (C19761 + C19762) * C3456) +
            (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
             C19181 * C2309) *
                C31764) *
               C31615 * C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C3456 + (C25037 + C25038) * C3454 -
             (C25651 + C25652) * C3457 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C32000 +
           (((C25652 + C25651) * C3457 -
             ((C25038 + C25037) * C3454 + (C25036 + C25035) * C3456) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C3457 -
             ((C25039 + C25040) * C3454 + (C25041 + C25042) * C3456) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C31988 +
           (((C25042 + C25041) * C3456 + (C25040 + C25039) * C3454 -
             (C26082 + C26081) * C3457 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C3456 + (C25901 + C25902) * C3454 -
             (C26551 + C26552) * C3457 - (C26553 + C26554) * C31764) *
                C31615 * C13648) *
               C31963) *
              C2788 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C32000 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31988 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C3457 -
             ((C20635 + C20636) * C3454 + (C20637 + C20638) * C3456) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C31932 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31722) *
              C707 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31722 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C31932) *
              C708 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C31932 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31722) *
              C709 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C31615 *
                C13647 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C31615 * C13648) *
               C31722 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
                C13648 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
                C13647) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1509 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1510 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
                C13648) *
               C1511 -
           (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
                C13648 +
            ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
                C13647) *
               C31973) *
              C31918 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1510 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1509 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C1511 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
              C19181 * C6264) *
                 C114 +
             (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
              C19181 * C6266) *
                 C31677) *
                C31615 * C13648) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1378 + C19180 * C1390 + C19183 * C1379 +
              C19181 * C1392) *
                 C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C19182 * C1391 + C19180 * C1405 + C19183 * C1393 +
              C19181 * C1406) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C299 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C31722) *
              C300 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C31615 * C13647 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C31615 * C13648) *
               C31932 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C31615 * C13648) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
            (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
               C31615 * C13648) *
              C1509 +
          (((C25652 + C25651) * C825 -
            ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
            (C25654 + C25653) * C31764) *
               C31615 * C13647 +
           ((C26081 + C26082) * C825 -
            ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
            (C26083 + C26084) * C31764) *
               C31615 * C13648) *
              C1510 +
          (((C25042 + C25041) * C824 + (C25040 + C25039) * C31933 -
            (C26082 + C26081) * C825 - (C26084 + C26083) * C31764) *
               C31615 * C13647 +
           ((C25899 + C25900) * C824 + (C25901 + C25902) * C31933 -
            (C26551 + C26552) * C825 - (C26553 + C26554) * C31764) *
               C31615 * C13648) *
              C1511 +
          (((C26552 + C26551) * C825 -
            ((C25902 + C25901) * C31933 + (C25900 + C25899) * C824) +
            (C26554 + C26553) * C31764) *
               C31615 * C13647 +
           ((C19182 * C5946 + C19180 * C5950 + C19183 * C5947 +
             C19181 * C5952) *
                C825 -
            ((C25903 + C25904) * C31933 + (C25905 + C25906) * C824) +
            (C19182 * C5951 + C19180 * C5955 + C19183 * C5953 +
             C19181 * C5956) *
                C31764) *
               C31615 * C13648) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31988 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C32000 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C19182 * C304 + C19180 * C317 + C19183 * C1004 + C19181 * C1009) *
                C114 +
            (C19182 * C316 + C19180 * C334 + C19183 * C1010 + C19181 * C1019) *
                C31677) *
               C31615 * C13648) *
              C31660 * C108 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
               C13648 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
               C13647) *
              C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
               C13647 +
           ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
               C13648) *
              C31660 * C110 -
          (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
               C13648 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
               C13647) *
              C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C31615 *
               C13647 +
           ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                C114 +
            (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                C31677) *
               C31615 * C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C505 + (C25037 + C25038) * C32001 -
            (C19183 * C1375 + C19181 * C1384 + C19182 * C1004 +
             C19180 * C1009) *
                C506 -
            (C19183 * C1385 + C19181 * C1402 + C19182 * C1010 +
             C19180 * C1019) *
                C31990 +
            (C19182 * C1375 + C19180 * C1384 + C19183 * C2570 +
             C19181 * C2573) *
                C507 +
            (C19182 * C1385 + C19180 * C1402 + C19183 * C2574 +
             C19181 * C2579) *
                C31966) *
               C31615 * C13648) *
              C31660 * C299 +
          (((C19606 + C19605) * C506 -
            ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
            (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
            (C19612 + C19611) * C31966) *
               C31615 * C13647 +
           ((C20115 + C20116) * C506 -
            ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
            (C20117 + C20118) * C31990 - (C21551 + C21552) * C507 -
            (C21553 + C21554) * C31966) *
               C31615 * C13648) *
              C31660 * C300 +
          (((C19224 + C19223) * C505 + (C19222 + C19221) * C32001 -
            (C19614 + C19613) * C506 - (C19616 + C19615) * C31990 +
            (C19618 + C19617) * C507 + (C19620 + C19619) * C31966) *
               C31615 * C13647 +
           ((C19419 + C19420) * C505 + (C19421 + C19422) * C32001 -
            (C20119 + C20120) * C506 - (C20121 + C20122) * C31990 +
            (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
             C19181 * C2577) *
                C507 +
            (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
             C19181 * C2581) *
                C31966) *
               C31615 * C13648) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1168 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1167 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
               C13648) *
              C1235 -
          (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
               C13648 +
           ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
               C13647) *
              C1236 +
          (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
               C13647 +
           ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
               C13648) *
              C1237 -
          (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
               C13648 +
           ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
               C13647) *
              C1238 +
          (((C25906 + C25905) * C114 + (C25904 + C25903) * C31677) * C31615 *
               C13647 +
           ((C19182 * C5807 + C19180 * C5810 + C19183 * C6387 +
             C19181 * C6388) *
                C114 +
            (C19182 * C5809 + C19180 * C5813 + C19183 * C6389 +
             C19181 * C6390) *
                C31677) *
               C31615 * C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C31615 * C13647 +
           ((C25035 + C25036) * C505 + (C25037 + C25038) * C32001 -
            (C25651 + C25652) * C506 - (C25653 + C25654) * C31990 +
            (C26077 + C26078) * C507 + (C26079 + C26080) * C31966) *
               C31615 * C13648) *
              C1167 +
          (((C25652 + C25651) * C506 -
            ((C25038 + C25037) * C32001 + (C25036 + C25035) * C505) +
            (C25654 + C25653) * C31990 - (C26078 + C26077) * C507 -
            (C26080 + C26079) * C31966) *
               C31615 * C13647 +
           ((C26081 + C26082) * C506 -
            ((C25039 + C25040) * C32001 + (C25041 + C25042) * C505) +
            (C26083 + C26084) * C31990 - (C26085 + C26086) * C507 -
            (C26087 + C26088) * C31966) *
               C31615 * C13648) *
              C1168 +
          (((C25042 + C25041) * C505 + (C25040 + C25039) * C32001 -
            (C26082 + C26081) * C506 - (C26084 + C26083) * C31990 +
            (C26086 + C26085) * C507 + (C26088 + C26087) * C31966) *
               C31615 * C13647 +
           ((C25899 + C25900) * C505 + (C25901 + C25902) * C32001 -
            (C19183 * C5945 + C19181 * C5948 + C19182 * C1803 +
             C19180 * C1806) *
                C506 -
            (C19183 * C5949 + C19181 * C5954 + C19182 * C1807 +
             C19180 * C1812) *
                C31990 +
            (C19182 * C5945 + C19180 * C5948 + C19183 * C7085 +
             C19181 * C7086) *
                C507 +
            (C19182 * C5949 + C19180 * C5954 + C19183 * C7087 +
             C19181 * C7088) *
                C31966) *
               C31615 * C13648) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C31615 * C13647 +
           ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
            (C19183 * C1375 + C19181 * C1384 + C19182 * C1004 +
             C19180 * C1009) *
                C825 -
            (C19183 * C1385 + C19181 * C1402 + C19182 * C1010 +
             C19180 * C1019) *
                C31764) *
               C31615 * C13648) *
              C31660 * C707 +
          (((C19606 + C19605) * C825 -
            ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
            (C19608 + C19607) * C31764) *
               C31615 * C13647 +
           ((C20115 + C20116) * C825 -
            ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
            (C20117 + C20118) * C31764) *
               C31615 * C13648) *
              C31660 * C708 +
          (((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
            (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
               C31615 * C13647 +
           ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
            (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
               C31615 * C13648) *
              C31660 * C709 +
          (((C19902 + C19901) * C825 -
            ((C19228 + C19227) * C31933 + (C19226 + C19225) * C824) +
            (C19904 + C19903) * C31764) *
               C31615 * C13647 +
           ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
             C19181 * C2307) *
                C825 -
            ((C19759 + C19760) * C31933 + (C19761 + C19762) * C824) +
            (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
             C19181 * C2309) *
                C31764) *
               C31615 * C13648) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C31615 * C13647 +
            ((C25035 + C25036) * C824 + (C25037 + C25038) * C31933 -
             (C25651 + C25652) * C825 - (C25653 + C25654) * C31764) *
                C31615 * C13648) *
               C1167 +
           (((C25652 + C25651) * C825 -
             ((C25038 + C25037) * C31933 + (C25036 + C25035) * C824) +
             (C25654 + C25653) * C31764) *
                C31615 * C13647 +
            ((C26081 + C26082) * C825 -
             ((C25039 + C25040) * C31933 + (C25041 + C25042) * C824) +
             (C26083 + C26084) * C31764) *
                C31615 * C13648) *
               C1168 +
           (((C25042 + C25041) * C824 + (C25040 + C25039) * C31933 -
             (C26082 + C26081) * C825 - (C26084 + C26083) * C31764) *
                C31615 * C13647 +
            ((C25899 + C25900) * C824 + (C25901 + C25902) * C31933 -
             (C19183 * C5945 + C19181 * C5948 + C19182 * C1803 +
              C19180 * C1806) *
                 C825 -
             (C19183 * C5949 + C19181 * C5954 + C19182 * C1807 +
              C19180 * C1812) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31918 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C31615 * C13647 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C31615 * C13648) *
               C1167 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C31615 * C13647 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C31615 * C13648) *
               C1168 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C31615 * C13647 +
            ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
              C19181 * C6870) *
                 C825 -
             ((C20635 + C20636) * C31933 + (C20637 + C20638) * C824) +
             (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
              C19181 * C6872) *
                 C31764) *
                C31615 * C13648) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C19182 * C304 + C19180 * C317 + C19183 * C1004 + C19181 * C1009) *
                C114 +
            (C19182 * C316 + C19180 * C334 + C19183 * C1010 + C19181 * C1019) *
                C31677) *
               C31615 * C13648) *
              C31660 * C108 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
               C13648 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
               C13647) *
              C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
               C13647 +
           ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
               C13648) *
              C31660 * C110 -
          (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C31615 *
               C13648 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C31615 *
               C13647) *
              C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C31615 *
               C13647 +
           ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                C114 +
            (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                C31677) *
               C31615 * C13648) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C31988 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C32000 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C31615 * C13647 +
            ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
                C13648 +
            ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1243 + C19180 * C1252 + C19183 * C1803 +
              C19181 * C1806) *
                 C114 +
             (C19182 * C1251 + C19180 * C1261 + C19183 * C1807 +
              C19181 * C1812) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C31615 *
                C13647 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C31615 *
                C13648) *
               C1168 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C31615 *
                C13648 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C31615 *
                C13647) *
               C1167 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C31615 *
                C13648 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C31615 *
                C13647) *
               C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C31615 *
                C13647 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C31615 *
                C13648) *
               C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C31615 *
                C13648 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C31615 *
                C13647) *
               C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C31615 *
                C13647 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C31615 * C13648) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C31615 * C13647 +
           ((C25035 + C25036) * C114 + (C25037 + C25038) * C31677) * C31615 *
               C13648) *
              C1235 -
          (((C25039 + C25040) * C31677 + (C25041 + C25042) * C114) * C31615 *
               C13648 +
           ((C25038 + C25037) * C31677 + (C25036 + C25035) * C114) * C31615 *
               C13647) *
              C1236 +
          (((C25042 + C25041) * C114 + (C25040 + C25039) * C31677) * C31615 *
               C13647 +
           ((C25899 + C25900) * C114 + (C25901 + C25902) * C31677) * C31615 *
               C13648) *
              C1237 -
          (((C25903 + C25904) * C31677 + (C25905 + C25906) * C114) * C31615 *
               C13648 +
           ((C25902 + C25901) * C31677 + (C25900 + C25899) * C114) * C31615 *
               C13647) *
              C1238 +
          (((C25906 + C25905) * C114 + (C25904 + C25903) * C31677) * C31615 *
               C13647 +
           ((C19182 * C5807 + C19180 * C5810 + C19183 * C6387 +
             C19181 * C6388) *
                C114 +
            (C19182 * C5809 + C19180 * C5813 + C19183 * C6389 +
             C19181 * C6390) *
                C31677) *
               C31615 * C13648) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31718 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31725 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C3060) *
              C31638 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31725 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31718 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C3060) *
              C31646 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31718 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31725 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C3060) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C31718 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C3060) *
              C31638 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31725 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C31718 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C3060) *
              C31646 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C31718 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31725 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C3060) *
              C3063)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C31718 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31725 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C3060) *
              C31638 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31725 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C31718 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C3060) *
              C31646 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C31718 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31725 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C3060) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C31718 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            C6405 * C5023) *
               C31725 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
               C3060) *
              C2788 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C31718 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C31725 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C31718 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C824 +
             (C113 * C319 + C31856 * C335) * C31933 -
             (C113 * C1378 + C31856 * C1390) * C825 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C1686 + C1687 - C1702 - C1703) * C104 +
            (C1692 + C1693 - C1704 - C1705) * C105) *
               C31845 * C3060) *
              C2788 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C31718 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31725 +
           ((C1702 - (C1687 + C1686) + C1703) * C103 +
            (C1704 - (C1693 + C1692) + C1705) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C825 -
             (C377 * C31933 + C378 * C824) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C31718 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31725 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C824 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31933 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C825 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C3060) *
              C2788 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C31718 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31725 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C825 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C31933 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C824) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C2680 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C31722) *
                  C32006 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
                   C31845 * C31722 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C2680) *
                  C31999 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C2680 -
               ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C31722) *
                  C31986 +
              ((C716 * C103 + (C724 + C723) * C104 +
                ((C113 * C711 + C31856 * C712) * C114 +
                 (C113 * C713 + C31856 * C714) * C31677) *
                    C105) *
                   C31845 * C31722 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31845 * C2680) *
                  C31967) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C32007 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C32003 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C31993 -
               ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
                ((C113 * C1251 + C31856 * C1261) * C31677 +
                 (C113 * C1243 + C31856 * C1252) * C114) *
                    C103) *
                   C31845 * C31973) *
                  C2788 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
                   C31845 * C32003 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C32007 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C31993 +
               ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
                ((C113 * C1515 + C31856 * C1516) * C114 +
                 (C113 * C1517 + C31856 * C1518) * C31677) *
                    C105) *
                   C31845 * C31973) *
                  C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C103 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C506 -
             ((C113 * C316 + C31856 * C334) * C32001 +
              (C113 * C304 + C31856 * C317) * C505) +
             (C113 * C1010 + C31856 * C1019) * C31990 -
             (C113 * C1375 + C31856 * C1384) * C507 -
             (C113 * C1385 + C31856 * C1402) * C31966) *
                C103 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C104 +
            (C2943 - (C2944 + C2945) + C2946 - C2947 - C2948) * C105) *
               C31845 * C31722) *
              C2788 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
            (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
            (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
               C31845 * C2680 +
           ((C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C103 +
            (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C104 +
            (C375 * C505 + C376 * C32001 - C1048 * C506 - C1049 * C31990 +
             (C113 * C2306 + C31856 * C2307) * C507 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C2680 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C32006 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C2680) *
              C31999 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C2680 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C31986 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32007 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C32003 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C31993 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C2788 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C32003 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32007 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31993 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C31615 * C5021 +
            (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
            C6005 * C5023) *
               C2680 +
           ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
            (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
            (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 *
                C5023) *
               C31722) *
              C2788 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
            (C7460 - (C7461 + C7462) + C7463 - C7464 - C7465) * C31615 *
                C5023) *
               C2680 +
           ((C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C31615 * C5021 +
            (C7462 + C7461 - C7460 - C7463 + C7464 + C7465) * C31615 * C5022 +
            (C1531 * C505 + C1530 * C32001 - C6282 * C506 - C6283 * C31990 +
             (C113 * C6869 + C31856 * C6870) * C507 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C2680 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31722) *
              C32006 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C2680) *
              C31999 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C2680 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31722) *
              C31986 +
          (((C9498 * C308 + C9495 * C324 + C9499 * C1007 + C9496 * C1015 +
             C9500 * C2306 + C9497 * C2307) *
                C114 +
            (C9498 * C325 + C9495 * C338 + C9499 * C1016 + C9496 * C1022 +
             C9500 * C2308 + C9497 * C2309) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31677 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C114) *
               C31615 * C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32007 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C32003 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31993 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31677 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C114) *
               C31615 * C31845 * C31973) *
              C2788 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C32003 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32007 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31993 +
           ((C9498 * C1242 + C9495 * C1250 + C9499 * C1804 + C9496 * C1808 +
             C9500 * C6869 + C9497 * C6870) *
                C114 +
            (C9498 * C1249 + C9495 * C1260 + C9499 * C1809 + C9496 * C1813 +
             C9500 * C6871 + C9497 * C6872) *
                C31677) *
               C31615 * C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C505 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C32001 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C506 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31990 +
            (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
             C9500 * C2137 + C9497 * C2144) *
                C507 +
            (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
             C9500 * C2145 + C9497 * C2155) *
                C31966) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C506 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C32001 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C505) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31990 -
            (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
             C9498 * C1375 + C9495 * C1384) *
                C507 -
            (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
             C9498 * C1385 + C9495 * C1402) *
                C31966) *
               C31615 * C31845 * C31722) *
              C2788 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C506 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C32001 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C505) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31990 -
            (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
             C9498 * C511 + C9495 * C524) *
                C507 -
            (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
             C9498 * C525 + C9495 * C541) *
                C31966) *
               C31615 * C31845 * C2680 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C505 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C32001 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C506 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31990 +
            (C9498 * C1376 + C9495 * C1386 + C9499 * C2571 + C9496 * C2575 +
             C9500 * C11123 + C9497 * C11124) *
                C507 +
            (C9498 * C1387 + C9495 * C1403 + C9499 * C2576 + C9496 * C2580 +
             C9500 * C11125 + C9497 * C11126) *
                C31966) *
               C31615 * C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C2680 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            C6405 * C5023) *
               C31722) *
              C31638 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C2680 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C31722) *
              C31646 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C2680 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31722) *
              C31638 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C2680 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31722) *
              C31646 +
          ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
            (C843 + C844 - C855 - C856) * C105) *
               C31845 * C2680 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31638 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31646 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C824 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31933 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C825 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C825 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C31933 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C824) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32007 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C32003 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31993 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C2788 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C32003 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32007 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31993 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C2680 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C32006 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C2680) *
              C31999 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C2680 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C31986 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C2680 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C32006 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C2680) *
              C31999 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C2680 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C31986 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32007 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C32003 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C31993 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C2788 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C32003 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32007 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31993 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C2680 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31722) *
              C32006 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C2680) *
              C31999 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C2680 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31722) *
              C31986 +
          (((C9498 * C308 + C9495 * C324 + C9499 * C1007 + C9496 * C1015 +
             C9500 * C2306 + C9497 * C2307) *
                C114 +
            (C9498 * C325 + C9495 * C338 + C9499 * C1016 + C9496 * C1022 +
             C9500 * C2308 + C9497 * C2309) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31677 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C114) *
               C31615 * C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32007 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C32003 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31993 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31677 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C114) *
               C31615 * C31845 * C31973) *
              C2788 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C32003 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32007 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31993 +
           ((C9498 * C1242 + C9495 * C1250 + C9499 * C1804 + C9496 * C1808 +
             C9500 * C6869 + C9497 * C6870) *
                C114 +
            (C9498 * C1249 + C9495 * C1260 + C9499 * C1809 + C9496 * C1813 +
             C9500 * C6871 + C9497 * C6872) *
                C31677) *
               C31615 * C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C31718 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            C8905 * C5023) *
               C31725 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
               C3060) *
              C31918 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C31718 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31725 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C31718 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C3456 +
             (C113 * C319 + C31856 * C335) * C3454 -
             (C113 * C1378 + C31856 * C1390) * C3457 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C3635 + C3636 - C3637 - C3638) * C104 +
            (C3639 + C3640 - C3641 - C3642) * C105) *
               C31845 * C3060) *
              C31918 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C31718 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31725 +
           ((C3637 - (C3636 + C3635) + C3638) * C103 +
            (C3641 - (C3640 + C3639) + C3642) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C3457 -
             (C377 * C3454 + C378 * C3456) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C31718 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31725 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C3456 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C3454 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C3457 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C3060) *
              C31918 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C31718 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31725 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C3457 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C3454 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C3456) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C31615 * C5021 +
           (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
           C9433 * C5023) *
              C31718 +
          ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
           (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
           (C9423 - (C9424 + C9425) + C9426 - C9427 - C9428) * C31615 * C5023) *
              C31725 +
          (C9433 * C5021 +
           (C9425 + C9424 - C9423 - C9426 + C9427 + C9428) * C31615 * C5022 +
           (C5826 * C30451 + C5827 * C31760 - C6400 * C30443 - C6401 * C31767 +
            (C113 * C5947 + C31856 * C5952) * C30457 +
            (C113 * C5953 + C31856 * C5956) * C4029) *
               C31615 * C5023) *
              C3060) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C103 +
           (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
           C4056 * C105) *
              C31845 * C31718 +
          (((C113 * C1004 + C31856 * C1009) * C30443 -
            ((C113 * C316 + C31856 * C334) * C31760 +
             (C113 * C304 + C31856 * C317) * C30451) +
            (C113 * C1010 + C31856 * C1019) * C31767 -
            (C113 * C1375 + C31856 * C1384) * C30457 -
            (C113 * C1385 + C31856 * C1402) * C4029) *
               C103 +
           (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
           (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
              C31845 * C31725 +
          (((C113 * C305 + C31856 * C318) * C30451 +
            (C113 * C319 + C31856 * C335) * C31760 -
            (C113 * C1378 + C31856 * C1390) * C30443 -
            (C113 * C1391 + C31856 * C1405) * C31767 +
            (C113 * C1379 + C31856 * C1392) * C30457 +
            (C113 * C1393 + C31856 * C1406) * C4029) *
               C103 +
           (C371 * C30451 + C372 * C31760 - C1698 * C30443 - C1699 * C31767 +
            (C113 * C1381 + C31856 * C1396) * C30457 +
            (C113 * C1397 + C31856 * C1408) * C4029) *
               C104 +
           (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
            (C113 * C1383 + C31856 * C1400) * C30457 +
            (C113 * C1401 + C31856 * C1410) * C4029) *
               C105) *
              C31845 * C3060) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C30451 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31760 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C30443 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31767 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C30457 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C4029) *
              C31615 * C31845 * C31718 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C30443 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31760 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C30451) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31767 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C30457 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C4029) *
              C31615 * C31845 * C31725 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C30451 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31760 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C30443 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31767 +
           (C9498 * C1379 + C9495 * C1392 + C9499 * C6712 + C9496 * C6716 +
            C9500 * C6713 + C9497 * C6718) *
               C30457 +
           (C9498 * C1393 + C9495 * C1406 + C9499 * C6717 + C9496 * C6721 +
            C9500 * C6719 + C9497 * C6722) *
               C4029) *
              C31615 * C31845 * C3060) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C3456 +
                 (C113 * C123 + C31856 * C136) * C3454 -
                 (C113 * C508 + C31856 * C518) * C3457 -
                 (C113 * C519 + C31856 * C538) * C31764) *
                    C103 +
                (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
                   C31845 * C2680 +
               (((C113 * C1004 + C31856 * C1009) * C3457 -
                 ((C113 * C316 + C31856 * C334) * C3454 +
                  (C113 * C304 + C31856 * C317) * C3456) +
                 (C113 * C1010 + C31856 * C1019) * C31764) *
                    C103 +
                (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
                   C31845 * C31722) *
                  C31997 +
              (((C3461 - (C3460 + C3459) + C3462) * C103 +
                (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
                   C31845 * C2680 +
               ((C3629 + C3628 - C3627 - C3630) * C103 +
                (C3633 + C3632 - C3631 - C3634) * C104 +
                (C3912 + C3913 - C3914 - C3915) * C105) *
                   C31845 * C31722) *
                  C31984 +
              ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
                (C3471 + C3472 - C3473 - C3474) * C105) *
                   C31845 * C2680 +
               (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
                ((C113 * C1008 + C31856 * C1017) * C3457 -
                 (C721 * C3454 + C722 * C3456) +
                 (C113 * C1018 + C31856 * C1023) * C31764) *
                    C105) *
                   C31845 * C31722) *
                  C31957) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C3456 +
                (C113 * C123 + C31856 * C136) * C3454 -
                (C113 * C508 + C31856 * C518) * C3457 -
                (C113 * C519 + C31856 * C538) * C31764) *
                   C103 +
               (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
                  C31845 * C32007 +
              (((C113 * C1004 + C31856 * C1009) * C3457 -
                ((C113 * C316 + C31856 * C334) * C3454 +
                 (C113 * C304 + C31856 * C317) * C3456) +
                (C113 * C1010 + C31856 * C1019) * C31764) *
                   C103 +
               (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
                  C31845 * C32003 +
              (((C113 * C305 + C31856 * C318) * C3456 +
                (C113 * C319 + C31856 * C335) * C3454 -
                (C113 * C1378 + C31856 * C1390) * C3457 -
                (C113 * C1391 + C31856 * C1405) * C31764) *
                   C103 +
               (C3635 + C3636 - C3637 - C3638) * C104 +
               (C3639 + C3640 - C3641 - C3642) * C105) *
                  C31845 * C31993 +
              (((C113 * C1803 + C31856 * C1806) * C3457 -
                ((C113 * C1251 + C31856 * C1261) * C3454 +
                 (C113 * C1243 + C31856 * C1252) * C3456) +
                (C113 * C1807 + C31856 * C1812) * C31764) *
                   C103 +
               ((C113 * C1804 + C31856 * C1808) * C3457 -
                (C1530 * C3454 + C1531 * C3456) +
                (C113 * C1809 + C31856 * C1813) * C31764) *
                   C104 +
               ((C113 * C1805 + C31856 * C1810) * C3457 -
                (C1528 * C3454 + C1529 * C3456) +
                (C113 * C1811 + C31856 * C1814) * C31764) *
                   C105) *
                  C31845 * C31973) *
             C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
               C104 +
           (C3757 + C3758 - C3759 - C3760 + C3761 + C3762 - C3763 - C3764) *
               C105) *
              C31845 * C2680 +
          (((C113 * C1004 + C31856 * C1009) * C3745 -
            ((C113 * C316 + C31856 * C334) * C32008 +
             (C113 * C304 + C31856 * C317) * C3744) +
            (C113 * C1010 + C31856 * C1019) * C32005 -
            (C113 * C1375 + C31856 * C1384) * C3746 -
            (C113 * C1385 + C31856 * C1402) * C31996 +
            (C113 * C2570 + C31856 * C2573) * C3747 +
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C103 +
           (C1043 * C3745 - (C369 * C32008 + C370 * C3744) + C1044 * C32005 -
            C2327 * C3746 - C2328 * C31996 +
            (C113 * C2571 + C31856 * C2575) * C3747 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C104 +
           (C1045 * C3745 - (C367 * C32008 + C368 * C3744) + C1047 * C32005 -
            C2329 * C3746 - C2330 * C31996 +
            (C113 * C2572 + C31856 * C2577) * C3747 +
            (C113 * C2578 + C31856 * C2581) * C31979) *
               C105) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C2680 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31984 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C2680 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
              C32007 +
          ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
           (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 + C8905 * C5023) *
              C32003 +
          (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
           (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
              C31993 +
          (C8905 * C5021 + (C8901 - (C8900 + C8899) + C8902) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C3457 -
            (C5828 * C3454 + C5829 * C3456) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C9004 + C9005 - C9006 - C9007 + C9008 + C9009 - C9010 - C9011) *
               C31615 * C5022 +
           (C9012 + C9013 - C9014 - C9015 + C9016 + C9017 - C9018 - C9019) *
               C31615 * C5023) *
              C2680 +
          ((C9006 - (C9005 + C9004) + C9007 - C9008 - C9009 + C9010 + C9011) *
               C31615 * C5021 +
           (C9014 - (C9013 + C9012) + C9015 - C9016 - C9017 + C9018 + C9019) *
               C31615 * C5022 +
           (C5989 * C3745 - (C5153 * C32008 + C5154 * C3744) + C5990 * C32005 -
            C5991 * C3746 - C5992 * C31996 +
            (C113 * C7085 + C31856 * C7086) * C3747 +
            (C113 * C7087 + C31856 * C7088) * C31979) *
               C31615 * C5023) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31997 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C3456 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C3454 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C3457 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C3457 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C3454 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C3456) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3456 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C3454 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3457 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C32007 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C3457 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C3454 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C3456) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31764) *
              C31615 * C31845 * C32003 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C3456 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C3454 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C3457 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31764) *
              C31615 * C31845 * C31993 +
          ((C9498 * C1803 + C9495 * C1806 + C9499 * C5945 + C9496 * C5948 +
            C9500 * C7085 + C9497 * C7086) *
               C3457 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C3454 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C3456) +
           (C9498 * C1807 + C9495 * C1812 + C9499 * C5949 + C9496 * C5954 +
            C9500 * C7087 + C9497 * C7088) *
               C31764) *
              C31615 * C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3744 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C32008 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3745 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C32005 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C3746 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31996 -
           (C9500 * C10969 + C9497 * C10971 + C9499 * C2137 + C9496 * C2144 +
            C9498 * C2136 + C9495 * C2142) *
               C3747 -
           (C9500 * C10972 + C9497 * C10975 + C9499 * C2145 + C9496 * C2155 +
            C9498 * C2143 + C9495 * C2154) *
               C31979) *
              C31615 * C31845 * C2680 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C3745 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C32008 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C3744) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C32005 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C3746 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C31996 +
           (C9498 * C2570 + C9495 * C2573 + C9499 * C6711 + C9496 * C6714 +
            C9500 * C11327 + C9497 * C11328) *
               C3747 +
           (C9498 * C2574 + C9495 * C2579 + C9499 * C6715 + C9496 * C6720 +
            C9500 * C11329 + C9497 * C11330) *
               C31979) *
              C31615 * C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C31615 * C5021 +
            (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
            (C8642 + C8643 - C8644 - C8645 + C8646 + C8647) * C31615 * C5023) *
               C2680 +
           ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
            (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
            (C5989 * C30443 - (C5153 * C31760 + C5154 * C30451) +
             C5990 * C31767 - C5991 * C30457 - C5992 * C4029) *
                C31615 * C5023) *
               C31722) *
              C31918 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
            (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C31615 *
                C5023) *
               C2680 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C31615 * C5021 +
            (C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C31615 * C5022 +
            (C1531 * C30451 + C1530 * C31760 - C6282 * C30443 - C6283 * C31767 +
             (C113 * C6869 + C31856 * C6870) * C30457 +
             (C113 * C6871 + C31856 * C6872) * C4029) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C103 +
            (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
            C4056 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C30443 -
             ((C113 * C316 + C31856 * C334) * C31760 +
              (C113 * C304 + C31856 * C317) * C30451) +
             (C113 * C1010 + C31856 * C1019) * C31767 -
             (C113 * C1375 + C31856 * C1384) * C30457 -
             (C113 * C1385 + C31856 * C1402) * C4029) *
                C103 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
            (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
               C31845 * C31722) *
              C31918 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
            (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
            (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
               C31845 * C2680 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C103 +
            (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C104 +
            (C375 * C30451 + C376 * C31760 - C1048 * C30443 - C1049 * C31767 +
             (C113 * C2306 + C31856 * C2307) * C30457 +
             (C113 * C2308 + C31856 * C2309) * C4029) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C30451 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31760 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C30443 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31767 +
            (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
             C9500 * C2137 + C9497 * C2144) *
                C30457 +
            (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
             C9500 * C2145 + C9497 * C2155) *
                C4029) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C30443 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31760 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C30451) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31767 -
            (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
             C9498 * C1375 + C9495 * C1384) *
                C30457 -
            (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
             C9498 * C1385 + C9495 * C1402) *
                C4029) *
               C31615 * C31845 * C31722) *
              C31918 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C30443 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31760 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C30451) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31767 -
            (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
             C9498 * C511 + C9495 * C524) *
                C30457 -
            (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
             C9498 * C525 + C9495 * C541) *
                C4029) *
               C31615 * C31845 * C2680 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C30451 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31760 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C30443 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31767 +
            (C9498 * C1376 + C9495 * C1386 + C9499 * C2571 + C9496 * C2575 +
             C9500 * C11123 + C9497 * C11124) *
                C30457 +
            (C9498 * C1387 + C9495 * C1403 + C9499 * C2576 + C9496 * C2580 +
             C9500 * C11125 + C9497 * C11126) *
                C4029) *
               C31615 * C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C32007 +
          (((C113 * C1004 + C31856 * C1009) * C3457 -
            ((C113 * C316 + C31856 * C334) * C3454 +
             (C113 * C304 + C31856 * C317) * C3456) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
              C31845 * C32003 +
          (((C113 * C305 + C31856 * C318) * C3456 +
            (C113 * C319 + C31856 * C335) * C3454 -
            (C113 * C1378 + C31856 * C1390) * C3457 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C3635 + C3636 - C3637 - C3638) * C104 +
           (C3639 + C3640 - C3641 - C3642) * C105) *
              C31845 * C31993 +
          (((C113 * C1803 + C31856 * C1806) * C3457 -
            ((C113 * C1251 + C31856 * C1261) * C3454 +
             (C113 * C1243 + C31856 * C1252) * C3456) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C3457 -
            (C1530 * C3454 + C1531 * C3456) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C3457 -
            (C1528 * C3454 + C1529 * C3456) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31722) *
              C31984 +
          ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
            (C3471 + C3472 - C3473 - C3474) * C105) *
               C31845 * C2680 +
           (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C2680 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31984 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C2680 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
              C32007 +
          ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
           (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 + C8905 * C5023) *
              C32003 +
          (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
           (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
              C31993 +
          (C8905 * C5021 + (C8901 - (C8900 + C8899) + C8902) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C3457 -
            (C5828 * C3454 + C5829 * C3456) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31997 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C3456 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C3454 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C3457 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C2680 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C3457 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C3454 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C3456) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3456 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C3454 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3457 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C32007 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C3457 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C3454 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C3456) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31764) *
              C31615 * C31845 * C32003 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C3456 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C3454 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C3457 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31764) *
              C31615 * C31845 * C31993 +
          ((C9498 * C1803 + C9495 * C1806 + C9499 * C5945 + C9496 * C5948 +
            C9500 * C7085 + C9497 * C7086) *
               C3457 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C3454 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C3456) +
           (C9498 * C1807 + C9495 * C1812 + C9499 * C5949 + C9496 * C5954 +
            C9500 * C7087 + C9497 * C7088) *
               C31764) *
              C31615 * C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C31932 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C31722) *
                  C707 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
                   C31845 * C31722 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C31932) *
                  C708 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C31932 -
               ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C31722) *
                  C709 +
              ((C716 * C103 + (C724 + C723) * C104 +
                ((C113 * C711 + C31856 * C712) * C114 +
                 (C113 * C713 + C31856 * C714) * C31677) *
                    C105) *
                   C31845 * C31722 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31845 * C31932) *
                  C31967) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C1509 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C1510 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C1511 -
               ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
                ((C113 * C1251 + C31856 * C1261) * C31677 +
                 (C113 * C1243 + C31856 * C1252) * C114) *
                    C103) *
                   C31845 * C31973) *
                  C31918 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
                   C31845 * C1510 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C1509 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C1511 +
               ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
                ((C113 * C1515 + C31856 * C1516) * C114 +
                 (C113 * C1517 + C31856 * C1518) * C31677) *
                    C105) *
                   C31845 * C31973) *
                  C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C103 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
            C1954 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C1929 -
             ((C113 * C316 + C31856 * C334) * C1925 +
              (C113 * C304 + C31856 * C317) * C1928) +
             (C113 * C1010 + C31856 * C1019) * C1926 -
             (C113 * C1375 + C31856 * C1384) * C1930 -
             (C113 * C1385 + C31856 * C1402) * C31966) *
                C103 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C104 +
            (C2319 - (C2320 + C2321) + C2322 - C2333 - C2334) * C105) *
               C31845 * C31722) *
              C31918 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
            (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
            (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
               C31845 * C31932 +
           ((C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C103 +
            (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C104 +
            (C375 * C1928 + C376 * C1925 - C1048 * C1929 - C1049 * C1926 +
             (C113 * C2306 + C31856 * C2307) * C1930 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31932 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C707 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31932) *
              C708 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31932 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C709 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1509 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1510 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C1511 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C31918 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C1510 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1509 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C1511 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C31615 * C5021 +
            (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
            C6649 * C5023) *
               C31932 +
           ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
            (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
            (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 *
                C5023) *
               C31722) *
              C31918 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
            (C6874 - (C6875 + C6876) + C6877 - C6884 - C6885) * C31615 *
                C5023) *
               C31932 +
           ((C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C31615 * C5021 +
            (C6876 + C6875 - C6874 - C6877 + C6884 + C6885) * C31615 * C5022 +
            (C1531 * C1928 + C1530 * C1925 - C6282 * C1929 - C6283 * C1926 +
             (C113 * C6869 + C31856 * C6870) * C1930 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C31932 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31722) *
              C707 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C31932) *
              C708 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C31932 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31722) *
              C709 +
          (((C9498 * C308 + C9495 * C324 + C9499 * C1007 + C9496 * C1015 +
             C9500 * C2306 + C9497 * C2307) *
                C114 +
            (C9498 * C325 + C9495 * C338 + C9499 * C1016 + C9496 * C1022 +
             C9500 * C2308 + C9497 * C2309) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31677 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C114) *
               C31615 * C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1509 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1510 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C1511 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31677 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C114) *
               C31615 * C31845 * C31973) *
              C31918 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1510 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1509 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C1511 +
           ((C9498 * C1242 + C9495 * C1250 + C9499 * C1804 + C9496 * C1808 +
             C9500 * C6869 + C9497 * C6870) *
                C114 +
            (C9498 * C1249 + C9495 * C1260 + C9499 * C1809 + C9496 * C1813 +
             C9500 * C6871 + C9497 * C6872) *
                C31677) *
               C31615 * C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C1928 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C1925 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C1929 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C1926 +
            (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
             C9500 * C2137 + C9497 * C2144) *
                C1930 +
            (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
             C9500 * C2145 + C9497 * C2155) *
                C31966) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C1929 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C1925 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C1928) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C1926 -
            (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
             C9498 * C1375 + C9495 * C1384) *
                C1930 -
            (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
             C9498 * C1385 + C9495 * C1402) *
                C31966) *
               C31615 * C31845 * C31722) *
              C31918 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C1929 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C1925 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C1928) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C1926 -
            (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
             C9498 * C511 + C9495 * C524) *
                C1930 -
            (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
             C9498 * C525 + C9495 * C541) *
                C31966) *
               C31615 * C31845 * C31932 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C1928 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C1925 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C1929 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C1926 +
            (C9498 * C1376 + C9495 * C1386 + C9499 * C2571 + C9496 * C2575 +
             C9500 * C11123 + C9497 * C11124) *
                C1930 +
            (C9498 * C1387 + C9495 * C1403 + C9499 * C2576 + C9496 * C2580 +
             C9500 * C11125 + C9497 * C11126) *
                C31966) *
               C31615 * C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C824 +
                 (C113 * C123 + C31856 * C136) * C31933 -
                 (C113 * C508 + C31856 * C518) * C825 -
                 (C113 * C519 + C31856 * C538) * C31764) *
                    C103 +
                (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
                   C31845 * C31932 +
               (((C113 * C1004 + C31856 * C1009) * C825 -
                 ((C113 * C316 + C31856 * C334) * C31933 +
                  (C113 * C304 + C31856 * C317) * C824) +
                 (C113 * C1010 + C31856 * C1019) * C31764) *
                    C103 +
                (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
                   C31845 * C31722) *
                  C299 +
              (((C833 - (C832 + C831) + C834) * C103 +
                (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
                   C31845 * C31932 +
               ((C1028 + C1027 - C1050 - C1051) * C103 +
                (C1034 + C1033 - C1052 - C1053) * C104 +
                (C1037 + C1038 - C1054 - C1055) * C105) *
                   C31845 * C31722) *
                  C300 +
              ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
                (C843 + C844 - C855 - C856) * C105) *
                   C31845 * C31932 +
               (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
                ((C113 * C1008 + C31856 * C1017) * C825 -
                 (C721 * C31933 + C722 * C824) +
                 (C113 * C1018 + C31856 * C1023) * C31764) *
                    C105) *
                   C31845 * C31722) *
                  C31957) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C824 +
                (C113 * C123 + C31856 * C136) * C31933 -
                (C113 * C508 + C31856 * C518) * C825 -
                (C113 * C519 + C31856 * C538) * C31764) *
                   C103 +
               (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
                  C31845 * C1509 +
              (((C113 * C1004 + C31856 * C1009) * C825 -
                ((C113 * C316 + C31856 * C334) * C31933 +
                 (C113 * C304 + C31856 * C317) * C824) +
                (C113 * C1010 + C31856 * C1019) * C31764) *
                   C103 +
               (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
                  C31845 * C1510 +
              (((C113 * C305 + C31856 * C318) * C824 +
                (C113 * C319 + C31856 * C335) * C31933 -
                (C113 * C1378 + C31856 * C1390) * C825 -
                (C113 * C1391 + C31856 * C1405) * C31764) *
                   C103 +
               (C1686 + C1687 - C1702 - C1703) * C104 +
               (C1692 + C1693 - C1704 - C1705) * C105) *
                  C31845 * C1511 +
              (((C113 * C1803 + C31856 * C1806) * C825 -
                ((C113 * C1251 + C31856 * C1261) * C31933 +
                 (C113 * C1243 + C31856 * C1252) * C824) +
                (C113 * C1807 + C31856 * C1812) * C31764) *
                   C103 +
               ((C113 * C1804 + C31856 * C1808) * C825 -
                (C1530 * C31933 + C1531 * C824) +
                (C113 * C1809 + C31856 * C1813) * C31764) *
                   C104 +
               ((C113 * C1805 + C31856 * C1810) * C825 -
                (C1528 * C31933 + C1529 * C824) +
                (C113 * C1811 + C31856 * C1814) * C31764) *
                   C105) *
                  C31845 * C31973) *
             C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
               C104 +
           (C2455 + C2456 - C2457 - C2458 + C2459 + C2460 - C2471 - C2472) *
               C105) *
              C31845 * C31932 +
          (((C113 * C1004 + C31856 * C1009) * C2437 -
            ((C113 * C316 + C31856 * C334) * C2432 +
             (C113 * C304 + C31856 * C317) * C2436) +
            (C113 * C1010 + C31856 * C1019) * C2433 -
            (C113 * C1375 + C31856 * C1384) * C2438 -
            (C113 * C1385 + C31856 * C1402) * C2434 +
            (C113 * C2570 + C31856 * C2573) * C2439 +
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C103 +
           (C1043 * C2437 - (C369 * C2432 + C370 * C2436) + C1044 * C2433 -
            C2327 * C2438 - C2328 * C2434 +
            (C113 * C2571 + C31856 * C2575) * C2439 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C104 +
           (C1045 * C2437 - (C367 * C2432 + C368 * C2436) + C1047 * C2433 -
            C2329 * C2438 - C2330 * C2434 +
            (C113 * C2572 + C31856 * C2577) * C2439 +
            (C113 * C2578 + C31856 * C2581) * C31979) *
               C105) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 +
            (C5622 + C5623 - C5634 - C5635) * C31615 * C5023) *
               C31932 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            ((C113 * C1803 + C31856 * C1806) * C825 -
             (C5153 * C31933 + C5154 * C824) +
             (C113 * C1807 + C31856 * C1812) * C31764) *
                C31615 * C5023) *
               C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
               C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C1531 * C824 + C1530 * C31933 -
             (C113 * C1804 + C31856 * C1808) * C825 -
             (C113 * C1809 + C31856 * C1813) * C31764) *
                C31615 * C5023) *
               C31722) *
              C300 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C31932 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
              C1509 +
          ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
           (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 + C6405 * C5023) *
              C1510 +
          (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
           (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
              C1511 +
          (C6405 * C5021 + (C6403 - (C6394 + C6393) + C6404) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C825 -
            (C5828 * C31933 + C5829 * C824) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C7090 + C7091 - C7092 - C7093 + C7094 + C7095 - C7114 - C7115) *
               C31615 * C5022 +
           (C7100 + C7101 - C7102 - C7103 + C7104 + C7105 - C7116 - C7117) *
               C31615 * C5023) *
              C31932 +
          ((C7092 - (C7091 + C7090) + C7093 - C7094 - C7095 + C7114 + C7115) *
               C31615 * C5021 +
           (C7102 - (C7101 + C7100) + C7103 - C7104 - C7105 + C7116 + C7117) *
               C31615 * C5022 +
           (C5989 * C2437 - (C5153 * C2432 + C5154 * C2436) + C5990 * C2433 -
            C5991 * C2438 - C5992 * C2434 +
            (C113 * C7085 + C31856 * C7086) * C2439 +
            (C113 * C7087 + C31856 * C7088) * C31979) *
               C31615 * C5023) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C299 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C824 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31933 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C825 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C825 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C31933 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C824) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C824 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31933 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C825 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C1509 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C825 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31933 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C824) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31764) *
              C31615 * C31845 * C1510 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C824 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31933 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C825 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31764) *
              C31615 * C31845 * C1511 +
          ((C9498 * C1803 + C9495 * C1806 + C9499 * C5945 + C9496 * C5948 +
            C9500 * C7085 + C9497 * C7086) *
               C825 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31933 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C824) +
           (C9498 * C1807 + C9495 * C1812 + C9499 * C5949 + C9496 * C5954 +
            C9500 * C7087 + C9497 * C7088) *
               C31764) *
              C31615 * C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C2436 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C2432 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C2437 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C2433 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C2438 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C2434 -
           (C9500 * C10969 + C9497 * C10971 + C9499 * C2137 + C9496 * C2144 +
            C9498 * C2136 + C9495 * C2142) *
               C2439 -
           (C9500 * C10972 + C9497 * C10975 + C9499 * C2145 + C9496 * C2155 +
            C9498 * C2143 + C9495 * C2154) *
               C31979) *
              C31615 * C31845 * C31932 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C2437 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C2432 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C2436) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C2433 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C2438 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C2434 +
           (C9498 * C2570 + C9495 * C2573 + C9499 * C6711 + C9496 * C6714 +
            C9500 * C11327 + C9497 * C11328) *
               C2439 +
           (C9498 * C2574 + C9495 * C2579 + C9499 * C6715 + C9496 * C6720 +
            C9500 * C11329 + C9497 * C11330) *
               C31979) *
              C31615 * C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C114 +
                (C113 * C123 + C31856 * C136) * C31677) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31845 * C31660 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31845 * C31660 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                  C31660 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31845 * C31660 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31856 * C134) * C114 +
                (C113 * C135 + C31856 * C142) * C31677) *
                   C105) *
                  C31845 * C31660 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C32000 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C31988 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C31963) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C31845 * C31988 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C32000 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C31963) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C32000 -
               (((C113 * C328 + C31856 * C340) * C31677 +
                 (C113 * C310 + C31856 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C31988 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31856 * C330) * C114 +
                 (C113 * C331 + C31856 * C341) * C31677) *
                    C105) *
                   C31845 * C31963) *
                  C31957) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C505 +
                (C113 * C123 + C31856 * C136) * C32001 -
                (C113 * C508 + C31856 * C518) * C506 -
                (C113 * C519 + C31856 * C538) * C31990 +
                (C113 * C509 + C31856 * C520) * C507 +
                (C113 * C521 + C31856 * C539) * C31966) *
                   C103 +
               (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
                  C31845 * C31660 * C299 +
              ((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
               (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
               (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
                  C31845 * C31660 * C300 +
              (C607 * C103 + (C572 + C571 - C600 - C601 + C602 + C603) * C104 +
               (C170 * C505 + C171 * C32001 -
                (C113 * C516 + C31856 * C534) * C506 -
                (C113 * C535 + C31856 * C546) * C31990 +
                (C113 * C517 + C31856 * C536) * C507 +
                (C113 * C537 + C31856 * C547) * C31966) *
                   C105) *
                  C31845 * C31660 * C31957) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C1167 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C1168 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C31963) *
                  C31997 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
                   C31845 * C1168 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C1167 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C31963) *
                  C31984 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C1167 -
               ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C1168 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31856 * C330) * C114 +
                 (C113 * C331 + C31856 * C341) * C31677) *
                    C105) *
                   C31845 * C31963) *
                  C31957) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C114 +
                (C113 * C123 + C31856 * C136) * C31677) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31845 * C1235 -
              (C391 * C105 + (C381 + C382) * C104 +
               ((C113 * C316 + C31856 * C334) * C31677 +
                (C113 * C304 + C31856 * C317) * C114) *
                   C103) *
                  C31845 * C1236 +
              (((C113 * C305 + C31856 * C318) * C114 +
                (C113 * C319 + C31856 * C335) * C31677) *
                   C103 +
               (C383 + C384) * C104 + C392 * C105) *
                  C31845 * C1237 -
              (((C113 * C1247 + C31856 * C1259) * C31677 +
                (C113 * C1241 + C31856 * C1248) * C114) *
                   C105 +
               ((C113 * C1249 + C31856 * C1260) * C31677 +
                (C113 * C1242 + C31856 * C1250) * C114) *
                   C104 +
               ((C113 * C1251 + C31856 * C1261) * C31677 +
                (C113 * C1243 + C31856 * C1252) * C114) *
                   C103) *
                  C31845 * C1238 +
              (((C113 * C1244 + C31856 * C1253) * C114 +
                (C113 * C1254 + C31856 * C1262) * C31677) *
                   C103 +
               ((C113 * C1245 + C31856 * C1255) * C114 +
                (C113 * C1256 + C31856 * C1263) * C31677) *
                   C104 +
               ((C113 * C1246 + C31856 * C1257) * C114 +
                (C113 * C1258 + C31856 * C1264) * C31677) *
                   C105) *
                  C31845 * C1239) *
             C31633 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C505 +
                (C113 * C123 + C31856 * C136) * C32001 -
                (C113 * C508 + C31856 * C518) * C506 -
                (C113 * C519 + C31856 * C538) * C31990 +
                (C113 * C509 + C31856 * C520) * C507 +
                (C113 * C521 + C31856 * C539) * C31966) *
                   C103 +
               (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
                  C31845 * C1167 +
              (((C113 * C1004 + C31856 * C1009) * C506 -
                ((C113 * C316 + C31856 * C334) * C32001 +
                 (C113 * C304 + C31856 * C317) * C505) +
                (C113 * C1010 + C31856 * C1019) * C31990 -
                (C113 * C1375 + C31856 * C1384) * C507 -
                (C113 * C1385 + C31856 * C1402) * C31966) *
                   C103 +
               (C1043 * C506 - (C369 * C32001 + C370 * C505) + C1044 * C31990 -
                (C113 * C1376 + C31856 * C1386) * C507 -
                (C113 * C1387 + C31856 * C1403) * C31966) *
                   C104 +
               (C1045 * C506 - (C367 * C32001 + C368 * C505) + C1047 * C31990 -
                (C113 * C1377 + C31856 * C1388) * C507 -
                (C113 * C1389 + C31856 * C1404) * C31966) *
                   C105) *
                  C31845 * C1168 +
              (((C113 * C305 + C31856 * C318) * C505 +
                (C113 * C319 + C31856 * C335) * C32001 -
                (C113 * C1378 + C31856 * C1390) * C506 -
                (C113 * C1391 + C31856 * C1405) * C31990 +
                (C113 * C1379 + C31856 * C1392) * C507 +
                (C113 * C1393 + C31856 * C1406) * C31966) *
                   C103 +
               (C371 * C505 + C372 * C32001 -
                (C113 * C1380 + C31856 * C1394) * C506 -
                (C113 * C1395 + C31856 * C1407) * C31990 +
                (C113 * C1381 + C31856 * C1396) * C507 +
                (C113 * C1397 + C31856 * C1408) * C31966) *
                   C104 +
               (C373 * C505 + C374 * C32001 -
                (C113 * C1382 + C31856 * C1398) * C506 -
                (C113 * C1399 + C31856 * C1409) * C31990 +
                (C113 * C1383 + C31856 * C1400) * C507 +
                (C113 * C1401 + C31856 * C1410) * C31966) *
                   C105) *
                  C31845 * C31963) *
             C31633 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C1928 +
                (C113 * C123 + C31856 * C136) * C1925 -
                (C113 * C508 + C31856 * C518) * C1929 -
                (C113 * C519 + C31856 * C538) * C1926 +
                (C113 * C509 + C31856 * C520) * C1930 +
                (C113 * C521 + C31856 * C539) * C31966) *
                   C103 +
               (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
               C1954 * C105) *
                  C31845 * C31660 * C31997 +
              ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
               (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
               (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
                  C31845 * C31660 * C31984 +
              (C1954 * C103 +
               (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C104 +
               (C170 * C1928 + C171 * C1925 - C851 * C1929 - C852 * C1926 +
                (C113 * C517 + C31856 * C536) * C1930 +
                (C113 * C537 + C31856 * C547) * C31966) *
                   C105) *
                  C31845 * C31660 * C31957) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C1928 +
                (C113 * C123 + C31856 * C136) * C1925 -
                (C113 * C508 + C31856 * C518) * C1929 -
                (C113 * C519 + C31856 * C538) * C1926 +
                (C113 * C509 + C31856 * C520) * C1930 +
                (C113 * C521 + C31856 * C539) * C31966) *
                   C103 +
               (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
               C1954 * C105) *
                  C31845 * C32000 +
              (((C113 * C1004 + C31856 * C1009) * C1929 -
                ((C113 * C316 + C31856 * C334) * C1925 +
                 (C113 * C304 + C31856 * C317) * C1928) +
                (C113 * C1010 + C31856 * C1019) * C1926 -
                (C113 * C1375 + C31856 * C1384) * C1930 -
                (C113 * C1385 + C31856 * C1402) * C31966) *
                   C103 +
               (C1043 * C1929 - (C369 * C1925 + C370 * C1928) + C1044 * C1926 -
                (C113 * C1376 + C31856 * C1386) * C1930 -
                (C113 * C1387 + C31856 * C1403) * C31966) *
                   C104 +
               (C1045 * C1929 - (C367 * C1925 + C368 * C1928) + C1047 * C1926 -
                (C113 * C1377 + C31856 * C1388) * C1930 -
                (C113 * C1389 + C31856 * C1404) * C31966) *
                   C105) *
                  C31845 * C31988 +
              (((C113 * C305 + C31856 * C318) * C1928 +
                (C113 * C319 + C31856 * C335) * C1925 -
                (C113 * C1378 + C31856 * C1390) * C1929 -
                (C113 * C1391 + C31856 * C1405) * C1926 +
                (C113 * C1379 + C31856 * C1392) * C1930 +
                (C113 * C1393 + C31856 * C1406) * C31966) *
                   C103 +
               (C371 * C1928 + C372 * C1925 - C1698 * C1929 - C1699 * C1926 +
                (C113 * C1381 + C31856 * C1396) * C1930 +
                (C113 * C1397 + C31856 * C1408) * C31966) *
                   C104 +
               (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
                (C113 * C1383 + C31856 * C1400) * C1930 +
                (C113 * C1401 + C31856 * C1410) * C31966) *
                   C105) *
                  C31845 * C31963) *
             C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C31856 * C122) * C2131 +
           (C113 * C123 + C31856 * C136) * C2126 -
           (C113 * C508 + C31856 * C518) * C2132 -
           (C113 * C519 + C31856 * C538) * C2127 +
           (C113 * C509 + C31856 * C520) * C2133 +
           (C113 * C521 + C31856 * C539) * C2128 -
           (C113 * C2136 + C31856 * C2142) * C2134 -
           (C113 * C2143 + C31856 * C2154) * C2129 +
           (C113 * C2137 + C31856 * C2144) * C2135 +
           (C113 * C2145 + C31856 * C2155) * C2130) *
              C103 +
          (C164 * C2131 + C165 * C2126 - C579 * C2132 - C580 * C2127 +
           C581 * C2133 + C582 * C2128 -
           (C113 * C2138 + C31856 * C2146) * C2134 -
           (C113 * C2147 + C31856 * C2156) * C2129 +
           (C113 * C2139 + C31856 * C2148) * C2135 +
           (C113 * C2149 + C31856 * C2157) * C2130) *
              C104 +
          (C166 * C2131 + C167 * C2126 - C584 * C2132 - C585 * C2127 +
           C586 * C2133 + C587 * C2128 -
           (C113 * C2140 + C31856 * C2150) * C2134 -
           (C113 * C2151 + C31856 * C2158) * C2129 +
           (C113 * C2141 + C31856 * C2152) * C2135 +
           (C113 * C2153 + C31856 * C2159) * C2130) *
              C105) *
         C31845 * C31660 * C31633) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C505 + C5150 * C32001 -
            (C113 * C1004 + C31856 * C1009) * C506 -
            (C113 * C1010 + C31856 * C1019) * C31990 +
            (C113 * C1375 + C31856 * C1384) * C507 +
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C31615 * C5022 +
           (C5151 * C505 + C5152 * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C31615 * C5023) *
              C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
           (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
           (C1698 * C506 - (C372 * C32001 + C371 * C505) + C1699 * C31990 -
            (C113 * C1381 + C31856 * C1396) * C507 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C300 +
          (C607 * C31615 * C5021 +
           (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C31615 * C5022 +
           (C373 * C505 + C374 * C32001 - C1700 * C506 - C1701 * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
           C6005 * C5023) *
              C1167 +
          ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
           (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
           (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 * C5023) *
              C1168 +
          (C6005 * C5021 +
           (C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C31615 * C5022 +
           (C5826 * C505 + C5827 * C32001 -
            (C113 * C5946 + C31856 * C5950) * C506 -
            (C113 * C5951 + C31856 * C5955) * C31990 +
            (C113 * C5947 + C31856 * C5952) * C507 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C1928 + C5150 * C1925 - C5628 * C1929 - C5629 * C1926 +
            C5984 * C1930 + C5985 * C31966) *
               C31615 * C5022 +
           (C5151 * C1928 + C5152 * C1925 - C5630 * C1929 - C5631 * C1926 +
            C5987 * C1930 + C5988 * C31966) *
               C31615 * C5023) *
              C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
           (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
           (C1698 * C1929 - (C372 * C1925 + C371 * C1928) + C1699 * C1926 -
            (C113 * C1381 + C31856 * C1396) * C1930 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C31984 +
          (C1954 * C31615 * C5021 +
           (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C31615 * C5022 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
           C6649 * C5023) *
              C32000 +
          ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
           (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
           (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 * C5023) *
              C31988 +
          (C6649 * C5021 +
           (C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C31615 * C5022 +
           (C5826 * C1928 + C5827 * C1925 - C6400 * C1929 - C6401 * C1926 +
            (C113 * C5947 + C31856 * C5952) * C1930 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C31856 * C122) * C2131 +
           (C113 * C123 + C31856 * C136) * C2126 -
           (C113 * C508 + C31856 * C518) * C2132 -
           (C113 * C519 + C31856 * C538) * C2127 +
           (C113 * C509 + C31856 * C520) * C2133 +
           (C113 * C521 + C31856 * C539) * C2128 -
           (C113 * C2136 + C31856 * C2142) * C2134 -
           (C113 * C2143 + C31856 * C2154) * C2129 +
           (C113 * C2137 + C31856 * C2144) * C2135 +
           (C113 * C2145 + C31856 * C2155) * C2130) *
              C31615 * C5021 +
          (C5149 * C2131 + C5150 * C2126 - C5628 * C2132 - C5629 * C2127 +
           C5984 * C2133 + C5985 * C2128 -
           (C113 * C2570 + C31856 * C2573) * C2134 -
           (C113 * C2574 + C31856 * C2579) * C2129 +
           (C113 * C6711 + C31856 * C6714) * C2135 +
           (C113 * C6715 + C31856 * C6720) * C2130) *
              C31615 * C5022 +
          (C5151 * C2131 + C5152 * C2126 - C5630 * C2132 - C5631 * C2127 +
           C5987 * C2133 + C5988 * C2128 -
           (C113 * C6712 + C31856 * C6716) * C2134 -
           (C113 * C6717 + C31856 * C6721) * C2129 +
           (C113 * C6713 + C31856 * C6718) * C2135 +
           (C113 * C6719 + C31856 * C6722) * C2130) *
              C31615 * C5023) *
         C31660 * C31633) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C31660 * C108 -
          ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
            C9498 * C125 + C9495 * C137) *
               C31677 +
           (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
            C9498 * C116 + C9495 * C124) *
               C114) *
              C31615 * C31845 * C31660 * C109 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C114 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31677) *
              C31615 * C31845 * C31660 * C110 -
          ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
            C9498 * C128 + C9495 * C139) *
               C31677 +
           (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
            C9498 * C118 + C9495 * C129) *
               C114) *
              C31615 * C31845 * C31660 * C111 +
          ((C9498 * C119 + C9495 * C130 + C9499 * C516 + C9496 * C534 +
            C9500 * C517 + C9497 * C536) *
               C114 +
           (C9498 * C131 + C9495 * C140 + C9499 * C535 + C9496 * C546 +
            C9500 * C537 + C9497 * C547) *
               C31677) *
              C31615 * C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C299 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31988 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C9498 * C115 + C9495 * C122 + C9499 * C508 +
                                C9496 * C518 + C9500 * C509 + C9497 * C520) *
                                   C505 +
                               (C9498 * C123 + C9495 * C136 + C9499 * C519 +
                                C9496 * C538 + C9500 * C521 + C9497 * C539) *
                                   C32001 -
                               (C9500 * C2136 + C9497 * C2142 + C9499 * C509 +
                                C9496 * C520 + C9498 * C508 + C9495 * C518) *
                                   C506 -
                               (C9500 * C2143 + C9497 * C2154 + C9499 * C521 +
                                C9496 * C539 + C9498 * C519 + C9495 * C538) *
                                   C31990 +
                               (C9498 * C509 + C9495 * C520 + C9499 * C2136 +
                                C9496 * C2142 + C9500 * C2137 + C9497 * C2144) *
                                   C507 +
                               (C9498 * C521 + C9495 * C539 + C9499 * C2143 +
                                C9496 * C2154 + C9500 * C2145 + C9497 * C2155) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C299 +
                              ((C9498 * C510 + C9495 * C522 + C9499 * C511 +
                                C9496 * C524 + C9500 * C2138 + C9497 * C2146) *
                                   C506 -
                               ((C9500 * C525 + C9497 * C541 + C9499 * C523 +
                                 C9496 * C540 + C9498 * C125 + C9495 * C137) *
                                    C32001 +
                                (C9500 * C511 + C9497 * C524 + C9499 * C510 +
                                 C9496 * C522 + C9498 * C116 + C9495 * C124) *
                                    C505) +
                               (C9498 * C523 + C9495 * C540 + C9499 * C525 +
                                C9496 * C541 + C9500 * C2147 + C9497 * C2156) *
                                   C31990 -
                               (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 +
                                C9496 * C2146 + C9498 * C511 + C9495 * C524) *
                                   C507 -
                               (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 +
                                C9496 * C2156 + C9498 * C525 + C9495 * C541) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C300 +
                              ((C9498 * C117 + C9495 * C126 + C9499 * C512 +
                                C9496 * C526 + C9500 * C513 + C9497 * C528) *
                                   C505 +
                               (C9498 * C127 + C9495 * C138 + C9499 * C527 +
                                C9496 * C542 + C9500 * C529 + C9497 * C543) *
                                   C32001 -
                               (C9500 * C2140 + C9497 * C2150 + C9499 * C513 +
                                C9496 * C528 + C9498 * C512 + C9495 * C526) *
                                   C506 -
                               (C9500 * C2151 + C9497 * C2158 + C9499 * C529 +
                                C9496 * C543 + C9498 * C527 + C9495 * C542) *
                                   C31990 +
                               (C9498 * C513 + C9495 * C528 + C9499 * C2140 +
                                C9496 * C2150 + C9500 * C2141 + C9497 * C2152) *
                                   C507 +
                               (C9498 * C529 + C9495 * C543 + C9499 * C2151 +
                                C9496 * C2158 + C9500 * C2153 + C9497 * C2159) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31997 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1168 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C1235 -
          ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
            C9498 * C316 + C9495 * C334) *
               C31677 +
           (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
            C9498 * C304 + C9495 * C317) *
               C114) *
              C31615 * C31845 * C1236 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C114 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31677) *
              C31615 * C31845 * C1237 -
          ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
            C9498 * C1251 + C9495 * C1261) *
               C31677 +
           (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
            C9498 * C1243 + C9495 * C1252) *
               C114) *
              C31615 * C31845 * C1238 +
          ((C9498 * C1244 + C9495 * C1253 + C9499 * C5946 + C9496 * C5950 +
            C9500 * C5947 + C9497 * C5952) *
               C114 +
           (C9498 * C1254 + C9495 * C1262 + C9499 * C5951 + C9496 * C5955 +
            C9500 * C5953 + C9497 * C5956) *
               C31677) *
              C31615 * C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C505 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C32001 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C506 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31990 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C507 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C1167 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C506 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C32001 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C505) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31990 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C507 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C31966) *
              C31615 * C31845 * C1168 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C505 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C32001 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C506 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31990 +
           (C9498 * C1379 + C9495 * C1392 + C9499 * C6712 + C9496 * C6716 +
            C9500 * C6713 + C9497 * C6718) *
               C507 +
           (C9498 * C1393 + C9495 * C1406 + C9499 * C6717 + C9496 * C6721 +
            C9500 * C6719 + C9497 * C6722) *
               C31966) *
              C31615 * C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C9498 * C115 + C9495 * C122 + C9499 * C508 +
                                C9496 * C518 + C9500 * C509 + C9497 * C520) *
                                   C1928 +
                               (C9498 * C123 + C9495 * C136 + C9499 * C519 +
                                C9496 * C538 + C9500 * C521 + C9497 * C539) *
                                   C1925 -
                               (C9500 * C2136 + C9497 * C2142 + C9499 * C509 +
                                C9496 * C520 + C9498 * C508 + C9495 * C518) *
                                   C1929 -
                               (C9500 * C2143 + C9497 * C2154 + C9499 * C521 +
                                C9496 * C539 + C9498 * C519 + C9495 * C538) *
                                   C1926 +
                               (C9498 * C509 + C9495 * C520 + C9499 * C2136 +
                                C9496 * C2142 + C9500 * C2137 + C9497 * C2144) *
                                   C1930 +
                               (C9498 * C521 + C9495 * C539 + C9499 * C2143 +
                                C9496 * C2154 + C9500 * C2145 + C9497 * C2155) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C31997 +
                              ((C9498 * C510 + C9495 * C522 + C9499 * C511 +
                                C9496 * C524 + C9500 * C2138 + C9497 * C2146) *
                                   C1929 -
                               ((C9500 * C525 + C9497 * C541 + C9499 * C523 +
                                 C9496 * C540 + C9498 * C125 + C9495 * C137) *
                                    C1925 +
                                (C9500 * C511 + C9497 * C524 + C9499 * C510 +
                                 C9496 * C522 + C9498 * C116 + C9495 * C124) *
                                    C1928) +
                               (C9498 * C523 + C9495 * C540 + C9499 * C525 +
                                C9496 * C541 + C9500 * C2147 + C9497 * C2156) *
                                   C1926 -
                               (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 +
                                C9496 * C2146 + C9498 * C511 + C9495 * C524) *
                                   C1930 -
                               (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 +
                                C9496 * C2156 + C9498 * C525 + C9495 * C541) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C31984 +
                              ((C9498 * C117 + C9495 * C126 + C9499 * C512 +
                                C9496 * C526 + C9500 * C513 + C9497 * C528) *
                                   C1928 +
                               (C9498 * C127 + C9495 * C138 + C9499 * C527 +
                                C9496 * C542 + C9500 * C529 + C9497 * C543) *
                                   C1925 -
                               (C9500 * C2140 + C9497 * C2150 + C9499 * C513 +
                                C9496 * C528 + C9498 * C512 + C9495 * C526) *
                                   C1929 -
                               (C9500 * C2151 + C9497 * C2158 + C9499 * C529 +
                                C9496 * C543 + C9498 * C527 + C9495 * C542) *
                                   C1926 +
                               (C9498 * C513 + C9495 * C528 + C9499 * C2140 +
                                C9496 * C2150 + C9500 * C2141 + C9497 * C2152) *
                                   C1930 +
                               (C9498 * C529 + C9495 * C543 + C9499 * C2151 +
                                C9496 * C2158 + C9500 * C2153 + C9497 * C2159) *
                                   C31966) *
                                  C31615 * C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C1928 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C1925 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C1929 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C1926 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C1930 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C32000 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C1929 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C1925 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C1928) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C1926 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C1930 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C31966) *
              C31615 * C31845 * C31988 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C1928 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C1925 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C1929 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C1926 +
           (C9498 * C1379 + C9495 * C1392 + C9499 * C6712 + C9496 * C6716 +
            C9500 * C6713 + C9497 * C6718) *
               C1930 +
           (C9498 * C1393 + C9495 * C1406 + C9499 * C6717 + C9496 * C6721 +
            C9500 * C6719 + C9497 * C6722) *
               C31966) *
              C31615 * C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
           C9500 * C509 + C9497 * C520) *
              C2131 +
          (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
           C9500 * C521 + C9497 * C539) *
              C2126 -
          (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
           C9498 * C508 + C9495 * C518) *
              C2132 -
          (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
           C9498 * C519 + C9495 * C538) *
              C2127 +
          (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
           C9500 * C2137 + C9497 * C2144) *
              C2133 +
          (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
           C9500 * C2145 + C9497 * C2155) *
              C2128 -
          (C9500 * C10969 + C9497 * C10971 + C9499 * C2137 + C9496 * C2144 +
           C9498 * C2136 + C9495 * C2142) *
              C2134 -
          (C9500 * C10972 + C9497 * C10975 + C9499 * C2145 + C9496 * C2155 +
           C9498 * C2143 + C9495 * C2154) *
              C2129 +
          (C9498 * C2137 + C9495 * C2144 + C9499 * C10969 + C9496 * C10971 +
           C9500 * C10970 + C9497 * C10973) *
              C2135 +
          (C9498 * C2145 + C9495 * C2155 + C9499 * C10972 + C9496 * C10975 +
           C9500 * C10974 + C9497 * C10976) *
              C2130) *
         C31615 * C31845 * C31660 * C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C824 +
                (C113 * C123 + C31856 * C136) * C31933 -
                (C113 * C508 + C31856 * C518) * C825 -
                (C113 * C519 + C31856 * C538) * C31764) *
                   C103 +
               (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
                  C31845 * C31660 * C707 +
              ((C833 - (C832 + C831) + C834) * C103 +
               (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
                  C31845 * C31660 * C708 +
              (C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
               (C843 + C844 - C855 - C856) * C105) *
                  C31845 * C31660 * C709 +
              (C858 * C103 + (C855 - (C844 + C843) + C856) * C104 +
               ((C113 * C826 + C31856 * C827) * C825 -
                (C172 * C31933 + C173 * C824) +
                (C113 * C828 + C31856 * C829) * C31764) *
                   C105) *
                  C31845 * C31660 * C31967) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C824 +
                 (C113 * C123 + C31856 * C136) * C31933 -
                 (C113 * C508 + C31856 * C518) * C825 -
                 (C113 * C519 + C31856 * C538) * C31764) *
                    C103 +
                (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
                   C31845 * C1167 +
               (((C113 * C1004 + C31856 * C1009) * C825 -
                 ((C113 * C316 + C31856 * C334) * C31933 +
                  (C113 * C304 + C31856 * C317) * C824) +
                 (C113 * C1010 + C31856 * C1019) * C31764) *
                    C103 +
                (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
                   C31845 * C1168 +
               (((C113 * C305 + C31856 * C318) * C824 +
                 (C113 * C319 + C31856 * C335) * C31933 -
                 (C113 * C1378 + C31856 * C1390) * C825 -
                 (C113 * C1391 + C31856 * C1405) * C31764) *
                    C103 +
                (C1686 + C1687 - C1702 - C1703) * C104 +
                (C1692 + C1693 - C1704 - C1705) * C105) *
                   C31845 * C31963) *
                  C31918 +
              (((C833 - (C832 + C831) + C834) * C103 +
                (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
                   C31845 * C1167 +
               ((C1028 + C1027 - C1050 - C1051) * C103 +
                (C1034 + C1033 - C1052 - C1053) * C104 +
                (C1037 + C1038 - C1054 - C1055) * C105) *
                   C31845 * C1168 +
               ((C1702 - (C1687 + C1686) + C1703) * C103 +
                (C1704 - (C1693 + C1692) + C1705) * C104 +
                ((C113 * C1681 + C31856 * C1682) * C825 -
                 (C377 * C31933 + C378 * C824) +
                 (C113 * C1683 + C31856 * C1684) * C31764) *
                    C105) *
                   C31845 * C31963) *
                  C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
               C104 +
           (C2455 + C2456 - C2457 - C2458 + C2459 + C2460 - C2471 - C2472) *
               C105) *
              C31845 * C31660 * C31918 +
          ((C2447 - (C2446 + C2445) + C2448 - C2449 - C2450 + C2469 + C2470) *
               C103 +
           (C2457 - (C2456 + C2455) + C2458 - C2459 - C2460 + C2471 + C2472) *
               C104 +
           (C588 * C2437 - (C168 * C2432 + C169 * C2436) + C589 * C2433 -
            C590 * C2438 - C591 * C2434 +
            (C113 * C2440 + C31856 * C2441) * C2439 +
            (C113 * C2442 + C31856 * C2443) * C31979) *
               C105) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C824 + C5150 * C31933 -
            (C113 * C1004 + C31856 * C1009) * C825 -
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C31615 * C5022 +
           (C5151 * C824 + C5152 * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C31615 * C5023) *
              C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C31615 * C5021 +
           (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
           (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
              C31660 * C708 +
          (C857 * C31615 * C5021 +
           (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
           (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
              C31660 * C709 +
          (C858 * C31615 * C5021 +
           (C1054 - (C1038 + C1037) + C1055) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C825 -
            (C377 * C31933 + C378 * C824) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C1167 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            (C6269 - (C6270 + C6271) + C6272) * C31615 * C5023) *
               C1168 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C5826 * C824 + C5827 * C31933 -
             (C113 * C5946 + C31856 * C5950) * C825 -
             (C113 * C5951 + C31856 * C5955) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C1168 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C5149 * C2436 + C5150 * C2432 - C5628 * C2437 - C5629 * C2433 +
            C5984 * C2438 + C5985 * C2434 -
            (C113 * C2570 + C31856 * C2573) * C2439 -
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C31615 * C5022 +
           (C5151 * C2436 + C5152 * C2432 - C5630 * C2437 - C5631 * C2433 +
            C5987 * C2438 + C5988 * C2434 -
            (C113 * C6712 + C31856 * C6716) * C2439 -
            (C113 * C6717 + C31856 * C6721) * C31979) *
               C31615 * C5023) *
              C31660 * C31918 +
          ((C2447 - (C2446 + C2445) + C2448 - C2449 - C2450 + C2469 + C2470) *
               C31615 * C5021 +
           (C1043 * C2437 - (C369 * C2432 + C370 * C2436) + C1044 * C2433 -
            C2327 * C2438 - C2328 * C2434 +
            (C113 * C2571 + C31856 * C2575) * C2439 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C31615 * C5022 +
           (C1698 * C2437 - (C372 * C2432 + C371 * C2436) + C1699 * C2433 -
            C6882 * C2438 - C6883 * C2434 +
            (C113 * C6983 + C31856 * C6984) * C2439 +
            (C113 * C6985 + C31856 * C6986) * C31979) *
               C31615 * C5023) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C824 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31933 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C825 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C31660 * C707 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C825 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31933 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C824) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31764) *
              C31615 * C31845 * C31660 * C708 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C824 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31933 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C825 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31764) *
              C31615 * C31845 * C31660 * C709 +
          ((C9498 * C514 + C9495 * C530 + C9499 * C515 + C9496 * C532 +
            C9500 * C2440 + C9497 * C2441) *
               C825 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31933 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C824) +
           (C9498 * C531 + C9495 * C544 + C9499 * C533 + C9496 * C545 +
            C9500 * C2442 + C9497 * C2443) *
               C31764) *
              C31615 * C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C1167 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C824 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31933 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C825 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31918 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C1167 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C1168 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C825 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C31933 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C824) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C2436 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C2432 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C2437 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C2433 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C2438 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C2434 -
           (C9500 * C10969 + C9497 * C10971 + C9499 * C2137 + C9496 * C2144 +
            C9498 * C2136 + C9495 * C2142) *
               C2439 -
           (C9500 * C10972 + C9497 * C10975 + C9499 * C2145 + C9496 * C2155 +
            C9498 * C2143 + C9495 * C2154) *
               C31979) *
              C31615 * C31845 * C31660 * C31918 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C2437 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C2432 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C2436) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C2433 -
           (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
            C9498 * C511 + C9495 * C524) *
               C2438 -
           (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
            C9498 * C525 + C9495 * C541) *
               C2434 +
           (C9498 * C2138 + C9495 * C2146 + C9499 * C2139 + C9496 * C2148 +
            C9500 * C11225 + C9497 * C11226) *
               C2439 +
           (C9498 * C2147 + C9495 * C2156 + C9499 * C2149 + C9496 * C2157 +
            C9500 * C11227 + C9497 * C11228) *
               C31979) *
              C31615 * C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C31660 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31845 *
              C31660 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C31660 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31845 *
              C31660 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31856 * C134) * C114 +
            (C113 * C135 + C31856 * C142) * C31677) *
               C105) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32000 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C31845 * C31988 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32000 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C32000 -
           (((C113 * C328 + C31856 * C340) * C31677 +
             (C113 * C310 + C31856 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31988 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
           (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
           (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
              C31845 * C31660 * C31984 +
          (C1954 * C103 +
           (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C104 +
           (C170 * C1928 + C171 * C1925 - C851 * C1929 - C852 * C1926 +
            (C113 * C517 + C31856 * C536) * C1930 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C32000 +
          (((C113 * C1004 + C31856 * C1009) * C1929 -
            ((C113 * C316 + C31856 * C334) * C1925 +
             (C113 * C304 + C31856 * C317) * C1928) +
            (C113 * C1010 + C31856 * C1019) * C1926 -
            (C113 * C1375 + C31856 * C1384) * C1930 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C1929 - (C369 * C1925 + C370 * C1928) + C1044 * C1926 -
            (C113 * C1376 + C31856 * C1386) * C1930 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C1929 - (C367 * C1925 + C368 * C1928) + C1047 * C1926 -
            (C113 * C1377 + C31856 * C1388) * C1930 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C31988 +
          (((C113 * C305 + C31856 * C318) * C1928 +
            (C113 * C319 + C31856 * C335) * C1925 -
            (C113 * C1378 + C31856 * C1390) * C1929 -
            (C113 * C1391 + C31856 * C1405) * C1926 +
            (C113 * C1379 + C31856 * C1392) * C1930 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C1928 + C372 * C1925 - C1698 * C1929 - C1699 * C1926 +
            (C113 * C1381 + C31856 * C1396) * C1930 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C1928 + C5150 * C1925 - C5628 * C1929 - C5629 * C1926 +
            C5984 * C1930 + C5985 * C31966) *
               C31615 * C5022 +
           (C5151 * C1928 + C5152 * C1925 - C5630 * C1929 - C5631 * C1926 +
            C5987 * C1930 + C5988 * C31966) *
               C31615 * C5023) *
              C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
           (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
           (C1698 * C1929 - (C372 * C1925 + C371 * C1928) + C1699 * C1926 -
            (C113 * C1381 + C31856 * C1396) * C1930 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C31984 +
          (C1954 * C31615 * C5021 +
           (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C31615 * C5022 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
           C6649 * C5023) *
              C32000 +
          ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
           (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
           (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 * C5023) *
              C31988 +
          (C6649 * C5021 +
           (C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C31615 * C5022 +
           (C5826 * C1928 + C5827 * C1925 - C6400 * C1929 - C6401 * C1926 +
            (C113 * C5947 + C31856 * C5952) * C1930 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C31660 * C108 -
          ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
            C9498 * C125 + C9495 * C137) *
               C31677 +
           (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
            C9498 * C116 + C9495 * C124) *
               C114) *
              C31615 * C31845 * C31660 * C109 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C114 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31677) *
              C31615 * C31845 * C31660 * C110 -
          ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
            C9498 * C128 + C9495 * C139) *
               C31677 +
           (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
            C9498 * C118 + C9495 * C129) *
               C114) *
              C31615 * C31845 * C31660 * C111 +
          ((C9498 * C119 + C9495 * C130 + C9499 * C516 + C9496 * C534 +
            C9500 * C517 + C9497 * C536) *
               C114 +
           (C9498 * C131 + C9495 * C140 + C9499 * C535 + C9496 * C546 +
            C9500 * C537 + C9497 * C547) *
               C31677) *
              C31615 * C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C299 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31988 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31997 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1168 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C1235 -
          ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
            C9498 * C316 + C9495 * C334) *
               C31677 +
           (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
            C9498 * C304 + C9495 * C317) *
               C114) *
              C31615 * C31845 * C1236 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C114 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31677) *
              C31615 * C31845 * C1237 -
          ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
            C9498 * C1251 + C9495 * C1261) *
               C31677 +
           (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
            C9498 * C1243 + C9495 * C1252) *
               C114) *
              C31615 * C31845 * C1238 +
          ((C9498 * C1244 + C9495 * C1253 + C9499 * C5946 + C9496 * C5950 +
            C9500 * C5947 + C9497 * C5952) *
               C114 +
           (C9498 * C1254 + C9495 * C1262 + C9499 * C5951 + C9496 * C5955 +
            C9500 * C5953 + C9497 * C5956) *
               C31677) *
              C31615 * C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C1928 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C1925 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C1929 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C1926 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C1930 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C31660 * C31997 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C1929 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C1925 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C1928) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C1926 -
           (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
            C9498 * C511 + C9495 * C524) *
               C1930 -
           (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
            C9498 * C525 + C9495 * C541) *
               C31966) *
              C31615 * C31845 * C31660 * C31984 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C1928 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C1925 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C1929 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C1926 +
           (C9498 * C513 + C9495 * C528 + C9499 * C2140 + C9496 * C2150 +
            C9500 * C2141 + C9497 * C2152) *
               C1930 +
           (C9498 * C529 + C9495 * C543 + C9499 * C2151 + C9496 * C2158 +
            C9500 * C2153 + C9497 * C2159) *
               C31966) *
              C31615 * C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C1928 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C1925 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C1929 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C1926 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C1930 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C32000 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C1929 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C1925 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C1928) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C1926 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C1930 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C31966) *
              C31615 * C31845 * C31988 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C1928 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C1925 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C1929 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C1926 +
           (C9498 * C1379 + C9495 * C1392 + C9499 * C6712 + C9496 * C6716 +
            C9500 * C6713 + C9497 * C6718) *
               C1930 +
           (C9498 * C1393 + C9495 * C1406 + C9499 * C6717 + C9496 * C6721 +
            C9500 * C6719 + C9497 * C6722) *
               C31966) *
              C31615 * C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C31932 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31638 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C31932 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31646 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C31932 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31722) *
              C31638 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C31932 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31722) *
              C31646 +
          ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
            (C3471 + C3472 - C3473 - C3474) * C105) *
               C31845 * C31932 +
           (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31638 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31646 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C3456 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C3454 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C3457 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C3457 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C3454 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C3456) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C31615 * C5021 +
            (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
            (C8642 + C8643 - C8644 - C8645 + C8646 + C8647) * C31615 * C5023) *
               C31932 +
           ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
            (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
            (C5989 * C30443 - (C5153 * C31760 + C5154 * C30451) +
             C5990 * C31767 - C5991 * C30457 - C5992 * C4029) *
                C31615 * C5023) *
               C31722) *
              C2788 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
            (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C31615 *
                C5023) *
               C31932 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C31615 * C5021 +
            (C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C31615 * C5022 +
            (C1531 * C30451 + C1530 * C31760 - C6282 * C30443 - C6283 * C31767 +
             (C113 * C6869 + C31856 * C6870) * C30457 +
             (C113 * C6871 + C31856 * C6872) * C4029) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C103 +
            (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
            C4056 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C30443 -
             ((C113 * C316 + C31856 * C334) * C31760 +
              (C113 * C304 + C31856 * C317) * C30451) +
             (C113 * C1010 + C31856 * C1019) * C31767 -
             (C113 * C1375 + C31856 * C1384) * C30457 -
             (C113 * C1385 + C31856 * C1402) * C4029) *
                C103 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
            (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
               C31845 * C31722) *
              C2788 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
            (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
            (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
               C31845 * C31932 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C103 +
            (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C104 +
            (C375 * C30451 + C376 * C31760 - C1048 * C30443 - C1049 * C31767 +
             (C113 * C2306 + C31856 * C2307) * C30457 +
             (C113 * C2308 + C31856 * C2309) * C4029) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C30451 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31760 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C30443 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31767 +
            (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
             C9500 * C2137 + C9497 * C2144) *
                C30457 +
            (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
             C9500 * C2145 + C9497 * C2155) *
                C4029) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C30443 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31760 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C30451) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31767 -
            (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
             C9498 * C1375 + C9495 * C1384) *
                C30457 -
            (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
             C9498 * C1385 + C9495 * C1402) *
                C4029) *
               C31615 * C31845 * C31722) *
              C2788 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C30443 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31760 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C30451) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31767 -
            (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
             C9498 * C511 + C9495 * C524) *
                C30457 -
            (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
             C9498 * C525 + C9495 * C541) *
                C4029) *
               C31615 * C31845 * C31932 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C30451 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31760 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C30443 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31767 +
            (C9498 * C1376 + C9495 * C1386 + C9499 * C2571 + C9496 * C2575 +
             C9500 * C11123 + C9497 * C11124) *
                C30457 +
            (C9498 * C1387 + C9495 * C1403 + C9499 * C2576 + C9496 * C2580 +
             C9500 * C11125 + C9497 * C11126) *
                C4029) *
               C31615 * C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C3456 +
                (C113 * C123 + C31856 * C136) * C3454 -
                (C113 * C508 + C31856 * C518) * C3457 -
                (C113 * C519 + C31856 * C538) * C31764) *
                   C103 +
               (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
                  C31845 * C31660 * C32006 +
              ((C3461 - (C3460 + C3459) + C3462) * C103 +
               (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
                  C31845 * C31660 * C31999 +
              (C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
               (C3471 + C3472 - C3473 - C3474) * C105) *
                  C31845 * C31660 * C31986 +
              (C3480 * C103 + (C3473 - (C3472 + C3471) + C3474) * C104 +
               ((C113 * C826 + C31856 * C827) * C3457 -
                (C172 * C3454 + C173 * C3456) +
                (C113 * C828 + C31856 * C829) * C31764) *
                   C105) *
                  C31845 * C31660 * C31967) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C3456 +
                 (C113 * C123 + C31856 * C136) * C3454 -
                 (C113 * C508 + C31856 * C518) * C3457 -
                 (C113 * C519 + C31856 * C538) * C31764) *
                    C103 +
                (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
                   C31845 * C32000 +
               (((C113 * C1004 + C31856 * C1009) * C3457 -
                 ((C113 * C316 + C31856 * C334) * C3454 +
                  (C113 * C304 + C31856 * C317) * C3456) +
                 (C113 * C1010 + C31856 * C1019) * C31764) *
                    C103 +
                (C3627 - (C3628 + C3629) + C3630) * C104 +
                (C3631 - (C3632 + C3633) + C3634) * C105) *
                   C31845 * C31988 +
               (((C113 * C305 + C31856 * C318) * C3456 +
                 (C113 * C319 + C31856 * C335) * C3454 -
                 (C113 * C1378 + C31856 * C1390) * C3457 -
                 (C113 * C1391 + C31856 * C1405) * C31764) *
                    C103 +
                (C3635 + C3636 - C3637 - C3638) * C104 +
                (C3639 + C3640 - C3641 - C3642) * C105) *
                   C31845 * C31963) *
                  C2788 +
              (((C3461 - (C3460 + C3459) + C3462) * C103 +
                (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
                   C31845 * C32000 +
               ((C3629 + C3628 - C3627 - C3630) * C103 +
                (C3633 + C3632 - C3631 - C3634) * C104 +
                (C375 * C3456 + C376 * C3454 - C1048 * C3457 - C1049 * C31764) *
                    C105) *
                   C31845 * C31988 +
               ((C3637 - (C3636 + C3635) + C3638) * C103 +
                (C3641 - (C3640 + C3639) + C3642) * C104 +
                ((C113 * C1681 + C31856 * C1682) * C3457 -
                 (C377 * C3454 + C378 * C3456) +
                 (C113 * C1683 + C31856 * C1684) * C31764) *
                    C105) *
                   C31845 * C31963) *
                  C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
               C104 +
           (C3757 + C3758 - C3759 - C3760 + C3761 + C3762 - C3763 - C3764) *
               C105) *
              C31845 * C31660 * C2788 +
          ((C3751 - (C3750 + C3749) + C3752 - C3753 - C3754 + C3755 + C3756) *
               C103 +
           (C3759 - (C3758 + C3757) + C3760 - C3761 - C3762 + C3763 + C3764) *
               C104 +
           (C588 * C3745 - (C168 * C32008 + C169 * C3744) + C589 * C32005 -
            C590 * C3746 - C591 * C31996 +
            (C113 * C2440 + C31856 * C2441) * C3747 +
            (C113 * C2442 + C31856 * C2443) * C31979) *
               C105) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C3456 + C5150 * C3454 - C5628 * C3457 - C5629 * C31764) *
               C31615 * C5022 +
           (C5151 * C3456 + C5152 * C3454 - C5630 * C3457 - C5631 * C31764) *
               C31615 * C5023) *
              C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
           (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
           (C3637 - (C3636 + C3635) + C3638) * C31615 * C5023) *
              C31660 * C31999 +
          (C3479 * C31615 * C5021 +
           (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
           (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
              C31660 * C31986 +
          (C3480 * C31615 * C5021 +
           (C3914 - (C3913 + C3912) + C3915) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C3457 -
            (C377 * C3454 + C378 * C3456) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C32000 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31988 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C5826 * C3456 + C5827 * C3454 - C6400 * C3457 - C6401 * C31764) *
                C31615 * C5023) *
               C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31988 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C5149 * C3744 + C5150 * C32008 - C5628 * C3745 - C5629 * C32005 +
            C5984 * C3746 + C5985 * C31996 - C7110 * C3747 - C7111 * C31979) *
               C31615 * C5022 +
           (C5151 * C3744 + C5152 * C32008 - C5630 * C3745 - C5631 * C32005 +
            C5987 * C3746 + C5988 * C31996 - C7112 * C3747 - C7113 * C31979) *
               C31615 * C5023) *
              C31660 * C2788 +
          ((C3751 - (C3750 + C3749) + C3752 - C3753 - C3754 + C3755 + C3756) *
               C31615 * C5021 +
           (C1043 * C3745 - (C369 * C32008 + C370 * C3744) + C1044 * C32005 -
            C2327 * C3746 - C2328 * C31996 +
            (C113 * C2571 + C31856 * C2575) * C3747 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C31615 * C5022 +
           (C1698 * C3745 - (C372 * C32008 + C371 * C3744) + C1699 * C32005 -
            C6882 * C3746 - C6883 * C31996 +
            (C113 * C6983 + C31856 * C6984) * C3747 +
            (C113 * C6985 + C31856 * C6986) * C31979) *
               C31615 * C5023) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3456 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C3454 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3457 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C31660 * C32006 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C3457 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C3454 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C3456) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31764) *
              C31615 * C31845 * C31660 * C31999 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C3456 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C3454 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C3457 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31764) *
              C31615 * C31845 * C31660 * C31986 +
          ((C9498 * C514 + C9495 * C530 + C9499 * C515 + C9496 * C532 +
            C9500 * C2440 + C9497 * C2441) *
               C3457 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C3454 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C3456) +
           (C9498 * C531 + C9495 * C544 + C9499 * C533 + C9496 * C545 +
            C9500 * C2442 + C9497 * C2443) *
               C31764) *
              C31615 * C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C32000 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C3456 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C3454 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C3457 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C31963) *
              C2788 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C32000 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31988 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C3457 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C3454 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C3456) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3744 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C32008 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3745 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C32005 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C3746 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31996 -
           (C9500 * C10969 + C9497 * C10971 + C9499 * C2137 + C9496 * C2144 +
            C9498 * C2136 + C9495 * C2142) *
               C3747 -
           (C9500 * C10972 + C9497 * C10975 + C9499 * C2145 + C9496 * C2155 +
            C9498 * C2143 + C9495 * C2154) *
               C31979) *
              C31615 * C31845 * C31660 * C2788 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C3745 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C32008 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C3744) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C32005 -
           (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
            C9498 * C511 + C9495 * C524) *
               C3746 -
           (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
            C9498 * C525 + C9495 * C541) *
               C31996 +
           (C9498 * C2138 + C9495 * C2146 + C9499 * C2139 + C9496 * C2148 +
            C9500 * C11225 + C9497 * C11226) *
               C3747 +
           (C9498 * C2147 + C9495 * C2156 + C9499 * C2149 + C9496 * C2157 +
            C9500 * C11227 + C9497 * C11228) *
               C31979) *
              C31615 * C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C31615 * C5021 +
           (C5149 * C30451 + C5150 * C31760 - C5628 * C30443 - C5629 * C31767 +
            C5984 * C30457 + C5985 * C4029) *
               C31615 * C5022 +
           (C5151 * C30451 + C5152 * C31760 - C5630 * C30443 - C5631 * C31767 +
            C5987 * C30457 + C5988 * C4029) *
               C31615 * C5023) *
              C31660 * C31638 +
          ((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
           (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
           (C1698 * C30443 - (C372 * C31760 + C371 * C30451) + C1699 * C31767 -
            C6882 * C30457 - C6883 * C4029) *
               C31615 * C5023) *
              C31660 * C31646 +
          (C4056 * C31615 * C5021 +
           (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C31615 * C5022 +
           (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
            (C113 * C1383 + C31856 * C1400) * C30457 +
            (C113 * C1401 + C31856 * C1410) * C4029) *
               C31615 * C5023) *
              C31660 * C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C103 +
           (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
           C4056 * C105) *
              C31845 * C31660 * C31638 +
          ((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
           (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
           (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
              C31845 * C31660 * C31646 +
          (C4056 * C103 +
           (C4048 + C4047 - C4046 - C4049 + C4050 + C4051) * C104 +
           (C170 * C30451 + C171 * C31760 - C851 * C30443 - C852 * C31767 +
            (C113 * C517 + C31856 * C536) * C30457 +
            (C113 * C537 + C31856 * C547) * C4029) *
               C105) *
              C31845 * C31660 * C3063)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C30451 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31760 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C30443 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31767 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C30457 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C4029) *
              C31615 * C31845 * C31660 * C31638 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C30443 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31760 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C30451) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31767 -
           (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
            C9498 * C511 + C9495 * C524) *
               C30457 -
           (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
            C9498 * C525 + C9495 * C541) *
               C4029) *
              C31615 * C31845 * C31660 * C31646 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C30451 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31760 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C30443 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31767 +
           (C9498 * C513 + C9495 * C528 + C9499 * C2140 + C9496 * C2150 +
            C9500 * C2141 + C9497 * C2152) *
               C30457 +
           (C9498 * C529 + C9495 * C543 + C9499 * C2151 + C9496 * C2158 +
            C9500 * C2153 + C9497 * C2159) *
               C4029) *
              C31615 * C31845 * C31660 * C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C32000 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 +
            (C3631 - (C3632 + C3633) + C3634) * C105) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C3456 +
             (C113 * C319 + C31856 * C335) * C3454 -
             (C113 * C1378 + C31856 * C1390) * C3457 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C3635 + C3636 - C3637 - C3638) * C104 +
            (C3639 + C3640 - C3641 - C3642) * C105) *
               C31845 * C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C375 * C3456 + C376 * C3454 - C1048 * C3457 - C1049 * C31764) *
                C105) *
               C31845 * C31988 +
           ((C3637 - (C3636 + C3635) + C3638) * C103 +
            (C3641 - (C3640 + C3639) + C3642) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C3457 -
             (C377 * C3454 + C378 * C3456) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C103 +
           (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
              C31845 * C31660 * C31999 +
          (C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
           (C3471 + C3472 - C3473 - C3474) * C105) *
              C31845 * C31660 * C31986 +
          (C3480 * C103 + (C3473 - (C3472 + C3471) + C3474) * C104 +
           ((C113 * C826 + C31856 * C827) * C3457 -
            (C172 * C3454 + C173 * C3456) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C3456 + C5150 * C3454 - C5628 * C3457 - C5629 * C31764) *
               C31615 * C5022 +
           (C5151 * C3456 + C5152 * C3454 - C5630 * C3457 - C5631 * C31764) *
               C31615 * C5023) *
              C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
           (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
           (C3637 - (C3636 + C3635) + C3638) * C31615 * C5023) *
              C31660 * C31999 +
          (C3479 * C31615 * C5021 +
           (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
           (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
              C31660 * C31986 +
          (C3480 * C31615 * C5021 +
           (C3914 - (C3913 + C3912) + C3915) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C3457 -
            (C377 * C3454 + C378 * C3456) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C32000 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31988 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C5826 * C3456 + C5827 * C3454 - C6400 * C3457 - C6401 * C31764) *
                C31615 * C5023) *
               C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31988 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C3456 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C3454 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C3457 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C31660 * C32006 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C3457 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C3454 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C3456) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31764) *
              C31615 * C31845 * C31660 * C31999 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C3456 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C3454 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C3457 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31764) *
              C31615 * C31845 * C31660 * C31986 +
          ((C9498 * C514 + C9495 * C530 + C9499 * C515 + C9496 * C532 +
            C9500 * C2440 + C9497 * C2441) *
               C3457 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C3454 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C3456) +
           (C9498 * C531 + C9495 * C544 + C9499 * C533 + C9496 * C545 +
            C9500 * C2442 + C9497 * C2443) *
               C31764) *
              C31615 * C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C3456 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C3454 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C3457 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C32000 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C3457 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C3454 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C3456) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C3456 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C3454 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C3457 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C31963) *
              C2788 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C3457 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C3454 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C3456) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C32000 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C3456 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C3454 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C3457 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31988 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C3457 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C3454 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C3456) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1509 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1510 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C1511 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C31918 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1510 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1509 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C1511 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C31932 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C707 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C31932) *
              C708 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C31932 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C709 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31932 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C707 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31932) *
              C708 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31932 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C709 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1509 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1510 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C1511 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C31918 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C1510 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1509 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C1511 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C31932 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31722) *
              C707 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C31932) *
              C708 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C31932 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31722) *
              C709 +
          (((C9498 * C308 + C9495 * C324 + C9499 * C1007 + C9496 * C1015 +
             C9500 * C2306 + C9497 * C2307) *
                C114 +
            (C9498 * C325 + C9495 * C338 + C9499 * C1016 + C9496 * C1022 +
             C9500 * C2308 + C9497 * C2309) *
                C31677) *
               C31615 * C31845 * C31722 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31677 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C114) *
               C31615 * C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1509 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1510 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C1511 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31677 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C114) *
               C31615 * C31845 * C31973) *
              C31918 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1510 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1509 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C1511 +
           ((C9498 * C1242 + C9495 * C1250 + C9499 * C1804 + C9496 * C1808 +
             C9500 * C6869 + C9497 * C6870) *
                C114 +
            (C9498 * C1249 + C9495 * C1260 + C9499 * C1809 + C9496 * C1813 +
             C9500 * C6871 + C9497 * C6872) *
                C31677) *
               C31615 * C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C1509 +
          (((C113 * C1004 + C31856 * C1009) * C825 -
            ((C113 * C316 + C31856 * C334) * C31933 +
             (C113 * C304 + C31856 * C317) * C824) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
              C31845 * C1510 +
          (((C113 * C305 + C31856 * C318) * C824 +
            (C113 * C319 + C31856 * C335) * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C1686 + C1687 - C1702 - C1703) * C104 +
           (C1692 + C1693 - C1704 - C1705) * C105) *
              C31845 * C1511 +
          (((C113 * C1803 + C31856 * C1806) * C825 -
            ((C113 * C1251 + C31856 * C1261) * C31933 +
             (C113 * C1243 + C31856 * C1252) * C824) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C825 -
            (C1530 * C31933 + C1531 * C824) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C825 -
            (C1528 * C31933 + C1529 * C824) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31722) *
              C300 +
          ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
            (C843 + C844 - C855 - C856) * C105) *
               C31845 * C31932 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 +
            (C5622 + C5623 - C5634 - C5635) * C31615 * C5023) *
               C31932 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            ((C113 * C1803 + C31856 * C1806) * C825 -
             (C5153 * C31933 + C5154 * C824) +
             (C113 * C1807 + C31856 * C1812) * C31764) *
                C31615 * C5023) *
               C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
               C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C1531 * C824 + C1530 * C31933 -
             (C113 * C1804 + C31856 * C1808) * C825 -
             (C113 * C1809 + C31856 * C1813) * C31764) *
                C31615 * C5023) *
               C31722) *
              C300 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C31932 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
              C1509 +
          ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
           (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 + C6405 * C5023) *
              C1510 +
          (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
           (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
              C1511 +
          (C6405 * C5021 + (C6403 - (C6394 + C6393) + C6404) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C825 -
            (C5828 * C31933 + C5829 * C824) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C31722) *
              C299 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C31722) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C824 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31933 -
            (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
             C9498 * C512 + C9495 * C526) *
                C825 -
            (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
             C9498 * C527 + C9495 * C542) *
                C31764) *
               C31615 * C31845 * C31932 +
           ((C9498 * C1006 + C9495 * C1013 + C9499 * C1377 + C9496 * C1388 +
             C9500 * C2572 + C9497 * C2577) *
                C825 -
            ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
              C9498 * C312 + C9495 * C332) *
                 C31933 +
             (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
              C9498 * C302 + C9495 * C313) *
                 C824) +
            (C9498 * C1014 + C9495 * C1021 + C9499 * C1389 + C9496 * C1404 +
             C9500 * C2578 + C9497 * C2581) *
                C31764) *
               C31615 * C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C824 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31933 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C825 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C1509 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C825 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31933 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C824) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31764) *
              C31615 * C31845 * C1510 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C824 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31933 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C825 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31764) *
              C31615 * C31845 * C1511 +
          ((C9498 * C1803 + C9495 * C1806 + C9499 * C5945 + C9496 * C5948 +
            C9500 * C7085 + C9497 * C7086) *
               C825 -
           ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
             C9498 * C1251 + C9495 * C1261) *
                C31933 +
            (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
             C9498 * C1243 + C9495 * C1252) *
                C824) +
           (C9498 * C1807 + C9495 * C1812 + C9499 * C5949 + C9496 * C5954 +
            C9500 * C7087 + C9497 * C7088) *
               C31764) *
              C31615 * C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C114 +
                (C113 * C123 + C31856 * C136) * C31677) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31845 * C31660 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31845 * C31660 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                  C31660 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31845 * C31660 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31856 * C134) * C114 +
                (C113 * C135 + C31856 * C142) * C31677) *
                   C105) *
                  C31845 * C31660 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C32000 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C31988 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C31963) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C31845 * C31988 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C32000 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C31963) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C32000 -
               (((C113 * C328 + C31856 * C340) * C31677 +
                 (C113 * C310 + C31856 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C31988 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31856 * C330) * C114 +
                 (C113 * C331 + C31856 * C341) * C31677) *
                    C105) *
                   C31845 * C31963) *
                  C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
           (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
           (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
              C31845 * C31660 * C300 +
          (C607 * C103 + (C572 + C571 - C600 - C601 + C602 + C603) * C104 +
           (C170 * C505 + C171 * C32001 - (C113 * C516 + C31856 * C534) * C506 -
            (C113 * C535 + C31856 * C546) * C31990 +
            (C113 * C517 + C31856 * C536) * C507 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C1167 +
          (((C113 * C1004 + C31856 * C1009) * C506 -
            ((C113 * C316 + C31856 * C334) * C32001 +
             (C113 * C304 + C31856 * C317) * C505) +
            (C113 * C1010 + C31856 * C1019) * C31990 -
            (C113 * C1375 + C31856 * C1384) * C507 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C506 - (C369 * C32001 + C370 * C505) + C1044 * C31990 -
            (C113 * C1376 + C31856 * C1386) * C507 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C506 - (C367 * C32001 + C368 * C505) + C1047 * C31990 -
            (C113 * C1377 + C31856 * C1388) * C507 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C1168 +
          (((C113 * C305 + C31856 * C318) * C505 +
            (C113 * C319 + C31856 * C335) * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C505 + C372 * C32001 -
            (C113 * C1380 + C31856 * C1394) * C506 -
            (C113 * C1395 + C31856 * C1407) * C31990 +
            (C113 * C1381 + C31856 * C1396) * C507 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C505 + C374 * C32001 -
            (C113 * C1382 + C31856 * C1398) * C506 -
            (C113 * C1399 + C31856 * C1409) * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C505 + C5150 * C32001 -
            (C113 * C1004 + C31856 * C1009) * C506 -
            (C113 * C1010 + C31856 * C1019) * C31990 +
            (C113 * C1375 + C31856 * C1384) * C507 +
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C31615 * C5022 +
           (C5151 * C505 + C5152 * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C31615 * C5023) *
              C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
           (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
           (C1698 * C506 - (C372 * C32001 + C371 * C505) + C1699 * C31990 -
            (C113 * C1381 + C31856 * C1396) * C507 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C300 +
          (C607 * C31615 * C5021 +
           (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C31615 * C5022 +
           (C373 * C505 + C374 * C32001 - C1700 * C506 - C1701 * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
           C6005 * C5023) *
              C1167 +
          ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
           (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
           (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 * C5023) *
              C1168 +
          (C6005 * C5021 +
           (C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C31615 * C5022 +
           (C5826 * C505 + C5827 * C32001 -
            (C113 * C5946 + C31856 * C5950) * C506 -
            (C113 * C5951 + C31856 * C5955) * C31990 +
            (C113 * C5947 + C31856 * C5952) * C507 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C31660 * C108 -
          ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
            C9498 * C125 + C9495 * C137) *
               C31677 +
           (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
            C9498 * C116 + C9495 * C124) *
               C114) *
              C31615 * C31845 * C31660 * C109 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C114 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31677) *
              C31615 * C31845 * C31660 * C110 -
          ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
            C9498 * C128 + C9495 * C139) *
               C31677 +
           (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
            C9498 * C118 + C9495 * C129) *
               C114) *
              C31615 * C31845 * C31660 * C111 +
          ((C9498 * C119 + C9495 * C130 + C9499 * C516 + C9496 * C534 +
            C9500 * C517 + C9497 * C536) *
               C114 +
           (C9498 * C131 + C9495 * C140 + C9499 * C535 + C9496 * C546 +
            C9500 * C537 + C9497 * C547) *
               C31677) *
              C31615 * C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C299 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31988 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C505 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C32001 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C506 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31990 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C507 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C31660 * C299 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C506 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C32001 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C505) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31990 -
           (C9500 * C2139 + C9497 * C2148 + C9499 * C2138 + C9496 * C2146 +
            C9498 * C511 + C9495 * C524) *
               C507 -
           (C9500 * C2149 + C9497 * C2157 + C9499 * C2147 + C9496 * C2156 +
            C9498 * C525 + C9495 * C541) *
               C31966) *
              C31615 * C31845 * C31660 * C300 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C505 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C32001 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C506 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31990 +
           (C9498 * C513 + C9495 * C528 + C9499 * C2140 + C9496 * C2150 +
            C9500 * C2141 + C9497 * C2152) *
               C507 +
           (C9498 * C529 + C9495 * C543 + C9499 * C2151 + C9496 * C2158 +
            C9500 * C2153 + C9497 * C2159) *
               C31966) *
              C31615 * C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31997 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1168 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C1235 -
          ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
            C9498 * C316 + C9495 * C334) *
               C31677 +
           (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
            C9498 * C304 + C9495 * C317) *
               C114) *
              C31615 * C31845 * C1236 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C114 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31677) *
              C31615 * C31845 * C1237 -
          ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
            C9498 * C1251 + C9495 * C1261) *
               C31677 +
           (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
            C9498 * C1243 + C9495 * C1252) *
               C114) *
              C31615 * C31845 * C1238 +
          ((C9498 * C1244 + C9495 * C1253 + C9499 * C5946 + C9496 * C5950 +
            C9500 * C5947 + C9497 * C5952) *
               C114 +
           (C9498 * C1254 + C9495 * C1262 + C9499 * C5951 + C9496 * C5955 +
            C9500 * C5953 + C9497 * C5956) *
               C31677) *
              C31615 * C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C505 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C32001 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C506 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31990 +
           (C9498 * C509 + C9495 * C520 + C9499 * C2136 + C9496 * C2142 +
            C9500 * C2137 + C9497 * C2144) *
               C507 +
           (C9498 * C521 + C9495 * C539 + C9499 * C2143 + C9496 * C2154 +
            C9500 * C2145 + C9497 * C2155) *
               C31966) *
              C31615 * C31845 * C1167 +
          ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
            C9500 * C2570 + C9497 * C2573) *
               C506 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C32001 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C505) +
           (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
            C9500 * C2574 + C9497 * C2579) *
               C31990 -
           (C9500 * C6711 + C9497 * C6714 + C9499 * C2570 + C9496 * C2573 +
            C9498 * C1375 + C9495 * C1384) *
               C507 -
           (C9500 * C6715 + C9497 * C6720 + C9499 * C2574 + C9496 * C2579 +
            C9498 * C1385 + C9495 * C1402) *
               C31966) *
              C31615 * C31845 * C1168 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C505 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C32001 -
           (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
            C9498 * C1378 + C9495 * C1390) *
               C506 -
           (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
            C9498 * C1391 + C9495 * C1405) *
               C31990 +
           (C9498 * C1379 + C9495 * C1392 + C9499 * C6712 + C9496 * C6716 +
            C9500 * C6713 + C9497 * C6718) *
               C507 +
           (C9498 * C1393 + C9495 * C1406 + C9499 * C6717 + C9496 * C6721 +
            C9500 * C6719 + C9497 * C6722) *
               C31966) *
              C31615 * C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C1167 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C824 +
             (C113 * C319 + C31856 * C335) * C31933 -
             (C113 * C1378 + C31856 * C1390) * C825 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C1686 + C1687 - C1702 - C1703) * C104 +
            (C1692 + C1693 - C1704 - C1705) * C105) *
               C31845 * C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C1168 +
           ((C1702 - (C1687 + C1686) + C1703) * C103 +
            (C1704 - (C1693 + C1692) + C1705) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C825 -
             (C377 * C31933 + C378 * C824) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C103 +
           (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
              C31845 * C31660 * C708 +
          (C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
           (C843 + C844 - C855 - C856) * C105) *
              C31845 * C31660 * C709 +
          (C858 * C103 + (C855 - (C844 + C843) + C856) * C104 +
           ((C113 * C826 + C31856 * C827) * C825 -
            (C172 * C31933 + C173 * C824) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C824 + C5150 * C31933 -
            (C113 * C1004 + C31856 * C1009) * C825 -
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C31615 * C5022 +
           (C5151 * C824 + C5152 * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C31615 * C5023) *
              C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C31615 * C5021 +
           (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
           (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
              C31660 * C708 +
          (C857 * C31615 * C5021 +
           (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
           (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
              C31660 * C709 +
          (C858 * C31615 * C5021 +
           (C1054 - (C1038 + C1037) + C1055) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C825 -
            (C377 * C31933 + C378 * C824) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C1167 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            (C6269 - (C6270 + C6271) + C6272) * C31615 * C5023) *
               C1168 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C5826 * C824 + C5827 * C31933 -
             (C113 * C5946 + C31856 * C5950) * C825 -
             (C113 * C5951 + C31856 * C5955) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C1168 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C824 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31933 -
           (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
            C9498 * C508 + C9495 * C518) *
               C825 -
           (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
            C9498 * C519 + C9495 * C538) *
               C31764) *
              C31615 * C31845 * C31660 * C707 +
          ((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
            C9500 * C2138 + C9497 * C2146) *
               C825 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31933 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C824) +
           (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
            C9500 * C2147 + C9497 * C2156) *
               C31764) *
              C31615 * C31845 * C31660 * C708 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C824 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31933 -
           (C9500 * C2140 + C9497 * C2150 + C9499 * C513 + C9496 * C528 +
            C9498 * C512 + C9495 * C526) *
               C825 -
           (C9500 * C2151 + C9497 * C2158 + C9499 * C529 + C9496 * C543 +
            C9498 * C527 + C9495 * C542) *
               C31764) *
              C31615 * C31845 * C31660 * C709 +
          ((C9498 * C514 + C9495 * C530 + C9499 * C515 + C9496 * C532 +
            C9500 * C2440 + C9497 * C2441) *
               C825 -
           ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
             C9498 * C128 + C9495 * C139) *
                C31933 +
            (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
             C9498 * C118 + C9495 * C129) *
                C824) +
           (C9498 * C531 + C9495 * C544 + C9499 * C533 + C9496 * C545 +
            C9500 * C2442 + C9497 * C2443) *
               C31764) *
              C31615 * C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C824 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31933 -
            (C9500 * C2136 + C9497 * C2142 + C9499 * C509 + C9496 * C520 +
             C9498 * C508 + C9495 * C518) *
                C825 -
            (C9500 * C2143 + C9497 * C2154 + C9499 * C521 + C9496 * C539 +
             C9498 * C519 + C9495 * C538) *
                C31764) *
               C31615 * C31845 * C1167 +
           ((C9498 * C1004 + C9495 * C1009 + C9499 * C1375 + C9496 * C1384 +
             C9500 * C2570 + C9497 * C2573) *
                C825 -
            ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
              C9498 * C316 + C9495 * C334) *
                 C31933 +
             (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
              C9498 * C304 + C9495 * C317) *
                 C824) +
            (C9498 * C1010 + C9495 * C1019 + C9499 * C1385 + C9496 * C1402 +
             C9500 * C2574 + C9497 * C2579) *
                C31764) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C824 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31933 -
            (C9500 * C6712 + C9497 * C6716 + C9499 * C1379 + C9496 * C1392 +
             C9498 * C1378 + C9495 * C1390) *
                C825 -
            (C9500 * C6717 + C9497 * C6721 + C9499 * C1393 + C9496 * C1406 +
             C9498 * C1391 + C9495 * C1405) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31918 +
          (((C9498 * C510 + C9495 * C522 + C9499 * C511 + C9496 * C524 +
             C9500 * C2138 + C9497 * C2146) *
                C825 -
            ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
              C9498 * C125 + C9495 * C137) *
                 C31933 +
             (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
              C9498 * C116 + C9495 * C124) *
                 C824) +
            (C9498 * C523 + C9495 * C540 + C9499 * C525 + C9496 * C541 +
             C9500 * C2147 + C9497 * C2156) *
                C31764) *
               C31615 * C31845 * C1167 +
           ((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C824 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31933 -
            (C9500 * C2571 + C9497 * C2575 + C9499 * C1376 + C9496 * C1386 +
             C9498 * C1005 + C9495 * C1011) *
                C825 -
            (C9500 * C2576 + C9497 * C2580 + C9499 * C1387 + C9496 * C1403 +
             C9498 * C1012 + C9495 * C1020) *
                C31764) *
               C31615 * C31845 * C1168 +
           ((C9498 * C1380 + C9495 * C1394 + C9499 * C1381 + C9496 * C1396 +
             C9500 * C6983 + C9497 * C6984) *
                C825 -
            ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
              C9498 * C321 + C9495 * C336) *
                 C31933 +
             (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
              C9498 * C306 + C9495 * C320) *
                 C824) +
            (C9498 * C1395 + C9495 * C1407 + C9499 * C1397 + C9496 * C1408 +
             C9500 * C6985 + C9497 * C6986) *
                C31764) *
               C31615 * C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32000 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C31845 * C31988 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32000 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C32000 -
           (((C113 * C328 + C31856 * C340) * C31677 +
             (C113 * C310 + C31856 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31988 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C31660 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31845 *
              C31660 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C31660 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31845 *
              C31660 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31856 * C134) * C114 +
            (C113 * C135 + C31856 * C142) * C31677) *
               C105) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C31660 * C108 -
          ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
            C9498 * C125 + C9495 * C137) *
               C31677 +
           (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
            C9498 * C116 + C9495 * C124) *
               C114) *
              C31615 * C31845 * C31660 * C109 +
          ((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
            C9500 * C513 + C9497 * C528) *
               C114 +
           (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
            C9500 * C529 + C9497 * C543) *
               C31677) *
              C31615 * C31845 * C31660 * C110 -
          ((C9500 * C533 + C9497 * C545 + C9499 * C531 + C9496 * C544 +
            C9498 * C128 + C9495 * C139) *
               C31677 +
           (C9500 * C515 + C9497 * C532 + C9499 * C514 + C9496 * C530 +
            C9498 * C118 + C9495 * C129) *
               C114) *
              C31615 * C31845 * C31660 * C111 +
          ((C9498 * C119 + C9495 * C130 + C9499 * C516 + C9496 * C534 +
            C9500 * C517 + C9497 * C536) *
               C114 +
           (C9498 * C131 + C9495 * C140 + C9499 * C535 + C9496 * C546 +
            C9500 * C537 + C9497 * C547) *
               C31677) *
              C31615 * C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C299 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C31988 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C300 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C32000 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C31988 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
             C9500 * C509 + C9497 * C520) *
                C114 +
            (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
             C9500 * C521 + C9497 * C539) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
             C9498 * C316 + C9495 * C334) *
                C31677 +
            (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
             C9498 * C304 + C9495 * C317) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
             C9500 * C1379 + C9497 * C1392) *
                C114 +
            (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
             C9500 * C1393 + C9497 * C1406) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31997 +
          (((C9498 * C303 + C9495 * C315 + C9499 * C1005 + C9496 * C1011 +
             C9500 * C1376 + C9497 * C1386) *
                C114 +
            (C9498 * C314 + C9495 * C333 + C9499 * C1012 + C9496 * C1020 +
             C9500 * C1387 + C9497 * C1403) *
                C31677) *
               C31615 * C31845 * C1168 -
           ((C9500 * C525 + C9497 * C541 + C9499 * C523 + C9496 * C540 +
             C9498 * C125 + C9495 * C137) *
                C31677 +
            (C9500 * C511 + C9497 * C524 + C9499 * C510 + C9496 * C522 +
             C9498 * C116 + C9495 * C124) *
                C114) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1397 + C9497 * C1408 + C9499 * C1395 + C9496 * C1407 +
             C9498 * C321 + C9495 * C336) *
                C31677 +
            (C9500 * C1381 + C9497 * C1396 + C9499 * C1380 + C9496 * C1394 +
             C9498 * C306 + C9495 * C320) *
                C114) *
               C31615 * C31845 * C31963) *
              C31984 +
          (((C9498 * C117 + C9495 * C126 + C9499 * C512 + C9496 * C526 +
             C9500 * C513 + C9497 * C528) *
                C114 +
            (C9498 * C127 + C9495 * C138 + C9499 * C527 + C9496 * C542 +
             C9500 * C529 + C9497 * C543) *
                C31677) *
               C31615 * C31845 * C1167 -
           ((C9500 * C1389 + C9497 * C1404 + C9499 * C1014 + C9496 * C1021 +
             C9498 * C312 + C9495 * C332) *
                C31677 +
            (C9500 * C1377 + C9497 * C1388 + C9499 * C1006 + C9496 * C1013 +
             C9498 * C302 + C9495 * C313) *
                C114) *
               C31615 * C31845 * C1168 +
           ((C9498 * C307 + C9495 * C322 + C9499 * C1382 + C9496 * C1398 +
             C9500 * C1383 + C9497 * C1400) *
                C114 +
            (C9498 * C323 + C9495 * C337 + C9499 * C1399 + C9496 * C1409 +
             C9500 * C1401 + C9497 * C1410) *
                C31677) *
               C31615 * C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9498 * C115 + C9495 * C122 + C9499 * C508 + C9496 * C518 +
            C9500 * C509 + C9497 * C520) *
               C114 +
           (C9498 * C123 + C9495 * C136 + C9499 * C519 + C9496 * C538 +
            C9500 * C521 + C9497 * C539) *
               C31677) *
              C31615 * C31845 * C1235 -
          ((C9500 * C1385 + C9497 * C1402 + C9499 * C1010 + C9496 * C1019 +
            C9498 * C316 + C9495 * C334) *
               C31677 +
           (C9500 * C1375 + C9497 * C1384 + C9499 * C1004 + C9496 * C1009 +
            C9498 * C304 + C9495 * C317) *
               C114) *
              C31615 * C31845 * C1236 +
          ((C9498 * C305 + C9495 * C318 + C9499 * C1378 + C9496 * C1390 +
            C9500 * C1379 + C9497 * C1392) *
               C114 +
           (C9498 * C319 + C9495 * C335 + C9499 * C1391 + C9496 * C1405 +
            C9500 * C1393 + C9497 * C1406) *
               C31677) *
              C31615 * C31845 * C1237 -
          ((C9500 * C5949 + C9497 * C5954 + C9499 * C1807 + C9496 * C1812 +
            C9498 * C1251 + C9495 * C1261) *
               C31677 +
           (C9500 * C5945 + C9497 * C5948 + C9499 * C1803 + C9496 * C1806 +
            C9498 * C1243 + C9495 * C1252) *
               C114) *
              C31615 * C31845 * C1238 +
          ((C9498 * C1244 + C9495 * C1253 + C9499 * C5946 + C9496 * C5950 +
            C9500 * C5947 + C9497 * C5952) *
               C114 +
           (C9498 * C1254 + C9495 * C1262 + C9499 * C5951 + C9496 * C5955 +
            C9500 * C5953 + C9497 * C5956) *
               C31677) *
              C31615 * C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C31718 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31725 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C3060) *
              C31638 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31725 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C31718 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C3060) *
              C31646 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C31718 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31725 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C3060) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C31718 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31725 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C824 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31933 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C825 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C3060) *
              C2788 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C31718 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31725 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C32007 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C32003 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31993 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C13646 +
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31677 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C114) *
                C13645) *
               C31845 * C31973) *
              C2788 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C32003 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C32007 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31993 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C13645 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C13646) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C2680 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31722) *
              C32006 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31722 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C2680) *
              C31999 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C2680 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31722) *
              C31986 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C13645 +
            ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                 C114 +
             (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                 C31677) *
                C13646) *
               C31845 * C31722 -
           (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
               C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C505 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C32001 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C506 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31990 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C507 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C31966) *
                C13645 +
            ((C19217 + C19218) * C505 + (C19219 + C19220) * C32001 -
             (C19605 + C19606) * C506 - (C19607 + C19608) * C31990 +
             (C19609 + C19610) * C507 + (C19611 + C19612) * C31966) *
                C13646) *
               C31845 * C2680 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C506 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C32001 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C505) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31990 -
             (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
              C19180 * C1384) *
                 C507 -
             (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
              C19180 * C1402) *
                 C31966) *
                C13645 +
            ((C20115 + C20116) * C506 -
             ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
             (C20117 + C20118) * C31990 - (C21551 + C21552) * C507 -
             (C21553 + C21554) * C31966) *
                C13646) *
               C31845 * C31722) *
              C2788 +
          ((((C19606 + C19605) * C506 -
             ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
             (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
             (C19612 + C19611) * C31966) *
                C13645 +
            ((C19613 + C19614) * C506 -
             ((C19221 + C19222) * C32001 + (C19223 + C19224) * C505) +
             (C19615 + C19616) * C31990 - (C19617 + C19618) * C507 -
             (C19619 + C19620) * C31966) *
                C13646) *
               C31845 * C2680 +
           (((C19414 + C19413) * C505 + (C19412 + C19411) * C32001 -
             (C20116 + C20115) * C506 - (C20118 + C20117) * C31990 +
             (C21552 + C21551) * C507 + (C21554 + C21553) * C31966) *
                C13645 +
            ((C19419 + C19420) * C505 + (C19421 + C19422) * C32001 -
             (C20119 + C20120) * C506 - (C20121 + C20122) * C31990 +
             (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
              C19181 * C2577) *
                 C507 +
             (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
              C19181 * C2581) *
                 C31966) *
                C13646) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31638 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31646 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C824 + (C19227 + C19228) * C31933 -
             (C19901 + C19902) * C825 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C825 -
             ((C19759 + C19760) * C31933 + (C19761 + C19762) * C824) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C2680 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31722) *
              C32006 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31722 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C2680) *
              C31999 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C2680 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31722) *
              C31986 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C13645 +
            ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                 C114 +
             (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                 C31677) *
                C13646) *
               C31845 * C31722 -
           (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
               C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C32007 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C32003 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31993 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C13646 +
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31677 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C114) *
                C13645) *
               C31845 * C31973) *
              C2788 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C32003 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C32007 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31993 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C13645 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C13646) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C31718 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31725 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C3456 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C3454 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C3457 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C3060) *
              C31918 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C31718 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31725 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C3060) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C30451 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31760 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C30443 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31767 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C30457 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C4029) *
               C13645 +
           ((C19217 + C19218) * C30451 + (C19219 + C19220) * C31760 -
            (C19605 + C19606) * C30443 - (C19607 + C19608) * C31767 +
            (C19609 + C19610) * C30457 + (C19611 + C19612) * C4029) *
               C13646) *
              C31845 * C31718 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C30443 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31760 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C30451) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31767 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C30457 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C4029) *
               C13645 +
           ((C20115 + C20116) * C30443 -
            ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
            (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
            (C21553 + C21554) * C4029) *
               C13646) *
              C31845 * C31725 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C30451 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31760 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C30443 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31767 +
            (C19182 * C1379 + C19180 * C1392 + C19183 * C6712 +
             C19181 * C6716) *
                C30457 +
            (C19182 * C1393 + C19180 * C1406 + C19183 * C6717 +
             C19181 * C6721) *
                C4029) *
               C13645 +
           ((C19415 + C19416) * C30451 + (C19417 + C19418) * C31760 -
            (C20841 + C20842) * C30443 - (C20843 + C20844) * C31767 +
            (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
             C19181 * C6984) *
                C30457 +
            (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
             C19181 * C6986) *
                C4029) *
               C13646) *
              C31845 * C3060) *
         C31633) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
            (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C32007 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C3457 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C3454 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C3456) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31764) *
               C13645 +
           ((C20115 + C20116) * C3457 -
            ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
            (C20117 + C20118) * C31764) *
               C13646) *
              C31845 * C32003 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C3456 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C3454 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C3457 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31764) *
               C13645 +
           ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
            (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
               C13646) *
              C31845 * C31993 +
          (((C19182 * C1803 + C19180 * C1806 + C19183 * C5945 +
             C19181 * C5948) *
                C3457 -
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C3454 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C3456) +
            (C19182 * C1807 + C19180 * C1812 + C19183 * C5949 +
             C19181 * C5954) *
                C31764) *
               C13645 +
           ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
             C19181 * C6870) *
                C3457 -
            ((C20635 + C20636) * C3454 + (C20637 + C20638) * C3456) +
            (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
             C19181 * C6872) *
                C31764) *
               C13646) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31997 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31984 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C3456 + (C19227 + C19228) * C3454 -
             (C19901 + C19902) * C3457 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C3457 -
             ((C19759 + C19760) * C3454 + (C19761 + C19762) * C3456) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3744 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32008 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3745 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C32005 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C3746 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31996 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C3747 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C13645 +
           ((C19217 + C19218) * C3744 + (C19219 + C19220) * C32008 -
            (C19605 + C19606) * C3745 - (C19607 + C19608) * C32005 +
            (C19609 + C19610) * C3746 + (C19611 + C19612) * C31996 -
            (C21693 + C21694) * C3747 - (C21695 + C21696) * C31979) *
               C13646) *
              C31845 * C2680 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C3745 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C32008 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C3744) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C32005 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C3746 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C31996 +
            (C19182 * C2570 + C19180 * C2573 + C19183 * C6711 +
             C19181 * C6714) *
                C3747 +
            (C19182 * C2574 + C19180 * C2579 + C19183 * C6715 +
             C19181 * C6720) *
                C31979) *
               C13645 +
           ((C20115 + C20116) * C3745 -
            ((C19411 + C19412) * C32008 + (C19413 + C19414) * C3744) +
            (C20117 + C20118) * C32005 - (C21551 + C21552) * C3746 -
            (C21553 + C21554) * C31996 +
            (C19182 * C2571 + C19180 * C2575 + C19183 * C11123 +
             C19181 * C11124) *
                C3747 +
            (C19182 * C2576 + C19180 * C2580 + C19183 * C11125 +
             C19181 * C11126) *
                C31979) *
               C13646) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C30451 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31760 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C30443 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31767 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C30457 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C4029) *
                C13645 +
            ((C19217 + C19218) * C30451 + (C19219 + C19220) * C31760 -
             (C19605 + C19606) * C30443 - (C19607 + C19608) * C31767 +
             (C19609 + C19610) * C30457 + (C19611 + C19612) * C4029) *
                C13646) *
               C31845 * C2680 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C30443 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31760 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C30451) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31767 -
             (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
              C19180 * C1384) *
                 C30457 -
             (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
              C19180 * C1402) *
                 C4029) *
                C13645 +
            ((C20115 + C20116) * C30443 -
             ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
             (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
             (C21553 + C21554) * C4029) *
                C13646) *
               C31845 * C31722) *
              C31918 +
          ((((C19606 + C19605) * C30443 -
             ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
             (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
             (C19612 + C19611) * C4029) *
                C13645 +
            ((C19613 + C19614) * C30443 -
             ((C19221 + C19222) * C31760 + (C19223 + C19224) * C30451) +
             (C19615 + C19616) * C31767 - (C19617 + C19618) * C30457 -
             (C19619 + C19620) * C4029) *
                C13646) *
               C31845 * C2680 +
           (((C19414 + C19413) * C30451 + (C19412 + C19411) * C31760 -
             (C20116 + C20115) * C30443 - (C20118 + C20117) * C31767 +
             (C21552 + C21551) * C30457 + (C21554 + C21553) * C4029) *
                C13645 +
            ((C19419 + C19420) * C30451 + (C19421 + C19422) * C31760 -
             (C20119 + C20120) * C30443 - (C20121 + C20122) * C31767 +
             (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
              C19181 * C2577) *
                 C30457 +
             (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
              C19181 * C2581) *
                 C4029) *
                C13646) *
               C31845 * C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31997 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31984 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C3456 + (C19227 + C19228) * C3454 -
             (C19901 + C19902) * C3457 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C2680 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C3457 -
             ((C19759 + C19760) * C3454 + (C19761 + C19762) * C3456) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
            (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C32007 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C3457 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C3454 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C3456) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31764) *
               C13645 +
           ((C20115 + C20116) * C3457 -
            ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
            (C20117 + C20118) * C31764) *
               C13646) *
              C31845 * C32003 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C3456 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C3454 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C3457 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31764) *
               C13645 +
           ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
            (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
               C13646) *
              C31845 * C31993 +
          (((C19182 * C1803 + C19180 * C1806 + C19183 * C5945 +
             C19181 * C5948) *
                C3457 -
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C3454 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C3456) +
            (C19182 * C1807 + C19180 * C1812 + C19183 * C5949 +
             C19181 * C5954) *
                C31764) *
               C13645 +
           ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
             C19181 * C6870) *
                C3457 -
            ((C20635 + C20636) * C3454 + (C20637 + C20638) * C3456) +
            (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
             C19181 * C6872) *
                C31764) *
               C13646) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1509 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1510 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C1511 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C13646 +
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31677 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C114) *
                C13645) *
               C31845 * C31973) *
              C31918 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1510 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1509 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C1511 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C13645 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C13646) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C31932 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31722) *
              C707 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31722 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C31932) *
              C708 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C31932 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31722) *
              C709 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C13645 +
            ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                 C114 +
             (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                 C31677) *
                C13646) *
               C31845 * C31722 -
           (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
               C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C1928 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C1925 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C1929 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C1926 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C1930 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C31966) *
                C13645 +
            ((C19217 + C19218) * C1928 + (C19219 + C19220) * C1925 -
             (C19605 + C19606) * C1929 - (C19607 + C19608) * C1926 +
             (C19609 + C19610) * C1930 + (C19611 + C19612) * C31966) *
                C13646) *
               C31845 * C31932 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C1929 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C1925 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C1928) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C1926 -
             (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
              C19180 * C1384) *
                 C1930 -
             (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
              C19180 * C1402) *
                 C31966) *
                C13645 +
            ((C20115 + C20116) * C1929 -
             ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
             (C20117 + C20118) * C1926 - (C21551 + C21552) * C1930 -
             (C21553 + C21554) * C31966) *
                C13646) *
               C31845 * C31722) *
              C31918 +
          ((((C19606 + C19605) * C1929 -
             ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
             (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
             (C19612 + C19611) * C31966) *
                C13645 +
            ((C19613 + C19614) * C1929 -
             ((C19221 + C19222) * C1925 + (C19223 + C19224) * C1928) +
             (C19615 + C19616) * C1926 - (C19617 + C19618) * C1930 -
             (C19619 + C19620) * C31966) *
                C13646) *
               C31845 * C31932 +
           (((C19414 + C19413) * C1928 + (C19412 + C19411) * C1925 -
             (C20116 + C20115) * C1929 - (C20118 + C20117) * C1926 +
             (C21552 + C21551) * C1930 + (C21554 + C21553) * C31966) *
                C13645 +
            ((C19419 + C19420) * C1928 + (C19421 + C19422) * C1925 -
             (C20119 + C20120) * C1929 - (C20121 + C20122) * C1926 +
             (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
              C19181 * C2577) *
                 C1930 +
             (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
              C19181 * C2581) *
                 C31966) *
                C13646) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
            (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C1509 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C825 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31933 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C824) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31764) *
               C13645 +
           ((C20115 + C20116) * C825 -
            ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
            (C20117 + C20118) * C31764) *
               C13646) *
              C31845 * C1510 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C824 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31933 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C825 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31764) *
               C13645 +
           ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
            (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
               C13646) *
              C31845 * C1511 +
          (((C19182 * C1803 + C19180 * C1806 + C19183 * C5945 +
             C19181 * C5948) *
                C825 -
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31933 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C824) +
            (C19182 * C1807 + C19180 * C1812 + C19183 * C5949 +
             C19181 * C5954) *
                C31764) *
               C13645 +
           ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
             C19181 * C6870) *
                C825 -
            ((C20635 + C20636) * C31933 + (C20637 + C20638) * C824) +
            (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
             C19181 * C6872) *
                C31764) *
               C13646) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C299 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C300 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C824 + (C19227 + C19228) * C31933 -
             (C19901 + C19902) * C825 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C825 -
             ((C19759 + C19760) * C31933 + (C19761 + C19762) * C824) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C2436 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C2432 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C2437 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C2433 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C2438 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C2434 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C2439 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C13645 +
           ((C19217 + C19218) * C2436 + (C19219 + C19220) * C2432 -
            (C19605 + C19606) * C2437 - (C19607 + C19608) * C2433 +
            (C19609 + C19610) * C2438 + (C19611 + C19612) * C2434 -
            (C21693 + C21694) * C2439 - (C21695 + C21696) * C31979) *
               C13646) *
              C31845 * C31932 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C2437 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C2432 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C2436) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C2433 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C2438 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C2434 +
            (C19182 * C2570 + C19180 * C2573 + C19183 * C6711 +
             C19181 * C6714) *
                C2439 +
            (C19182 * C2574 + C19180 * C2579 + C19183 * C6715 +
             C19181 * C6720) *
                C31979) *
               C13645 +
           ((C20115 + C20116) * C2437 -
            ((C19411 + C19412) * C2432 + (C19413 + C19414) * C2436) +
            (C20117 + C20118) * C2433 - (C21551 + C21552) * C2438 -
            (C21553 + C21554) * C2434 +
            (C19182 * C2571 + C19180 * C2575 + C19183 * C11123 +
             C19181 * C11124) *
                C2439 +
            (C19182 * C2576 + C19180 * C2580 + C19183 * C11125 +
             C19181 * C11126) *
                C31979) *
               C13646) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19182 * C115 + C19180 * C122 + C19183 * C508 +
                 C19181 * C518) *
                    C114 +
                (C19182 * C123 + C19180 * C136 + C19183 * C519 +
                 C19181 * C538) *
                    C31677) *
                   C13645 +
               ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) *
                   C13646) *
                  C31845 * C31660 * C108 -
              (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) *
                   C13646 +
               ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) *
                   C13645) *
                  C31845 * C31660 * C109 +
              (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) *
                   C13645 +
               ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) *
                   C13646) *
                  C31845 * C31660 * C110 -
              (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) *
                   C13646 +
               ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) *
                   C13645) *
                  C31845 * C31660 * C111 +
              (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) *
                   C13645 +
               ((C19182 * C120 + C19180 * C133 + C19183 * C826 +
                 C19181 * C827) *
                    C114 +
                (C19182 * C132 + C19180 * C141 + C19183 * C828 +
                 C19181 * C829) *
                    C31677) *
                   C13646) *
                  C31845 * C31660 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C19182 * C115 + C19180 * C122 + C19183 * C508 +
                  C19181 * C518) *
                     C114 +
                 (C19182 * C123 + C19180 * C136 + C19183 * C519 +
                  C19181 * C538) *
                     C31677) *
                    C13645 +
                ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) *
                    C13646) *
                   C31845 * C32000 -
               (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) *
                    C13646 +
                ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
                  C19180 * C334) *
                     C31677 +
                 (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
                  C19180 * C317) *
                     C114) *
                    C13645) *
                   C31845 * C31988 +
               (((C19182 * C305 + C19180 * C318 + C19183 * C1378 +
                  C19181 * C1390) *
                     C114 +
                 (C19182 * C319 + C19180 * C335 + C19183 * C1391 +
                  C19181 * C1405) *
                     C31677) *
                    C13645 +
                ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) *
                    C13646) *
                   C31845 * C31963) *
                  C299 +
              ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) *
                    C13645 +
                ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) *
                    C13646) *
                   C31845 * C31988 -
               (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) *
                    C13646 +
                ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) *
                    C13645) *
                   C31845 * C32000 -
               (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) *
                    C13646 +
                ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) *
                    C13645) *
                   C31845 * C31963) *
                  C300 +
              ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) *
                    C13645 +
                ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) *
                    C13646) *
                   C31845 * C32000 -
               (((C19183 * C1016 + C19181 * C1022 + C19182 * C325 +
                  C19180 * C338) *
                     C31677 +
                 (C19183 * C1007 + C19181 * C1015 + C19182 * C308 +
                  C19180 * C324) *
                     C114) *
                    C13646 +
                ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) *
                    C13645) *
                   C31845 * C31988 +
               (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) *
                    C13645 +
                ((C19182 * C309 + C19180 * C327 + C19183 * C1681 +
                  C19181 * C1682) *
                     C114 +
                 (C19182 * C326 + C19180 * C339 + C19183 * C1683 +
                  C19181 * C1684) *
                     C31677) *
                    C13646) *
                   C31845 * C31963) *
                  C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C505 + (C19219 + C19220) * C32001 -
            (C19605 + C19606) * C506 - (C19607 + C19608) * C31990 +
            (C19609 + C19610) * C507 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C31660 * C299 +
          (((C19606 + C19605) * C506 -
            ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
            (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
            (C19612 + C19611) * C31966) *
               C13645 +
           ((C19613 + C19614) * C506 -
            ((C19221 + C19222) * C32001 + (C19223 + C19224) * C505) +
            (C19615 + C19616) * C31990 - (C19617 + C19618) * C507 -
            (C19619 + C19620) * C31966) *
               C13646) *
              C31845 * C31660 * C300 +
          (((C19224 + C19223) * C505 + (C19222 + C19221) * C32001 -
            (C19614 + C19613) * C506 - (C19616 + C19615) * C31990 +
            (C19618 + C19617) * C507 + (C19620 + C19619) * C31966) *
               C13645 +
           ((C19225 + C19226) * C505 + (C19227 + C19228) * C32001 -
            (C19183 * C515 + C19181 * C532 + C19182 * C514 + C19180 * C530) *
                C506 -
            (C19183 * C533 + C19181 * C545 + C19182 * C531 + C19180 * C544) *
                C31990 +
            (C19182 * C515 + C19180 * C532 + C19183 * C2440 + C19181 * C2441) *
                C507 +
            (C19182 * C533 + C19180 * C545 + C19183 * C2442 + C19181 * C2443) *
                C31966) *
               C13646) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1168 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C1235 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
           ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                C31677 +
            (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                C114) *
               C13645) *
              C31845 * C1236 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C114 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31677) *
               C13645 +
           ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
              C31845 * C1237 -
          (((C19183 * C1809 + C19181 * C1813 + C19182 * C1249 +
             C19180 * C1260) *
                C31677 +
            (C19183 * C1804 + C19181 * C1808 + C19182 * C1242 +
             C19180 * C1250) *
                C114) *
               C13646 +
           ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
             C19180 * C1261) *
                C31677 +
            (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
             C19180 * C1252) *
                C114) *
               C13645) *
              C31845 * C1238 +
          (((C19182 * C1244 + C19180 * C1253 + C19183 * C5946 +
             C19181 * C5950) *
                C114 +
            (C19182 * C1254 + C19180 * C1262 + C19183 * C5951 +
             C19181 * C5955) *
                C31677) *
               C13645 +
           ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
             C19181 * C6264) *
                C114 +
            (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
             C19181 * C6266) *
                C31677) *
               C13646) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C505 + (C19219 + C19220) * C32001 -
            (C19605 + C19606) * C506 - (C19607 + C19608) * C31990 +
            (C19609 + C19610) * C507 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C1167 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C506 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C32001 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C505) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31990 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C507 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C31966) *
               C13645 +
           ((C20115 + C20116) * C506 -
            ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
            (C20117 + C20118) * C31990 -
            (C19183 * C2571 + C19181 * C2575 + C19182 * C1376 +
             C19180 * C1386) *
                C507 -
            (C19183 * C2576 + C19181 * C2580 + C19182 * C1387 +
             C19180 * C1403) *
                C31966) *
               C13646) *
              C31845 * C1168 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C505 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C32001 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C506 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31990 +
            (C19182 * C1379 + C19180 * C1392 + C19183 * C6712 +
             C19181 * C6716) *
                C507 +
            (C19182 * C1393 + C19180 * C1406 + C19183 * C6717 +
             C19181 * C6721) *
                C31966) *
               C13645 +
           ((C19415 + C19416) * C505 + (C19417 + C19418) * C32001 -
            (C19183 * C1381 + C19181 * C1396 + C19182 * C1380 +
             C19180 * C1394) *
                C506 -
            (C19183 * C1397 + C19181 * C1408 + C19182 * C1395 +
             C19180 * C1407) *
                C31990 +
            (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
             C19181 * C6984) *
                C507 +
            (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
             C19181 * C6986) *
                C31966) *
               C13646) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C1928 + (C19219 + C19220) * C1925 -
            (C19605 + C19606) * C1929 - (C19607 + C19608) * C1926 +
            (C19609 + C19610) * C1930 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C31660 * C31997 +
          (((C19606 + C19605) * C1929 -
            ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
            (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
            (C19612 + C19611) * C31966) *
               C13645 +
           ((C19613 + C19614) * C1929 -
            ((C19221 + C19222) * C1925 + (C19223 + C19224) * C1928) +
            (C19615 + C19616) * C1926 - (C19617 + C19618) * C1930 -
            (C19619 + C19620) * C31966) *
               C13646) *
              C31845 * C31660 * C31984 +
          (((C19224 + C19223) * C1928 + (C19222 + C19221) * C1925 -
            (C19614 + C19613) * C1929 - (C19616 + C19615) * C1926 +
            (C19618 + C19617) * C1930 + (C19620 + C19619) * C31966) *
               C13645 +
           ((C19225 + C19226) * C1928 + (C19227 + C19228) * C1925 -
            (C19901 + C19902) * C1929 - (C19903 + C19904) * C1926 +
            (C19182 * C515 + C19180 * C532 + C19183 * C2440 + C19181 * C2441) *
                C1930 +
            (C19182 * C533 + C19180 * C545 + C19183 * C2442 + C19181 * C2443) *
                C31966) *
               C13646) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C1928 + (C19219 + C19220) * C1925 -
            (C19605 + C19606) * C1929 - (C19607 + C19608) * C1926 +
            (C19609 + C19610) * C1930 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C32000 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C1929 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C1925 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C1928) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C1926 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C1930 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C31966) *
               C13645 +
           ((C20115 + C20116) * C1929 -
            ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
            (C20117 + C20118) * C1926 -
            (C19183 * C2571 + C19181 * C2575 + C19182 * C1376 +
             C19180 * C1386) *
                C1930 -
            (C19183 * C2576 + C19181 * C2580 + C19182 * C1387 +
             C19180 * C1403) *
                C31966) *
               C13646) *
              C31845 * C31988 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C1928 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C1925 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C1929 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C1926 +
            (C19182 * C1379 + C19180 * C1392 + C19183 * C6712 +
             C19181 * C6716) *
                C1930 +
            (C19182 * C1393 + C19180 * C1406 + C19183 * C6717 +
             C19181 * C6721) *
                C31966) *
               C13645 +
           ((C19415 + C19416) * C1928 + (C19417 + C19418) * C1925 -
            (C20841 + C20842) * C1929 - (C20843 + C20844) * C1926 +
            (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
             C19181 * C6984) *
                C1930 +
            (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
             C19181 * C6986) *
                C31966) *
               C13646) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
               C2131 +
           (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
               C2126 -
           (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
               C2132 -
           (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
               C2127 +
           (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
               C2133 +
           (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
               C2128 -
           (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 + C19180 * C2142) *
               C2134 -
           (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 + C19180 * C2154) *
               C2129 +
           (C19182 * C2137 + C19180 * C2144 + C19183 * C10969 +
            C19181 * C10971) *
               C2135 +
           (C19182 * C2145 + C19180 * C2155 + C19183 * C10972 +
            C19181 * C10975) *
               C2130) *
              C13645 +
          ((C19217 + C19218) * C2131 + (C19219 + C19220) * C2126 -
           (C19605 + C19606) * C2132 - (C19607 + C19608) * C2127 +
           (C19609 + C19610) * C2133 + (C19611 + C19612) * C2128 -
           (C19183 * C2139 + C19181 * C2148 + C19182 * C2138 + C19180 * C2146) *
               C2134 -
           (C19183 * C2149 + C19181 * C2157 + C19182 * C2147 + C19180 * C2156) *
               C2129 +
           (C19182 * C2139 + C19180 * C2148 + C19183 * C11225 +
            C19181 * C11226) *
               C2135 +
           (C19182 * C2149 + C19180 * C2157 + C19183 * C11227 +
            C19181 * C11228) *
               C2130) *
              C13646) *
         C31845 * C31660 * C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C1167 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C824 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31933 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C825 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C31963) *
              C31918 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C1167 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C1168 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
            (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C31660 * C707 +
          (((C19606 + C19605) * C825 -
            ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
            (C19608 + C19607) * C31764) *
               C13645 +
           ((C19613 + C19614) * C825 -
            ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
            (C19615 + C19616) * C31764) *
               C13646) *
              C31845 * C31660 * C708 +
          (((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
            (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
               C13645 +
           ((C19225 + C19226) * C824 + (C19227 + C19228) * C31933 -
            (C19901 + C19902) * C825 - (C19903 + C19904) * C31764) *
               C13646) *
              C31845 * C31660 * C709 +
          (((C19902 + C19901) * C825 -
            ((C19228 + C19227) * C31933 + (C19226 + C19225) * C824) +
            (C19904 + C19903) * C31764) *
               C13645 +
           ((C19182 * C516 + C19180 * C534 + C19183 * C517 + C19181 * C536) *
                C825 -
            ((C19229 + C19230) * C31933 + (C19231 + C19232) * C824) +
            (C19182 * C535 + C19180 * C546 + C19183 * C537 + C19181 * C547) *
                C31764) *
               C13646) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C2436 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C2432 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C2437 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C2433 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C2438 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C2434 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C2439 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C13645 +
           ((C19217 + C19218) * C2436 + (C19219 + C19220) * C2432 -
            (C19605 + C19606) * C2437 - (C19607 + C19608) * C2433 +
            (C19609 + C19610) * C2438 + (C19611 + C19612) * C2434 -
            (C21693 + C21694) * C2439 - (C21695 + C21696) * C31979) *
               C13646) *
              C31845 * C31660 * C31918 +
          (((C19606 + C19605) * C2437 -
            ((C19220 + C19219) * C2432 + (C19218 + C19217) * C2436) +
            (C19608 + C19607) * C2433 - (C19610 + C19609) * C2438 -
            (C19612 + C19611) * C2434 + (C21694 + C21693) * C2439 +
            (C21696 + C21695) * C31979) *
               C13645 +
           ((C19613 + C19614) * C2437 -
            ((C19221 + C19222) * C2432 + (C19223 + C19224) * C2436) +
            (C19615 + C19616) * C2433 - (C19617 + C19618) * C2438 -
            (C19619 + C19620) * C2434 +
            (C19182 * C2140 + C19180 * C2150 + C19183 * C2141 +
             C19181 * C2152) *
                C2439 +
            (C19182 * C2151 + C19180 * C2158 + C19183 * C2153 +
             C19181 * C2159) *
                C31979) *
               C13646) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31988 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31988 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19183 * C1016 + C19181 * C1022 + C19182 * C325 + C19180 * C338) *
                 C31677 +
             (C19183 * C1007 + C19181 * C1015 + C19182 * C308 + C19180 * C324) *
                 C114) *
                C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C31660 * C108 -
          (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
              C31845 * C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
           ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
              C31845 * C31660 * C110 -
          (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
              C31845 * C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C13645 +
           ((C19182 * C120 + C19180 * C133 + C19183 * C826 + C19181 * C827) *
                C114 +
            (C19182 * C132 + C19180 * C141 + C19183 * C828 + C19181 * C829) *
                C31677) *
               C13646) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1168 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C1235 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
           ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                C31677 +
            (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                C114) *
               C13645) *
              C31845 * C1236 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C114 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31677) *
               C13645 +
           ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
              C31845 * C1237 -
          (((C19183 * C1809 + C19181 * C1813 + C19182 * C1249 +
             C19180 * C1260) *
                C31677 +
            (C19183 * C1804 + C19181 * C1808 + C19182 * C1242 +
             C19180 * C1250) *
                C114) *
               C13646 +
           ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
             C19180 * C1261) *
                C31677 +
            (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
             C19180 * C1252) *
                C114) *
               C13645) *
              C31845 * C1238 +
          (((C19182 * C1244 + C19180 * C1253 + C19183 * C5946 +
             C19181 * C5950) *
                C114 +
            (C19182 * C1254 + C19180 * C1262 + C19183 * C5951 +
             C19181 * C5955) *
                C31677) *
               C13645 +
           ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
             C19181 * C6264) *
                C114 +
            (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
             C19181 * C6266) *
                C31677) *
               C13646) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C1928 + (C19219 + C19220) * C1925 -
            (C19605 + C19606) * C1929 - (C19607 + C19608) * C1926 +
            (C19609 + C19610) * C1930 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C31660 * C31997 +
          (((C19606 + C19605) * C1929 -
            ((C19220 + C19219) * C1925 + (C19218 + C19217) * C1928) +
            (C19608 + C19607) * C1926 - (C19610 + C19609) * C1930 -
            (C19612 + C19611) * C31966) *
               C13645 +
           ((C19613 + C19614) * C1929 -
            ((C19221 + C19222) * C1925 + (C19223 + C19224) * C1928) +
            (C19615 + C19616) * C1926 - (C19617 + C19618) * C1930 -
            (C19619 + C19620) * C31966) *
               C13646) *
              C31845 * C31660 * C31984 +
          (((C19224 + C19223) * C1928 + (C19222 + C19221) * C1925 -
            (C19614 + C19613) * C1929 - (C19616 + C19615) * C1926 +
            (C19618 + C19617) * C1930 + (C19620 + C19619) * C31966) *
               C13645 +
           ((C19225 + C19226) * C1928 + (C19227 + C19228) * C1925 -
            (C19901 + C19902) * C1929 - (C19903 + C19904) * C1926 +
            (C19182 * C515 + C19180 * C532 + C19183 * C2440 + C19181 * C2441) *
                C1930 +
            (C19182 * C533 + C19180 * C545 + C19183 * C2442 + C19181 * C2443) *
                C31966) *
               C13646) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C1928 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C1925 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C1929 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C1926 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C1930 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C1928 + (C19219 + C19220) * C1925 -
            (C19605 + C19606) * C1929 - (C19607 + C19608) * C1926 +
            (C19609 + C19610) * C1930 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C32000 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C1929 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C1925 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C1928) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C1926 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C1930 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C31966) *
               C13645 +
           ((C20115 + C20116) * C1929 -
            ((C19411 + C19412) * C1925 + (C19413 + C19414) * C1928) +
            (C20117 + C20118) * C1926 -
            (C19183 * C2571 + C19181 * C2575 + C19182 * C1376 +
             C19180 * C1386) *
                C1930 -
            (C19183 * C2576 + C19181 * C2580 + C19182 * C1387 +
             C19180 * C1403) *
                C31966) *
               C13646) *
              C31845 * C31988 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C1928 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C1925 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C1929 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C1926 +
            (C19182 * C1379 + C19180 * C1392 + C19183 * C6712 +
             C19181 * C6716) *
                C1930 +
            (C19182 * C1393 + C19180 * C1406 + C19183 * C6717 +
             C19181 * C6721) *
                C31966) *
               C13645 +
           ((C19415 + C19416) * C1928 + (C19417 + C19418) * C1925 -
            (C20841 + C20842) * C1929 - (C20843 + C20844) * C1926 +
            (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
             C19181 * C6984) *
                C1930 +
            (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
             C19181 * C6986) *
                C31966) *
               C13646) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31638 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C31646 +
          ((((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
             (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C3456 + (C19227 + C19228) * C3454 -
             (C19901 + C19902) * C3457 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C20120 + C20119) * C3457 -
             ((C19422 + C19421) * C3454 + (C19420 + C19419) * C3456) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C3457 -
             ((C19759 + C19760) * C3454 + (C19761 + C19762) * C3456) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C30451 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31760 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C30443 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31767 +
             (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                 C30457 +
             (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                 C4029) *
                C13645 +
            ((C19217 + C19218) * C30451 + (C19219 + C19220) * C31760 -
             (C19605 + C19606) * C30443 - (C19607 + C19608) * C31767 +
             (C19609 + C19610) * C30457 + (C19611 + C19612) * C4029) *
                C13646) *
               C31845 * C31932 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C30443 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31760 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C30451) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31767 -
             (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
              C19180 * C1384) *
                 C30457 -
             (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
              C19180 * C1402) *
                 C4029) *
                C13645 +
            ((C20115 + C20116) * C30443 -
             ((C19411 + C19412) * C31760 + (C19413 + C19414) * C30451) +
             (C20117 + C20118) * C31767 - (C21551 + C21552) * C30457 -
             (C21553 + C21554) * C4029) *
                C13646) *
               C31845 * C31722) *
              C2788 +
          ((((C19606 + C19605) * C30443 -
             ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
             (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
             (C19612 + C19611) * C4029) *
                C13645 +
            ((C19613 + C19614) * C30443 -
             ((C19221 + C19222) * C31760 + (C19223 + C19224) * C30451) +
             (C19615 + C19616) * C31767 - (C19617 + C19618) * C30457 -
             (C19619 + C19620) * C4029) *
                C13646) *
               C31845 * C31932 +
           (((C19414 + C19413) * C30451 + (C19412 + C19411) * C31760 -
             (C20116 + C20115) * C30443 - (C20118 + C20117) * C31767 +
             (C21552 + C21551) * C30457 + (C21554 + C21553) * C4029) *
                C13645 +
            ((C19419 + C19420) * C30451 + (C19421 + C19422) * C31760 -
             (C20119 + C20120) * C30443 - (C20121 + C20122) * C31767 +
             (C19182 * C1377 + C19180 * C1388 + C19183 * C2572 +
              C19181 * C2577) *
                 C30457 +
             (C19182 * C1389 + C19180 * C1404 + C19183 * C2578 +
              C19181 * C2581) *
                 C4029) *
                C13646) *
               C31845 * C31722) *
              C31643)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C32000 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31988 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C3456 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C3454 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C3457 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C31963) *
              C2788 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C32000 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31988 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
            (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C31660 * C32006 +
          (((C19606 + C19605) * C3457 -
            ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
            (C19608 + C19607) * C31764) *
               C13645 +
           ((C19613 + C19614) * C3457 -
            ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
            (C19615 + C19616) * C31764) *
               C13646) *
              C31845 * C31660 * C31999 +
          (((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
            (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
               C13645 +
           ((C19225 + C19226) * C3456 + (C19227 + C19228) * C3454 -
            (C19901 + C19902) * C3457 - (C19903 + C19904) * C31764) *
               C13646) *
              C31845 * C31660 * C31986 +
          (((C19902 + C19901) * C3457 -
            ((C19228 + C19227) * C3454 + (C19226 + C19225) * C3456) +
            (C19904 + C19903) * C31764) *
               C13645 +
           ((C19182 * C516 + C19180 * C534 + C19183 * C517 + C19181 * C536) *
                C3457 -
            ((C19229 + C19230) * C3454 + (C19231 + C19232) * C3456) +
            (C19182 * C535 + C19180 * C546 + C19183 * C537 + C19181 * C547) *
                C31764) *
               C13646) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3744 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32008 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3745 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C32005 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C3746 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31996 -
            (C19183 * C2137 + C19181 * C2144 + C19182 * C2136 +
             C19180 * C2142) *
                C3747 -
            (C19183 * C2145 + C19181 * C2155 + C19182 * C2143 +
             C19180 * C2154) *
                C31979) *
               C13645 +
           ((C19217 + C19218) * C3744 + (C19219 + C19220) * C32008 -
            (C19605 + C19606) * C3745 - (C19607 + C19608) * C32005 +
            (C19609 + C19610) * C3746 + (C19611 + C19612) * C31996 -
            (C21693 + C21694) * C3747 - (C21695 + C21696) * C31979) *
               C13646) *
              C31845 * C31660 * C2788 +
          (((C19606 + C19605) * C3745 -
            ((C19220 + C19219) * C32008 + (C19218 + C19217) * C3744) +
            (C19608 + C19607) * C32005 - (C19610 + C19609) * C3746 -
            (C19612 + C19611) * C31996 + (C21694 + C21693) * C3747 +
            (C21696 + C21695) * C31979) *
               C13645 +
           ((C19613 + C19614) * C3745 -
            ((C19221 + C19222) * C32008 + (C19223 + C19224) * C3744) +
            (C19615 + C19616) * C32005 - (C19617 + C19618) * C3746 -
            (C19619 + C19620) * C31996 +
            (C19182 * C2140 + C19180 * C2150 + C19183 * C2141 +
             C19181 * C2152) *
                C3747 +
            (C19182 * C2151 + C19180 * C2158 + C19183 * C2153 +
             C19181 * C2159) *
                C31979) *
               C13646) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C30451 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31760 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C30443 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31767 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C30457 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C4029) *
               C13645 +
           ((C19217 + C19218) * C30451 + (C19219 + C19220) * C31760 -
            (C19605 + C19606) * C30443 - (C19607 + C19608) * C31767 +
            (C19609 + C19610) * C30457 + (C19611 + C19612) * C4029) *
               C13646) *
              C31845 * C31660 * C31638 +
          (((C19606 + C19605) * C30443 -
            ((C19220 + C19219) * C31760 + (C19218 + C19217) * C30451) +
            (C19608 + C19607) * C31767 - (C19610 + C19609) * C30457 -
            (C19612 + C19611) * C4029) *
               C13645 +
           ((C19613 + C19614) * C30443 -
            ((C19221 + C19222) * C31760 + (C19223 + C19224) * C30451) +
            (C19615 + C19616) * C31767 - (C19617 + C19618) * C30457 -
            (C19619 + C19620) * C4029) *
               C13646) *
              C31845 * C31660 * C31646 +
          (((C19224 + C19223) * C30451 + (C19222 + C19221) * C31760 -
            (C19614 + C19613) * C30443 - (C19616 + C19615) * C31767 +
            (C19618 + C19617) * C30457 + (C19620 + C19619) * C4029) *
               C13645 +
           ((C19225 + C19226) * C30451 + (C19227 + C19228) * C31760 -
            (C19901 + C19902) * C30443 - (C19903 + C19904) * C31767 +
            (C19182 * C515 + C19180 * C532 + C19183 * C2440 + C19181 * C2441) *
                C30457 +
            (C19182 * C533 + C19180 * C545 + C19183 * C2442 + C19181 * C2443) *
                C4029) *
               C13646) *
              C31845 * C31660 * C3063)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C3456 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C3454 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C3457 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
            (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C31660 * C32006 +
          (((C19606 + C19605) * C3457 -
            ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
            (C19608 + C19607) * C31764) *
               C13645 +
           ((C19613 + C19614) * C3457 -
            ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
            (C19615 + C19616) * C31764) *
               C13646) *
              C31845 * C31660 * C31999 +
          (((C19224 + C19223) * C3456 + (C19222 + C19221) * C3454 -
            (C19614 + C19613) * C3457 - (C19616 + C19615) * C31764) *
               C13645 +
           ((C19225 + C19226) * C3456 + (C19227 + C19228) * C3454 -
            (C19901 + C19902) * C3457 - (C19903 + C19904) * C31764) *
               C13646) *
              C31845 * C31660 * C31986 +
          (((C19902 + C19901) * C3457 -
            ((C19228 + C19227) * C3454 + (C19226 + C19225) * C3456) +
            (C19904 + C19903) * C31764) *
               C13645 +
           ((C19182 * C516 + C19180 * C534 + C19183 * C517 + C19181 * C536) *
                C3457 -
            ((C19229 + C19230) * C3454 + (C19231 + C19232) * C3456) +
            (C19182 * C535 + C19180 * C546 + C19183 * C537 + C19181 * C547) *
                C31764) *
               C13646) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C3456 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C3454 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C3457 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C3456 + (C19219 + C19220) * C3454 -
             (C19605 + C19606) * C3457 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C32000 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C3457 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C3454 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C3456) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C3457 -
             ((C19411 + C19412) * C3454 + (C19413 + C19414) * C3456) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31988 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C3456 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C3454 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C3457 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C3456 + (C19417 + C19418) * C3454 -
             (C20841 + C20842) * C3457 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C31963) *
              C2788 +
          ((((C19606 + C19605) * C3457 -
             ((C19220 + C19219) * C3454 + (C19218 + C19217) * C3456) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C3457 -
             ((C19221 + C19222) * C3454 + (C19223 + C19224) * C3456) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C32000 +
           (((C19414 + C19413) * C3456 + (C19412 + C19411) * C3454 -
             (C20116 + C20115) * C3457 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C3456 + (C19421 + C19422) * C3454 -
             (C20119 + C20120) * C3457 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31988 +
           (((C20842 + C20841) * C3457 -
             ((C19418 + C19417) * C3454 + (C19416 + C19415) * C3456) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C3457 -
             ((C19423 + C19424) * C3454 + (C19425 + C19426) * C3456) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C31932 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31722) *
              C707 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31722 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C31932) *
              C708 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C31932 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31722) *
              C709 +
          ((((C19762 + C19761) * C114 + (C19760 + C19759) * C31677) * C13645 +
            ((C19182 * C310 + C19180 * C329 + C19183 * C1008 + C19181 * C1017) *
                 C114 +
             (C19182 * C328 + C19180 * C340 + C19183 * C1018 + C19181 * C1023) *
                 C31677) *
                C13646) *
               C31845 * C31722 -
           (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
            ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
               C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1509 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1510 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C1511 -
           (((C20635 + C20636) * C31677 + (C20637 + C20638) * C114) * C13646 +
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31677 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C114) *
                C13645) *
               C31845 * C31973) *
              C31918 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1510 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1509 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C1511 +
           (((C20638 + C20637) * C114 + (C20636 + C20635) * C31677) * C13645 +
            ((C19182 * C1241 + C19180 * C1248 + C19183 * C1805 +
              C19181 * C1810) *
                 C114 +
             (C19182 * C1247 + C19180 * C1259 + C19183 * C1811 +
              C19181 * C1814) *
                 C31677) *
                C13646) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C31722) *
              C299 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C31722) *
              C300 +
          ((((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
             (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
                C13645 +
            ((C19225 + C19226) * C824 + (C19227 + C19228) * C31933 -
             (C19901 + C19902) * C825 - (C19903 + C19904) * C31764) *
                C13646) *
               C31845 * C31932 +
           (((C20120 + C20119) * C825 -
             ((C19422 + C19421) * C31933 + (C19420 + C19419) * C824) +
             (C20122 + C20121) * C31764) *
                C13645 +
            ((C19182 * C1007 + C19180 * C1015 + C19183 * C2306 +
              C19181 * C2307) *
                 C825 -
             ((C19759 + C19760) * C31933 + (C19761 + C19762) * C824) +
             (C19182 * C1016 + C19180 * C1022 + C19183 * C2308 +
              C19181 * C2309) *
                 C31764) *
                C13646) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
            (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C1509 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C825 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31933 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C824) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31764) *
               C13645 +
           ((C20115 + C20116) * C825 -
            ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
            (C20117 + C20118) * C31764) *
               C13646) *
              C31845 * C1510 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C824 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31933 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C825 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31764) *
               C13645 +
           ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
            (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
               C13646) *
              C31845 * C1511 +
          (((C19182 * C1803 + C19180 * C1806 + C19183 * C5945 +
             C19181 * C5948) *
                C825 -
            ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
              C19180 * C1261) *
                 C31933 +
             (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
              C19180 * C1252) *
                 C824) +
            (C19182 * C1807 + C19180 * C1812 + C19183 * C5949 +
             C19181 * C5954) *
                C31764) *
               C13645 +
           ((C19182 * C1804 + C19180 * C1808 + C19183 * C6869 +
             C19181 * C6870) *
                C825 -
            ((C20635 + C20636) * C31933 + (C20637 + C20638) * C824) +
            (C19182 * C1809 + C19180 * C1813 + C19183 * C6871 +
             C19181 * C6872) *
                C31764) *
               C13646) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31988 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31988 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19183 * C1016 + C19181 * C1022 + C19182 * C325 + C19180 * C338) *
                 C31677 +
             (C19183 * C1007 + C19181 * C1015 + C19182 * C308 + C19180 * C324) *
                 C114) *
                C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C31660 * C108 -
          (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
              C31845 * C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
           ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
              C31845 * C31660 * C110 -
          (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
              C31845 * C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C13645 +
           ((C19182 * C120 + C19180 * C133 + C19183 * C826 + C19181 * C827) *
                C114 +
            (C19182 * C132 + C19180 * C141 + C19183 * C828 + C19181 * C829) *
                C31677) *
               C13646) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C505 + (C19219 + C19220) * C32001 -
            (C19605 + C19606) * C506 - (C19607 + C19608) * C31990 +
            (C19609 + C19610) * C507 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C31660 * C299 +
          (((C19606 + C19605) * C506 -
            ((C19220 + C19219) * C32001 + (C19218 + C19217) * C505) +
            (C19608 + C19607) * C31990 - (C19610 + C19609) * C507 -
            (C19612 + C19611) * C31966) *
               C13645 +
           ((C19613 + C19614) * C506 -
            ((C19221 + C19222) * C32001 + (C19223 + C19224) * C505) +
            (C19615 + C19616) * C31990 - (C19617 + C19618) * C507 -
            (C19619 + C19620) * C31966) *
               C13646) *
              C31845 * C31660 * C300 +
          (((C19224 + C19223) * C505 + (C19222 + C19221) * C32001 -
            (C19614 + C19613) * C506 - (C19616 + C19615) * C31990 +
            (C19618 + C19617) * C507 + (C19620 + C19619) * C31966) *
               C13645 +
           ((C19225 + C19226) * C505 + (C19227 + C19228) * C32001 -
            (C19183 * C515 + C19181 * C532 + C19182 * C514 + C19180 * C530) *
                C506 -
            (C19183 * C533 + C19181 * C545 + C19182 * C531 + C19180 * C544) *
                C31990 +
            (C19182 * C515 + C19180 * C532 + C19183 * C2440 + C19181 * C2441) *
                C507 +
            (C19182 * C533 + C19180 * C545 + C19183 * C2442 + C19181 * C2443) *
                C31966) *
               C13646) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1168 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C1235 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
           ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                C31677 +
            (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                C114) *
               C13645) *
              C31845 * C1236 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C114 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31677) *
               C13645 +
           ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
              C31845 * C1237 -
          (((C19183 * C1809 + C19181 * C1813 + C19182 * C1249 +
             C19180 * C1260) *
                C31677 +
            (C19183 * C1804 + C19181 * C1808 + C19182 * C1242 +
             C19180 * C1250) *
                C114) *
               C13646 +
           ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
             C19180 * C1261) *
                C31677 +
            (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
             C19180 * C1252) *
                C114) *
               C13645) *
              C31845 * C1238 +
          (((C19182 * C1244 + C19180 * C1253 + C19183 * C5946 +
             C19181 * C5950) *
                C114 +
            (C19182 * C1254 + C19180 * C1262 + C19183 * C5951 +
             C19181 * C5955) *
                C31677) *
               C13645 +
           ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
             C19181 * C6264) *
                C114 +
            (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
             C19181 * C6266) *
                C31677) *
               C13646) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C505 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C32001 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C506 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31990 +
            (C19182 * C509 + C19180 * C520 + C19183 * C2136 + C19181 * C2142) *
                C507 +
            (C19182 * C521 + C19180 * C539 + C19183 * C2143 + C19181 * C2154) *
                C31966) *
               C13645 +
           ((C19217 + C19218) * C505 + (C19219 + C19220) * C32001 -
            (C19605 + C19606) * C506 - (C19607 + C19608) * C31990 +
            (C19609 + C19610) * C507 + (C19611 + C19612) * C31966) *
               C13646) *
              C31845 * C1167 +
          (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
             C19181 * C1384) *
                C506 -
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C32001 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C505) +
            (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
             C19181 * C1402) *
                C31990 -
            (C19183 * C2570 + C19181 * C2573 + C19182 * C1375 +
             C19180 * C1384) *
                C507 -
            (C19183 * C2574 + C19181 * C2579 + C19182 * C1385 +
             C19180 * C1402) *
                C31966) *
               C13645 +
           ((C20115 + C20116) * C506 -
            ((C19411 + C19412) * C32001 + (C19413 + C19414) * C505) +
            (C20117 + C20118) * C31990 -
            (C19183 * C2571 + C19181 * C2575 + C19182 * C1376 +
             C19180 * C1386) *
                C507 -
            (C19183 * C2576 + C19181 * C2580 + C19182 * C1387 +
             C19180 * C1403) *
                C31966) *
               C13646) *
              C31845 * C1168 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C505 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C32001 -
            (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
             C19180 * C1390) *
                C506 -
            (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
             C19180 * C1405) *
                C31990 +
            (C19182 * C1379 + C19180 * C1392 + C19183 * C6712 +
             C19181 * C6716) *
                C507 +
            (C19182 * C1393 + C19180 * C1406 + C19183 * C6717 +
             C19181 * C6721) *
                C31966) *
               C13645 +
           ((C19415 + C19416) * C505 + (C19417 + C19418) * C32001 -
            (C19183 * C1381 + C19181 * C1396 + C19182 * C1380 +
             C19180 * C1394) *
                C506 -
            (C19183 * C1397 + C19181 * C1408 + C19182 * C1395 +
             C19180 * C1407) *
                C31990 +
            (C19182 * C1381 + C19180 * C1396 + C19183 * C6983 +
             C19181 * C6984) *
                C507 +
            (C19182 * C1397 + C19180 * C1408 + C19183 * C6985 +
             C19181 * C6986) *
                C31966) *
               C13646) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C824 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31933 -
            (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                C825 -
            (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                C31764) *
               C13645 +
           ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
            (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
               C13646) *
              C31845 * C31660 * C707 +
          (((C19606 + C19605) * C825 -
            ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
            (C19608 + C19607) * C31764) *
               C13645 +
           ((C19613 + C19614) * C825 -
            ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
            (C19615 + C19616) * C31764) *
               C13646) *
              C31845 * C31660 * C708 +
          (((C19224 + C19223) * C824 + (C19222 + C19221) * C31933 -
            (C19614 + C19613) * C825 - (C19616 + C19615) * C31764) *
               C13645 +
           ((C19225 + C19226) * C824 + (C19227 + C19228) * C31933 -
            (C19901 + C19902) * C825 - (C19903 + C19904) * C31764) *
               C13646) *
              C31845 * C31660 * C709 +
          (((C19902 + C19901) * C825 -
            ((C19228 + C19227) * C31933 + (C19226 + C19225) * C824) +
            (C19904 + C19903) * C31764) *
               C13645 +
           ((C19182 * C516 + C19180 * C534 + C19183 * C517 + C19181 * C536) *
                C825 -
            ((C19229 + C19230) * C31933 + (C19231 + C19232) * C824) +
            (C19182 * C535 + C19180 * C546 + C19183 * C537 + C19181 * C547) *
                C31764) *
               C13646) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C824 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31933 -
             (C19183 * C509 + C19181 * C520 + C19182 * C508 + C19180 * C518) *
                 C825 -
             (C19183 * C521 + C19181 * C539 + C19182 * C519 + C19180 * C538) *
                 C31764) *
                C13645 +
            ((C19217 + C19218) * C824 + (C19219 + C19220) * C31933 -
             (C19605 + C19606) * C825 - (C19607 + C19608) * C31764) *
                C13646) *
               C31845 * C1167 +
           (((C19182 * C1004 + C19180 * C1009 + C19183 * C1375 +
              C19181 * C1384) *
                 C825 -
             ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 +
               C19180 * C334) *
                  C31933 +
              (C19183 * C1004 + C19181 * C1009 + C19182 * C304 +
               C19180 * C317) *
                  C824) +
             (C19182 * C1010 + C19180 * C1019 + C19183 * C1385 +
              C19181 * C1402) *
                 C31764) *
                C13645 +
            ((C20115 + C20116) * C825 -
             ((C19411 + C19412) * C31933 + (C19413 + C19414) * C824) +
             (C20117 + C20118) * C31764) *
                C13646) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C824 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31933 -
             (C19183 * C1379 + C19181 * C1392 + C19182 * C1378 +
              C19180 * C1390) *
                 C825 -
             (C19183 * C1393 + C19181 * C1406 + C19182 * C1391 +
              C19180 * C1405) *
                 C31764) *
                C13645 +
            ((C19415 + C19416) * C824 + (C19417 + C19418) * C31933 -
             (C20841 + C20842) * C825 - (C20843 + C20844) * C31764) *
                C13646) *
               C31845 * C31963) *
              C31918 +
          ((((C19606 + C19605) * C825 -
             ((C19220 + C19219) * C31933 + (C19218 + C19217) * C824) +
             (C19608 + C19607) * C31764) *
                C13645 +
            ((C19613 + C19614) * C825 -
             ((C19221 + C19222) * C31933 + (C19223 + C19224) * C824) +
             (C19615 + C19616) * C31764) *
                C13646) *
               C31845 * C1167 +
           (((C19414 + C19413) * C824 + (C19412 + C19411) * C31933 -
             (C20116 + C20115) * C825 - (C20118 + C20117) * C31764) *
                C13645 +
            ((C19419 + C19420) * C824 + (C19421 + C19422) * C31933 -
             (C20119 + C20120) * C825 - (C20121 + C20122) * C31764) *
                C13646) *
               C31845 * C1168 +
           (((C20842 + C20841) * C825 -
             ((C19418 + C19417) * C31933 + (C19416 + C19415) * C824) +
             (C20844 + C20843) * C31764) *
                C13645 +
            ((C19182 * C1382 + C19180 * C1398 + C19183 * C1383 +
              C19181 * C1400) *
                 C825 -
             ((C19423 + C19424) * C31933 + (C19425 + C19426) * C824) +
             (C19182 * C1399 + C19180 * C1409 + C19183 * C1401 +
              C19181 * C1410) *
                 C31764) *
                C13646) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C31660 * C108 -
          (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
           ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
              C31845 * C31660 * C109 +
          (((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
           ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
              C31845 * C31660 * C110 -
          (((C19229 + C19230) * C31677 + (C19231 + C19232) * C114) * C13646 +
           ((C19228 + C19227) * C31677 + (C19226 + C19225) * C114) * C13645) *
              C31845 * C31660 * C111 +
          (((C19232 + C19231) * C114 + (C19230 + C19229) * C31677) * C13645 +
           ((C19182 * C120 + C19180 * C133 + C19183 * C826 + C19181 * C827) *
                C114 +
            (C19182 * C132 + C19180 * C141 + C19183 * C828 + C19181 * C829) *
                C31677) *
               C13646) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C31988 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C299 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C31988 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C32000 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C300 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C32000 -
           (((C19183 * C1016 + C19181 * C1022 + C19182 * C325 + C19180 * C338) *
                 C31677 +
             (C19183 * C1007 + C19181 * C1015 + C19182 * C308 + C19180 * C324) *
                 C114) *
                C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C31988 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                 C114 +
             (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                 C31677) *
                C13645 +
            ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
            ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                 C31677 +
             (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                 C114) *
                C13645) *
               C31845 * C1168 +
           (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                 C114 +
             (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                 C31677) *
                C13645 +
            ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
               C31845 * C31963) *
              C31997 +
          ((((C19414 + C19413) * C114 + (C19412 + C19411) * C31677) * C13645 +
            ((C19419 + C19420) * C114 + (C19421 + C19422) * C31677) * C13646) *
               C31845 * C1168 -
           (((C19221 + C19222) * C31677 + (C19223 + C19224) * C114) * C13646 +
            ((C19220 + C19219) * C31677 + (C19218 + C19217) * C114) * C13645) *
               C31845 * C1167 -
           (((C19423 + C19424) * C31677 + (C19425 + C19426) * C114) * C13646 +
            ((C19418 + C19417) * C31677 + (C19416 + C19415) * C114) * C13645) *
               C31845 * C31963) *
              C31984 +
          ((((C19224 + C19223) * C114 + (C19222 + C19221) * C31677) * C13645 +
            ((C19225 + C19226) * C114 + (C19227 + C19228) * C31677) * C13646) *
               C31845 * C1167 -
           (((C19759 + C19760) * C31677 + (C19761 + C19762) * C114) * C13646 +
            ((C19422 + C19421) * C31677 + (C19420 + C19419) * C114) * C13645) *
               C31845 * C1168 +
           (((C19426 + C19425) * C114 + (C19424 + C19423) * C31677) * C13645 +
            ((C19182 * C309 + C19180 * C327 + C19183 * C1681 + C19181 * C1682) *
                 C114 +
             (C19182 * C326 + C19180 * C339 + C19183 * C1683 + C19181 * C1684) *
                 C31677) *
                C13646) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19182 * C115 + C19180 * C122 + C19183 * C508 + C19181 * C518) *
                C114 +
            (C19182 * C123 + C19180 * C136 + C19183 * C519 + C19181 * C538) *
                C31677) *
               C13645 +
           ((C19217 + C19218) * C114 + (C19219 + C19220) * C31677) * C13646) *
              C31845 * C1235 -
          (((C19411 + C19412) * C31677 + (C19413 + C19414) * C114) * C13646 +
           ((C19183 * C1010 + C19181 * C1019 + C19182 * C316 + C19180 * C334) *
                C31677 +
            (C19183 * C1004 + C19181 * C1009 + C19182 * C304 + C19180 * C317) *
                C114) *
               C13645) *
              C31845 * C1236 +
          (((C19182 * C305 + C19180 * C318 + C19183 * C1378 + C19181 * C1390) *
                C114 +
            (C19182 * C319 + C19180 * C335 + C19183 * C1391 + C19181 * C1405) *
                C31677) *
               C13645 +
           ((C19415 + C19416) * C114 + (C19417 + C19418) * C31677) * C13646) *
              C31845 * C1237 -
          (((C19183 * C1809 + C19181 * C1813 + C19182 * C1249 +
             C19180 * C1260) *
                C31677 +
            (C19183 * C1804 + C19181 * C1808 + C19182 * C1242 +
             C19180 * C1250) *
                C114) *
               C13646 +
           ((C19183 * C1807 + C19181 * C1812 + C19182 * C1251 +
             C19180 * C1261) *
                C31677 +
            (C19183 * C1803 + C19181 * C1806 + C19182 * C1243 +
             C19180 * C1252) *
                C114) *
               C13645) *
              C31845 * C1238 +
          (((C19182 * C1244 + C19180 * C1253 + C19183 * C5946 +
             C19181 * C5950) *
                C114 +
            (C19182 * C1254 + C19180 * C1262 + C19183 * C5951 +
             C19181 * C5955) *
                C31677) *
               C13645 +
           ((C19182 * C1245 + C19180 * C1255 + C19183 * C6263 +
             C19181 * C6264) *
                C114 +
            (C19182 * C1256 + C19180 * C1263 + C19183 * C6265 +
             C19181 * C6266) *
                C31677) *
               C13646) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C31718 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C3060) *
              C31638 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31725 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C31718 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C3060) *
              C31646 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C31718 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31725 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C3060) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31718 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31725 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C3060) *
              C31638 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31725 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31718 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C3060) *
              C31646 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31718 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31725 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C3060) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C31718 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C824 +
             (C113 * C319 + C31856 * C335) * C31933 -
             (C113 * C1378 + C31856 * C1390) * C825 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C1686 + C1687 - C1702 - C1703) * C104 +
            (C1692 + C1693 - C1704 - C1705) * C105) *
               C31845 * C3060) *
              C2788 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C31718 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31725 +
           ((C1702 - (C1687 + C1686) + C1703) * C103 +
            (C1704 - (C1693 + C1692) + C1705) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C825 -
             (C377 * C31933 + C378 * C824) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C31718 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            C6405 * C5023) *
               C31725 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
               C3060) *
              C2788 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C31718 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C31725 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32007 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C32003 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31993 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C2788 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C32003 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32007 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31993 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C2680 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C32006 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C2680) *
              C31999 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C2680 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C31986 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C103 +
            (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C506 -
             ((C113 * C316 + C31856 * C334) * C32001 +
              (C113 * C304 + C31856 * C317) * C505) +
             (C113 * C1010 + C31856 * C1019) * C31990 -
             (C113 * C1375 + C31856 * C1384) * C507 -
             (C113 * C1385 + C31856 * C1402) * C31966) *
                C103 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C104 +
            (C2943 - (C2944 + C2945) + C2946 - C2947 - C2948) * C105) *
               C31845 * C31722) *
              C2788 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
            (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
            (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
               C31845 * C2680 +
           ((C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C103 +
            (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C104 +
            (C375 * C505 + C376 * C32001 - C1048 * C506 - C1049 * C31990 +
             (C113 * C2306 + C31856 * C2307) * C507 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C2680 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C32006 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C2680) *
              C31999 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C2680 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C31986 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32007 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C32003 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C31993 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C2788 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C32003 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32007 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31993 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C505 +
             (C113 * C123 + C31856 * C136) * C32001 -
             (C113 * C508 + C31856 * C518) * C506 -
             (C113 * C519 + C31856 * C538) * C31990 +
             (C113 * C509 + C31856 * C520) * C507 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C31615 * C5021 +
            (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
            C6005 * C5023) *
               C2680 +
           ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
            (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
            (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 *
                C5023) *
               C31722) *
              C2788 +
          (((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
            (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
            (C7460 - (C7461 + C7462) + C7463 - C7464 - C7465) * C31615 *
                C5023) *
               C2680 +
           ((C2939 + C2938 - C2937 - C2940 + C2941 + C2942) * C31615 * C5021 +
            (C7462 + C7461 - C7460 - C7463 + C7464 + C7465) * C31615 * C5022 +
            (C1531 * C505 + C1530 * C32001 - C6282 * C506 - C6283 * C31990 +
             (C113 * C6869 + C31856 * C6870) * C507 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31722) *
              C31638 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C2680 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31722) *
              C31646 +
          ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
            (C843 + C844 - C855 - C856) * C105) *
               C31845 * C2680 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C2680 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            C6405 * C5023) *
               C31722) *
              C31638 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C2680 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C31722) *
              C31646 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C2680 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C2680 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C32006 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C2680) *
              C31999 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C2680 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C31986 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32007 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C32003 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31993 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C2788 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C32003 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32007 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31993 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C2680 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C32006 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C2680) *
              C31999 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C2680 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C31986 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C2680) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32007 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C32003 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C31993 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C2788 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C32003 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32007 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31993 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C31718 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31725 +
           (((C113 * C305 + C31856 * C318) * C3456 +
             (C113 * C319 + C31856 * C335) * C3454 -
             (C113 * C1378 + C31856 * C1390) * C3457 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C3635 + C3636 - C3637 - C3638) * C104 +
            (C3639 + C3640 - C3641 - C3642) * C105) *
               C31845 * C3060) *
              C31918 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C31718 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31725 +
           ((C3637 - (C3636 + C3635) + C3638) * C103 +
            (C3641 - (C3640 + C3639) + C3642) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C3457 -
             (C377 * C3454 + C378 * C3456) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C31718 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            C8905 * C5023) *
               C31725 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
               C3060) *
              C31918 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C31718 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31725 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C3060) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C103 +
           (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
           C4056 * C105) *
              C31845 * C31718 +
          (((C113 * C1004 + C31856 * C1009) * C30443 -
            ((C113 * C316 + C31856 * C334) * C31760 +
             (C113 * C304 + C31856 * C317) * C30451) +
            (C113 * C1010 + C31856 * C1019) * C31767 -
            (C113 * C1375 + C31856 * C1384) * C30457 -
            (C113 * C1385 + C31856 * C1402) * C4029) *
               C103 +
           (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
           (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
              C31845 * C31725 +
          (((C113 * C305 + C31856 * C318) * C30451 +
            (C113 * C319 + C31856 * C335) * C31760 -
            (C113 * C1378 + C31856 * C1390) * C30443 -
            (C113 * C1391 + C31856 * C1405) * C31767 +
            (C113 * C1379 + C31856 * C1392) * C30457 +
            (C113 * C1393 + C31856 * C1406) * C4029) *
               C103 +
           (C371 * C30451 + C372 * C31760 - C1698 * C30443 - C1699 * C31767 +
            (C113 * C1381 + C31856 * C1396) * C30457 +
            (C113 * C1397 + C31856 * C1408) * C4029) *
               C104 +
           (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
            (C113 * C1383 + C31856 * C1400) * C30457 +
            (C113 * C1401 + C31856 * C1410) * C4029) *
               C105) *
              C31845 * C3060) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C31615 * C5021 +
           (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
           C9433 * C5023) *
              C31718 +
          ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
           (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
           (C9423 - (C9424 + C9425) + C9426 - C9427 - C9428) * C31615 * C5023) *
              C31725 +
          (C9433 * C5021 +
           (C9425 + C9424 - C9423 - C9426 + C9427 + C9428) * C31615 * C5022 +
           (C5826 * C30451 + C5827 * C31760 - C6400 * C30443 - C6401 * C31767 +
            (C113 * C5947 + C31856 * C5952) * C30457 +
            (C113 * C5953 + C31856 * C5956) * C4029) *
               C31615 * C5023) *
              C3060) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C32007 +
          (((C113 * C1004 + C31856 * C1009) * C3457 -
            ((C113 * C316 + C31856 * C334) * C3454 +
             (C113 * C304 + C31856 * C317) * C3456) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
              C31845 * C32003 +
          (((C113 * C305 + C31856 * C318) * C3456 +
            (C113 * C319 + C31856 * C335) * C3454 -
            (C113 * C1378 + C31856 * C1390) * C3457 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C3635 + C3636 - C3637 - C3638) * C104 +
           (C3639 + C3640 - C3641 - C3642) * C105) *
              C31845 * C31993 +
          (((C113 * C1803 + C31856 * C1806) * C3457 -
            ((C113 * C1251 + C31856 * C1261) * C3454 +
             (C113 * C1243 + C31856 * C1252) * C3456) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C3457 -
            (C1530 * C3454 + C1531 * C3456) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C3457 -
            (C1528 * C3454 + C1529 * C3456) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31722) *
              C31984 +
          ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
            (C3471 + C3472 - C3473 - C3474) * C105) *
               C31845 * C2680 +
           (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
               C104 +
           (C3757 + C3758 - C3759 - C3760 + C3761 + C3762 - C3763 - C3764) *
               C105) *
              C31845 * C2680 +
          (((C113 * C1004 + C31856 * C1009) * C3745 -
            ((C113 * C316 + C31856 * C334) * C32008 +
             (C113 * C304 + C31856 * C317) * C3744) +
            (C113 * C1010 + C31856 * C1019) * C32005 -
            (C113 * C1375 + C31856 * C1384) * C3746 -
            (C113 * C1385 + C31856 * C1402) * C31996 +
            (C113 * C2570 + C31856 * C2573) * C3747 +
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C103 +
           (C1043 * C3745 - (C369 * C32008 + C370 * C3744) + C1044 * C32005 -
            C2327 * C3746 - C2328 * C31996 +
            (C113 * C2571 + C31856 * C2575) * C3747 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C104 +
           (C1045 * C3745 - (C367 * C32008 + C368 * C3744) + C1047 * C32005 -
            C2329 * C3746 - C2330 * C31996 +
            (C113 * C2572 + C31856 * C2577) * C3747 +
            (C113 * C2578 + C31856 * C2581) * C31979) *
               C105) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C2680 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31984 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C2680 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
              C32007 +
          ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
           (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 + C8905 * C5023) *
              C32003 +
          (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
           (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
              C31993 +
          (C8905 * C5021 + (C8901 - (C8900 + C8899) + C8902) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C3457 -
            (C5828 * C3454 + C5829 * C3456) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C9004 + C9005 - C9006 - C9007 + C9008 + C9009 - C9010 - C9011) *
               C31615 * C5022 +
           (C9012 + C9013 - C9014 - C9015 + C9016 + C9017 - C9018 - C9019) *
               C31615 * C5023) *
              C2680 +
          ((C9006 - (C9005 + C9004) + C9007 - C9008 - C9009 + C9010 + C9011) *
               C31615 * C5021 +
           (C9014 - (C9013 + C9012) + C9015 - C9016 - C9017 + C9018 + C9019) *
               C31615 * C5022 +
           (C5989 * C3745 - (C5153 * C32008 + C5154 * C3744) + C5990 * C32005 -
            C5991 * C3746 - C5992 * C31996 +
            (C113 * C7085 + C31856 * C7086) * C3747 +
            (C113 * C7087 + C31856 * C7088) * C31979) *
               C31615 * C5023) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C103 +
            (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
            C4056 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C30443 -
             ((C113 * C316 + C31856 * C334) * C31760 +
              (C113 * C304 + C31856 * C317) * C30451) +
             (C113 * C1010 + C31856 * C1019) * C31767 -
             (C113 * C1375 + C31856 * C1384) * C30457 -
             (C113 * C1385 + C31856 * C1402) * C4029) *
                C103 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
            (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
               C31845 * C31722) *
              C31918 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
            (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
            (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
               C31845 * C2680 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C103 +
            (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C104 +
            (C375 * C30451 + C376 * C31760 - C1048 * C30443 - C1049 * C31767 +
             (C113 * C2306 + C31856 * C2307) * C30457 +
             (C113 * C2308 + C31856 * C2309) * C4029) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C31615 * C5021 +
            (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
            (C8642 + C8643 - C8644 - C8645 + C8646 + C8647) * C31615 * C5023) *
               C2680 +
           ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
            (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
            (C5989 * C30443 - (C5153 * C31760 + C5154 * C30451) +
             C5990 * C31767 - C5991 * C30457 - C5992 * C4029) *
                C31615 * C5023) *
               C31722) *
              C31918 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
            (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C31615 *
                C5023) *
               C2680 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C31615 * C5021 +
            (C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C31615 * C5022 +
            (C1531 * C30451 + C1530 * C31760 - C6282 * C30443 - C6283 * C31767 +
             (C113 * C6869 + C31856 * C6870) * C30457 +
             (C113 * C6871 + C31856 * C6872) * C4029) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C2680 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31722) *
              C31984 +
          ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
            (C3471 + C3472 - C3473 - C3474) * C105) *
               C31845 * C2680 +
           (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C32007 +
          (((C113 * C1004 + C31856 * C1009) * C3457 -
            ((C113 * C316 + C31856 * C334) * C3454 +
             (C113 * C304 + C31856 * C317) * C3456) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
              C31845 * C32003 +
          (((C113 * C305 + C31856 * C318) * C3456 +
            (C113 * C319 + C31856 * C335) * C3454 -
            (C113 * C1378 + C31856 * C1390) * C3457 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C3635 + C3636 - C3637 - C3638) * C104 +
           (C3639 + C3640 - C3641 - C3642) * C105) *
              C31845 * C31993 +
          (((C113 * C1803 + C31856 * C1806) * C3457 -
            ((C113 * C1251 + C31856 * C1261) * C3454 +
             (C113 * C1243 + C31856 * C1252) * C3456) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C3457 -
            (C1530 * C3454 + C1531 * C3456) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C3457 -
            (C1528 * C3454 + C1529 * C3456) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C2680 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31997 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C2680 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31984 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C2680 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
              C32007 +
          ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
           (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 + C8905 * C5023) *
              C32003 +
          (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
           (C8899 + C8900 - C8901 - C8902) * C31615 * C5023) *
              C31993 +
          (C8905 * C5021 + (C8901 - (C8900 + C8899) + C8902) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C3457 -
            (C5828 * C3454 + C5829 * C3456) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1509 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1510 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C1511 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C31918 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1510 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1509 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C1511 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C31932 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C707 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C31932) *
              C708 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C31932 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C709 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C103 +
            (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
            C1954 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C1929 -
             ((C113 * C316 + C31856 * C334) * C1925 +
              (C113 * C304 + C31856 * C317) * C1928) +
             (C113 * C1010 + C31856 * C1019) * C1926 -
             (C113 * C1375 + C31856 * C1384) * C1930 -
             (C113 * C1385 + C31856 * C1402) * C31966) *
                C103 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C104 +
            (C2319 - (C2320 + C2321) + C2322 - C2333 - C2334) * C105) *
               C31845 * C31722) *
              C31918 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
            (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
            (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
               C31845 * C31932 +
           ((C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C103 +
            (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C104 +
            (C375 * C1928 + C376 * C1925 - C1048 * C1929 - C1049 * C1926 +
             (C113 * C2306 + C31856 * C2307) * C1930 +
             (C113 * C2308 + C31856 * C2309) * C31966) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31932 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C707 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31932) *
              C708 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31932 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C709 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1509 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1510 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C1511 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C31918 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C1510 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1509 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C1511 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C1928 +
             (C113 * C123 + C31856 * C136) * C1925 -
             (C113 * C508 + C31856 * C518) * C1929 -
             (C113 * C519 + C31856 * C538) * C1926 +
             (C113 * C509 + C31856 * C520) * C1930 +
             (C113 * C521 + C31856 * C539) * C31966) *
                C31615 * C5021 +
            (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
            C6649 * C5023) *
               C31932 +
           ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
            (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
            (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 *
                C5023) *
               C31722) *
              C31918 +
          (((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
            (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
            (C6874 - (C6875 + C6876) + C6877 - C6884 - C6885) * C31615 *
                C5023) *
               C31932 +
           ((C2313 + C2312 - C2311 - C2314 + C2331 + C2332) * C31615 * C5021 +
            (C6876 + C6875 - C6874 - C6877 + C6884 + C6885) * C31615 * C5022 +
            (C1531 * C1928 + C1530 * C1925 - C6282 * C1929 - C6283 * C1926 +
             (C113 * C6869 + C31856 * C6870) * C1930 +
             (C113 * C6871 + C31856 * C6872) * C31966) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C1509 +
          (((C113 * C1004 + C31856 * C1009) * C825 -
            ((C113 * C316 + C31856 * C334) * C31933 +
             (C113 * C304 + C31856 * C317) * C824) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
              C31845 * C1510 +
          (((C113 * C305 + C31856 * C318) * C824 +
            (C113 * C319 + C31856 * C335) * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C1686 + C1687 - C1702 - C1703) * C104 +
           (C1692 + C1693 - C1704 - C1705) * C105) *
              C31845 * C1511 +
          (((C113 * C1803 + C31856 * C1806) * C825 -
            ((C113 * C1251 + C31856 * C1261) * C31933 +
             (C113 * C1243 + C31856 * C1252) * C824) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C825 -
            (C1530 * C31933 + C1531 * C824) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C825 -
            (C1528 * C31933 + C1529 * C824) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31722) *
              C300 +
          ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
            (C843 + C844 - C855 - C856) * C105) *
               C31845 * C31932 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
               C104 +
           (C2455 + C2456 - C2457 - C2458 + C2459 + C2460 - C2471 - C2472) *
               C105) *
              C31845 * C31932 +
          (((C113 * C1004 + C31856 * C1009) * C2437 -
            ((C113 * C316 + C31856 * C334) * C2432 +
             (C113 * C304 + C31856 * C317) * C2436) +
            (C113 * C1010 + C31856 * C1019) * C2433 -
            (C113 * C1375 + C31856 * C1384) * C2438 -
            (C113 * C1385 + C31856 * C1402) * C2434 +
            (C113 * C2570 + C31856 * C2573) * C2439 +
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C103 +
           (C1043 * C2437 - (C369 * C2432 + C370 * C2436) + C1044 * C2433 -
            C2327 * C2438 - C2328 * C2434 +
            (C113 * C2571 + C31856 * C2575) * C2439 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C104 +
           (C1045 * C2437 - (C367 * C2432 + C368 * C2436) + C1047 * C2433 -
            C2329 * C2438 - C2330 * C2434 +
            (C113 * C2572 + C31856 * C2577) * C2439 +
            (C113 * C2578 + C31856 * C2581) * C31979) *
               C105) *
              C31845 * C31722) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 +
            (C5622 + C5623 - C5634 - C5635) * C31615 * C5023) *
               C31932 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            ((C113 * C1803 + C31856 * C1806) * C825 -
             (C5153 * C31933 + C5154 * C824) +
             (C113 * C1807 + C31856 * C1812) * C31764) *
                C31615 * C5023) *
               C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
               C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C1531 * C824 + C1530 * C31933 -
             (C113 * C1804 + C31856 * C1808) * C825 -
             (C113 * C1809 + C31856 * C1813) * C31764) *
                C31615 * C5023) *
               C31722) *
              C300 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C31932 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
              C1509 +
          ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
           (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 + C6405 * C5023) *
              C1510 +
          (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
           (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
              C1511 +
          (C6405 * C5021 + (C6403 - (C6394 + C6393) + C6404) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C825 -
            (C5828 * C31933 + C5829 * C824) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C7090 + C7091 - C7092 - C7093 + C7094 + C7095 - C7114 - C7115) *
               C31615 * C5022 +
           (C7100 + C7101 - C7102 - C7103 + C7104 + C7105 - C7116 - C7117) *
               C31615 * C5023) *
              C31932 +
          ((C7092 - (C7091 + C7090) + C7093 - C7094 - C7095 + C7114 + C7115) *
               C31615 * C5021 +
           (C7102 - (C7101 + C7100) + C7103 - C7104 - C7105 + C7116 + C7117) *
               C31615 * C5022 +
           (C5989 * C2437 - (C5153 * C2432 + C5154 * C2436) + C5990 * C2433 -
            C5991 * C2438 - C5992 * C2434 +
            (C113 * C7085 + C31856 * C7086) * C2439 +
            (C113 * C7087 + C31856 * C7088) * C31979) *
               C31615 * C5023) *
              C31722) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31856 * C122) * C114 +
                (C113 * C123 + C31856 * C136) * C31677) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31845 * C31660 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31845 * C31660 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                  C31660 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31845 * C31660 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31856 * C134) * C114 +
                (C113 * C135 + C31856 * C142) * C31677) *
                   C105) *
                  C31845 * C31660 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31856 * C122) * C114 +
                 (C113 * C123 + C31856 * C136) * C31677) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31845 * C32000 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31856 * C334) * C31677 +
                 (C113 * C304 + C31856 * C317) * C114) *
                    C103) *
                   C31845 * C31988 +
               (((C113 * C305 + C31856 * C318) * C114 +
                 (C113 * C319 + C31856 * C335) * C31677) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31845 * C31963) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C31845 * C31988 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31845 * C32000 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C31845 * C31963) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
                   C32000 -
               (((C113 * C328 + C31856 * C340) * C31677 +
                 (C113 * C310 + C31856 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C31845 * C31988 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31856 * C330) * C114 +
                 (C113 * C331 + C31856 * C341) * C31677) *
                    C105) *
                   C31845 * C31963) *
                  C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
           (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
           (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
              C31845 * C31660 * C300 +
          (C607 * C103 + (C572 + C571 - C600 - C601 + C602 + C603) * C104 +
           (C170 * C505 + C171 * C32001 - (C113 * C516 + C31856 * C534) * C506 -
            (C113 * C535 + C31856 * C546) * C31990 +
            (C113 * C517 + C31856 * C536) * C507 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C1167 +
          (((C113 * C1004 + C31856 * C1009) * C506 -
            ((C113 * C316 + C31856 * C334) * C32001 +
             (C113 * C304 + C31856 * C317) * C505) +
            (C113 * C1010 + C31856 * C1019) * C31990 -
            (C113 * C1375 + C31856 * C1384) * C507 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C506 - (C369 * C32001 + C370 * C505) + C1044 * C31990 -
            (C113 * C1376 + C31856 * C1386) * C507 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C506 - (C367 * C32001 + C368 * C505) + C1047 * C31990 -
            (C113 * C1377 + C31856 * C1388) * C507 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C1168 +
          (((C113 * C305 + C31856 * C318) * C505 +
            (C113 * C319 + C31856 * C335) * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C505 + C372 * C32001 -
            (C113 * C1380 + C31856 * C1394) * C506 -
            (C113 * C1395 + C31856 * C1407) * C31990 +
            (C113 * C1381 + C31856 * C1396) * C507 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C505 + C374 * C32001 -
            (C113 * C1382 + C31856 * C1398) * C506 -
            (C113 * C1399 + C31856 * C1409) * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
           (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
           (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
              C31845 * C31660 * C31984 +
          (C1954 * C103 +
           (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C104 +
           (C170 * C1928 + C171 * C1925 - C851 * C1929 - C852 * C1926 +
            (C113 * C517 + C31856 * C536) * C1930 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C32000 +
          (((C113 * C1004 + C31856 * C1009) * C1929 -
            ((C113 * C316 + C31856 * C334) * C1925 +
             (C113 * C304 + C31856 * C317) * C1928) +
            (C113 * C1010 + C31856 * C1019) * C1926 -
            (C113 * C1375 + C31856 * C1384) * C1930 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C1929 - (C369 * C1925 + C370 * C1928) + C1044 * C1926 -
            (C113 * C1376 + C31856 * C1386) * C1930 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C1929 - (C367 * C1925 + C368 * C1928) + C1047 * C1926 -
            (C113 * C1377 + C31856 * C1388) * C1930 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C31988 +
          (((C113 * C305 + C31856 * C318) * C1928 +
            (C113 * C319 + C31856 * C335) * C1925 -
            (C113 * C1378 + C31856 * C1390) * C1929 -
            (C113 * C1391 + C31856 * C1405) * C1926 +
            (C113 * C1379 + C31856 * C1392) * C1930 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C1928 + C372 * C1925 - C1698 * C1929 - C1699 * C1926 +
            (C113 * C1381 + C31856 * C1396) * C1930 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31856 * C122) * C2131 +
           (C113 * C123 + C31856 * C136) * C2126 -
           (C113 * C508 + C31856 * C518) * C2132 -
           (C113 * C519 + C31856 * C538) * C2127 +
           (C113 * C509 + C31856 * C520) * C2133 +
           (C113 * C521 + C31856 * C539) * C2128 -
           (C113 * C2136 + C31856 * C2142) * C2134 -
           (C113 * C2143 + C31856 * C2154) * C2129 +
           (C113 * C2137 + C31856 * C2144) * C2135 +
           (C113 * C2145 + C31856 * C2155) * C2130) *
              C103 +
          (C164 * C2131 + C165 * C2126 - C579 * C2132 - C580 * C2127 +
           C581 * C2133 + C582 * C2128 -
           (C113 * C2138 + C31856 * C2146) * C2134 -
           (C113 * C2147 + C31856 * C2156) * C2129 +
           (C113 * C2139 + C31856 * C2148) * C2135 +
           (C113 * C2149 + C31856 * C2157) * C2130) *
              C104 +
          (C166 * C2131 + C167 * C2126 - C584 * C2132 - C585 * C2127 +
           C586 * C2133 + C587 * C2128 -
           (C113 * C2140 + C31856 * C2150) * C2134 -
           (C113 * C2151 + C31856 * C2158) * C2129 +
           (C113 * C2141 + C31856 * C2152) * C2135 +
           (C113 * C2153 + C31856 * C2159) * C2130) *
              C105) *
         C31845 * C31660 * C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C505 + C5150 * C32001 -
            (C113 * C1004 + C31856 * C1009) * C506 -
            (C113 * C1010 + C31856 * C1019) * C31990 +
            (C113 * C1375 + C31856 * C1384) * C507 +
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C31615 * C5022 +
           (C5151 * C505 + C5152 * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C31615 * C5023) *
              C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
           (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
           (C1698 * C506 - (C372 * C32001 + C371 * C505) + C1699 * C31990 -
            (C113 * C1381 + C31856 * C1396) * C507 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C300 +
          (C607 * C31615 * C5021 +
           (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C31615 * C5022 +
           (C373 * C505 + C374 * C32001 - C1700 * C506 - C1701 * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
           C6005 * C5023) *
              C1167 +
          ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
           (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
           (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 * C5023) *
              C1168 +
          (C6005 * C5021 +
           (C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C31615 * C5022 +
           (C5826 * C505 + C5827 * C32001 -
            (C113 * C5946 + C31856 * C5950) * C506 -
            (C113 * C5951 + C31856 * C5955) * C31990 +
            (C113 * C5947 + C31856 * C5952) * C507 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C1928 + C5150 * C1925 - C5628 * C1929 - C5629 * C1926 +
            C5984 * C1930 + C5985 * C31966) *
               C31615 * C5022 +
           (C5151 * C1928 + C5152 * C1925 - C5630 * C1929 - C5631 * C1926 +
            C5987 * C1930 + C5988 * C31966) *
               C31615 * C5023) *
              C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
           (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
           (C1698 * C1929 - (C372 * C1925 + C371 * C1928) + C1699 * C1926 -
            (C113 * C1381 + C31856 * C1396) * C1930 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C31984 +
          (C1954 * C31615 * C5021 +
           (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C31615 * C5022 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
           C6649 * C5023) *
              C32000 +
          ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
           (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
           (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 * C5023) *
              C31988 +
          (C6649 * C5021 +
           (C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C31615 * C5022 +
           (C5826 * C1928 + C5827 * C1925 - C6400 * C1929 - C6401 * C1926 +
            (C113 * C5947 + C31856 * C5952) * C1930 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31856 * C122) * C2131 +
           (C113 * C123 + C31856 * C136) * C2126 -
           (C113 * C508 + C31856 * C518) * C2132 -
           (C113 * C519 + C31856 * C538) * C2127 +
           (C113 * C509 + C31856 * C520) * C2133 +
           (C113 * C521 + C31856 * C539) * C2128 -
           (C113 * C2136 + C31856 * C2142) * C2134 -
           (C113 * C2143 + C31856 * C2154) * C2129 +
           (C113 * C2137 + C31856 * C2144) * C2135 +
           (C113 * C2145 + C31856 * C2155) * C2130) *
              C31615 * C5021 +
          (C5149 * C2131 + C5150 * C2126 - C5628 * C2132 - C5629 * C2127 +
           C5984 * C2133 + C5985 * C2128 -
           (C113 * C2570 + C31856 * C2573) * C2134 -
           (C113 * C2574 + C31856 * C2579) * C2129 +
           (C113 * C6711 + C31856 * C6714) * C2135 +
           (C113 * C6715 + C31856 * C6720) * C2130) *
              C31615 * C5022 +
          (C5151 * C2131 + C5152 * C2126 - C5630 * C2132 - C5631 * C2127 +
           C5987 * C2133 + C5988 * C2128 -
           (C113 * C6712 + C31856 * C6716) * C2134 -
           (C113 * C6717 + C31856 * C6721) * C2129 +
           (C113 * C6713 + C31856 * C6718) * C2135 +
           (C113 * C6719 + C31856 * C6722) * C2130) *
              C31615 * C5023) *
         C31660 * C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C1167 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C824 +
             (C113 * C319 + C31856 * C335) * C31933 -
             (C113 * C1378 + C31856 * C1390) * C825 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C1686 + C1687 - C1702 - C1703) * C104 +
            (C1692 + C1693 - C1704 - C1705) * C105) *
               C31845 * C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C1168 +
           ((C1702 - (C1687 + C1686) + C1703) * C103 +
            (C1704 - (C1693 + C1692) + C1705) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C825 -
             (C377 * C31933 + C378 * C824) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C103 +
           (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
              C31845 * C31660 * C708 +
          (C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
           (C843 + C844 - C855 - C856) * C105) *
              C31845 * C31660 * C709 +
          (C858 * C103 + (C855 - (C844 + C843) + C856) * C104 +
           ((C113 * C826 + C31856 * C827) * C825 -
            (C172 * C31933 + C173 * C824) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C2445 + C2446 - C2447 - C2448 + C2449 + C2450 - C2469 - C2470) *
               C104 +
           (C2455 + C2456 - C2457 - C2458 + C2459 + C2460 - C2471 - C2472) *
               C105) *
              C31845 * C31660 * C31918 +
          ((C2447 - (C2446 + C2445) + C2448 - C2449 - C2450 + C2469 + C2470) *
               C103 +
           (C2457 - (C2456 + C2455) + C2458 - C2459 - C2460 + C2471 + C2472) *
               C104 +
           (C588 * C2437 - (C168 * C2432 + C169 * C2436) + C589 * C2433 -
            C590 * C2438 - C591 * C2434 +
            (C113 * C2440 + C31856 * C2441) * C2439 +
            (C113 * C2442 + C31856 * C2443) * C31979) *
               C105) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C824 + C5150 * C31933 -
            (C113 * C1004 + C31856 * C1009) * C825 -
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C31615 * C5022 +
           (C5151 * C824 + C5152 * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C31615 * C5023) *
              C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C31615 * C5021 +
           (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
           (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
              C31660 * C708 +
          (C857 * C31615 * C5021 +
           (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
           (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
              C31660 * C709 +
          (C858 * C31615 * C5021 +
           (C1054 - (C1038 + C1037) + C1055) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C825 -
            (C377 * C31933 + C378 * C824) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C1167 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            (C6269 - (C6270 + C6271) + C6272) * C31615 * C5023) *
               C1168 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C5826 * C824 + C5827 * C31933 -
             (C113 * C5946 + C31856 * C5950) * C825 -
             (C113 * C5951 + C31856 * C5955) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C1168 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C2436 +
            (C113 * C123 + C31856 * C136) * C2432 -
            (C113 * C508 + C31856 * C518) * C2437 -
            (C113 * C519 + C31856 * C538) * C2433 +
            (C113 * C509 + C31856 * C520) * C2438 +
            (C113 * C521 + C31856 * C539) * C2434 -
            (C113 * C2136 + C31856 * C2142) * C2439 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C5149 * C2436 + C5150 * C2432 - C5628 * C2437 - C5629 * C2433 +
            C5984 * C2438 + C5985 * C2434 -
            (C113 * C2570 + C31856 * C2573) * C2439 -
            (C113 * C2574 + C31856 * C2579) * C31979) *
               C31615 * C5022 +
           (C5151 * C2436 + C5152 * C2432 - C5630 * C2437 - C5631 * C2433 +
            C5987 * C2438 + C5988 * C2434 -
            (C113 * C6712 + C31856 * C6716) * C2439 -
            (C113 * C6717 + C31856 * C6721) * C31979) *
               C31615 * C5023) *
              C31660 * C31918 +
          ((C2447 - (C2446 + C2445) + C2448 - C2449 - C2450 + C2469 + C2470) *
               C31615 * C5021 +
           (C1043 * C2437 - (C369 * C2432 + C370 * C2436) + C1044 * C2433 -
            C2327 * C2438 - C2328 * C2434 +
            (C113 * C2571 + C31856 * C2575) * C2439 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C31615 * C5022 +
           (C1698 * C2437 - (C372 * C2432 + C371 * C2436) + C1699 * C2433 -
            C6882 * C2438 - C6883 * C2434 +
            (C113 * C6983 + C31856 * C6984) * C2439 +
            (C113 * C6985 + C31856 * C6986) * C31979) *
               C31615 * C5023) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32000 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C31845 * C31988 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32000 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C32000 -
           (((C113 * C328 + C31856 * C340) * C31677 +
             (C113 * C310 + C31856 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31988 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C31660 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31845 *
              C31660 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C31660 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31845 *
              C31660 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31856 * C134) * C114 +
            (C113 * C135 + C31856 * C142) * C31677) *
               C105) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C103 +
           (C1940 - (C1939 + C1938) + C1941 - C1942 - C1943) * C104 +
           (C1944 - (C1945 + C1946) + C1947 - C1948 - C1949) * C105) *
              C31845 * C31660 * C31984 +
          (C1954 * C103 +
           (C1946 + C1945 - C1944 - C1947 + C1948 + C1949) * C104 +
           (C170 * C1928 + C171 * C1925 - C851 * C1929 - C852 * C1926 +
            (C113 * C517 + C31856 * C536) * C1930 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C1932 + C1933 - C1934 - C1935 + C1936 + C1937) * C104 +
           C1954 * C105) *
              C31845 * C32000 +
          (((C113 * C1004 + C31856 * C1009) * C1929 -
            ((C113 * C316 + C31856 * C334) * C1925 +
             (C113 * C304 + C31856 * C317) * C1928) +
            (C113 * C1010 + C31856 * C1019) * C1926 -
            (C113 * C1375 + C31856 * C1384) * C1930 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C1929 - (C369 * C1925 + C370 * C1928) + C1044 * C1926 -
            (C113 * C1376 + C31856 * C1386) * C1930 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C1929 - (C367 * C1925 + C368 * C1928) + C1047 * C1926 -
            (C113 * C1377 + C31856 * C1388) * C1930 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C31988 +
          (((C113 * C305 + C31856 * C318) * C1928 +
            (C113 * C319 + C31856 * C335) * C1925 -
            (C113 * C1378 + C31856 * C1390) * C1929 -
            (C113 * C1391 + C31856 * C1405) * C1926 +
            (C113 * C1379 + C31856 * C1392) * C1930 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C1928 + C372 * C1925 - C1698 * C1929 - C1699 * C1926 +
            (C113 * C1381 + C31856 * C1396) * C1930 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C1928 + C5150 * C1925 - C5628 * C1929 - C5629 * C1926 +
            C5984 * C1930 + C5985 * C31966) *
               C31615 * C5022 +
           (C5151 * C1928 + C5152 * C1925 - C5630 * C1929 - C5631 * C1926 +
            C5987 * C1930 + C5988 * C31966) *
               C31615 * C5023) *
              C31660 * C31997 +
          ((C1934 - (C1933 + C1932) + C1935 - C1936 - C1937) * C31615 * C5021 +
           (C2311 - (C2312 + C2313) + C2314 - C2331 - C2332) * C31615 * C5022 +
           (C1698 * C1929 - (C372 * C1925 + C371 * C1928) + C1699 * C1926 -
            (C113 * C1381 + C31856 * C1396) * C1930 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C31984 +
          (C1954 * C31615 * C5021 +
           (C2321 + C2320 - C2319 - C2322 + C2333 + C2334) * C31615 * C5022 +
           (C373 * C1928 + C374 * C1925 - C1700 * C1929 - C1701 * C1926 +
            (C113 * C1383 + C31856 * C1400) * C1930 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C1928 +
            (C113 * C123 + C31856 * C136) * C1925 -
            (C113 * C508 + C31856 * C518) * C1929 -
            (C113 * C519 + C31856 * C538) * C1926 +
            (C113 * C509 + C31856 * C520) * C1930 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C6626 + C6627 - C6628 - C6629 + C6630 + C6631) * C31615 * C5022 +
           C6649 * C5023) *
              C32000 +
          ((C6628 - (C6627 + C6626) + C6629 - C6630 - C6631) * C31615 * C5021 +
           (C6634 - (C6633 + C6632) + C6635 - C6636 - C6637) * C31615 * C5022 +
           (C6638 - (C6639 + C6640) + C6641 - C6642 - C6643) * C31615 * C5023) *
              C31988 +
          (C6649 * C5021 +
           (C6640 + C6639 - C6638 - C6641 + C6642 + C6643) * C31615 * C5022 +
           (C5826 * C1928 + C5827 * C1925 - C6400 * C1929 - C6401 * C1926 +
            (C113 * C5947 + C31856 * C5952) * C1930 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 + C3917 * C105) *
               C31845 * C31722) *
              C31638 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C31932 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C3912 + C3913 - C3914 - C3915) * C105) *
               C31845 * C31722) *
              C31646 +
          ((C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
            (C3471 + C3472 - C3473 - C3474) * C105) *
               C31845 * C31932 +
           (C3917 * C103 + (C3914 - (C3913 + C3912) + C3915) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C3457 -
             (C721 * C3454 + C722 * C3456) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C31932 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31722) *
              C31638 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C31932 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31722) *
              C31646 +
          ((C3479 * C31615 * C5021 +
            (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
            (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
               C31932 +
           (C3917 * C31615 * C5021 +
            (C3641 - (C3640 + C3639) + C3642) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C3457 -
             (C1528 * C3454 + C1529 * C3456) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C103 +
            (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
            C4056 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C30443 -
             ((C113 * C316 + C31856 * C334) * C31760 +
              (C113 * C304 + C31856 * C317) * C30451) +
             (C113 * C1010 + C31856 * C1019) * C31767 -
             (C113 * C1375 + C31856 * C1384) * C30457 -
             (C113 * C1385 + C31856 * C1402) * C4029) *
                C103 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C104 +
            (C4209 - (C4210 + C4211) + C4212 - C4213 - C4214) * C105) *
               C31845 * C31722) *
              C2788 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
            (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
            (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
               C31845 * C31932 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C103 +
            (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C104 +
            (C375 * C30451 + C376 * C31760 - C1048 * C30443 - C1049 * C31767 +
             (C113 * C2306 + C31856 * C2307) * C30457 +
             (C113 * C2308 + C31856 * C2309) * C4029) *
                C105) *
               C31845 * C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C30451 +
             (C113 * C123 + C31856 * C136) * C31760 -
             (C113 * C508 + C31856 * C518) * C30443 -
             (C113 * C519 + C31856 * C538) * C31767 +
             (C113 * C509 + C31856 * C520) * C30457 +
             (C113 * C521 + C31856 * C539) * C4029) *
                C31615 * C5021 +
            (C8636 + C8637 - C8638 - C8639 + C8640 + C8641) * C31615 * C5022 +
            (C8642 + C8643 - C8644 - C8645 + C8646 + C8647) * C31615 * C5023) *
               C31932 +
           ((C8638 - (C8637 + C8636) + C8639 - C8640 - C8641) * C31615 * C5021 +
            (C8644 - (C8643 + C8642) + C8645 - C8646 - C8647) * C31615 * C5022 +
            (C5989 * C30443 - (C5153 * C31760 + C5154 * C30451) +
             C5990 * C31767 - C5991 * C30457 - C5992 * C4029) *
                C31615 * C5023) *
               C31722) *
              C2788 +
          (((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
            (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
            (C8648 - (C8649 + C8650) + C8651 - C8652 - C8653) * C31615 *
                C5023) *
               C31932 +
           ((C4205 + C4204 - C4203 - C4206 + C4207 + C4208) * C31615 * C5021 +
            (C8650 + C8649 - C8648 - C8651 + C8652 + C8653) * C31615 * C5022 +
            (C1531 * C30451 + C1530 * C31760 - C6282 * C30443 - C6283 * C31767 +
             (C113 * C6869 + C31856 * C6870) * C30457 +
             (C113 * C6871 + C31856 * C6872) * C4029) *
                C31615 * C5023) *
               C31722) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C32000 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 +
            (C3631 - (C3632 + C3633) + C3634) * C105) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C3456 +
             (C113 * C319 + C31856 * C335) * C3454 -
             (C113 * C1378 + C31856 * C1390) * C3457 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C3635 + C3636 - C3637 - C3638) * C104 +
            (C3639 + C3640 - C3641 - C3642) * C105) *
               C31845 * C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C375 * C3456 + C376 * C3454 - C1048 * C3457 - C1049 * C31764) *
                C105) *
               C31845 * C31988 +
           ((C3637 - (C3636 + C3635) + C3638) * C103 +
            (C3641 - (C3640 + C3639) + C3642) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C3457 -
             (C377 * C3454 + C378 * C3456) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C103 +
           (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
              C31845 * C31660 * C31999 +
          (C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
           (C3471 + C3472 - C3473 - C3474) * C105) *
              C31845 * C31660 * C31986 +
          (C3480 * C103 + (C3473 - (C3472 + C3471) + C3474) * C104 +
           ((C113 * C826 + C31856 * C827) * C3457 -
            (C172 * C3454 + C173 * C3456) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C103 +
           (C3749 + C3750 - C3751 - C3752 + C3753 + C3754 - C3755 - C3756) *
               C104 +
           (C3757 + C3758 - C3759 - C3760 + C3761 + C3762 - C3763 - C3764) *
               C105) *
              C31845 * C31660 * C2788 +
          ((C3751 - (C3750 + C3749) + C3752 - C3753 - C3754 + C3755 + C3756) *
               C103 +
           (C3759 - (C3758 + C3757) + C3760 - C3761 - C3762 + C3763 + C3764) *
               C104 +
           (C588 * C3745 - (C168 * C32008 + C169 * C3744) + C589 * C32005 -
            C590 * C3746 - C591 * C31996 +
            (C113 * C2440 + C31856 * C2441) * C3747 +
            (C113 * C2442 + C31856 * C2443) * C31979) *
               C105) *
              C31845 * C31660 * C31643)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C3456 + C5150 * C3454 - C5628 * C3457 - C5629 * C31764) *
               C31615 * C5022 +
           (C5151 * C3456 + C5152 * C3454 - C5630 * C3457 - C5631 * C31764) *
               C31615 * C5023) *
              C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
           (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
           (C3637 - (C3636 + C3635) + C3638) * C31615 * C5023) *
              C31660 * C31999 +
          (C3479 * C31615 * C5021 +
           (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
           (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
              C31660 * C31986 +
          (C3480 * C31615 * C5021 +
           (C3914 - (C3913 + C3912) + C3915) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C3457 -
            (C377 * C3454 + C378 * C3456) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C32000 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31988 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C5826 * C3456 + C5827 * C3454 - C6400 * C3457 - C6401 * C31764) *
                C31615 * C5023) *
               C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31988 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3744 +
            (C113 * C123 + C31856 * C136) * C32008 -
            (C113 * C508 + C31856 * C518) * C3745 -
            (C113 * C519 + C31856 * C538) * C32005 +
            (C113 * C509 + C31856 * C520) * C3746 +
            (C113 * C521 + C31856 * C539) * C31996 -
            (C113 * C2136 + C31856 * C2142) * C3747 -
            (C113 * C2143 + C31856 * C2154) * C31979) *
               C31615 * C5021 +
           (C5149 * C3744 + C5150 * C32008 - C5628 * C3745 - C5629 * C32005 +
            C5984 * C3746 + C5985 * C31996 - C7110 * C3747 - C7111 * C31979) *
               C31615 * C5022 +
           (C5151 * C3744 + C5152 * C32008 - C5630 * C3745 - C5631 * C32005 +
            C5987 * C3746 + C5988 * C31996 - C7112 * C3747 - C7113 * C31979) *
               C31615 * C5023) *
              C31660 * C2788 +
          ((C3751 - (C3750 + C3749) + C3752 - C3753 - C3754 + C3755 + C3756) *
               C31615 * C5021 +
           (C1043 * C3745 - (C369 * C32008 + C370 * C3744) + C1044 * C32005 -
            C2327 * C3746 - C2328 * C31996 +
            (C113 * C2571 + C31856 * C2575) * C3747 +
            (C113 * C2576 + C31856 * C2580) * C31979) *
               C31615 * C5022 +
           (C1698 * C3745 - (C372 * C32008 + C371 * C3744) + C1699 * C32005 -
            C6882 * C3746 - C6883 * C31996 +
            (C113 * C6983 + C31856 * C6984) * C3747 +
            (C113 * C6985 + C31856 * C6986) * C31979) *
               C31615 * C5023) *
              C31660 * C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C103 +
           (C4034 + C4035 - C4036 - C4037 + C4038 + C4039) * C104 +
           C4056 * C105) *
              C31845 * C31660 * C31638 +
          ((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C103 +
           (C4042 - (C4041 + C4040) + C4043 - C4044 - C4045) * C104 +
           (C4046 - (C4047 + C4048) + C4049 - C4050 - C4051) * C105) *
              C31845 * C31660 * C31646 +
          (C4056 * C103 +
           (C4048 + C4047 - C4046 - C4049 + C4050 + C4051) * C104 +
           (C170 * C30451 + C171 * C31760 - C851 * C30443 - C852 * C31767 +
            (C113 * C517 + C31856 * C536) * C30457 +
            (C113 * C537 + C31856 * C547) * C4029) *
               C105) *
              C31845 * C31660 * C3063)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C30451 +
            (C113 * C123 + C31856 * C136) * C31760 -
            (C113 * C508 + C31856 * C518) * C30443 -
            (C113 * C519 + C31856 * C538) * C31767 +
            (C113 * C509 + C31856 * C520) * C30457 +
            (C113 * C521 + C31856 * C539) * C4029) *
               C31615 * C5021 +
           (C5149 * C30451 + C5150 * C31760 - C5628 * C30443 - C5629 * C31767 +
            C5984 * C30457 + C5985 * C4029) *
               C31615 * C5022 +
           (C5151 * C30451 + C5152 * C31760 - C5630 * C30443 - C5631 * C31767 +
            C5987 * C30457 + C5988 * C4029) *
               C31615 * C5023) *
              C31660 * C31638 +
          ((C4036 - (C4035 + C4034) + C4037 - C4038 - C4039) * C31615 * C5021 +
           (C4203 - (C4204 + C4205) + C4206 - C4207 - C4208) * C31615 * C5022 +
           (C1698 * C30443 - (C372 * C31760 + C371 * C30451) + C1699 * C31767 -
            C6882 * C30457 - C6883 * C4029) *
               C31615 * C5023) *
              C31660 * C31646 +
          (C4056 * C31615 * C5021 +
           (C4211 + C4210 - C4209 - C4212 + C4213 + C4214) * C31615 * C5022 +
           (C373 * C30451 + C374 * C31760 - C1700 * C30443 - C1701 * C31767 +
            (C113 * C1383 + C31856 * C1400) * C30457 +
            (C113 * C1401 + C31856 * C1410) * C4029) *
               C31615 * C5023) *
              C31660 * C3063)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
              C31845 * C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C103 +
           (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
              C31845 * C31660 * C31999 +
          (C3479 * C103 + (C3469 + C3468 - C3467 - C3470) * C104 +
           (C3471 + C3472 - C3473 - C3474) * C105) *
              C31845 * C31660 * C31986 +
          (C3480 * C103 + (C3473 - (C3472 + C3471) + C3474) * C104 +
           ((C113 * C826 + C31856 * C827) * C3457 -
            (C172 * C3454 + C173 * C3456) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C3459 + C3460 - C3461 - C3462) * C104 + C3479 * C105) *
               C31845 * C32000 +
           (((C113 * C1004 + C31856 * C1009) * C3457 -
             ((C113 * C316 + C31856 * C334) * C3454 +
              (C113 * C304 + C31856 * C317) * C3456) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C3627 - (C3628 + C3629) + C3630) * C104 +
            (C3631 - (C3632 + C3633) + C3634) * C105) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C3456 +
             (C113 * C319 + C31856 * C335) * C3454 -
             (C113 * C1378 + C31856 * C1390) * C3457 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C3635 + C3636 - C3637 - C3638) * C104 +
            (C3639 + C3640 - C3641 - C3642) * C105) *
               C31845 * C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C103 +
            (C3465 - (C3464 + C3463) + C3466) * C104 + C3480 * C105) *
               C31845 * C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C103 +
            (C3633 + C3632 - C3631 - C3634) * C104 +
            (C375 * C3456 + C376 * C3454 - C1048 * C3457 - C1049 * C31764) *
                C105) *
               C31845 * C31988 +
           ((C3637 - (C3636 + C3635) + C3638) * C103 +
            (C3641 - (C3640 + C3639) + C3642) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C3457 -
             (C377 * C3454 + C378 * C3456) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C3456 +
            (C113 * C123 + C31856 * C136) * C3454 -
            (C113 * C508 + C31856 * C518) * C3457 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C3456 + C5150 * C3454 - C5628 * C3457 - C5629 * C31764) *
               C31615 * C5022 +
           (C5151 * C3456 + C5152 * C3454 - C5630 * C3457 - C5631 * C31764) *
               C31615 * C5023) *
              C31660 * C32006 +
          ((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
           (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
           (C3637 - (C3636 + C3635) + C3638) * C31615 * C5023) *
              C31660 * C31999 +
          (C3479 * C31615 * C5021 +
           (C3633 + C3632 - C3631 - C3634) * C31615 * C5022 +
           (C3639 + C3640 - C3641 - C3642) * C31615 * C5023) *
              C31660 * C31986 +
          (C3480 * C31615 * C5021 +
           (C3914 - (C3913 + C3912) + C3915) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C3457 -
            (C377 * C3454 + C378 * C3456) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C3456 +
             (C113 * C123 + C31856 * C136) * C3454 -
             (C113 * C508 + C31856 * C518) * C3457 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C8112 + C8113 - C8114 - C8115) * C31615 * C5022 + C8135 * C5023) *
               C32000 +
           ((C8114 - (C8113 + C8112) + C8115) * C31615 * C5021 +
            (C8118 - (C8117 + C8116) + C8119) * C31615 * C5022 +
            (C8120 - (C8121 + C8122) + C8123) * C31615 * C5023) *
               C31988 +
           (C8135 * C5021 + (C8122 + C8121 - C8120 - C8123) * C31615 * C5022 +
            (C5826 * C3456 + C5827 * C3454 - C6400 * C3457 - C6401 * C31764) *
                C31615 * C5023) *
               C31963) *
              C2788 +
          (((C3461 - (C3460 + C3459) + C3462) * C31615 * C5021 +
            (C3627 - (C3628 + C3629) + C3630) * C31615 * C5022 +
            C8134 * C5023) *
               C32000 +
           ((C3629 + C3628 - C3627 - C3630) * C31615 * C5021 +
            (C3635 + C3636 - C3637 - C3638) * C31615 * C5022 +
            (C8125 + C8126 - C8127 - C8128) * C31615 * C5023) *
               C31988 +
           (C8134 * C5021 + (C8127 - (C8126 + C8125) + C8128) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C3457 -
             (C6114 * C3454 + C6115 * C3456) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C31932 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31722) *
              C707 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C31722 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C31932) *
              C708 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C31932 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31722) *
              C709 +
          ((C716 * C103 + (C724 + C723) * C104 +
            ((C113 * C711 + C31856 * C712) * C114 +
             (C113 * C713 + C31856 * C714) * C31677) *
                C105) *
               C31845 * C31722 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31845 * C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1509 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1510 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C1511 -
           ((C1532 + C1533) * C105 + (C1534 + C1535) * C104 +
            ((C113 * C1251 + C31856 * C1261) * C31677 +
             (C113 * C1243 + C31856 * C1252) * C114) *
                C103) *
               C31845 * C31973) *
              C31918 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1510 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1509 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C1511 +
           ((C1535 + C1534) * C103 + (C1533 + C1532) * C104 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C105) *
               C31845 * C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C31932 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31722) *
              C707 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31722 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C31932) *
              C708 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C31932 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31722) *
              C709 +
          ((C716 * C31615 * C5021 + (C390 + C389) * C31615 * C5022 +
            ((C113 * C1515 + C31856 * C1516) * C114 +
             (C113 * C1517 + C31856 * C1518) * C31677) *
                C31615 * C5023) *
               C31722 -
           ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
            C185 * C31615 * C5021) *
               C31932) *
              C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1509 -
           (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1510 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
               C1511 -
           ((C5832 + C5833) * C31615 * C5023 +
            (C5831 + C5830) * C31615 * C5022 + C5825 * C5021) *
               C31973) *
              C31918 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            C6113 * C5023) *
               C1510 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1509 -
           ((C6116 + C6117) * C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C1511 +
           (C6113 * C5021 + (C6117 + C6116) * C31615 * C5022 +
            ((C113 * C6103 + C31856 * C6104) * C114 +
             (C113 * C6105 + C31856 * C6106) * C31677) *
                C31615 * C5023) *
               C31973) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C31932 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C31722) *
              C300 +
          ((C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
            (C843 + C844 - C855 - C856) * C105) *
               C31845 * C31932 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31856 * C1017) * C825 -
             (C721 * C31933 + C722 * C824) +
             (C113 * C1018 + C31856 * C1023) * C31764) *
                C105) *
               C31845 * C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C1509 +
          (((C113 * C1004 + C31856 * C1009) * C825 -
            ((C113 * C316 + C31856 * C334) * C31933 +
             (C113 * C304 + C31856 * C317) * C824) +
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C103 +
           (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
              C31845 * C1510 +
          (((C113 * C305 + C31856 * C318) * C824 +
            (C113 * C319 + C31856 * C335) * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C103 +
           (C1686 + C1687 - C1702 - C1703) * C104 +
           (C1692 + C1693 - C1704 - C1705) * C105) *
              C31845 * C1511 +
          (((C113 * C1803 + C31856 * C1806) * C825 -
            ((C113 * C1251 + C31856 * C1261) * C31933 +
             (C113 * C1243 + C31856 * C1252) * C824) +
            (C113 * C1807 + C31856 * C1812) * C31764) *
               C103 +
           ((C113 * C1804 + C31856 * C1808) * C825 -
            (C1530 * C31933 + C1531 * C824) +
            (C113 * C1809 + C31856 * C1813) * C31764) *
               C104 +
           ((C113 * C1805 + C31856 * C1810) * C825 -
            (C1528 * C31933 + C1529 * C824) +
            (C113 * C1811 + C31856 * C1814) * C31764) *
               C105) *
              C31845 * C31973) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 +
            (C5622 + C5623 - C5634 - C5635) * C31615 * C5023) *
               C31932 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            ((C113 * C1803 + C31856 * C1806) * C825 -
             (C5153 * C31933 + C5154 * C824) +
             (C113 * C1807 + C31856 * C1812) * C31764) *
                C31615 * C5023) *
               C31722) *
              C299 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
               C31932 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C1531 * C824 + C1530 * C31933 -
             (C113 * C1804 + C31856 * C1808) * C825 -
             (C113 * C1809 + C31856 * C1813) * C31764) *
                C31615 * C5023) *
               C31722) *
              C300 +
          ((C857 * C31615 * C5021 +
            (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
            (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
               C31932 +
           (C1057 * C31615 * C5021 +
            (C1704 - (C1693 + C1692) + C1705) * C31615 * C5022 +
            ((C113 * C1805 + C31856 * C1810) * C825 -
             (C1528 * C31933 + C1529 * C824) +
             (C113 * C1811 + C31856 * C1814) * C31764) *
                C31615 * C5023) *
               C31722) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
              C1509 +
          ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
           (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 + C6405 * C5023) *
              C1510 +
          (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
           (C6393 + C6394 - C6403 - C6404) * C31615 * C5023) *
              C1511 +
          (C6405 * C5021 + (C6403 - (C6394 + C6393) + C6404) * C31615 * C5022 +
           ((C113 * C6387 + C31856 * C6388) * C825 -
            (C5828 * C31933 + C5829 * C824) +
            (C113 * C6389 + C31856 * C6390) * C31764) *
               C31615 * C5023) *
              C31973) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32000 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C31845 * C31988 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32000 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C32000 -
           (((C113 * C328 + C31856 * C340) * C31677 +
             (C113 * C310 + C31856 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31988 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C31660 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31845 *
              C31660 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C31660 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31845 *
              C31660 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31856 * C134) * C114 +
            (C113 * C135 + C31856 * C142) * C31677) *
               C105) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C103 +
           (C596 - (C560 + C559) + C597 - C598 - C599) * C104 +
           (C600 - (C571 + C572) + C601 - C602 - C603) * C105) *
              C31845 * C31660 * C300 +
          (C607 * C103 + (C572 + C571 - C600 - C601 + C602 + C603) * C104 +
           (C170 * C505 + C171 * C32001 - (C113 * C516 + C31856 * C534) * C506 -
            (C113 * C535 + C31856 * C546) * C31990 +
            (C113 * C517 + C31856 * C536) * C507 +
            (C113 * C537 + C31856 * C547) * C31966) *
               C105) *
              C31845 * C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C103 +
           (C549 + C550 - C592 - C593 + C594 + C595) * C104 + C607 * C105) *
              C31845 * C1167 +
          (((C113 * C1004 + C31856 * C1009) * C506 -
            ((C113 * C316 + C31856 * C334) * C32001 +
             (C113 * C304 + C31856 * C317) * C505) +
            (C113 * C1010 + C31856 * C1019) * C31990 -
            (C113 * C1375 + C31856 * C1384) * C507 -
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C103 +
           (C1043 * C506 - (C369 * C32001 + C370 * C505) + C1044 * C31990 -
            (C113 * C1376 + C31856 * C1386) * C507 -
            (C113 * C1387 + C31856 * C1403) * C31966) *
               C104 +
           (C1045 * C506 - (C367 * C32001 + C368 * C505) + C1047 * C31990 -
            (C113 * C1377 + C31856 * C1388) * C507 -
            (C113 * C1389 + C31856 * C1404) * C31966) *
               C105) *
              C31845 * C1168 +
          (((C113 * C305 + C31856 * C318) * C505 +
            (C113 * C319 + C31856 * C335) * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C103 +
           (C371 * C505 + C372 * C32001 -
            (C113 * C1380 + C31856 * C1394) * C506 -
            (C113 * C1395 + C31856 * C1407) * C31990 +
            (C113 * C1381 + C31856 * C1396) * C507 +
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C104 +
           (C373 * C505 + C374 * C32001 -
            (C113 * C1382 + C31856 * C1398) * C506 -
            (C113 * C1399 + C31856 * C1409) * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C105) *
              C31845 * C31963) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5149 * C505 + C5150 * C32001 -
            (C113 * C1004 + C31856 * C1009) * C506 -
            (C113 * C1010 + C31856 * C1019) * C31990 +
            (C113 * C1375 + C31856 * C1384) * C507 +
            (C113 * C1385 + C31856 * C1402) * C31966) *
               C31615 * C5022 +
           (C5151 * C505 + C5152 * C32001 -
            (C113 * C1378 + C31856 * C1390) * C506 -
            (C113 * C1391 + C31856 * C1405) * C31990 +
            (C113 * C1379 + C31856 * C1392) * C507 +
            (C113 * C1393 + C31856 * C1406) * C31966) *
               C31615 * C5023) *
              C31660 * C299 +
          ((C592 - (C550 + C549) + C593 - C594 - C595) * C31615 * C5021 +
           (C2937 - (C2938 + C2939) + C2940 - C2941 - C2942) * C31615 * C5022 +
           (C1698 * C506 - (C372 * C32001 + C371 * C505) + C1699 * C31990 -
            (C113 * C1381 + C31856 * C1396) * C507 -
            (C113 * C1397 + C31856 * C1408) * C31966) *
               C31615 * C5023) *
              C31660 * C300 +
          (C607 * C31615 * C5021 +
           (C2945 + C2944 - C2943 - C2946 + C2947 + C2948) * C31615 * C5022 +
           (C373 * C505 + C374 * C32001 - C1700 * C506 - C1701 * C31990 +
            (C113 * C1383 + C31856 * C1400) * C507 +
            (C113 * C1401 + C31856 * C1410) * C31966) *
               C31615 * C5023) *
              C31660 * C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C505 +
            (C113 * C123 + C31856 * C136) * C32001 -
            (C113 * C508 + C31856 * C518) * C506 -
            (C113 * C519 + C31856 * C538) * C31990 +
            (C113 * C509 + C31856 * C520) * C507 +
            (C113 * C521 + C31856 * C539) * C31966) *
               C31615 * C5021 +
           (C5958 + C5959 - C5960 - C5961 + C5993 + C5994) * C31615 * C5022 +
           C6005 * C5023) *
              C1167 +
          ((C5960 - (C5959 + C5958) + C5961 - C5993 - C5994) * C31615 * C5021 +
           (C5968 - (C5967 + C5966) + C5969 - C5996 - C5997) * C31615 * C5022 +
           (C5998 - (C5976 + C5977) + C5999 - C6000 - C6001) * C31615 * C5023) *
              C1168 +
          (C6005 * C5021 +
           (C5977 + C5976 - C5998 - C5999 + C6000 + C6001) * C31615 * C5022 +
           (C5826 * C505 + C5827 * C32001 -
            (C113 * C5946 + C31856 * C5950) * C506 -
            (C113 * C5951 + C31856 * C5955) * C31990 +
            (C113 * C5947 + C31856 * C5952) * C507 +
            (C113 * C5953 + C31856 * C5956) * C31966) *
               C31615 * C5023) *
              C31963) *
         C31633) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C103 +
           (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
              C31845 * C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C103 +
           (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
              C31845 * C31660 * C708 +
          (C857 * C103 + (C841 + C840 - C839 - C842) * C104 +
           (C843 + C844 - C855 - C856) * C105) *
              C31845 * C31660 * C709 +
          (C858 * C103 + (C855 - (C844 + C843) + C856) * C104 +
           ((C113 * C826 + C31856 * C827) * C825 -
            (C172 * C31933 + C173 * C824) +
            (C113 * C828 + C31856 * C829) * C31764) *
               C105) *
              C31845 * C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C103 +
            (C831 + C832 - C833 - C834) * C104 + C857 * C105) *
               C31845 * C1167 +
           (((C113 * C1004 + C31856 * C1009) * C825 -
             ((C113 * C316 + C31856 * C334) * C31933 +
              (C113 * C304 + C31856 * C317) * C824) +
             (C113 * C1010 + C31856 * C1019) * C31764) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C824 +
             (C113 * C319 + C31856 * C335) * C31933 -
             (C113 * C1378 + C31856 * C1390) * C825 -
             (C113 * C1391 + C31856 * C1405) * C31764) *
                C103 +
            (C1686 + C1687 - C1702 - C1703) * C104 +
            (C1692 + C1693 - C1704 - C1705) * C105) *
               C31845 * C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C103 +
            (C837 - (C836 + C835) + C838) * C104 + C858 * C105) *
               C31845 * C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31845 * C1168 +
           ((C1702 - (C1687 + C1686) + C1703) * C103 +
            (C1704 - (C1693 + C1692) + C1705) * C104 +
            ((C113 * C1681 + C31856 * C1682) * C825 -
             (C377 * C31933 + C378 * C824) +
             (C113 * C1683 + C31856 * C1684) * C31764) *
                C105) *
               C31845 * C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C824 +
            (C113 * C123 + C31856 * C136) * C31933 -
            (C113 * C508 + C31856 * C518) * C825 -
            (C113 * C519 + C31856 * C538) * C31764) *
               C31615 * C5021 +
           (C5149 * C824 + C5150 * C31933 -
            (C113 * C1004 + C31856 * C1009) * C825 -
            (C113 * C1010 + C31856 * C1019) * C31764) *
               C31615 * C5022 +
           (C5151 * C824 + C5152 * C31933 -
            (C113 * C1378 + C31856 * C1390) * C825 -
            (C113 * C1391 + C31856 * C1405) * C31764) *
               C31615 * C5023) *
              C31660 * C707 +
          ((C833 - (C832 + C831) + C834) * C31615 * C5021 +
           (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
           (C1702 - (C1687 + C1686) + C1703) * C31615 * C5023) *
              C31660 * C708 +
          (C857 * C31615 * C5021 +
           (C1034 + C1033 - C1052 - C1053) * C31615 * C5022 +
           (C1692 + C1693 - C1704 - C1705) * C31615 * C5023) *
              C31660 * C709 +
          (C858 * C31615 * C5021 +
           (C1054 - (C1038 + C1037) + C1055) * C31615 * C5022 +
           ((C113 * C1681 + C31856 * C1682) * C825 -
            (C377 * C31933 + C378 * C824) +
            (C113 * C1683 + C31856 * C1684) * C31764) *
               C31615 * C5023) *
              C31660 * C31967)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C824 +
             (C113 * C123 + C31856 * C136) * C31933 -
             (C113 * C508 + C31856 * C518) * C825 -
             (C113 * C519 + C31856 * C538) * C31764) *
                C31615 * C5021 +
            (C5616 + C5617 - C5632 - C5633) * C31615 * C5022 + C6288 * C5023) *
               C1167 +
           ((C5632 - (C5617 + C5616) + C5633) * C31615 * C5021 +
            (C5634 - (C5623 + C5622) + C5635) * C31615 * C5022 +
            (C6269 - (C6270 + C6271) + C6272) * C31615 * C5023) *
               C1168 +
           (C6288 * C5021 + (C6271 + C6270 - C6269 - C6272) * C31615 * C5022 +
            (C5826 * C824 + C5827 * C31933 -
             (C113 * C5946 + C31856 * C5950) * C825 -
             (C113 * C5951 + C31856 * C5955) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31918 +
          (((C833 - (C832 + C831) + C834) * C31615 * C5021 +
            (C1050 - (C1027 + C1028) + C1051) * C31615 * C5022 +
            C6289 * C5023) *
               C1167 +
           ((C1028 + C1027 - C1050 - C1051) * C31615 * C5021 +
            (C1686 + C1687 - C1702 - C1703) * C31615 * C5022 +
            (C6274 + C6275 - C6286 - C6287) * C31615 * C5023) *
               C1168 +
           (C6289 * C5021 + (C6286 - (C6275 + C6274) + C6287) * C31615 * C5022 +
            ((C113 * C6263 + C31856 * C6264) * C825 -
             (C6114 * C31933 + C6115 * C824) +
             (C113 * C6265 + C31856 * C6266) * C31764) *
                C31615 * C5023) *
               C31963) *
              C31643)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C31660 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31845 *
              C31660 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C31660 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31845 *
              C31660 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31856 * C134) * C114 +
            (C113 * C135 + C31856 * C142) * C31677) *
               C105) *
              C31845 * C31660 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C32000 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C31988 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C31845 * C31988 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C32000 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 *
               C32000 -
           (((C113 * C328 + C31856 * C340) * C31677 +
             (C113 * C310 + C31856 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C31845 * C31988 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31845 * C1167 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31856 * C334) * C31677 +
             (C113 * C304 + C31856 * C317) * C114) *
                C103) *
               C31845 * C1168 +
           (((C113 * C305 + C31856 * C318) * C114 +
             (C113 * C319 + C31856 * C335) * C31677) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31845 * C31963) *
              C31997 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C716 * C105) *
               C31845 * C1168 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31845 * C1167 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C31845 * C31963) *
              C31984 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31845 * C1167 -
           ((C723 + C724) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C31845 * C1168 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31856 * C330) * C114 +
             (C113 * C331 + C31856 * C341) * C31677) *
                C105) *
               C31845 * C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31845 * C1235 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31856 * C334) * C31677 +
            (C113 * C304 + C31856 * C317) * C114) *
               C103) *
              C31845 * C1236 +
          (((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C31845 * C1237 -
          (((C113 * C1247 + C31856 * C1259) * C31677 +
            (C113 * C1241 + C31856 * C1248) * C114) *
               C105 +
           ((C113 * C1249 + C31856 * C1260) * C31677 +
            (C113 * C1242 + C31856 * C1250) * C114) *
               C104 +
           ((C113 * C1251 + C31856 * C1261) * C31677 +
            (C113 * C1243 + C31856 * C1252) * C114) *
               C103) *
              C31845 * C1238 +
          (((C113 * C1244 + C31856 * C1253) * C114 +
            (C113 * C1254 + C31856 * C1262) * C31677) *
               C103 +
           ((C113 * C1245 + C31856 * C1255) * C114 +
            (C113 * C1256 + C31856 * C1263) * C31677) *
               C104 +
           ((C113 * C1246 + C31856 * C1257) * C114 +
            (C113 * C1258 + C31856 * C1264) * C31677) *
               C105) *
              C31845 * C1239) *
         C31633) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           ((C113 * C304 + C31856 * C317) * C114 +
            (C113 * C316 + C31856 * C334) * C31677) *
               C31615 * C5022 +
           ((C113 * C305 + C31856 * C318) * C114 +
            (C113 * C319 + C31856 * C335) * C31677) *
               C31615 * C5023) *
              C31660 * C108 -
          ((C384 + C383) * C31615 * C5023 + (C381 + C382) * C31615 * C5022 +
           (C175 + C174) * C31615 * C5021) *
              C31660 * C109 +
          (C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
           C392 * C31615 * C5023) *
              C31660 * C110 -
          ((C389 + C390) * C31615 * C5023 + (C388 + C387) * C31615 * C5022 +
           C185 * C31615 * C5021) *
              C31660 * C111 +
          (C186 * C31615 * C5021 + (C724 + C723) * C31615 * C5022 +
           ((C113 * C311 + C31856 * C330) * C114 +
            (C113 * C331 + C31856 * C341) * C31677) *
               C31615 * C5023) *
              C31660 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C32000 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C31988 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C299 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C31988 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C32000 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C300 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C32000 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C31988 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31856 * C122) * C114 +
             (C113 * C123 + C31856 * C136) * C31677) *
                C31615 * C5021 +
            (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
               C1167 -
           ((C5160 + C5161) * C31615 * C5023 +
            (C5159 + C5158) * C31615 * C5022 +
            (C5157 + C5156) * C31615 * C5021) *
               C1168 +
           (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 +
            ((C113 * C1244 + C31856 * C1253) * C114 +
             (C113 * C1254 + C31856 * C1262) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31997 +
          (((C382 + C381) * C31615 * C5021 + (C383 + C384) * C31615 * C5022 +
            (C1535 + C1534) * C31615 * C5023) *
               C1168 -
           (C5155 * C5023 + (C381 + C382) * C31615 * C5022 +
            (C175 + C174) * C31615 * C5021) *
               C1167 -
           (((C113 * C1256 + C31856 * C1263) * C31677 +
             (C113 * C1245 + C31856 * C1255) * C114) *
                C31615 * C5023 +
            (C1534 + C1535) * C31615 * C5022 + C5155 * C5021) *
               C31963) *
              C31984 +
          ((C184 * C31615 * C5021 + (C380 + C379) * C31615 * C5022 +
            C5148 * C5023) *
               C1167 -
           ((C1532 + C1533) * C31615 * C5023 + (C386 + C385) * C31615 * C5022 +
            C391 * C31615 * C5021) *
               C1168 +
           (C5148 * C5021 + (C1533 + C1532) * C31615 * C5022 +
            ((C113 * C1246 + C31856 * C1257) * C114 +
             (C113 * C1258 + C31856 * C1264) * C31677) *
                C31615 * C5023) *
               C31963) *
              C31957)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31856 * C122) * C114 +
            (C113 * C123 + C31856 * C136) * C31677) *
               C31615 * C5021 +
           (C5156 + C5157) * C31615 * C5022 + C5163 * C5023) *
              C1235 -
          (C5825 * C5023 + (C5159 + C5158) * C31615 * C5022 +
           (C5157 + C5156) * C31615 * C5021) *
              C1236 +
          (C5163 * C5021 + (C5161 + C5160) * C31615 * C5022 + C5835 * C5023) *
              C1237 -
          ((C5832 + C5833) * C31615 * C5023 + (C5831 + C5830) * C31615 * C5022 +
           C5825 * C5021) *
              C1238 +
          (C5835 * C5021 + (C5833 + C5832) * C31615 * C5022 +
           ((C113 * C5808 + C31856 * C5811) * C114 +
            (C113 * C5812 + C31856 * C5814) * C31677) *
               C31615 * C5023) *
              C1239) *
         C31633) /
            (p * q * std::sqrt(p + q));
}
