/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_kit/hr.hpp"

namespace niedoida {
    namespace gto {
        void hr_43(const double X_AB,
                   const double Y_AB,
                   const double Z_AB,
                   const unsigned k_begin,
                   const unsigned k_end,
                   double* const b,
                   const unsigned s_12,
                   const unsigned s)
        {
            for (unsigned k = k_begin; k < k_end; ++k) {
                *(b + k * s_12 + 20 * s + 1) =
                    *(b + k * s_12 + 35 * s + 0) +
                    X_AB * *(b + k * s_12 + 20 * s + 0);
                *(b + k * s_12 + 20 * s + 2) =
                    *(b + k * s_12 + 36 * s + 0) +
                    Y_AB * *(b + k * s_12 + 20 * s + 0);
                *(b + k * s_12 + 20 * s + 3) =
                    *(b + k * s_12 + 37 * s + 0) +
                    Z_AB * *(b + k * s_12 + 20 * s + 0);
                *(b + k * s_12 + 21 * s + 1) =
                    *(b + k * s_12 + 36 * s + 0) +
                    X_AB * *(b + k * s_12 + 21 * s + 0);
                *(b + k * s_12 + 21 * s + 2) =
                    *(b + k * s_12 + 38 * s + 0) +
                    Y_AB * *(b + k * s_12 + 21 * s + 0);
                *(b + k * s_12 + 21 * s + 3) =
                    *(b + k * s_12 + 39 * s + 0) +
                    Z_AB * *(b + k * s_12 + 21 * s + 0);
                *(b + k * s_12 + 22 * s + 1) =
                    *(b + k * s_12 + 37 * s + 0) +
                    X_AB * *(b + k * s_12 + 22 * s + 0);
                *(b + k * s_12 + 22 * s + 2) =
                    *(b + k * s_12 + 39 * s + 0) +
                    Y_AB * *(b + k * s_12 + 22 * s + 0);
                *(b + k * s_12 + 22 * s + 3) =
                    *(b + k * s_12 + 40 * s + 0) +
                    Z_AB * *(b + k * s_12 + 22 * s + 0);
                *(b + k * s_12 + 23 * s + 1) =
                    *(b + k * s_12 + 38 * s + 0) +
                    X_AB * *(b + k * s_12 + 23 * s + 0);
                *(b + k * s_12 + 23 * s + 2) =
                    *(b + k * s_12 + 41 * s + 0) +
                    Y_AB * *(b + k * s_12 + 23 * s + 0);
                *(b + k * s_12 + 23 * s + 3) =
                    *(b + k * s_12 + 42 * s + 0) +
                    Z_AB * *(b + k * s_12 + 23 * s + 0);
                *(b + k * s_12 + 24 * s + 1) =
                    *(b + k * s_12 + 39 * s + 0) +
                    X_AB * *(b + k * s_12 + 24 * s + 0);
                *(b + k * s_12 + 24 * s + 2) =
                    *(b + k * s_12 + 42 * s + 0) +
                    Y_AB * *(b + k * s_12 + 24 * s + 0);
                *(b + k * s_12 + 24 * s + 3) =
                    *(b + k * s_12 + 43 * s + 0) +
                    Z_AB * *(b + k * s_12 + 24 * s + 0);
                *(b + k * s_12 + 25 * s + 1) =
                    *(b + k * s_12 + 40 * s + 0) +
                    X_AB * *(b + k * s_12 + 25 * s + 0);
                *(b + k * s_12 + 25 * s + 2) =
                    *(b + k * s_12 + 43 * s + 0) +
                    Y_AB * *(b + k * s_12 + 25 * s + 0);
                *(b + k * s_12 + 25 * s + 3) =
                    *(b + k * s_12 + 44 * s + 0) +
                    Z_AB * *(b + k * s_12 + 25 * s + 0);
                *(b + k * s_12 + 26 * s + 1) =
                    *(b + k * s_12 + 41 * s + 0) +
                    X_AB * *(b + k * s_12 + 26 * s + 0);
                *(b + k * s_12 + 26 * s + 2) =
                    *(b + k * s_12 + 45 * s + 0) +
                    Y_AB * *(b + k * s_12 + 26 * s + 0);
                *(b + k * s_12 + 26 * s + 3) =
                    *(b + k * s_12 + 46 * s + 0) +
                    Z_AB * *(b + k * s_12 + 26 * s + 0);
                *(b + k * s_12 + 27 * s + 1) =
                    *(b + k * s_12 + 42 * s + 0) +
                    X_AB * *(b + k * s_12 + 27 * s + 0);
                *(b + k * s_12 + 27 * s + 2) =
                    *(b + k * s_12 + 46 * s + 0) +
                    Y_AB * *(b + k * s_12 + 27 * s + 0);
                *(b + k * s_12 + 27 * s + 3) =
                    *(b + k * s_12 + 47 * s + 0) +
                    Z_AB * *(b + k * s_12 + 27 * s + 0);
                *(b + k * s_12 + 28 * s + 1) =
                    *(b + k * s_12 + 43 * s + 0) +
                    X_AB * *(b + k * s_12 + 28 * s + 0);
                *(b + k * s_12 + 28 * s + 2) =
                    *(b + k * s_12 + 47 * s + 0) +
                    Y_AB * *(b + k * s_12 + 28 * s + 0);
                *(b + k * s_12 + 28 * s + 3) =
                    *(b + k * s_12 + 48 * s + 0) +
                    Z_AB * *(b + k * s_12 + 28 * s + 0);
                *(b + k * s_12 + 29 * s + 1) =
                    *(b + k * s_12 + 44 * s + 0) +
                    X_AB * *(b + k * s_12 + 29 * s + 0);
                *(b + k * s_12 + 29 * s + 2) =
                    *(b + k * s_12 + 48 * s + 0) +
                    Y_AB * *(b + k * s_12 + 29 * s + 0);
                *(b + k * s_12 + 29 * s + 3) =
                    *(b + k * s_12 + 49 * s + 0) +
                    Z_AB * *(b + k * s_12 + 29 * s + 0);
                *(b + k * s_12 + 30 * s + 1) =
                    *(b + k * s_12 + 45 * s + 0) +
                    X_AB * *(b + k * s_12 + 30 * s + 0);
                *(b + k * s_12 + 30 * s + 2) =
                    *(b + k * s_12 + 50 * s + 0) +
                    Y_AB * *(b + k * s_12 + 30 * s + 0);
                *(b + k * s_12 + 30 * s + 3) =
                    *(b + k * s_12 + 51 * s + 0) +
                    Z_AB * *(b + k * s_12 + 30 * s + 0);
                *(b + k * s_12 + 31 * s + 1) =
                    *(b + k * s_12 + 46 * s + 0) +
                    X_AB * *(b + k * s_12 + 31 * s + 0);
                *(b + k * s_12 + 31 * s + 2) =
                    *(b + k * s_12 + 51 * s + 0) +
                    Y_AB * *(b + k * s_12 + 31 * s + 0);
                *(b + k * s_12 + 31 * s + 3) =
                    *(b + k * s_12 + 52 * s + 0) +
                    Z_AB * *(b + k * s_12 + 31 * s + 0);
                *(b + k * s_12 + 32 * s + 1) =
                    *(b + k * s_12 + 47 * s + 0) +
                    X_AB * *(b + k * s_12 + 32 * s + 0);
                *(b + k * s_12 + 32 * s + 2) =
                    *(b + k * s_12 + 52 * s + 0) +
                    Y_AB * *(b + k * s_12 + 32 * s + 0);
                *(b + k * s_12 + 32 * s + 3) =
                    *(b + k * s_12 + 53 * s + 0) +
                    Z_AB * *(b + k * s_12 + 32 * s + 0);
                *(b + k * s_12 + 33 * s + 1) =
                    *(b + k * s_12 + 48 * s + 0) +
                    X_AB * *(b + k * s_12 + 33 * s + 0);
                *(b + k * s_12 + 33 * s + 2) =
                    *(b + k * s_12 + 53 * s + 0) +
                    Y_AB * *(b + k * s_12 + 33 * s + 0);
                *(b + k * s_12 + 33 * s + 3) =
                    *(b + k * s_12 + 54 * s + 0) +
                    Z_AB * *(b + k * s_12 + 33 * s + 0);
                *(b + k * s_12 + 34 * s + 1) =
                    *(b + k * s_12 + 49 * s + 0) +
                    X_AB * *(b + k * s_12 + 34 * s + 0);
                *(b + k * s_12 + 34 * s + 2) =
                    *(b + k * s_12 + 54 * s + 0) +
                    Y_AB * *(b + k * s_12 + 34 * s + 0);
                *(b + k * s_12 + 34 * s + 3) =
                    *(b + k * s_12 + 55 * s + 0) +
                    Z_AB * *(b + k * s_12 + 34 * s + 0);
                *(b + k * s_12 + 35 * s + 1) =
                    *(b + k * s_12 + 56 * s + 0) +
                    X_AB * *(b + k * s_12 + 35 * s + 0);
                *(b + k * s_12 + 35 * s + 2) =
                    *(b + k * s_12 + 57 * s + 0) +
                    Y_AB * *(b + k * s_12 + 35 * s + 0);
                *(b + k * s_12 + 35 * s + 3) =
                    *(b + k * s_12 + 58 * s + 0) +
                    Z_AB * *(b + k * s_12 + 35 * s + 0);
                *(b + k * s_12 + 36 * s + 1) =
                    *(b + k * s_12 + 57 * s + 0) +
                    X_AB * *(b + k * s_12 + 36 * s + 0);
                *(b + k * s_12 + 36 * s + 2) =
                    *(b + k * s_12 + 59 * s + 0) +
                    Y_AB * *(b + k * s_12 + 36 * s + 0);
                *(b + k * s_12 + 36 * s + 3) =
                    *(b + k * s_12 + 60 * s + 0) +
                    Z_AB * *(b + k * s_12 + 36 * s + 0);
                *(b + k * s_12 + 37 * s + 1) =
                    *(b + k * s_12 + 58 * s + 0) +
                    X_AB * *(b + k * s_12 + 37 * s + 0);
                *(b + k * s_12 + 37 * s + 2) =
                    *(b + k * s_12 + 60 * s + 0) +
                    Y_AB * *(b + k * s_12 + 37 * s + 0);
                *(b + k * s_12 + 37 * s + 3) =
                    *(b + k * s_12 + 61 * s + 0) +
                    Z_AB * *(b + k * s_12 + 37 * s + 0);
                *(b + k * s_12 + 38 * s + 1) =
                    *(b + k * s_12 + 59 * s + 0) +
                    X_AB * *(b + k * s_12 + 38 * s + 0);
                *(b + k * s_12 + 38 * s + 2) =
                    *(b + k * s_12 + 62 * s + 0) +
                    Y_AB * *(b + k * s_12 + 38 * s + 0);
                *(b + k * s_12 + 38 * s + 3) =
                    *(b + k * s_12 + 63 * s + 0) +
                    Z_AB * *(b + k * s_12 + 38 * s + 0);
                *(b + k * s_12 + 39 * s + 1) =
                    *(b + k * s_12 + 60 * s + 0) +
                    X_AB * *(b + k * s_12 + 39 * s + 0);
                *(b + k * s_12 + 39 * s + 2) =
                    *(b + k * s_12 + 63 * s + 0) +
                    Y_AB * *(b + k * s_12 + 39 * s + 0);
                *(b + k * s_12 + 39 * s + 3) =
                    *(b + k * s_12 + 64 * s + 0) +
                    Z_AB * *(b + k * s_12 + 39 * s + 0);
                *(b + k * s_12 + 40 * s + 1) =
                    *(b + k * s_12 + 61 * s + 0) +
                    X_AB * *(b + k * s_12 + 40 * s + 0);
                *(b + k * s_12 + 40 * s + 2) =
                    *(b + k * s_12 + 64 * s + 0) +
                    Y_AB * *(b + k * s_12 + 40 * s + 0);
                *(b + k * s_12 + 40 * s + 3) =
                    *(b + k * s_12 + 65 * s + 0) +
                    Z_AB * *(b + k * s_12 + 40 * s + 0);
                *(b + k * s_12 + 41 * s + 1) =
                    *(b + k * s_12 + 62 * s + 0) +
                    X_AB * *(b + k * s_12 + 41 * s + 0);
                *(b + k * s_12 + 41 * s + 2) =
                    *(b + k * s_12 + 66 * s + 0) +
                    Y_AB * *(b + k * s_12 + 41 * s + 0);
                *(b + k * s_12 + 41 * s + 3) =
                    *(b + k * s_12 + 67 * s + 0) +
                    Z_AB * *(b + k * s_12 + 41 * s + 0);
                *(b + k * s_12 + 42 * s + 1) =
                    *(b + k * s_12 + 63 * s + 0) +
                    X_AB * *(b + k * s_12 + 42 * s + 0);
                *(b + k * s_12 + 42 * s + 2) =
                    *(b + k * s_12 + 67 * s + 0) +
                    Y_AB * *(b + k * s_12 + 42 * s + 0);
                *(b + k * s_12 + 42 * s + 3) =
                    *(b + k * s_12 + 68 * s + 0) +
                    Z_AB * *(b + k * s_12 + 42 * s + 0);
                *(b + k * s_12 + 43 * s + 1) =
                    *(b + k * s_12 + 64 * s + 0) +
                    X_AB * *(b + k * s_12 + 43 * s + 0);
                *(b + k * s_12 + 43 * s + 2) =
                    *(b + k * s_12 + 68 * s + 0) +
                    Y_AB * *(b + k * s_12 + 43 * s + 0);
                *(b + k * s_12 + 43 * s + 3) =
                    *(b + k * s_12 + 69 * s + 0) +
                    Z_AB * *(b + k * s_12 + 43 * s + 0);
                *(b + k * s_12 + 44 * s + 1) =
                    *(b + k * s_12 + 65 * s + 0) +
                    X_AB * *(b + k * s_12 + 44 * s + 0);
                *(b + k * s_12 + 44 * s + 2) =
                    *(b + k * s_12 + 69 * s + 0) +
                    Y_AB * *(b + k * s_12 + 44 * s + 0);
                *(b + k * s_12 + 44 * s + 3) =
                    *(b + k * s_12 + 70 * s + 0) +
                    Z_AB * *(b + k * s_12 + 44 * s + 0);
                *(b + k * s_12 + 45 * s + 1) =
                    *(b + k * s_12 + 66 * s + 0) +
                    X_AB * *(b + k * s_12 + 45 * s + 0);
                *(b + k * s_12 + 45 * s + 2) =
                    *(b + k * s_12 + 71 * s + 0) +
                    Y_AB * *(b + k * s_12 + 45 * s + 0);
                *(b + k * s_12 + 45 * s + 3) =
                    *(b + k * s_12 + 72 * s + 0) +
                    Z_AB * *(b + k * s_12 + 45 * s + 0);
                *(b + k * s_12 + 46 * s + 1) =
                    *(b + k * s_12 + 67 * s + 0) +
                    X_AB * *(b + k * s_12 + 46 * s + 0);
                *(b + k * s_12 + 46 * s + 2) =
                    *(b + k * s_12 + 72 * s + 0) +
                    Y_AB * *(b + k * s_12 + 46 * s + 0);
                *(b + k * s_12 + 46 * s + 3) =
                    *(b + k * s_12 + 73 * s + 0) +
                    Z_AB * *(b + k * s_12 + 46 * s + 0);
                *(b + k * s_12 + 47 * s + 1) =
                    *(b + k * s_12 + 68 * s + 0) +
                    X_AB * *(b + k * s_12 + 47 * s + 0);
                *(b + k * s_12 + 47 * s + 2) =
                    *(b + k * s_12 + 73 * s + 0) +
                    Y_AB * *(b + k * s_12 + 47 * s + 0);
                *(b + k * s_12 + 47 * s + 3) =
                    *(b + k * s_12 + 74 * s + 0) +
                    Z_AB * *(b + k * s_12 + 47 * s + 0);
                *(b + k * s_12 + 48 * s + 1) =
                    *(b + k * s_12 + 69 * s + 0) +
                    X_AB * *(b + k * s_12 + 48 * s + 0);
                *(b + k * s_12 + 48 * s + 2) =
                    *(b + k * s_12 + 74 * s + 0) +
                    Y_AB * *(b + k * s_12 + 48 * s + 0);
                *(b + k * s_12 + 48 * s + 3) =
                    *(b + k * s_12 + 75 * s + 0) +
                    Z_AB * *(b + k * s_12 + 48 * s + 0);
                *(b + k * s_12 + 49 * s + 1) =
                    *(b + k * s_12 + 70 * s + 0) +
                    X_AB * *(b + k * s_12 + 49 * s + 0);
                *(b + k * s_12 + 49 * s + 2) =
                    *(b + k * s_12 + 75 * s + 0) +
                    Y_AB * *(b + k * s_12 + 49 * s + 0);
                *(b + k * s_12 + 49 * s + 3) =
                    *(b + k * s_12 + 76 * s + 0) +
                    Z_AB * *(b + k * s_12 + 49 * s + 0);
                *(b + k * s_12 + 50 * s + 1) =
                    *(b + k * s_12 + 71 * s + 0) +
                    X_AB * *(b + k * s_12 + 50 * s + 0);
                *(b + k * s_12 + 50 * s + 2) =
                    *(b + k * s_12 + 77 * s + 0) +
                    Y_AB * *(b + k * s_12 + 50 * s + 0);
                *(b + k * s_12 + 50 * s + 3) =
                    *(b + k * s_12 + 78 * s + 0) +
                    Z_AB * *(b + k * s_12 + 50 * s + 0);
                *(b + k * s_12 + 51 * s + 1) =
                    *(b + k * s_12 + 72 * s + 0) +
                    X_AB * *(b + k * s_12 + 51 * s + 0);
                *(b + k * s_12 + 51 * s + 2) =
                    *(b + k * s_12 + 78 * s + 0) +
                    Y_AB * *(b + k * s_12 + 51 * s + 0);
                *(b + k * s_12 + 51 * s + 3) =
                    *(b + k * s_12 + 79 * s + 0) +
                    Z_AB * *(b + k * s_12 + 51 * s + 0);
                *(b + k * s_12 + 52 * s + 1) =
                    *(b + k * s_12 + 73 * s + 0) +
                    X_AB * *(b + k * s_12 + 52 * s + 0);
                *(b + k * s_12 + 52 * s + 2) =
                    *(b + k * s_12 + 79 * s + 0) +
                    Y_AB * *(b + k * s_12 + 52 * s + 0);
                *(b + k * s_12 + 52 * s + 3) =
                    *(b + k * s_12 + 80 * s + 0) +
                    Z_AB * *(b + k * s_12 + 52 * s + 0);
                *(b + k * s_12 + 53 * s + 1) =
                    *(b + k * s_12 + 74 * s + 0) +
                    X_AB * *(b + k * s_12 + 53 * s + 0);
                *(b + k * s_12 + 53 * s + 2) =
                    *(b + k * s_12 + 80 * s + 0) +
                    Y_AB * *(b + k * s_12 + 53 * s + 0);
                *(b + k * s_12 + 53 * s + 3) =
                    *(b + k * s_12 + 81 * s + 0) +
                    Z_AB * *(b + k * s_12 + 53 * s + 0);
                *(b + k * s_12 + 54 * s + 1) =
                    *(b + k * s_12 + 75 * s + 0) +
                    X_AB * *(b + k * s_12 + 54 * s + 0);
                *(b + k * s_12 + 54 * s + 2) =
                    *(b + k * s_12 + 81 * s + 0) +
                    Y_AB * *(b + k * s_12 + 54 * s + 0);
                *(b + k * s_12 + 54 * s + 3) =
                    *(b + k * s_12 + 82 * s + 0) +
                    Z_AB * *(b + k * s_12 + 54 * s + 0);
                *(b + k * s_12 + 55 * s + 1) =
                    *(b + k * s_12 + 76 * s + 0) +
                    X_AB * *(b + k * s_12 + 55 * s + 0);
                *(b + k * s_12 + 55 * s + 2) =
                    *(b + k * s_12 + 82 * s + 0) +
                    Y_AB * *(b + k * s_12 + 55 * s + 0);
                *(b + k * s_12 + 55 * s + 3) =
                    *(b + k * s_12 + 83 * s + 0) +
                    Z_AB * *(b + k * s_12 + 55 * s + 0);
                *(b + k * s_12 + 56 * s + 1) =
                    *(b + k * s_12 + 84 * s + 0) +
                    X_AB * *(b + k * s_12 + 56 * s + 0);
                *(b + k * s_12 + 57 * s + 1) =
                    *(b + k * s_12 + 85 * s + 0) +
                    X_AB * *(b + k * s_12 + 57 * s + 0);
                *(b + k * s_12 + 57 * s + 2) =
                    *(b + k * s_12 + 87 * s + 0) +
                    Y_AB * *(b + k * s_12 + 57 * s + 0);
                *(b + k * s_12 + 58 * s + 1) =
                    *(b + k * s_12 + 86 * s + 0) +
                    X_AB * *(b + k * s_12 + 58 * s + 0);
                *(b + k * s_12 + 58 * s + 3) =
                    *(b + k * s_12 + 89 * s + 0) +
                    Z_AB * *(b + k * s_12 + 58 * s + 0);
                *(b + k * s_12 + 59 * s + 1) =
                    *(b + k * s_12 + 87 * s + 0) +
                    X_AB * *(b + k * s_12 + 59 * s + 0);
                *(b + k * s_12 + 59 * s + 2) =
                    *(b + k * s_12 + 90 * s + 0) +
                    Y_AB * *(b + k * s_12 + 59 * s + 0);
                *(b + k * s_12 + 60 * s + 1) =
                    *(b + k * s_12 + 88 * s + 0) +
                    X_AB * *(b + k * s_12 + 60 * s + 0);
                *(b + k * s_12 + 60 * s + 2) =
                    *(b + k * s_12 + 91 * s + 0) +
                    Y_AB * *(b + k * s_12 + 60 * s + 0);
                *(b + k * s_12 + 60 * s + 3) =
                    *(b + k * s_12 + 92 * s + 0) +
                    Z_AB * *(b + k * s_12 + 60 * s + 0);
                *(b + k * s_12 + 61 * s + 1) =
                    *(b + k * s_12 + 89 * s + 0) +
                    X_AB * *(b + k * s_12 + 61 * s + 0);
                *(b + k * s_12 + 61 * s + 3) =
                    *(b + k * s_12 + 93 * s + 0) +
                    Z_AB * *(b + k * s_12 + 61 * s + 0);
                *(b + k * s_12 + 62 * s + 1) =
                    *(b + k * s_12 + 90 * s + 0) +
                    X_AB * *(b + k * s_12 + 62 * s + 0);
                *(b + k * s_12 + 62 * s + 2) =
                    *(b + k * s_12 + 94 * s + 0) +
                    Y_AB * *(b + k * s_12 + 62 * s + 0);
                *(b + k * s_12 + 63 * s + 1) =
                    *(b + k * s_12 + 91 * s + 0) +
                    X_AB * *(b + k * s_12 + 63 * s + 0);
                *(b + k * s_12 + 63 * s + 2) =
                    *(b + k * s_12 + 95 * s + 0) +
                    Y_AB * *(b + k * s_12 + 63 * s + 0);
                *(b + k * s_12 + 63 * s + 3) =
                    *(b + k * s_12 + 96 * s + 0) +
                    Z_AB * *(b + k * s_12 + 63 * s + 0);
                *(b + k * s_12 + 64 * s + 1) =
                    *(b + k * s_12 + 92 * s + 0) +
                    X_AB * *(b + k * s_12 + 64 * s + 0);
                *(b + k * s_12 + 64 * s + 2) =
                    *(b + k * s_12 + 96 * s + 0) +
                    Y_AB * *(b + k * s_12 + 64 * s + 0);
                *(b + k * s_12 + 64 * s + 3) =
                    *(b + k * s_12 + 97 * s + 0) +
                    Z_AB * *(b + k * s_12 + 64 * s + 0);
                *(b + k * s_12 + 65 * s + 1) =
                    *(b + k * s_12 + 93 * s + 0) +
                    X_AB * *(b + k * s_12 + 65 * s + 0);
                *(b + k * s_12 + 65 * s + 3) =
                    *(b + k * s_12 + 98 * s + 0) +
                    Z_AB * *(b + k * s_12 + 65 * s + 0);
                *(b + k * s_12 + 66 * s + 1) =
                    *(b + k * s_12 + 94 * s + 0) +
                    X_AB * *(b + k * s_12 + 66 * s + 0);
                *(b + k * s_12 + 66 * s + 2) =
                    *(b + k * s_12 + 99 * s + 0) +
                    Y_AB * *(b + k * s_12 + 66 * s + 0);
                *(b + k * s_12 + 67 * s + 1) =
                    *(b + k * s_12 + 95 * s + 0) +
                    X_AB * *(b + k * s_12 + 67 * s + 0);
                *(b + k * s_12 + 67 * s + 2) =
                    *(b + k * s_12 + 100 * s + 0) +
                    Y_AB * *(b + k * s_12 + 67 * s + 0);
                *(b + k * s_12 + 67 * s + 3) =
                    *(b + k * s_12 + 101 * s + 0) +
                    Z_AB * *(b + k * s_12 + 67 * s + 0);
                *(b + k * s_12 + 68 * s + 1) =
                    *(b + k * s_12 + 96 * s + 0) +
                    X_AB * *(b + k * s_12 + 68 * s + 0);
                *(b + k * s_12 + 68 * s + 2) =
                    *(b + k * s_12 + 101 * s + 0) +
                    Y_AB * *(b + k * s_12 + 68 * s + 0);
                *(b + k * s_12 + 68 * s + 3) =
                    *(b + k * s_12 + 102 * s + 0) +
                    Z_AB * *(b + k * s_12 + 68 * s + 0);
                *(b + k * s_12 + 69 * s + 1) =
                    *(b + k * s_12 + 97 * s + 0) +
                    X_AB * *(b + k * s_12 + 69 * s + 0);
                *(b + k * s_12 + 69 * s + 2) =
                    *(b + k * s_12 + 102 * s + 0) +
                    Y_AB * *(b + k * s_12 + 69 * s + 0);
                *(b + k * s_12 + 69 * s + 3) =
                    *(b + k * s_12 + 103 * s + 0) +
                    Z_AB * *(b + k * s_12 + 69 * s + 0);
                *(b + k * s_12 + 70 * s + 1) =
                    *(b + k * s_12 + 98 * s + 0) +
                    X_AB * *(b + k * s_12 + 70 * s + 0);
                *(b + k * s_12 + 70 * s + 3) =
                    *(b + k * s_12 + 104 * s + 0) +
                    Z_AB * *(b + k * s_12 + 70 * s + 0);
                *(b + k * s_12 + 71 * s + 1) =
                    *(b + k * s_12 + 99 * s + 0) +
                    X_AB * *(b + k * s_12 + 71 * s + 0);
                *(b + k * s_12 + 71 * s + 2) =
                    *(b + k * s_12 + 105 * s + 0) +
                    Y_AB * *(b + k * s_12 + 71 * s + 0);
                *(b + k * s_12 + 72 * s + 1) =
                    *(b + k * s_12 + 100 * s + 0) +
                    X_AB * *(b + k * s_12 + 72 * s + 0);
                *(b + k * s_12 + 72 * s + 2) =
                    *(b + k * s_12 + 106 * s + 0) +
                    Y_AB * *(b + k * s_12 + 72 * s + 0);
                *(b + k * s_12 + 72 * s + 3) =
                    *(b + k * s_12 + 107 * s + 0) +
                    Z_AB * *(b + k * s_12 + 72 * s + 0);
                *(b + k * s_12 + 73 * s + 1) =
                    *(b + k * s_12 + 101 * s + 0) +
                    X_AB * *(b + k * s_12 + 73 * s + 0);
                *(b + k * s_12 + 73 * s + 2) =
                    *(b + k * s_12 + 107 * s + 0) +
                    Y_AB * *(b + k * s_12 + 73 * s + 0);
                *(b + k * s_12 + 73 * s + 3) =
                    *(b + k * s_12 + 108 * s + 0) +
                    Z_AB * *(b + k * s_12 + 73 * s + 0);
                *(b + k * s_12 + 74 * s + 1) =
                    *(b + k * s_12 + 102 * s + 0) +
                    X_AB * *(b + k * s_12 + 74 * s + 0);
                *(b + k * s_12 + 74 * s + 2) =
                    *(b + k * s_12 + 108 * s + 0) +
                    Y_AB * *(b + k * s_12 + 74 * s + 0);
                *(b + k * s_12 + 74 * s + 3) =
                    *(b + k * s_12 + 109 * s + 0) +
                    Z_AB * *(b + k * s_12 + 74 * s + 0);
                *(b + k * s_12 + 75 * s + 1) =
                    *(b + k * s_12 + 103 * s + 0) +
                    X_AB * *(b + k * s_12 + 75 * s + 0);
                *(b + k * s_12 + 75 * s + 2) =
                    *(b + k * s_12 + 109 * s + 0) +
                    Y_AB * *(b + k * s_12 + 75 * s + 0);
                *(b + k * s_12 + 75 * s + 3) =
                    *(b + k * s_12 + 110 * s + 0) +
                    Z_AB * *(b + k * s_12 + 75 * s + 0);
                *(b + k * s_12 + 76 * s + 1) =
                    *(b + k * s_12 + 104 * s + 0) +
                    X_AB * *(b + k * s_12 + 76 * s + 0);
                *(b + k * s_12 + 76 * s + 3) =
                    *(b + k * s_12 + 111 * s + 0) +
                    Z_AB * *(b + k * s_12 + 76 * s + 0);
                *(b + k * s_12 + 77 * s + 2) =
                    *(b + k * s_12 + 112 * s + 0) +
                    Y_AB * *(b + k * s_12 + 77 * s + 0);
                *(b + k * s_12 + 78 * s + 1) =
                    *(b + k * s_12 + 106 * s + 0) +
                    X_AB * *(b + k * s_12 + 78 * s + 0);
                *(b + k * s_12 + 78 * s + 2) =
                    *(b + k * s_12 + 113 * s + 0) +
                    Y_AB * *(b + k * s_12 + 78 * s + 0);
                *(b + k * s_12 + 78 * s + 3) =
                    *(b + k * s_12 + 114 * s + 0) +
                    Z_AB * *(b + k * s_12 + 78 * s + 0);
                *(b + k * s_12 + 79 * s + 1) =
                    *(b + k * s_12 + 107 * s + 0) +
                    X_AB * *(b + k * s_12 + 79 * s + 0);
                *(b + k * s_12 + 79 * s + 2) =
                    *(b + k * s_12 + 114 * s + 0) +
                    Y_AB * *(b + k * s_12 + 79 * s + 0);
                *(b + k * s_12 + 79 * s + 3) =
                    *(b + k * s_12 + 115 * s + 0) +
                    Z_AB * *(b + k * s_12 + 79 * s + 0);
                *(b + k * s_12 + 80 * s + 1) =
                    *(b + k * s_12 + 108 * s + 0) +
                    X_AB * *(b + k * s_12 + 80 * s + 0);
                *(b + k * s_12 + 80 * s + 2) =
                    *(b + k * s_12 + 115 * s + 0) +
                    Y_AB * *(b + k * s_12 + 80 * s + 0);
                *(b + k * s_12 + 80 * s + 3) =
                    *(b + k * s_12 + 116 * s + 0) +
                    Z_AB * *(b + k * s_12 + 80 * s + 0);
                *(b + k * s_12 + 81 * s + 1) =
                    *(b + k * s_12 + 109 * s + 0) +
                    X_AB * *(b + k * s_12 + 81 * s + 0);
                *(b + k * s_12 + 81 * s + 2) =
                    *(b + k * s_12 + 116 * s + 0) +
                    Y_AB * *(b + k * s_12 + 81 * s + 0);
                *(b + k * s_12 + 81 * s + 3) =
                    *(b + k * s_12 + 117 * s + 0) +
                    Z_AB * *(b + k * s_12 + 81 * s + 0);
                *(b + k * s_12 + 82 * s + 1) =
                    *(b + k * s_12 + 110 * s + 0) +
                    X_AB * *(b + k * s_12 + 82 * s + 0);
                *(b + k * s_12 + 82 * s + 2) =
                    *(b + k * s_12 + 117 * s + 0) +
                    Y_AB * *(b + k * s_12 + 82 * s + 0);
                *(b + k * s_12 + 82 * s + 3) =
                    *(b + k * s_12 + 118 * s + 0) +
                    Z_AB * *(b + k * s_12 + 82 * s + 0);
                *(b + k * s_12 + 83 * s + 3) =
                    *(b + k * s_12 + 119 * s + 0) +
                    Z_AB * *(b + k * s_12 + 83 * s + 0);
                *(b + k * s_12 + 20 * s + 4) =
                    *(b + k * s_12 + 35 * s + 1) +
                    X_AB * *(b + k * s_12 + 20 * s + 1);
                *(b + k * s_12 + 20 * s + 5) =
                    *(b + k * s_12 + 36 * s + 1) +
                    Y_AB * *(b + k * s_12 + 20 * s + 1);
                *(b + k * s_12 + 20 * s + 7) =
                    *(b + k * s_12 + 36 * s + 2) +
                    Y_AB * *(b + k * s_12 + 20 * s + 2);
                *(b + k * s_12 + 20 * s + 9) =
                    *(b + k * s_12 + 37 * s + 3) +
                    Z_AB * *(b + k * s_12 + 20 * s + 3);
                *(b + k * s_12 + 21 * s + 4) =
                    *(b + k * s_12 + 36 * s + 1) +
                    X_AB * *(b + k * s_12 + 21 * s + 1);
                *(b + k * s_12 + 21 * s + 5) =
                    *(b + k * s_12 + 38 * s + 1) +
                    Y_AB * *(b + k * s_12 + 21 * s + 1);
                *(b + k * s_12 + 21 * s + 7) =
                    *(b + k * s_12 + 38 * s + 2) +
                    Y_AB * *(b + k * s_12 + 21 * s + 2);
                *(b + k * s_12 + 21 * s + 9) =
                    *(b + k * s_12 + 39 * s + 3) +
                    Z_AB * *(b + k * s_12 + 21 * s + 3);
                *(b + k * s_12 + 22 * s + 4) =
                    *(b + k * s_12 + 37 * s + 1) +
                    X_AB * *(b + k * s_12 + 22 * s + 1);
                *(b + k * s_12 + 22 * s + 5) =
                    *(b + k * s_12 + 39 * s + 1) +
                    Y_AB * *(b + k * s_12 + 22 * s + 1);
                *(b + k * s_12 + 22 * s + 7) =
                    *(b + k * s_12 + 39 * s + 2) +
                    Y_AB * *(b + k * s_12 + 22 * s + 2);
                *(b + k * s_12 + 22 * s + 9) =
                    *(b + k * s_12 + 40 * s + 3) +
                    Z_AB * *(b + k * s_12 + 22 * s + 3);
                *(b + k * s_12 + 23 * s + 4) =
                    *(b + k * s_12 + 38 * s + 1) +
                    X_AB * *(b + k * s_12 + 23 * s + 1);
                *(b + k * s_12 + 23 * s + 5) =
                    *(b + k * s_12 + 41 * s + 1) +
                    Y_AB * *(b + k * s_12 + 23 * s + 1);
                *(b + k * s_12 + 23 * s + 7) =
                    *(b + k * s_12 + 41 * s + 2) +
                    Y_AB * *(b + k * s_12 + 23 * s + 2);
                *(b + k * s_12 + 23 * s + 9) =
                    *(b + k * s_12 + 42 * s + 3) +
                    Z_AB * *(b + k * s_12 + 23 * s + 3);
                *(b + k * s_12 + 24 * s + 4) =
                    *(b + k * s_12 + 39 * s + 1) +
                    X_AB * *(b + k * s_12 + 24 * s + 1);
                *(b + k * s_12 + 24 * s + 5) =
                    *(b + k * s_12 + 42 * s + 1) +
                    Y_AB * *(b + k * s_12 + 24 * s + 1);
                *(b + k * s_12 + 24 * s + 7) =
                    *(b + k * s_12 + 42 * s + 2) +
                    Y_AB * *(b + k * s_12 + 24 * s + 2);
                *(b + k * s_12 + 24 * s + 9) =
                    *(b + k * s_12 + 43 * s + 3) +
                    Z_AB * *(b + k * s_12 + 24 * s + 3);
                *(b + k * s_12 + 25 * s + 4) =
                    *(b + k * s_12 + 40 * s + 1) +
                    X_AB * *(b + k * s_12 + 25 * s + 1);
                *(b + k * s_12 + 25 * s + 5) =
                    *(b + k * s_12 + 43 * s + 1) +
                    Y_AB * *(b + k * s_12 + 25 * s + 1);
                *(b + k * s_12 + 25 * s + 7) =
                    *(b + k * s_12 + 43 * s + 2) +
                    Y_AB * *(b + k * s_12 + 25 * s + 2);
                *(b + k * s_12 + 25 * s + 9) =
                    *(b + k * s_12 + 44 * s + 3) +
                    Z_AB * *(b + k * s_12 + 25 * s + 3);
                *(b + k * s_12 + 26 * s + 4) =
                    *(b + k * s_12 + 41 * s + 1) +
                    X_AB * *(b + k * s_12 + 26 * s + 1);
                *(b + k * s_12 + 26 * s + 5) =
                    *(b + k * s_12 + 45 * s + 1) +
                    Y_AB * *(b + k * s_12 + 26 * s + 1);
                *(b + k * s_12 + 26 * s + 7) =
                    *(b + k * s_12 + 45 * s + 2) +
                    Y_AB * *(b + k * s_12 + 26 * s + 2);
                *(b + k * s_12 + 26 * s + 9) =
                    *(b + k * s_12 + 46 * s + 3) +
                    Z_AB * *(b + k * s_12 + 26 * s + 3);
                *(b + k * s_12 + 27 * s + 4) =
                    *(b + k * s_12 + 42 * s + 1) +
                    X_AB * *(b + k * s_12 + 27 * s + 1);
                *(b + k * s_12 + 27 * s + 5) =
                    *(b + k * s_12 + 46 * s + 1) +
                    Y_AB * *(b + k * s_12 + 27 * s + 1);
                *(b + k * s_12 + 27 * s + 7) =
                    *(b + k * s_12 + 46 * s + 2) +
                    Y_AB * *(b + k * s_12 + 27 * s + 2);
                *(b + k * s_12 + 27 * s + 9) =
                    *(b + k * s_12 + 47 * s + 3) +
                    Z_AB * *(b + k * s_12 + 27 * s + 3);
                *(b + k * s_12 + 28 * s + 4) =
                    *(b + k * s_12 + 43 * s + 1) +
                    X_AB * *(b + k * s_12 + 28 * s + 1);
                *(b + k * s_12 + 28 * s + 5) =
                    *(b + k * s_12 + 47 * s + 1) +
                    Y_AB * *(b + k * s_12 + 28 * s + 1);
                *(b + k * s_12 + 28 * s + 7) =
                    *(b + k * s_12 + 47 * s + 2) +
                    Y_AB * *(b + k * s_12 + 28 * s + 2);
                *(b + k * s_12 + 28 * s + 9) =
                    *(b + k * s_12 + 48 * s + 3) +
                    Z_AB * *(b + k * s_12 + 28 * s + 3);
                *(b + k * s_12 + 29 * s + 4) =
                    *(b + k * s_12 + 44 * s + 1) +
                    X_AB * *(b + k * s_12 + 29 * s + 1);
                *(b + k * s_12 + 29 * s + 5) =
                    *(b + k * s_12 + 48 * s + 1) +
                    Y_AB * *(b + k * s_12 + 29 * s + 1);
                *(b + k * s_12 + 29 * s + 7) =
                    *(b + k * s_12 + 48 * s + 2) +
                    Y_AB * *(b + k * s_12 + 29 * s + 2);
                *(b + k * s_12 + 29 * s + 9) =
                    *(b + k * s_12 + 49 * s + 3) +
                    Z_AB * *(b + k * s_12 + 29 * s + 3);
                *(b + k * s_12 + 30 * s + 4) =
                    *(b + k * s_12 + 45 * s + 1) +
                    X_AB * *(b + k * s_12 + 30 * s + 1);
                *(b + k * s_12 + 30 * s + 5) =
                    *(b + k * s_12 + 50 * s + 1) +
                    Y_AB * *(b + k * s_12 + 30 * s + 1);
                *(b + k * s_12 + 30 * s + 7) =
                    *(b + k * s_12 + 50 * s + 2) +
                    Y_AB * *(b + k * s_12 + 30 * s + 2);
                *(b + k * s_12 + 30 * s + 9) =
                    *(b + k * s_12 + 51 * s + 3) +
                    Z_AB * *(b + k * s_12 + 30 * s + 3);
                *(b + k * s_12 + 31 * s + 4) =
                    *(b + k * s_12 + 46 * s + 1) +
                    X_AB * *(b + k * s_12 + 31 * s + 1);
                *(b + k * s_12 + 31 * s + 5) =
                    *(b + k * s_12 + 51 * s + 1) +
                    Y_AB * *(b + k * s_12 + 31 * s + 1);
                *(b + k * s_12 + 31 * s + 7) =
                    *(b + k * s_12 + 51 * s + 2) +
                    Y_AB * *(b + k * s_12 + 31 * s + 2);
                *(b + k * s_12 + 31 * s + 9) =
                    *(b + k * s_12 + 52 * s + 3) +
                    Z_AB * *(b + k * s_12 + 31 * s + 3);
                *(b + k * s_12 + 32 * s + 4) =
                    *(b + k * s_12 + 47 * s + 1) +
                    X_AB * *(b + k * s_12 + 32 * s + 1);
                *(b + k * s_12 + 32 * s + 5) =
                    *(b + k * s_12 + 52 * s + 1) +
                    Y_AB * *(b + k * s_12 + 32 * s + 1);
                *(b + k * s_12 + 32 * s + 7) =
                    *(b + k * s_12 + 52 * s + 2) +
                    Y_AB * *(b + k * s_12 + 32 * s + 2);
                *(b + k * s_12 + 32 * s + 9) =
                    *(b + k * s_12 + 53 * s + 3) +
                    Z_AB * *(b + k * s_12 + 32 * s + 3);
                *(b + k * s_12 + 33 * s + 4) =
                    *(b + k * s_12 + 48 * s + 1) +
                    X_AB * *(b + k * s_12 + 33 * s + 1);
                *(b + k * s_12 + 33 * s + 5) =
                    *(b + k * s_12 + 53 * s + 1) +
                    Y_AB * *(b + k * s_12 + 33 * s + 1);
                *(b + k * s_12 + 33 * s + 7) =
                    *(b + k * s_12 + 53 * s + 2) +
                    Y_AB * *(b + k * s_12 + 33 * s + 2);
                *(b + k * s_12 + 33 * s + 9) =
                    *(b + k * s_12 + 54 * s + 3) +
                    Z_AB * *(b + k * s_12 + 33 * s + 3);
                *(b + k * s_12 + 34 * s + 4) =
                    *(b + k * s_12 + 49 * s + 1) +
                    X_AB * *(b + k * s_12 + 34 * s + 1);
                *(b + k * s_12 + 34 * s + 5) =
                    *(b + k * s_12 + 54 * s + 1) +
                    Y_AB * *(b + k * s_12 + 34 * s + 1);
                *(b + k * s_12 + 34 * s + 7) =
                    *(b + k * s_12 + 54 * s + 2) +
                    Y_AB * *(b + k * s_12 + 34 * s + 2);
                *(b + k * s_12 + 34 * s + 9) =
                    *(b + k * s_12 + 55 * s + 3) +
                    Z_AB * *(b + k * s_12 + 34 * s + 3);
                *(b + k * s_12 + 35 * s + 4) =
                    *(b + k * s_12 + 56 * s + 1) +
                    X_AB * *(b + k * s_12 + 35 * s + 1);
                *(b + k * s_12 + 35 * s + 7) =
                    *(b + k * s_12 + 57 * s + 2) +
                    Y_AB * *(b + k * s_12 + 35 * s + 2);
                *(b + k * s_12 + 35 * s + 9) =
                    *(b + k * s_12 + 58 * s + 3) +
                    Z_AB * *(b + k * s_12 + 35 * s + 3);
                *(b + k * s_12 + 36 * s + 4) =
                    *(b + k * s_12 + 57 * s + 1) +
                    X_AB * *(b + k * s_12 + 36 * s + 1);
                *(b + k * s_12 + 36 * s + 7) =
                    *(b + k * s_12 + 59 * s + 2) +
                    Y_AB * *(b + k * s_12 + 36 * s + 2);
                *(b + k * s_12 + 36 * s + 9) =
                    *(b + k * s_12 + 60 * s + 3) +
                    Z_AB * *(b + k * s_12 + 36 * s + 3);
                *(b + k * s_12 + 37 * s + 4) =
                    *(b + k * s_12 + 58 * s + 1) +
                    X_AB * *(b + k * s_12 + 37 * s + 1);
                *(b + k * s_12 + 37 * s + 5) =
                    *(b + k * s_12 + 60 * s + 1) +
                    Y_AB * *(b + k * s_12 + 37 * s + 1);
                *(b + k * s_12 + 37 * s + 7) =
                    *(b + k * s_12 + 60 * s + 2) +
                    Y_AB * *(b + k * s_12 + 37 * s + 2);
                *(b + k * s_12 + 37 * s + 9) =
                    *(b + k * s_12 + 61 * s + 3) +
                    Z_AB * *(b + k * s_12 + 37 * s + 3);
                *(b + k * s_12 + 38 * s + 4) =
                    *(b + k * s_12 + 59 * s + 1) +
                    X_AB * *(b + k * s_12 + 38 * s + 1);
                *(b + k * s_12 + 38 * s + 7) =
                    *(b + k * s_12 + 62 * s + 2) +
                    Y_AB * *(b + k * s_12 + 38 * s + 2);
                *(b + k * s_12 + 38 * s + 9) =
                    *(b + k * s_12 + 63 * s + 3) +
                    Z_AB * *(b + k * s_12 + 38 * s + 3);
                *(b + k * s_12 + 39 * s + 4) =
                    *(b + k * s_12 + 60 * s + 1) +
                    X_AB * *(b + k * s_12 + 39 * s + 1);
                *(b + k * s_12 + 39 * s + 5) =
                    *(b + k * s_12 + 63 * s + 1) +
                    Y_AB * *(b + k * s_12 + 39 * s + 1);
                *(b + k * s_12 + 39 * s + 7) =
                    *(b + k * s_12 + 63 * s + 2) +
                    Y_AB * *(b + k * s_12 + 39 * s + 2);
                *(b + k * s_12 + 39 * s + 9) =
                    *(b + k * s_12 + 64 * s + 3) +
                    Z_AB * *(b + k * s_12 + 39 * s + 3);
                *(b + k * s_12 + 40 * s + 4) =
                    *(b + k * s_12 + 61 * s + 1) +
                    X_AB * *(b + k * s_12 + 40 * s + 1);
                *(b + k * s_12 + 40 * s + 5) =
                    *(b + k * s_12 + 64 * s + 1) +
                    Y_AB * *(b + k * s_12 + 40 * s + 1);
                *(b + k * s_12 + 40 * s + 7) =
                    *(b + k * s_12 + 64 * s + 2) +
                    Y_AB * *(b + k * s_12 + 40 * s + 2);
                *(b + k * s_12 + 40 * s + 9) =
                    *(b + k * s_12 + 65 * s + 3) +
                    Z_AB * *(b + k * s_12 + 40 * s + 3);
                *(b + k * s_12 + 41 * s + 4) =
                    *(b + k * s_12 + 62 * s + 1) +
                    X_AB * *(b + k * s_12 + 41 * s + 1);
                *(b + k * s_12 + 41 * s + 7) =
                    *(b + k * s_12 + 66 * s + 2) +
                    Y_AB * *(b + k * s_12 + 41 * s + 2);
                *(b + k * s_12 + 41 * s + 9) =
                    *(b + k * s_12 + 67 * s + 3) +
                    Z_AB * *(b + k * s_12 + 41 * s + 3);
                *(b + k * s_12 + 42 * s + 4) =
                    *(b + k * s_12 + 63 * s + 1) +
                    X_AB * *(b + k * s_12 + 42 * s + 1);
                *(b + k * s_12 + 42 * s + 5) =
                    *(b + k * s_12 + 67 * s + 1) +
                    Y_AB * *(b + k * s_12 + 42 * s + 1);
                *(b + k * s_12 + 42 * s + 7) =
                    *(b + k * s_12 + 67 * s + 2) +
                    Y_AB * *(b + k * s_12 + 42 * s + 2);
                *(b + k * s_12 + 42 * s + 9) =
                    *(b + k * s_12 + 68 * s + 3) +
                    Z_AB * *(b + k * s_12 + 42 * s + 3);
                *(b + k * s_12 + 43 * s + 4) =
                    *(b + k * s_12 + 64 * s + 1) +
                    X_AB * *(b + k * s_12 + 43 * s + 1);
                *(b + k * s_12 + 43 * s + 5) =
                    *(b + k * s_12 + 68 * s + 1) +
                    Y_AB * *(b + k * s_12 + 43 * s + 1);
                *(b + k * s_12 + 43 * s + 7) =
                    *(b + k * s_12 + 68 * s + 2) +
                    Y_AB * *(b + k * s_12 + 43 * s + 2);
                *(b + k * s_12 + 43 * s + 9) =
                    *(b + k * s_12 + 69 * s + 3) +
                    Z_AB * *(b + k * s_12 + 43 * s + 3);
                *(b + k * s_12 + 44 * s + 4) =
                    *(b + k * s_12 + 65 * s + 1) +
                    X_AB * *(b + k * s_12 + 44 * s + 1);
                *(b + k * s_12 + 44 * s + 5) =
                    *(b + k * s_12 + 69 * s + 1) +
                    Y_AB * *(b + k * s_12 + 44 * s + 1);
                *(b + k * s_12 + 44 * s + 7) =
                    *(b + k * s_12 + 69 * s + 2) +
                    Y_AB * *(b + k * s_12 + 44 * s + 2);
                *(b + k * s_12 + 44 * s + 9) =
                    *(b + k * s_12 + 70 * s + 3) +
                    Z_AB * *(b + k * s_12 + 44 * s + 3);
                *(b + k * s_12 + 45 * s + 4) =
                    *(b + k * s_12 + 66 * s + 1) +
                    X_AB * *(b + k * s_12 + 45 * s + 1);
                *(b + k * s_12 + 45 * s + 7) =
                    *(b + k * s_12 + 71 * s + 2) +
                    Y_AB * *(b + k * s_12 + 45 * s + 2);
                *(b + k * s_12 + 45 * s + 9) =
                    *(b + k * s_12 + 72 * s + 3) +
                    Z_AB * *(b + k * s_12 + 45 * s + 3);
                *(b + k * s_12 + 46 * s + 4) =
                    *(b + k * s_12 + 67 * s + 1) +
                    X_AB * *(b + k * s_12 + 46 * s + 1);
                *(b + k * s_12 + 46 * s + 5) =
                    *(b + k * s_12 + 72 * s + 1) +
                    Y_AB * *(b + k * s_12 + 46 * s + 1);
                *(b + k * s_12 + 46 * s + 7) =
                    *(b + k * s_12 + 72 * s + 2) +
                    Y_AB * *(b + k * s_12 + 46 * s + 2);
                *(b + k * s_12 + 46 * s + 9) =
                    *(b + k * s_12 + 73 * s + 3) +
                    Z_AB * *(b + k * s_12 + 46 * s + 3);
                *(b + k * s_12 + 47 * s + 4) =
                    *(b + k * s_12 + 68 * s + 1) +
                    X_AB * *(b + k * s_12 + 47 * s + 1);
                *(b + k * s_12 + 47 * s + 5) =
                    *(b + k * s_12 + 73 * s + 1) +
                    Y_AB * *(b + k * s_12 + 47 * s + 1);
                *(b + k * s_12 + 47 * s + 7) =
                    *(b + k * s_12 + 73 * s + 2) +
                    Y_AB * *(b + k * s_12 + 47 * s + 2);
                *(b + k * s_12 + 47 * s + 9) =
                    *(b + k * s_12 + 74 * s + 3) +
                    Z_AB * *(b + k * s_12 + 47 * s + 3);
                *(b + k * s_12 + 48 * s + 4) =
                    *(b + k * s_12 + 69 * s + 1) +
                    X_AB * *(b + k * s_12 + 48 * s + 1);
                *(b + k * s_12 + 48 * s + 5) =
                    *(b + k * s_12 + 74 * s + 1) +
                    Y_AB * *(b + k * s_12 + 48 * s + 1);
                *(b + k * s_12 + 48 * s + 7) =
                    *(b + k * s_12 + 74 * s + 2) +
                    Y_AB * *(b + k * s_12 + 48 * s + 2);
                *(b + k * s_12 + 48 * s + 9) =
                    *(b + k * s_12 + 75 * s + 3) +
                    Z_AB * *(b + k * s_12 + 48 * s + 3);
                *(b + k * s_12 + 49 * s + 4) =
                    *(b + k * s_12 + 70 * s + 1) +
                    X_AB * *(b + k * s_12 + 49 * s + 1);
                *(b + k * s_12 + 49 * s + 5) =
                    *(b + k * s_12 + 75 * s + 1) +
                    Y_AB * *(b + k * s_12 + 49 * s + 1);
                *(b + k * s_12 + 49 * s + 7) =
                    *(b + k * s_12 + 75 * s + 2) +
                    Y_AB * *(b + k * s_12 + 49 * s + 2);
                *(b + k * s_12 + 49 * s + 9) =
                    *(b + k * s_12 + 76 * s + 3) +
                    Z_AB * *(b + k * s_12 + 49 * s + 3);
                *(b + k * s_12 + 50 * s + 4) =
                    *(b + k * s_12 + 71 * s + 1) +
                    X_AB * *(b + k * s_12 + 50 * s + 1);
                *(b + k * s_12 + 50 * s + 7) =
                    *(b + k * s_12 + 77 * s + 2) +
                    Y_AB * *(b + k * s_12 + 50 * s + 2);
                *(b + k * s_12 + 50 * s + 9) =
                    *(b + k * s_12 + 78 * s + 3) +
                    Z_AB * *(b + k * s_12 + 50 * s + 3);
                *(b + k * s_12 + 51 * s + 4) =
                    *(b + k * s_12 + 72 * s + 1) +
                    X_AB * *(b + k * s_12 + 51 * s + 1);
                *(b + k * s_12 + 51 * s + 5) =
                    *(b + k * s_12 + 78 * s + 1) +
                    Y_AB * *(b + k * s_12 + 51 * s + 1);
                *(b + k * s_12 + 51 * s + 7) =
                    *(b + k * s_12 + 78 * s + 2) +
                    Y_AB * *(b + k * s_12 + 51 * s + 2);
                *(b + k * s_12 + 51 * s + 9) =
                    *(b + k * s_12 + 79 * s + 3) +
                    Z_AB * *(b + k * s_12 + 51 * s + 3);
                *(b + k * s_12 + 52 * s + 4) =
                    *(b + k * s_12 + 73 * s + 1) +
                    X_AB * *(b + k * s_12 + 52 * s + 1);
                *(b + k * s_12 + 52 * s + 5) =
                    *(b + k * s_12 + 79 * s + 1) +
                    Y_AB * *(b + k * s_12 + 52 * s + 1);
                *(b + k * s_12 + 52 * s + 7) =
                    *(b + k * s_12 + 79 * s + 2) +
                    Y_AB * *(b + k * s_12 + 52 * s + 2);
                *(b + k * s_12 + 52 * s + 9) =
                    *(b + k * s_12 + 80 * s + 3) +
                    Z_AB * *(b + k * s_12 + 52 * s + 3);
                *(b + k * s_12 + 53 * s + 4) =
                    *(b + k * s_12 + 74 * s + 1) +
                    X_AB * *(b + k * s_12 + 53 * s + 1);
                *(b + k * s_12 + 53 * s + 5) =
                    *(b + k * s_12 + 80 * s + 1) +
                    Y_AB * *(b + k * s_12 + 53 * s + 1);
                *(b + k * s_12 + 53 * s + 7) =
                    *(b + k * s_12 + 80 * s + 2) +
                    Y_AB * *(b + k * s_12 + 53 * s + 2);
                *(b + k * s_12 + 53 * s + 9) =
                    *(b + k * s_12 + 81 * s + 3) +
                    Z_AB * *(b + k * s_12 + 53 * s + 3);
                *(b + k * s_12 + 54 * s + 4) =
                    *(b + k * s_12 + 75 * s + 1) +
                    X_AB * *(b + k * s_12 + 54 * s + 1);
                *(b + k * s_12 + 54 * s + 5) =
                    *(b + k * s_12 + 81 * s + 1) +
                    Y_AB * *(b + k * s_12 + 54 * s + 1);
                *(b + k * s_12 + 54 * s + 7) =
                    *(b + k * s_12 + 81 * s + 2) +
                    Y_AB * *(b + k * s_12 + 54 * s + 2);
                *(b + k * s_12 + 54 * s + 9) =
                    *(b + k * s_12 + 82 * s + 3) +
                    Z_AB * *(b + k * s_12 + 54 * s + 3);
                *(b + k * s_12 + 55 * s + 4) =
                    *(b + k * s_12 + 76 * s + 1) +
                    X_AB * *(b + k * s_12 + 55 * s + 1);
                *(b + k * s_12 + 55 * s + 5) =
                    *(b + k * s_12 + 82 * s + 1) +
                    Y_AB * *(b + k * s_12 + 55 * s + 1);
                *(b + k * s_12 + 55 * s + 7) =
                    *(b + k * s_12 + 82 * s + 2) +
                    Y_AB * *(b + k * s_12 + 55 * s + 2);
                *(b + k * s_12 + 55 * s + 9) =
                    *(b + k * s_12 + 83 * s + 3) +
                    Z_AB * *(b + k * s_12 + 55 * s + 3);
                *(b + k * s_12 + 20 * s + 10) =
                    *(b + k * s_12 + 35 * s + 4) +
                    X_AB * *(b + k * s_12 + 20 * s + 4);
                *(b + k * s_12 + 20 * s + 11) =
                    *(b + k * s_12 + 36 * s + 4) +
                    Y_AB * *(b + k * s_12 + 20 * s + 4);
                *(b + k * s_12 + 20 * s + 12) =
                    *(b + k * s_12 + 37 * s + 4) +
                    Z_AB * *(b + k * s_12 + 20 * s + 4);
                *(b + k * s_12 + 20 * s + 13) =
                    *(b + k * s_12 + 35 * s + 7) +
                    X_AB * *(b + k * s_12 + 20 * s + 7);
                *(b + k * s_12 + 20 * s + 14) =
                    *(b + k * s_12 + 37 * s + 5) +
                    Z_AB * *(b + k * s_12 + 20 * s + 5);
                *(b + k * s_12 + 20 * s + 15) =
                    *(b + k * s_12 + 35 * s + 9) +
                    X_AB * *(b + k * s_12 + 20 * s + 9);
                *(b + k * s_12 + 20 * s + 16) =
                    *(b + k * s_12 + 36 * s + 7) +
                    Y_AB * *(b + k * s_12 + 20 * s + 7);
                *(b + k * s_12 + 20 * s + 17) =
                    *(b + k * s_12 + 37 * s + 7) +
                    Z_AB * *(b + k * s_12 + 20 * s + 7);
                *(b + k * s_12 + 20 * s + 18) =
                    *(b + k * s_12 + 36 * s + 9) +
                    Y_AB * *(b + k * s_12 + 20 * s + 9);
                *(b + k * s_12 + 20 * s + 19) =
                    *(b + k * s_12 + 37 * s + 9) +
                    Z_AB * *(b + k * s_12 + 20 * s + 9);
                *(b + k * s_12 + 21 * s + 10) =
                    *(b + k * s_12 + 36 * s + 4) +
                    X_AB * *(b + k * s_12 + 21 * s + 4);
                *(b + k * s_12 + 21 * s + 11) =
                    *(b + k * s_12 + 38 * s + 4) +
                    Y_AB * *(b + k * s_12 + 21 * s + 4);
                *(b + k * s_12 + 21 * s + 12) =
                    *(b + k * s_12 + 39 * s + 4) +
                    Z_AB * *(b + k * s_12 + 21 * s + 4);
                *(b + k * s_12 + 21 * s + 13) =
                    *(b + k * s_12 + 36 * s + 7) +
                    X_AB * *(b + k * s_12 + 21 * s + 7);
                *(b + k * s_12 + 21 * s + 14) =
                    *(b + k * s_12 + 39 * s + 5) +
                    Z_AB * *(b + k * s_12 + 21 * s + 5);
                *(b + k * s_12 + 21 * s + 15) =
                    *(b + k * s_12 + 36 * s + 9) +
                    X_AB * *(b + k * s_12 + 21 * s + 9);
                *(b + k * s_12 + 21 * s + 16) =
                    *(b + k * s_12 + 38 * s + 7) +
                    Y_AB * *(b + k * s_12 + 21 * s + 7);
                *(b + k * s_12 + 21 * s + 17) =
                    *(b + k * s_12 + 39 * s + 7) +
                    Z_AB * *(b + k * s_12 + 21 * s + 7);
                *(b + k * s_12 + 21 * s + 18) =
                    *(b + k * s_12 + 38 * s + 9) +
                    Y_AB * *(b + k * s_12 + 21 * s + 9);
                *(b + k * s_12 + 21 * s + 19) =
                    *(b + k * s_12 + 39 * s + 9) +
                    Z_AB * *(b + k * s_12 + 21 * s + 9);
                *(b + k * s_12 + 22 * s + 10) =
                    *(b + k * s_12 + 37 * s + 4) +
                    X_AB * *(b + k * s_12 + 22 * s + 4);
                *(b + k * s_12 + 22 * s + 11) =
                    *(b + k * s_12 + 39 * s + 4) +
                    Y_AB * *(b + k * s_12 + 22 * s + 4);
                *(b + k * s_12 + 22 * s + 12) =
                    *(b + k * s_12 + 40 * s + 4) +
                    Z_AB * *(b + k * s_12 + 22 * s + 4);
                *(b + k * s_12 + 22 * s + 13) =
                    *(b + k * s_12 + 37 * s + 7) +
                    X_AB * *(b + k * s_12 + 22 * s + 7);
                *(b + k * s_12 + 22 * s + 14) =
                    *(b + k * s_12 + 40 * s + 5) +
                    Z_AB * *(b + k * s_12 + 22 * s + 5);
                *(b + k * s_12 + 22 * s + 15) =
                    *(b + k * s_12 + 37 * s + 9) +
                    X_AB * *(b + k * s_12 + 22 * s + 9);
                *(b + k * s_12 + 22 * s + 16) =
                    *(b + k * s_12 + 39 * s + 7) +
                    Y_AB * *(b + k * s_12 + 22 * s + 7);
                *(b + k * s_12 + 22 * s + 17) =
                    *(b + k * s_12 + 40 * s + 7) +
                    Z_AB * *(b + k * s_12 + 22 * s + 7);
                *(b + k * s_12 + 22 * s + 18) =
                    *(b + k * s_12 + 39 * s + 9) +
                    Y_AB * *(b + k * s_12 + 22 * s + 9);
                *(b + k * s_12 + 22 * s + 19) =
                    *(b + k * s_12 + 40 * s + 9) +
                    Z_AB * *(b + k * s_12 + 22 * s + 9);
                *(b + k * s_12 + 23 * s + 10) =
                    *(b + k * s_12 + 38 * s + 4) +
                    X_AB * *(b + k * s_12 + 23 * s + 4);
                *(b + k * s_12 + 23 * s + 11) =
                    *(b + k * s_12 + 41 * s + 4) +
                    Y_AB * *(b + k * s_12 + 23 * s + 4);
                *(b + k * s_12 + 23 * s + 12) =
                    *(b + k * s_12 + 42 * s + 4) +
                    Z_AB * *(b + k * s_12 + 23 * s + 4);
                *(b + k * s_12 + 23 * s + 13) =
                    *(b + k * s_12 + 38 * s + 7) +
                    X_AB * *(b + k * s_12 + 23 * s + 7);
                *(b + k * s_12 + 23 * s + 14) =
                    *(b + k * s_12 + 42 * s + 5) +
                    Z_AB * *(b + k * s_12 + 23 * s + 5);
                *(b + k * s_12 + 23 * s + 15) =
                    *(b + k * s_12 + 38 * s + 9) +
                    X_AB * *(b + k * s_12 + 23 * s + 9);
                *(b + k * s_12 + 23 * s + 16) =
                    *(b + k * s_12 + 41 * s + 7) +
                    Y_AB * *(b + k * s_12 + 23 * s + 7);
                *(b + k * s_12 + 23 * s + 17) =
                    *(b + k * s_12 + 42 * s + 7) +
                    Z_AB * *(b + k * s_12 + 23 * s + 7);
                *(b + k * s_12 + 23 * s + 18) =
                    *(b + k * s_12 + 41 * s + 9) +
                    Y_AB * *(b + k * s_12 + 23 * s + 9);
                *(b + k * s_12 + 23 * s + 19) =
                    *(b + k * s_12 + 42 * s + 9) +
                    Z_AB * *(b + k * s_12 + 23 * s + 9);
                *(b + k * s_12 + 24 * s + 10) =
                    *(b + k * s_12 + 39 * s + 4) +
                    X_AB * *(b + k * s_12 + 24 * s + 4);
                *(b + k * s_12 + 24 * s + 11) =
                    *(b + k * s_12 + 42 * s + 4) +
                    Y_AB * *(b + k * s_12 + 24 * s + 4);
                *(b + k * s_12 + 24 * s + 12) =
                    *(b + k * s_12 + 43 * s + 4) +
                    Z_AB * *(b + k * s_12 + 24 * s + 4);
                *(b + k * s_12 + 24 * s + 13) =
                    *(b + k * s_12 + 39 * s + 7) +
                    X_AB * *(b + k * s_12 + 24 * s + 7);
                *(b + k * s_12 + 24 * s + 14) =
                    *(b + k * s_12 + 43 * s + 5) +
                    Z_AB * *(b + k * s_12 + 24 * s + 5);
                *(b + k * s_12 + 24 * s + 15) =
                    *(b + k * s_12 + 39 * s + 9) +
                    X_AB * *(b + k * s_12 + 24 * s + 9);
                *(b + k * s_12 + 24 * s + 16) =
                    *(b + k * s_12 + 42 * s + 7) +
                    Y_AB * *(b + k * s_12 + 24 * s + 7);
                *(b + k * s_12 + 24 * s + 17) =
                    *(b + k * s_12 + 43 * s + 7) +
                    Z_AB * *(b + k * s_12 + 24 * s + 7);
                *(b + k * s_12 + 24 * s + 18) =
                    *(b + k * s_12 + 42 * s + 9) +
                    Y_AB * *(b + k * s_12 + 24 * s + 9);
                *(b + k * s_12 + 24 * s + 19) =
                    *(b + k * s_12 + 43 * s + 9) +
                    Z_AB * *(b + k * s_12 + 24 * s + 9);
                *(b + k * s_12 + 25 * s + 10) =
                    *(b + k * s_12 + 40 * s + 4) +
                    X_AB * *(b + k * s_12 + 25 * s + 4);
                *(b + k * s_12 + 25 * s + 11) =
                    *(b + k * s_12 + 43 * s + 4) +
                    Y_AB * *(b + k * s_12 + 25 * s + 4);
                *(b + k * s_12 + 25 * s + 12) =
                    *(b + k * s_12 + 44 * s + 4) +
                    Z_AB * *(b + k * s_12 + 25 * s + 4);
                *(b + k * s_12 + 25 * s + 13) =
                    *(b + k * s_12 + 40 * s + 7) +
                    X_AB * *(b + k * s_12 + 25 * s + 7);
                *(b + k * s_12 + 25 * s + 14) =
                    *(b + k * s_12 + 44 * s + 5) +
                    Z_AB * *(b + k * s_12 + 25 * s + 5);
                *(b + k * s_12 + 25 * s + 15) =
                    *(b + k * s_12 + 40 * s + 9) +
                    X_AB * *(b + k * s_12 + 25 * s + 9);
                *(b + k * s_12 + 25 * s + 16) =
                    *(b + k * s_12 + 43 * s + 7) +
                    Y_AB * *(b + k * s_12 + 25 * s + 7);
                *(b + k * s_12 + 25 * s + 17) =
                    *(b + k * s_12 + 44 * s + 7) +
                    Z_AB * *(b + k * s_12 + 25 * s + 7);
                *(b + k * s_12 + 25 * s + 18) =
                    *(b + k * s_12 + 43 * s + 9) +
                    Y_AB * *(b + k * s_12 + 25 * s + 9);
                *(b + k * s_12 + 25 * s + 19) =
                    *(b + k * s_12 + 44 * s + 9) +
                    Z_AB * *(b + k * s_12 + 25 * s + 9);
                *(b + k * s_12 + 26 * s + 10) =
                    *(b + k * s_12 + 41 * s + 4) +
                    X_AB * *(b + k * s_12 + 26 * s + 4);
                *(b + k * s_12 + 26 * s + 11) =
                    *(b + k * s_12 + 45 * s + 4) +
                    Y_AB * *(b + k * s_12 + 26 * s + 4);
                *(b + k * s_12 + 26 * s + 12) =
                    *(b + k * s_12 + 46 * s + 4) +
                    Z_AB * *(b + k * s_12 + 26 * s + 4);
                *(b + k * s_12 + 26 * s + 13) =
                    *(b + k * s_12 + 41 * s + 7) +
                    X_AB * *(b + k * s_12 + 26 * s + 7);
                *(b + k * s_12 + 26 * s + 14) =
                    *(b + k * s_12 + 46 * s + 5) +
                    Z_AB * *(b + k * s_12 + 26 * s + 5);
                *(b + k * s_12 + 26 * s + 15) =
                    *(b + k * s_12 + 41 * s + 9) +
                    X_AB * *(b + k * s_12 + 26 * s + 9);
                *(b + k * s_12 + 26 * s + 16) =
                    *(b + k * s_12 + 45 * s + 7) +
                    Y_AB * *(b + k * s_12 + 26 * s + 7);
                *(b + k * s_12 + 26 * s + 17) =
                    *(b + k * s_12 + 46 * s + 7) +
                    Z_AB * *(b + k * s_12 + 26 * s + 7);
                *(b + k * s_12 + 26 * s + 18) =
                    *(b + k * s_12 + 45 * s + 9) +
                    Y_AB * *(b + k * s_12 + 26 * s + 9);
                *(b + k * s_12 + 26 * s + 19) =
                    *(b + k * s_12 + 46 * s + 9) +
                    Z_AB * *(b + k * s_12 + 26 * s + 9);
                *(b + k * s_12 + 27 * s + 10) =
                    *(b + k * s_12 + 42 * s + 4) +
                    X_AB * *(b + k * s_12 + 27 * s + 4);
                *(b + k * s_12 + 27 * s + 11) =
                    *(b + k * s_12 + 46 * s + 4) +
                    Y_AB * *(b + k * s_12 + 27 * s + 4);
                *(b + k * s_12 + 27 * s + 12) =
                    *(b + k * s_12 + 47 * s + 4) +
                    Z_AB * *(b + k * s_12 + 27 * s + 4);
                *(b + k * s_12 + 27 * s + 13) =
                    *(b + k * s_12 + 42 * s + 7) +
                    X_AB * *(b + k * s_12 + 27 * s + 7);
                *(b + k * s_12 + 27 * s + 14) =
                    *(b + k * s_12 + 47 * s + 5) +
                    Z_AB * *(b + k * s_12 + 27 * s + 5);
                *(b + k * s_12 + 27 * s + 15) =
                    *(b + k * s_12 + 42 * s + 9) +
                    X_AB * *(b + k * s_12 + 27 * s + 9);
                *(b + k * s_12 + 27 * s + 16) =
                    *(b + k * s_12 + 46 * s + 7) +
                    Y_AB * *(b + k * s_12 + 27 * s + 7);
                *(b + k * s_12 + 27 * s + 17) =
                    *(b + k * s_12 + 47 * s + 7) +
                    Z_AB * *(b + k * s_12 + 27 * s + 7);
                *(b + k * s_12 + 27 * s + 18) =
                    *(b + k * s_12 + 46 * s + 9) +
                    Y_AB * *(b + k * s_12 + 27 * s + 9);
                *(b + k * s_12 + 27 * s + 19) =
                    *(b + k * s_12 + 47 * s + 9) +
                    Z_AB * *(b + k * s_12 + 27 * s + 9);
                *(b + k * s_12 + 28 * s + 10) =
                    *(b + k * s_12 + 43 * s + 4) +
                    X_AB * *(b + k * s_12 + 28 * s + 4);
                *(b + k * s_12 + 28 * s + 11) =
                    *(b + k * s_12 + 47 * s + 4) +
                    Y_AB * *(b + k * s_12 + 28 * s + 4);
                *(b + k * s_12 + 28 * s + 12) =
                    *(b + k * s_12 + 48 * s + 4) +
                    Z_AB * *(b + k * s_12 + 28 * s + 4);
                *(b + k * s_12 + 28 * s + 13) =
                    *(b + k * s_12 + 43 * s + 7) +
                    X_AB * *(b + k * s_12 + 28 * s + 7);
                *(b + k * s_12 + 28 * s + 14) =
                    *(b + k * s_12 + 48 * s + 5) +
                    Z_AB * *(b + k * s_12 + 28 * s + 5);
                *(b + k * s_12 + 28 * s + 15) =
                    *(b + k * s_12 + 43 * s + 9) +
                    X_AB * *(b + k * s_12 + 28 * s + 9);
                *(b + k * s_12 + 28 * s + 16) =
                    *(b + k * s_12 + 47 * s + 7) +
                    Y_AB * *(b + k * s_12 + 28 * s + 7);
                *(b + k * s_12 + 28 * s + 17) =
                    *(b + k * s_12 + 48 * s + 7) +
                    Z_AB * *(b + k * s_12 + 28 * s + 7);
                *(b + k * s_12 + 28 * s + 18) =
                    *(b + k * s_12 + 47 * s + 9) +
                    Y_AB * *(b + k * s_12 + 28 * s + 9);
                *(b + k * s_12 + 28 * s + 19) =
                    *(b + k * s_12 + 48 * s + 9) +
                    Z_AB * *(b + k * s_12 + 28 * s + 9);
                *(b + k * s_12 + 29 * s + 10) =
                    *(b + k * s_12 + 44 * s + 4) +
                    X_AB * *(b + k * s_12 + 29 * s + 4);
                *(b + k * s_12 + 29 * s + 11) =
                    *(b + k * s_12 + 48 * s + 4) +
                    Y_AB * *(b + k * s_12 + 29 * s + 4);
                *(b + k * s_12 + 29 * s + 12) =
                    *(b + k * s_12 + 49 * s + 4) +
                    Z_AB * *(b + k * s_12 + 29 * s + 4);
                *(b + k * s_12 + 29 * s + 13) =
                    *(b + k * s_12 + 44 * s + 7) +
                    X_AB * *(b + k * s_12 + 29 * s + 7);
                *(b + k * s_12 + 29 * s + 14) =
                    *(b + k * s_12 + 49 * s + 5) +
                    Z_AB * *(b + k * s_12 + 29 * s + 5);
                *(b + k * s_12 + 29 * s + 15) =
                    *(b + k * s_12 + 44 * s + 9) +
                    X_AB * *(b + k * s_12 + 29 * s + 9);
                *(b + k * s_12 + 29 * s + 16) =
                    *(b + k * s_12 + 48 * s + 7) +
                    Y_AB * *(b + k * s_12 + 29 * s + 7);
                *(b + k * s_12 + 29 * s + 17) =
                    *(b + k * s_12 + 49 * s + 7) +
                    Z_AB * *(b + k * s_12 + 29 * s + 7);
                *(b + k * s_12 + 29 * s + 18) =
                    *(b + k * s_12 + 48 * s + 9) +
                    Y_AB * *(b + k * s_12 + 29 * s + 9);
                *(b + k * s_12 + 29 * s + 19) =
                    *(b + k * s_12 + 49 * s + 9) +
                    Z_AB * *(b + k * s_12 + 29 * s + 9);
                *(b + k * s_12 + 30 * s + 10) =
                    *(b + k * s_12 + 45 * s + 4) +
                    X_AB * *(b + k * s_12 + 30 * s + 4);
                *(b + k * s_12 + 30 * s + 11) =
                    *(b + k * s_12 + 50 * s + 4) +
                    Y_AB * *(b + k * s_12 + 30 * s + 4);
                *(b + k * s_12 + 30 * s + 12) =
                    *(b + k * s_12 + 51 * s + 4) +
                    Z_AB * *(b + k * s_12 + 30 * s + 4);
                *(b + k * s_12 + 30 * s + 13) =
                    *(b + k * s_12 + 45 * s + 7) +
                    X_AB * *(b + k * s_12 + 30 * s + 7);
                *(b + k * s_12 + 30 * s + 14) =
                    *(b + k * s_12 + 51 * s + 5) +
                    Z_AB * *(b + k * s_12 + 30 * s + 5);
                *(b + k * s_12 + 30 * s + 15) =
                    *(b + k * s_12 + 45 * s + 9) +
                    X_AB * *(b + k * s_12 + 30 * s + 9);
                *(b + k * s_12 + 30 * s + 16) =
                    *(b + k * s_12 + 50 * s + 7) +
                    Y_AB * *(b + k * s_12 + 30 * s + 7);
                *(b + k * s_12 + 30 * s + 17) =
                    *(b + k * s_12 + 51 * s + 7) +
                    Z_AB * *(b + k * s_12 + 30 * s + 7);
                *(b + k * s_12 + 30 * s + 18) =
                    *(b + k * s_12 + 50 * s + 9) +
                    Y_AB * *(b + k * s_12 + 30 * s + 9);
                *(b + k * s_12 + 30 * s + 19) =
                    *(b + k * s_12 + 51 * s + 9) +
                    Z_AB * *(b + k * s_12 + 30 * s + 9);
                *(b + k * s_12 + 31 * s + 10) =
                    *(b + k * s_12 + 46 * s + 4) +
                    X_AB * *(b + k * s_12 + 31 * s + 4);
                *(b + k * s_12 + 31 * s + 11) =
                    *(b + k * s_12 + 51 * s + 4) +
                    Y_AB * *(b + k * s_12 + 31 * s + 4);
                *(b + k * s_12 + 31 * s + 12) =
                    *(b + k * s_12 + 52 * s + 4) +
                    Z_AB * *(b + k * s_12 + 31 * s + 4);
                *(b + k * s_12 + 31 * s + 13) =
                    *(b + k * s_12 + 46 * s + 7) +
                    X_AB * *(b + k * s_12 + 31 * s + 7);
                *(b + k * s_12 + 31 * s + 14) =
                    *(b + k * s_12 + 52 * s + 5) +
                    Z_AB * *(b + k * s_12 + 31 * s + 5);
                *(b + k * s_12 + 31 * s + 15) =
                    *(b + k * s_12 + 46 * s + 9) +
                    X_AB * *(b + k * s_12 + 31 * s + 9);
                *(b + k * s_12 + 31 * s + 16) =
                    *(b + k * s_12 + 51 * s + 7) +
                    Y_AB * *(b + k * s_12 + 31 * s + 7);
                *(b + k * s_12 + 31 * s + 17) =
                    *(b + k * s_12 + 52 * s + 7) +
                    Z_AB * *(b + k * s_12 + 31 * s + 7);
                *(b + k * s_12 + 31 * s + 18) =
                    *(b + k * s_12 + 51 * s + 9) +
                    Y_AB * *(b + k * s_12 + 31 * s + 9);
                *(b + k * s_12 + 31 * s + 19) =
                    *(b + k * s_12 + 52 * s + 9) +
                    Z_AB * *(b + k * s_12 + 31 * s + 9);
                *(b + k * s_12 + 32 * s + 10) =
                    *(b + k * s_12 + 47 * s + 4) +
                    X_AB * *(b + k * s_12 + 32 * s + 4);
                *(b + k * s_12 + 32 * s + 11) =
                    *(b + k * s_12 + 52 * s + 4) +
                    Y_AB * *(b + k * s_12 + 32 * s + 4);
                *(b + k * s_12 + 32 * s + 12) =
                    *(b + k * s_12 + 53 * s + 4) +
                    Z_AB * *(b + k * s_12 + 32 * s + 4);
                *(b + k * s_12 + 32 * s + 13) =
                    *(b + k * s_12 + 47 * s + 7) +
                    X_AB * *(b + k * s_12 + 32 * s + 7);
                *(b + k * s_12 + 32 * s + 14) =
                    *(b + k * s_12 + 53 * s + 5) +
                    Z_AB * *(b + k * s_12 + 32 * s + 5);
                *(b + k * s_12 + 32 * s + 15) =
                    *(b + k * s_12 + 47 * s + 9) +
                    X_AB * *(b + k * s_12 + 32 * s + 9);
                *(b + k * s_12 + 32 * s + 16) =
                    *(b + k * s_12 + 52 * s + 7) +
                    Y_AB * *(b + k * s_12 + 32 * s + 7);
                *(b + k * s_12 + 32 * s + 17) =
                    *(b + k * s_12 + 53 * s + 7) +
                    Z_AB * *(b + k * s_12 + 32 * s + 7);
                *(b + k * s_12 + 32 * s + 18) =
                    *(b + k * s_12 + 52 * s + 9) +
                    Y_AB * *(b + k * s_12 + 32 * s + 9);
                *(b + k * s_12 + 32 * s + 19) =
                    *(b + k * s_12 + 53 * s + 9) +
                    Z_AB * *(b + k * s_12 + 32 * s + 9);
                *(b + k * s_12 + 33 * s + 10) =
                    *(b + k * s_12 + 48 * s + 4) +
                    X_AB * *(b + k * s_12 + 33 * s + 4);
                *(b + k * s_12 + 33 * s + 11) =
                    *(b + k * s_12 + 53 * s + 4) +
                    Y_AB * *(b + k * s_12 + 33 * s + 4);
                *(b + k * s_12 + 33 * s + 12) =
                    *(b + k * s_12 + 54 * s + 4) +
                    Z_AB * *(b + k * s_12 + 33 * s + 4);
                *(b + k * s_12 + 33 * s + 13) =
                    *(b + k * s_12 + 48 * s + 7) +
                    X_AB * *(b + k * s_12 + 33 * s + 7);
                *(b + k * s_12 + 33 * s + 14) =
                    *(b + k * s_12 + 54 * s + 5) +
                    Z_AB * *(b + k * s_12 + 33 * s + 5);
                *(b + k * s_12 + 33 * s + 15) =
                    *(b + k * s_12 + 48 * s + 9) +
                    X_AB * *(b + k * s_12 + 33 * s + 9);
                *(b + k * s_12 + 33 * s + 16) =
                    *(b + k * s_12 + 53 * s + 7) +
                    Y_AB * *(b + k * s_12 + 33 * s + 7);
                *(b + k * s_12 + 33 * s + 17) =
                    *(b + k * s_12 + 54 * s + 7) +
                    Z_AB * *(b + k * s_12 + 33 * s + 7);
                *(b + k * s_12 + 33 * s + 18) =
                    *(b + k * s_12 + 53 * s + 9) +
                    Y_AB * *(b + k * s_12 + 33 * s + 9);
                *(b + k * s_12 + 33 * s + 19) =
                    *(b + k * s_12 + 54 * s + 9) +
                    Z_AB * *(b + k * s_12 + 33 * s + 9);
                *(b + k * s_12 + 34 * s + 10) =
                    *(b + k * s_12 + 49 * s + 4) +
                    X_AB * *(b + k * s_12 + 34 * s + 4);
                *(b + k * s_12 + 34 * s + 11) =
                    *(b + k * s_12 + 54 * s + 4) +
                    Y_AB * *(b + k * s_12 + 34 * s + 4);
                *(b + k * s_12 + 34 * s + 12) =
                    *(b + k * s_12 + 55 * s + 4) +
                    Z_AB * *(b + k * s_12 + 34 * s + 4);
                *(b + k * s_12 + 34 * s + 13) =
                    *(b + k * s_12 + 49 * s + 7) +
                    X_AB * *(b + k * s_12 + 34 * s + 7);
                *(b + k * s_12 + 34 * s + 14) =
                    *(b + k * s_12 + 55 * s + 5) +
                    Z_AB * *(b + k * s_12 + 34 * s + 5);
                *(b + k * s_12 + 34 * s + 15) =
                    *(b + k * s_12 + 49 * s + 9) +
                    X_AB * *(b + k * s_12 + 34 * s + 9);
                *(b + k * s_12 + 34 * s + 16) =
                    *(b + k * s_12 + 54 * s + 7) +
                    Y_AB * *(b + k * s_12 + 34 * s + 7);
                *(b + k * s_12 + 34 * s + 17) =
                    *(b + k * s_12 + 55 * s + 7) +
                    Z_AB * *(b + k * s_12 + 34 * s + 7);
                *(b + k * s_12 + 34 * s + 18) =
                    *(b + k * s_12 + 54 * s + 9) +
                    Y_AB * *(b + k * s_12 + 34 * s + 9);
                *(b + k * s_12 + 34 * s + 19) =
                    *(b + k * s_12 + 55 * s + 9) +
                    Z_AB * *(b + k * s_12 + 34 * s + 9);
            }
        }
    }
}
