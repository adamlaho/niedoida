/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated file, do not modify
#include "xc_kit/xc_functionals.hpp"

#include <cmath>
#include <limits>

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated, do not modify
namespace niedoida {
    namespace xc {
        XCFunctionalData becke88_x_functional(
            double rhoa, double rhob, 
            double gammaaa, double gammaab, double gammabb, 
            unsigned n)
        {
            const double eps = std::numeric_limits<double>::epsilon();
            const double Pi = 3.1415926535897932384626433832795028842;

            XCFunctionalData result;

            if (rhoa + rhob < 2 * eps)
                return result;

            // Value of the functional itself

            if (rhoa >= eps && rhob >= eps) {
        const double C49 = 4. * Pi;
        const double C50 = rhoa + 1e-16;
        const double C51 = rhob + 1e-16;
        const double C52 = 1. / 3.;
        const double C53 = 4. / 3.;
        const double C54 = std::sqrt(gammaaa);
        const double C55 = std::sqrt(gammabb);
        const double C56 = 3. / C49;
        const double C57 = std::pow(C50, C53);
        const double C58 = std::pow(C51, C53);
        const double C59 = C54 / C57;
        const double C60 = C55 / C58;
        const double C61 = std::pow(C56, C52);
        const double C62 = 3. * C61;
        const double C63 = C62 / 2.;

                result.e =  - ( std::pow(rhob, C53) * ( C63 + ( 0.0042 * std::pow(C60, 2))  / ( ( std::asinh(C60) * 0.0252 * C55)  / C58 + 1.) )  + std::pow(rhoa, C53) * ( C63 + ( 0.0042 * std::pow(C59, 2))  / ( ( std::asinh(C59) * 0.0252 * C54)  / C57 + 1.) ) ) ;
            } else if (rhoa < eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;

                result.e =  - ( std::pow(rhob, C72) * ( C82 + ( 0.0042 * std::pow(C79, 2))  / ( ( std::asinh(C79) * 0.0252 * C74)  / C77 + 1.) )  + std::pow(rhoa, C72) * ( C82 + ( 0.0042 * std::pow(C78, 2))  / ( ( std::asinh(C78) * 0.0252 * C73)  / C76 + 1.) ) ) ;
            } else if (rhob < eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;

                result.e =  - ( std::pow(rhob, C88) * ( C98 + ( 0.0042 * std::pow(C95, 2))  / ( ( std::asinh(C95) * 0.0252 * C90)  / C93 + 1.) )  + std::pow(rhoa, C88) * ( C98 + ( 0.0042 * std::pow(C94, 2))  / ( ( std::asinh(C94) * 0.0252 * C89)  / C92 + 1.) ) ) ;
            }

            if (n < 1)
                return result;

            // First derivatives with respect to density

            if (rhoa >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;

                result.de_dra =  - ( ( std::pow(rhoa, C88) * ( ( C108 * -0.0336 * C103 * gammaaa)  / ( C92 * 3. * C106)  - ( -0.0042 * C104 * C105 * 4. * C103)  / ( 3. * C106) ) )  / std::pow(C108, 2) + ( ( C98 + ( 0.0042 * C104)  / C108)  * 4. * std::pow(rhoa, C87))  / 3.) ;
            }

            if (rhob >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;

                result.de_drb =  - ( ( std::pow(rhob, C72) * ( ( C118 * -0.0336 * C113 * gammabb)  / ( C77 * 3. * C116)  - ( -0.0042 * C114 * C115 * 4. * C113)  / ( 3. * C116) ) )  / std::pow(C118, 2) + ( ( C82 + ( 0.0042 * C114)  / C118)  * 4. * std::pow(rhob, C71))  / 3.) ;
            }

            // First derivatives with respect to density gradient

            if (gammaaa >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;

                result.de_dgaa =  - ( std::pow(rhoa, C153) * ( ( C161 * 0.0042 * C154)  / ( C154 * std::pow(C152, 8. / 3.))  - ( 0.0042 * std::pow(C157, 2) * 0.0252 * C158)  / ( 2 * C154 * C156) ) )  / std::pow(C161, 2);
            }

            if (gammaab >= eps) {

                result.de_dgab = 0;
            }

            if (gammabb >= eps) {
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;

                result.de_dgbb =  - ( std::pow(rhob, C165) * ( ( C173 * 0.0042 * C166)  / ( C166 * std::pow(C164, 8. / 3.))  - ( 0.0042 * std::pow(C169, 2) * 0.0252 * C170)  / ( 2 * C166 * C168) ) )  / std::pow(C173, 2);
            }

            if (n < 2)
                return result;

            // Second derivatives with respect to density

            if (rhoa >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;

                result.d2e_drara =  - ( ( C181 * ( C183 * ( ( C186 * ( ( C108 * -0.0336 * gammaaa * C187)  / 3. + ( -0.0336 * C177 * C191)  / C106)  - ( C189 * ( C92 * 24. * C188 + 3. * C106 * C176) )  / 3.)  / std::pow(C186, 2) - ( C106 * 0.0042 * ( ( C191 * -8. * C177)  / C186 - ( C104 * C105 * 4. * C187)  / 9.)  - ( 0.0042 * C193 * 8. * C188)  / 3.)  / std::pow(C85, 16. / 3.))  + ( C196 * 4. * C182)  / 3.)  - ( C183 * C196 * C108 * 2 * C191)  / C106)  / std::pow(C108, 4) + ( ( ( C98 + ( 0.0042 * C104)  / C108)  * 4. * std::pow(rhoa, C179))  / 3. + ( 4. * C182 * C196)  / C181)  / 3.) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C198 = 0.0252 * C90;
        const double C199 = std::asinh(C95);
        const double C200 = std::pow(C86, C87);

                result.d2e_drarb = 0;
            }

            if (rhob >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;

                result.d2e_drbrb =  - ( ( C208 * ( C210 * ( ( C213 * ( ( C118 * -0.0336 * gammabb * C214)  / 3. + ( -0.0336 * C204 * C218)  / C116)  - ( C216 * ( C77 * 24. * C215 + 3. * C116 * C203) )  / 3.)  / std::pow(C213, 2) - ( C116 * 0.0042 * ( ( C218 * -8. * C204)  / C213 - ( C114 * C115 * 4. * C214)  / 9.)  - ( 0.0042 * C220 * 8. * C215)  / 3.)  / std::pow(C70, 16. / 3.))  + ( C223 * 4. * C209)  / 3.)  - ( C210 * C223 * C118 * 2 * C218)  / C116)  / std::pow(C118, 4) + ( ( ( C82 + ( 0.0042 * C114)  / C118)  * 4. * std::pow(rhob, C206))  / 3. + ( 4. * C209 * C223)  / C208)  / 3.) ;
            }

            // Second derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;

                result.d2e_dgaagaa =  - ( std::pow(C161, 2) * C269 * ( ( C273 * ( ( 0.0042 * C161)  / C265 + ( 0.0042 * C154 * C274)  / C156)  - ( C270 * C272)  / C265)  / std::pow(C273, 2) - ( 0.0042 * ( ( C274 * C154)  / C273 - ( C268 * C264)  / ( C154 * std::pow(C265, 2)) ) )  / C156)  - ( C269 * ( C270 / C273 - ( 0.0042 * C268 * C274)  / C156)  * C161 * 2 * C274)  / C156)  / std::pow(C161, 4);
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;

                result.d2e_dgaagab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;

                result.d2e_dgaagbb = 0;
            }

            if (gammaab >= eps) {

                result.d2e_dgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;

                result.d2e_dgbbgab = 0;
            }

            if (gammabb >= eps) {
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;

                result.d2e_dgbbgbb =  - ( std::pow(C173, 2) * C285 * ( ( C289 * ( ( 0.0042 * C173)  / C281 + ( 0.0042 * C166 * C290)  / C168)  - ( C286 * C288)  / C281)  / std::pow(C289, 2) - ( 0.0042 * ( ( C290 * C166)  / C289 - ( C284 * C280)  / ( C166 * std::pow(C281, 2)) ) )  / C168)  - ( C285 * ( C286 / C289 - ( 0.0042 * C284 * C290)  / C168)  * C173 * 2 * C290)  / C168)  / std::pow(C173, 4);
            }

            // Mixed second derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C225 = 0.0252 * C102;
        const double C226 = 2 * C89;
        const double C227 = 3. * C106;
        const double C228 = 4. * C103;
        const double C229 = C103 * gammaaa;
        const double C230 = C89 * C106;
        const double C231 = 0;
        const double C232 = 0;
        const double C233 = std::pow(C108, 2);
        const double C234 = std::pow(rhoa, C88);
        const double C235 = C105 * C228;
        const double C236 = C92 * C227;
        const double C237 = C225 / C226;
        const double C238 = C237 + C232;
        const double C239 = C235 / 3.;
        const double C240 = C231 - C239;

                result.d2e_dragaa =  - ( ( C233 * C234 * ( ( C108 * -0.0336 * C103 + ( -0.0336 * C229 * C238)  / C92)  / C236 - ( 0.0042 * ( ( C240 * C89)  / C230 - ( C104 * C238 * C228)  / 3.) )  / C106)  - ( C234 * ( ( C108 * -0.0336 * C229)  / C236 - ( 0.0042 * C104 * C240)  / C106)  * C108 * 2 * C238)  / C92)  / std::pow(C108, 4) + ( 4. * std::pow(rhoa, C87) * ( ( C108 * 0.0042 * C89)  / C230 - ( 0.0042 * C104 * C238)  / C92) )  / ( 3. * C233) ) ;
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;

                result.d2e_dragab = 0;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;

                result.d2e_dragbb = 0;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;

                result.d2e_drbgaa = 0;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;

                result.d2e_drbgab = 0;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C246 = 0.0252 * C112;
        const double C247 = 2 * C74;
        const double C248 = 3. * C116;
        const double C249 = 4. * C113;
        const double C250 = C113 * gammabb;
        const double C251 = C74 * C116;
        const double C252 = 0;
        const double C253 = 0;
        const double C254 = std::pow(C118, 2);
        const double C255 = std::pow(rhob, C72);
        const double C256 = C115 * C249;
        const double C257 = C77 * C248;
        const double C258 = C246 / C247;
        const double C259 = C258 + C253;
        const double C260 = C256 / 3.;
        const double C261 = C252 - C260;

                result.d2e_drbgbb =  - ( ( C254 * C255 * ( ( C118 * -0.0336 * C113 + ( -0.0336 * C250 * C259)  / C77)  / C257 - ( 0.0042 * ( ( C261 * C74)  / C251 - ( C114 * C259 * C249)  / 3.) )  / C116)  - ( C255 * ( ( C118 * -0.0336 * C250)  / C257 - ( 0.0042 * C114 * C261)  / C116)  * C118 * 2 * C259)  / C77)  / std::pow(C118, 4) + ( 4. * std::pow(rhob, C71) * ( ( C118 * 0.0042 * C74)  / C251 - ( 0.0042 * C114 * C259)  / C77) )  / ( 3. * C254) ) ;
            }

            if (n < 3)
                return result;

            // Third derivatives with respect to density

            if (rhoa >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;
        const double C293 = -8. * C177;
        const double C294 = 4. * C182;
        const double C295 = 4. * C187;
        const double C296 = 8. * C188;
        const double C297 = 24. * C188;
        const double C298 = C106 * C176;
        const double C299 = gammaaa * C187;
        const double C300 = 0;
        const double C301 = 0;
        const double C302 =  - C190;
        const double C303 = -5. / 3.;
        const double C304 = 2. / 3.;
        const double C305 = 16. / 3.;
        const double C306 = std::pow(C108, 4);
        const double C307 = std::pow(C186, 2);
        const double C308 = std::pow(rhoa, C179);
        const double C309 = -0.0336 * C299;
        const double C310 = 2 * C302;
        const double C311 = 3. * C298;
        const double C312 = C104 * C302;
        const double C313 = C105 * C295;
        const double C314 = C177 * C302;
        const double C315 = C302 * C293;
        const double C316 = C92 * C297;
        const double C317 = 0;
        const double C318 = C300 / 3.;
        const double C319 = std::pow(C85, C303);
        const double C320 = std::pow(C85, C304);
        const double C321 = std::pow(C85, C305);
        const double C322 = -0.0336 * C314;
        const double C323 = 0.0042 * C312;
        const double C324 = C108 * C309;
        const double C325 = C108 * C310;
        const double C326 = C312 * C296;
        const double C327 = C316 + C311;
        const double C328 = C317 + C318;
        const double C329 = C313 / 3.;
        const double C330 = C315 / C186;
        const double C331 = 0.0042 * C326;
        const double C332 = C189 * C327;
        const double C333 = C329 + C300;
        const double C334 = C322 / C106;
        const double C335 = C323 / C106;
        const double C336 = C324 / 3.;
        const double C337 = C336 + C334;
        const double C338 = C192 - C335;
        const double C339 = C331 / 3.;
        const double C340 = C332 / 3.;
        const double C341 = C333 / 3.;
        const double C342 = C183 * C338;
        const double C343 = C186 * C337;
        const double C344 = C337 * C327;
        const double C345 = C338 * C294;
        const double C346 = C328 - C341;
        const double C347 = C104 * C346;
        const double C348 = C342 * C325;
        const double C349 = C346 * C293;
        const double C350 = C343 - C340;
        const double C351 = C345 / 3.;
        const double C352 = C347 + C330;
        const double C353 = C350 / C307;
        const double C354 = 0.0042 * C352;
        const double C355 = C352 * C296;
        const double C356 = C106 * C354;
        const double C357 = C356 - C339;
        const double C358 = C357 / C321;
        const double C359 = C353 - C358;
        const double C360 = C183 * C359;
        const double C361 = C359 * C294;
        const double C362 = C360 + C351;
        const double C363 = C362 * C325;

                result.d3e_drarara =  - ( ( C306 * ( C181 * ( C183 * ( ( C307 * ( C186 * ( ( ( C108 * -0.0336 * gammaaa * -2. * C319)  / 3. + ( -0.0336 * C299 * C302)  / C106)  / 3. + ( C106 * -0.0336 * ( C177 * C346 + ( C302 * C299)  / 3.)  - ( -0.0336 * C314 * C296)  / 3.)  / C321)  + C344 / 3. - ( ( C189 * ( C92 * 120. * C320 + 24. * C188 * C176 + 3. * ( C106 * C295 + 4. * C103 * C296) ) )  / 3. + C344)  / 3.)  - ( C350 * C186 * 2 * C327)  / 3.)  / std::pow(C186, 4) - ( C321 * ( C106 * 0.0042 * ( C349 / C186 - ( C104 * C105 * -8. * C319)  / 27. + ( C186 * ( ( C302 * -8. * C299)  / 3. + C349)  - ( C315 * C327)  / 3.)  / C307)  + ( 0.0042 * C355)  / 3. - ( 0.0042 * ( ( C312 * 40. * C320)  / 3. + C355) )  / 3.)  - ( C357 * 16. * std::pow(C85, 13. / 3.))  / 3.)  / std::pow(C85, 32. / 3.))  + C361 / 3. + ( ( C338 * 4. * C308)  / 3. + C361)  / 3.)  + C363 / C106 - ( C106 * ( C342 * ( C108 * 2 * C346 + ( 2 * std::pow(C302, 2))  / C106)  + C363)  - ( C348 * C296)  / 3.)  / C321)  - ( ( C181 * C362 - C348 / C106)  * std::pow(C108, 3) * 4 * C302)  / C106)  / std::pow(C108, 8) + ( ( ( ( C98 + ( 0.0042 * C104)  / C108)  * -8. * std::pow(rhoa, C303))  / 3. + ( 4. * C308 * C338)  / C181)  / 3. + ( C181 * 4. * ( C182 * C359 + ( C338 * C308)  / 3.)  - ( 4. * C182 * C338 * C325)  / C106)  / C306)  / 3.) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;
        const double C198 = 0.0252 * C90;
        const double C199 = std::asinh(C95);
        const double C200 = std::pow(C86, C87);
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;

                result.d3e_drararb = 0;
                result.d3e_drarbrb = 0;
            }

            if (rhob >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;
        const double C367 = -8. * C204;
        const double C368 = 4. * C209;
        const double C369 = 4. * C214;
        const double C370 = 8. * C215;
        const double C371 = 24. * C215;
        const double C372 = C116 * C203;
        const double C373 = gammabb * C214;
        const double C374 = 0;
        const double C375 = 0;
        const double C376 =  - C217;
        const double C377 = -5. / 3.;
        const double C378 = 2. / 3.;
        const double C379 = 16. / 3.;
        const double C380 = std::pow(C118, 4);
        const double C381 = std::pow(C213, 2);
        const double C382 = std::pow(rhob, C206);
        const double C383 = -0.0336 * C373;
        const double C384 = 2 * C376;
        const double C385 = 3. * C372;
        const double C386 = C114 * C376;
        const double C387 = C115 * C369;
        const double C388 = C204 * C376;
        const double C389 = C376 * C367;
        const double C390 = C77 * C371;
        const double C391 = 0;
        const double C392 = C374 / 3.;
        const double C393 = std::pow(C70, C377);
        const double C394 = std::pow(C70, C378);
        const double C395 = std::pow(C70, C379);
        const double C396 = -0.0336 * C388;
        const double C397 = 0.0042 * C386;
        const double C398 = C118 * C383;
        const double C399 = C118 * C384;
        const double C400 = C386 * C370;
        const double C401 = C390 + C385;
        const double C402 = C391 + C392;
        const double C403 = C387 / 3.;
        const double C404 = C389 / C213;
        const double C405 = 0.0042 * C400;
        const double C406 = C216 * C401;
        const double C407 = C403 + C374;
        const double C408 = C396 / C116;
        const double C409 = C397 / C116;
        const double C410 = C398 / 3.;
        const double C411 = C410 + C408;
        const double C412 = C219 - C409;
        const double C413 = C405 / 3.;
        const double C414 = C406 / 3.;
        const double C415 = C407 / 3.;
        const double C416 = C210 * C412;
        const double C417 = C213 * C411;
        const double C418 = C411 * C401;
        const double C419 = C412 * C368;
        const double C420 = C402 - C415;
        const double C421 = C114 * C420;
        const double C422 = C416 * C399;
        const double C423 = C420 * C367;
        const double C424 = C417 - C414;
        const double C425 = C419 / 3.;
        const double C426 = C421 + C404;
        const double C427 = C424 / C381;
        const double C428 = 0.0042 * C426;
        const double C429 = C426 * C370;
        const double C430 = C116 * C428;
        const double C431 = C430 - C413;
        const double C432 = C431 / C395;
        const double C433 = C427 - C432;
        const double C434 = C210 * C433;
        const double C435 = C433 * C368;
        const double C436 = C434 + C425;
        const double C437 = C436 * C399;

                result.d3e_drbrbrb =  - ( ( C380 * ( C208 * ( C210 * ( ( C381 * ( C213 * ( ( ( C118 * -0.0336 * gammabb * -2. * C393)  / 3. + ( -0.0336 * C373 * C376)  / C116)  / 3. + ( C116 * -0.0336 * ( C204 * C420 + ( C376 * C373)  / 3.)  - ( -0.0336 * C388 * C370)  / 3.)  / C395)  + C418 / 3. - ( ( C216 * ( C77 * 120. * C394 + 24. * C215 * C203 + 3. * ( C116 * C369 + 4. * C113 * C370) ) )  / 3. + C418)  / 3.)  - ( C424 * C213 * 2 * C401)  / 3.)  / std::pow(C213, 4) - ( C395 * ( C116 * 0.0042 * ( C423 / C213 - ( C114 * C115 * -8. * C393)  / 27. + ( C213 * ( ( C376 * -8. * C373)  / 3. + C423)  - ( C389 * C401)  / 3.)  / C381)  + ( 0.0042 * C429)  / 3. - ( 0.0042 * ( ( C386 * 40. * C394)  / 3. + C429) )  / 3.)  - ( C431 * 16. * std::pow(C70, 13. / 3.))  / 3.)  / std::pow(C70, 32. / 3.))  + C435 / 3. + ( ( C412 * 4. * C382)  / 3. + C435)  / 3.)  + C437 / C116 - ( C116 * ( C416 * ( C118 * 2 * C420 + ( 2 * std::pow(C376, 2))  / C116)  + C437)  - ( C422 * C370)  / 3.)  / C395)  - ( ( C208 * C436 - C422 / C116)  * std::pow(C118, 3) * 4 * C376)  / C116)  / std::pow(C118, 8) + ( ( ( ( C82 + ( 0.0042 * C114)  / C118)  * -8. * std::pow(rhob, C377))  / 3. + ( 4. * C382 * C412)  / C208)  / 3. + ( C208 * 4. * ( C209 * C433 + ( C412 * C382)  / 3.)  - ( 4. * C209 * C412 * C399)  / C116)  / C380)  / 3.) ;
            }

            // Third derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;
        const double C710 = 0.0042 * C161;
        const double C711 = 0;
        const double C712 = 2 * C271;
        const double C713 = C154 * C271;
        const double C714 = C268 * C271;
        const double C715 = C270 * C272;
        const double C716 = C271 * C154;
        const double C717 = 0;
        const double C718 = C264 / C154;
        const double C719 = C270 / C273;
        const double C720 = C271 / C265;
        const double C721 = std::pow(C161, 2);
        const double C722 = std::pow(C265, 2);
        const double C723 = std::pow(C273, 2);
        const double C724 = 0.0042 * C713;
        const double C725 = 0.0042 * C714;
        const double C726 = C161 * C712;
        const double C727 = C711 - C718;
        const double C728 = C710 / C265;
        const double C729 = C715 / C265;
        const double C730 = C716 / C273;
        const double C731 = C724 / C156;
        const double C732 = C725 / C156;
        const double C733 = C727 / C722;
        const double C734 = C728 + C731;
        const double C735 = C733 + C717;
        const double C736 = C719 - C732;
        const double C737 = C268 * C735;
        const double C738 = C269 * C736;
        const double C739 = C273 * C734;
        const double C740 = C734 * C272;
        const double C741 = C735 * C154;
        const double C742 = C737 + C730;
        const double C743 = C739 - C729;
        const double C744 = 0.0042 * C742;
        const double C745 = C743 / C723;
        const double C746 = C744 / C156;
        const double C747 = C745 - C746;
        const double C748 = C269 * C747;
        const double C749 = C748 * C726;

                result.d3e_dgaagaagaa =  - ( std::pow(C161, 4) * ( C721 * C269 * ( ( C723 * ( C273 * ( ( ( 2 * C154 * 0.0042 * C271)  / C156 - C710 / C154)  / C722 + ( 0.0042 * ( C154 * C735 + C720) )  / C156)  + C740 / C265 - ( 2 * C154 * C740 - C715 / C154)  / C722)  - ( C743 * C154 * std::pow(C152, 16. / 3.))  / C154)  / std::pow(C273, 4) - ( 0.0042 * ( ( C268 * ( ( C722 * C271)  / gammaaa - ( C727 * 4 * C154)  / C154) )  / std::pow(C265, 4) + C741 / C273 + ( C273 * ( C720 + C741)  - ( C716 * C272)  / C265)  / C723) )  / C156)  + C749 / C156 - ( C738 * ( C161 * 2 * C735 + ( 2 * std::pow(C271, 2))  / C156)  + C749)  / C156)  - ( ( C721 * C748 - ( C738 * C726)  / C156)  * std::pow(C161, 3) * 4 * C271)  / C156)  / std::pow(C161, 8);
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;

                result.d3e_dgaagaagab = 0;
                result.d3e_dgaagabgab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;

                result.d3e_dgaagaagbb = 0;
                result.d3e_dgaagbbgbb = 0;
            }

            if (gammaaa >= eps && gammaab >= eps && gammabb >= eps) {
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;

                result.d3e_dgaagabgbb = 0;
            }

            if (gammaab >= eps) {

                result.d3e_dgabgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;

                result.d3e_dgabgabgbb = 0;
                result.d3e_dgabgbbgbb = C282;
            }

            if (gammabb >= eps) {
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;
        const double C759 = 0.0042 * C173;
        const double C760 = 0;
        const double C761 = 2 * C287;
        const double C762 = C166 * C287;
        const double C763 = C284 * C287;
        const double C764 = C286 * C288;
        const double C765 = C287 * C166;
        const double C766 = 0;
        const double C767 = C280 / C166;
        const double C768 = C286 / C289;
        const double C769 = C287 / C281;
        const double C770 = std::pow(C173, 2);
        const double C771 = std::pow(C281, 2);
        const double C772 = std::pow(C289, 2);
        const double C773 = 0.0042 * C762;
        const double C774 = 0.0042 * C763;
        const double C775 = C173 * C761;
        const double C776 = C760 - C767;
        const double C777 = C759 / C281;
        const double C778 = C764 / C281;
        const double C779 = C765 / C289;
        const double C780 = C773 / C168;
        const double C781 = C774 / C168;
        const double C782 = C776 / C771;
        const double C783 = C777 + C780;
        const double C784 = C782 + C766;
        const double C785 = C768 - C781;
        const double C786 = C284 * C784;
        const double C787 = C285 * C785;
        const double C788 = C289 * C783;
        const double C789 = C783 * C288;
        const double C790 = C784 * C166;
        const double C791 = C786 + C779;
        const double C792 = C788 - C778;
        const double C793 = 0.0042 * C791;
        const double C794 = C792 / C772;
        const double C795 = C793 / C168;
        const double C796 = C794 - C795;
        const double C797 = C285 * C796;
        const double C798 = C797 * C775;

                result.d3e_dgbbgbbgbb =  - ( std::pow(C173, 4) * ( C770 * C285 * ( ( C772 * ( C289 * ( ( ( 2 * C166 * 0.0042 * C287)  / C168 - C759 / C166)  / C771 + ( 0.0042 * ( C166 * C784 + C769) )  / C168)  + C789 / C281 - ( 2 * C166 * C789 - C764 / C166)  / C771)  - ( C792 * C166 * std::pow(C164, 16. / 3.))  / C166)  / std::pow(C289, 4) - ( 0.0042 * ( ( C284 * ( ( C771 * C287)  / gammabb - ( C776 * 4 * C166)  / C166) )  / std::pow(C281, 4) + C790 / C289 + ( C289 * ( C769 + C790)  - ( C765 * C288)  / C281)  / C772) )  / C168)  + C798 / C168 - ( C787 * ( C173 * 2 * C784 + ( 2 * std::pow(C287, 2))  / C168)  + C798)  / C168)  - ( ( C770 * C797 - ( C787 * C775)  / C168)  * std::pow(C173, 3) * 4 * C287)  / C168)  / std::pow(C173, 8);
            }

            // Mixed third derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;
        const double C225 = 0.0252 * C102;
        const double C226 = 2 * C89;
        const double C227 = 3. * C106;
        const double C228 = 4. * C103;
        const double C229 = C103 * gammaaa;
        const double C230 = C89 * C106;
        const double C231 = 0;
        const double C232 = 0;
        const double C233 = std::pow(C108, 2);
        const double C234 = std::pow(rhoa, C88);
        const double C235 = C105 * C228;
        const double C236 = C92 * C227;
        const double C237 = C225 / C226;
        const double C238 = C237 + C232;
        const double C239 = C235 / 3.;
        const double C240 = C231 - C239;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;
        const double C439 = -8. * C177;
        const double C440 = -0.0336 * C103;
        const double C441 = 2 * C237;
        const double C442 = 4. * C182;
        const double C443 = 4. * C187;
        const double C444 = 8. * C188;
        const double C445 = 24. * C188;
        const double C446 = C106 * C176;
        const double C447 = C177 * C237;
        const double C448 = 0;
        const double C449 = gammaaa * C187;
        const double C450 = 0;
        const double C451 = C237 * C176;
        const double C452 = C237;
        const double C453 = 0;
        const double C454 =  - C190;
        const double C455 = 16. / 3.;
        const double C456 = std::pow(C108, 4);
        const double C457 = std::pow(C186, 2);
        const double C458 = -0.0336 * C447;
        const double C459 = -0.0336 * C449;
        const double C460 = 2 * C454;
        const double C461 = 3. * C446;
        const double C462 = C104 * C454;
        const double C463 = C105 * C443;
        const double C464 = C108 * C440;
        const double C465 = C108 * C441;
        const double C466 = C177 * C454;
        const double C467 = C454 * C439;
        const double C468 = C454 * C89;
        const double C469 = C92 * C445;
        const double C470 = 0;
        const double C471 = C450 / 3.;
        const double C472 = C451 / 3.;
        const double C473 = std::pow(C85, C455);
        const double C474 = -0.0336 * C466;
        const double C475 = 0.0042 * C462;
        const double C476 = C108 * C459;
        const double C477 = C108 * C460;
        const double C478 = C462 * C444;
        const double C479 = C469 + C461;
        const double C480 = C470 + C471;
        const double C481 = C448 - C472;
        const double C482 = C458 / C92;
        const double C483 = C463 / 3.;
        const double C484 = C467 / C186;
        const double C485 = C468 / C230;
        const double C486 = 0.0042 * C478;
        const double C487 = C104 * C481;
        const double C488 = C189 * C479;
        const double C489 = C464 + C482;
        const double C490 = C483 + C450;
        const double C491 = C474 / C106;
        const double C492 = C475 / C106;
        const double C493 = C476 / 3.;
        const double C494 = C487 + C485;
        const double C495 = C493 + C491;
        const double C496 = C192 - C492;
        const double C497 = C486 / 3.;
        const double C498 = C488 / 3.;
        const double C499 = C489 / C186;
        const double C500 = C490 / 3.;
        const double C501 = 0.0042 * C494;
        const double C502 = C183 * C496;
        const double C503 = C186 * C495;
        const double C504 = C496 * C442;
        const double C505 = C480 - C500;
        const double C506 = C104 * C505;
        const double C507 = C503 - C498;
        const double C508 = C501 / C106;
        const double C509 = C504 / 3.;
        const double C510 = C506 + C484;
        const double C511 = C499 - C508;
        const double C512 = C507 / C457;
        const double C513 = 0.0042 * C510;
        const double C514 = C106 * C513;
        const double C515 = C514 - C497;
        const double C516 = C515 / C473;
        const double C517 = C512 - C516;
        const double C518 = C183 * C517;
        const double C519 = C518 + C509;
        const double C610 = -0.0336 * C103;
        const double C611 = -0.0336 * C229;
        const double C612 = 0.0042 * C89;
        const double C613 = 0;
        const double C614 = 2 * C237;
        const double C615 = C103 * C237;
        const double C616 = C229 * C237;
        const double C617 = 0;
        const double C618 = C237 * C228;
        const double C619 = 0;
        const double C620 =  - C239;
        const double C621 = C225 / C89;
        const double C622 = std::pow(C226, 2);
        const double C623 = std::pow(C230, 2);
        const double C624 = std::pow(rhoa, C87);
        const double C625 = -0.0336 * C616;
        const double C626 = C104 * C620;
        const double C627 = C108 * C610;
        const double C628 = C108 * C611;
        const double C629 = C108 * C612;
        const double C630 = C108 * C614;
        const double C631 = C620 * C89;
        const double C632 = C613 - C621;
        const double C633 = C618 / 3.;
        const double C634 = 0.0042 * C626;
        const double C635 = C617 - C633;
        const double C636 = C625 / C92;
        const double C637 = C628 / C236;
        const double C638 = C631 / C230;
        const double C639 = C632 / C622;
        const double C640 = C104 * C635;
        const double C641 = C635 * C89;
        const double C642 = C627 + C636;
        const double C643 = C639 + C619;
        const double C644 = C634 / C106;
        const double C645 = C640 + C638;
        const double C646 = C637 - C644;
        const double C647 = C642 / C236;
        const double C648 = 0.0042 * C645;
        const double C649 = C234 * C646;
        const double C650 = C648 / C106;
        const double C651 = C647 - C650;
        const double C652 = C234 * C651;
        const double C653 = C652 * C630;

                result.d3e_draragaa =  - ( ( C456 * ( C181 * ( C183 * ( ( C186 * ( ( C108 * -0.0336 * C187 + ( -0.0336 * C449 * C452)  / C92)  / 3. + ( -0.0336 * ( C177 * C481 + C103 * C454) )  / C106)  - ( C489 * C479)  / 3.)  / C457 - ( C106 * 0.0042 * ( ( C505 * C89)  / C230 - ( C104 * C452 * C443)  / 9. + ( C454 * -8. * C103 + C481 * C439)  / C186)  - ( 0.0042 * C494 * C444)  / 3.)  / C473)  + ( C511 * C442)  / 3.)  + ( C519 * C465)  / C92 - ( C502 * ( C108 * 2 * C481 + ( 2 * C454 * C452)  / C92)  + C183 * C511 * C477)  / C106)  - ( ( C181 * C519 - ( C502 * C477)  / C106)  * std::pow(C108, 3) * 4 * C452)  / C92)  / std::pow(C108, 8) + ( ( 4. * std::pow(rhoa, C179) * ( ( C108 * 0.0042 * C89)  / C230 - ( 0.0042 * C104 * C452)  / C92) )  / ( 3. * C181)  + ( C181 * 4. * C182 * C511 - ( 4. * C182 * C496 * C465)  / C92)  / C456)  / 3.) ;
                result.d3e_dragaagaa =  - ( ( std::pow(C108, 4) * ( C233 * C234 * ( ( -0.0336 * C615 - 0.0336 * ( C229 * C643 + C615) )  / ( 3. * std::pow(C85, 16. / 3.))  - ( 0.0042 * ( C641 / C230 - ( C104 * C643 * C228)  / 3. + ( C230 * ( C620 / C226 + C641)  - ( C631 * C106)  / C226)  / C623) )  / C106)  + C653 / C92 - ( C649 * ( C108 * 2 * C643 + ( 2 * std::pow(C237, 2))  / C92)  + C653)  / C92)  - ( ( C233 * C652 - ( C649 * C630)  / C92)  * std::pow(C108, 3) * 4 * C237)  / C92)  / std::pow(C108, 8) + ( 3. * C233 * 4. * C624 * ( ( C230 * ( ( 0.0042 * C108)  / C226 + ( 0.0042 * C89 * C237)  / C92)  - ( C629 * C106)  / C226)  / C623 - ( 0.0042 * ( C104 * C643 + ( C237 * C89)  / C230) )  / C92)  - ( 4. * C624 * ( C629 / C230 - ( 0.0042 * C104 * C237)  / C92)  * 3. * C630)  / C92)  / std::pow(3. * C233, 2)) ;
            }

            if (rhoa >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C225 = 0.0252 * C102;
        const double C226 = 2 * C89;
        const double C227 = 3. * C106;
        const double C228 = 4. * C103;
        const double C229 = C103 * gammaaa;
        const double C230 = C89 * C106;
        const double C231 = 0;
        const double C232 = 0;
        const double C233 = std::pow(C108, 2);
        const double C234 = std::pow(rhoa, C88);
        const double C235 = C105 * C228;
        const double C236 = C92 * C227;
        const double C237 = C225 / C226;
        const double C238 = C237 + C232;
        const double C239 = C235 / 3.;
        const double C240 = C231 - C239;

                result.d3e_dragaagab = 0;
            }

            if (rhoa >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C225 = 0.0252 * C102;
        const double C226 = 2 * C89;
        const double C227 = 3. * C106;
        const double C228 = 4. * C103;
        const double C229 = C103 * gammaaa;
        const double C230 = C89 * C106;
        const double C231 = 0;
        const double C232 = 0;
        const double C233 = std::pow(C108, 2);
        const double C234 = std::pow(rhoa, C88);
        const double C235 = C105 * C228;
        const double C236 = C92 * C227;
        const double C237 = C225 / C226;
        const double C238 = C237 + C232;
        const double C239 = C235 / 3.;
        const double C240 = C231 - C239;

                result.d3e_dragaagbb = 0;
            }

            if (rhoa >= eps && rhob >= eps && gammaaa >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C198 = 0.0252 * C90;
        const double C199 = std::asinh(C95);
        const double C200 = std::pow(C86, C87);
        const double C225 = 0.0252 * C102;
        const double C226 = 2 * C89;
        const double C227 = 3. * C106;
        const double C228 = 4. * C103;
        const double C229 = C103 * gammaaa;
        const double C230 = C89 * C106;
        const double C231 = 0;
        const double C232 = 0;
        const double C233 = std::pow(C108, 2);
        const double C234 = std::pow(rhoa, C88);
        const double C235 = C105 * C228;
        const double C236 = C92 * C227;
        const double C237 = C225 / C226;
        const double C238 = C237 + C232;
        const double C239 = C235 / 3.;
        const double C240 = C231 - C239;

                result.d3e_drarbgaa = 0;
            }

            if (rhoa >= eps && rhob >= eps && gammaab >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C198 = 0.0252 * C90;
        const double C199 = std::asinh(C95);
        const double C200 = std::pow(C86, C87);

                result.d3e_drarbgab = 0;
            }

            if (rhoa >= eps && rhob >= eps && gammabb >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C198 = 0.0252 * C90;
        const double C199 = std::asinh(C95);
        const double C200 = std::pow(C86, C87);
        const double C246 = 0.0252 * C112;
        const double C247 = 2 * C74;
        const double C248 = 3. * C116;
        const double C249 = 4. * C113;
        const double C250 = C113 * gammabb;
        const double C251 = C74 * C116;
        const double C252 = 0;
        const double C253 = 0;
        const double C254 = std::pow(C118, 2);
        const double C255 = std::pow(rhob, C72);
        const double C256 = C115 * C249;
        const double C257 = C77 * C248;
        const double C258 = C246 / C247;
        const double C259 = C258 + C253;
        const double C260 = C256 / 3.;
        const double C261 = C252 - C260;

                result.d3e_drarbgbb = 0;
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;

                result.d3e_draragab = 0;
                result.d3e_dragabgab = 0;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C84 = 4. * Pi;
        const double C85 = rhoa + 1e-16;
        const double C86 = rhob + 1e-16;
        const double C87 = 1. / 3.;
        const double C88 = 4. / 3.;
        const double C89 = std::sqrt(gammaaa);
        const double C90 = std::sqrt(gammabb);
        const double C91 = 3. / C84;
        const double C92 = std::pow(C85, C88);
        const double C93 = std::pow(C86, C88);
        const double C94 = C89 / C92;
        const double C95 = C90 / C93;
        const double C96 = std::pow(C91, C87);
        const double C97 = 3. * C96;
        const double C98 = C97 / 2.;
        const double C100 = 0.0252 * C89;
        const double C101 = 8. / 3.;
        const double C102 = std::asinh(C94);
        const double C103 = std::pow(C85, C87);
        const double C104 = std::pow(C94, 2);
        const double C105 = C102 * C100;
        const double C106 = std::pow(C85, C101);
        const double C107 = C105 / C92;
        const double C108 = C107 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C175 = 3. * C106;
        const double C176 = 4. * C103;
        const double C177 = C103 * gammaaa;
        const double C178 = 0;
        const double C179 = -2. / 3.;
        const double C180 = 5. / 3.;
        const double C181 = std::pow(C108, 2);
        const double C182 = std::pow(rhoa, C87);
        const double C183 = std::pow(rhoa, C88);
        const double C184 = -0.0336 * C177;
        const double C185 = C105 * C176;
        const double C186 = C92 * C175;
        const double C187 = std::pow(C85, C179);
        const double C188 = std::pow(C85, C180);
        const double C189 = C108 * C184;
        const double C190 = C185 / 3.;
        const double C191 = C178 - C190;
        const double C192 = C189 / C186;
        const double C193 = C104 * C191;
        const double C194 = 0.0042 * C193;
        const double C195 = C194 / C106;
        const double C196 = C192 - C195;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;

                result.d3e_draragbb = 0;
                result.d3e_dragbbgbb = 0;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;
        const double C263 = 0.0042 * C154;
        const double C264 = 0.0252 * C158;
        const double C265 = 2 * C154;
        const double C266 = 0;
        const double C267 = 8. / 3.;
        const double C268 = std::pow(C157, 2);
        const double C269 = std::pow(rhoa, C153);
        const double C270 = C161 * C263;
        const double C271 = C264 / C265;
        const double C272 = std::pow(C152, C267);
        const double C273 = C154 * C272;
        const double C274 = C271 + C266;

                result.d3e_drbrbgaa = 0;
                result.d3e_drbgaagaa = 0;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;

                result.d3e_drbrbgab = 0;
                result.d3e_drbgabgab = 0;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C202 = 3. * C116;
        const double C203 = 4. * C113;
        const double C204 = C113 * gammabb;
        const double C205 = 0;
        const double C206 = -2. / 3.;
        const double C207 = 5. / 3.;
        const double C208 = std::pow(C118, 2);
        const double C209 = std::pow(rhob, C71);
        const double C210 = std::pow(rhob, C72);
        const double C211 = -0.0336 * C204;
        const double C212 = C115 * C203;
        const double C213 = C77 * C202;
        const double C214 = std::pow(C70, C206);
        const double C215 = std::pow(C70, C207);
        const double C216 = C118 * C211;
        const double C217 = C212 / 3.;
        const double C218 = C205 - C217;
        const double C219 = C216 / C213;
        const double C220 = C114 * C218;
        const double C221 = 0.0042 * C220;
        const double C222 = C221 / C116;
        const double C223 = C219 - C222;
        const double C246 = 0.0252 * C112;
        const double C247 = 2 * C74;
        const double C248 = 3. * C116;
        const double C249 = 4. * C113;
        const double C250 = C113 * gammabb;
        const double C251 = C74 * C116;
        const double C252 = 0;
        const double C253 = 0;
        const double C254 = std::pow(C118, 2);
        const double C255 = std::pow(rhob, C72);
        const double C256 = C115 * C249;
        const double C257 = C77 * C248;
        const double C258 = C246 / C247;
        const double C259 = C258 + C253;
        const double C260 = C256 / 3.;
        const double C261 = C252 - C260;
        const double C279 = 0.0042 * C166;
        const double C280 = 0.0252 * C170;
        const double C281 = 2 * C166;
        const double C282 = 0;
        const double C283 = 8. / 3.;
        const double C284 = std::pow(C169, 2);
        const double C285 = std::pow(rhob, C165);
        const double C286 = C173 * C279;
        const double C287 = C280 / C281;
        const double C288 = std::pow(C164, C283);
        const double C289 = C166 * C288;
        const double C290 = C287 + C282;
        const double C528 = -8. * C204;
        const double C529 = -0.0336 * C113;
        const double C530 = 2 * C258;
        const double C531 = 4. * C209;
        const double C532 = 4. * C214;
        const double C533 = 8. * C215;
        const double C534 = 24. * C215;
        const double C535 = C116 * C203;
        const double C536 = C204 * C258;
        const double C537 = 0;
        const double C538 = gammabb * C214;
        const double C539 = 0;
        const double C540 = C258 * C203;
        const double C541 = C258;
        const double C542 = 0;
        const double C543 =  - C217;
        const double C544 = 16. / 3.;
        const double C545 = std::pow(C118, 4);
        const double C546 = std::pow(C213, 2);
        const double C547 = -0.0336 * C536;
        const double C548 = -0.0336 * C538;
        const double C549 = 2 * C543;
        const double C550 = 3. * C535;
        const double C551 = C114 * C543;
        const double C552 = C115 * C532;
        const double C553 = C118 * C529;
        const double C554 = C118 * C530;
        const double C555 = C204 * C543;
        const double C556 = C543 * C528;
        const double C557 = C543 * C74;
        const double C558 = C77 * C534;
        const double C559 = 0;
        const double C560 = C539 / 3.;
        const double C561 = C540 / 3.;
        const double C562 = std::pow(C70, C544);
        const double C563 = -0.0336 * C555;
        const double C564 = 0.0042 * C551;
        const double C565 = C118 * C548;
        const double C566 = C118 * C549;
        const double C567 = C551 * C533;
        const double C568 = C558 + C550;
        const double C569 = C559 + C560;
        const double C570 = C537 - C561;
        const double C571 = C547 / C77;
        const double C572 = C552 / 3.;
        const double C573 = C556 / C213;
        const double C574 = C557 / C251;
        const double C575 = 0.0042 * C567;
        const double C576 = C114 * C570;
        const double C577 = C216 * C568;
        const double C578 = C553 + C571;
        const double C579 = C572 + C539;
        const double C580 = C563 / C116;
        const double C581 = C564 / C116;
        const double C582 = C565 / 3.;
        const double C583 = C576 + C574;
        const double C584 = C582 + C580;
        const double C585 = C219 - C581;
        const double C586 = C575 / 3.;
        const double C587 = C577 / 3.;
        const double C588 = C578 / C213;
        const double C589 = C579 / 3.;
        const double C590 = 0.0042 * C583;
        const double C591 = C210 * C585;
        const double C592 = C213 * C584;
        const double C593 = C585 * C531;
        const double C594 = C569 - C589;
        const double C595 = C114 * C594;
        const double C596 = C592 - C587;
        const double C597 = C590 / C116;
        const double C598 = C593 / 3.;
        const double C599 = C595 + C573;
        const double C600 = C588 - C597;
        const double C601 = C596 / C546;
        const double C602 = 0.0042 * C599;
        const double C603 = C116 * C602;
        const double C604 = C603 - C586;
        const double C605 = C604 / C562;
        const double C606 = C601 - C605;
        const double C607 = C210 * C606;
        const double C608 = C607 + C598;
        const double C665 = -0.0336 * C113;
        const double C666 = -0.0336 * C250;
        const double C667 = 0.0042 * C74;
        const double C668 = 0;
        const double C669 = 2 * C258;
        const double C670 = C113 * C258;
        const double C671 = C250 * C258;
        const double C672 = 0;
        const double C673 = C258 * C249;
        const double C674 = 0;
        const double C675 =  - C260;
        const double C676 = C246 / C74;
        const double C677 = std::pow(C247, 2);
        const double C678 = std::pow(C251, 2);
        const double C679 = std::pow(rhob, C71);
        const double C680 = -0.0336 * C671;
        const double C681 = C114 * C675;
        const double C682 = C118 * C665;
        const double C683 = C118 * C666;
        const double C684 = C118 * C667;
        const double C685 = C118 * C669;
        const double C686 = C675 * C74;
        const double C687 = C668 - C676;
        const double C688 = C673 / 3.;
        const double C689 = 0.0042 * C681;
        const double C690 = C672 - C688;
        const double C691 = C680 / C77;
        const double C692 = C683 / C257;
        const double C693 = C686 / C251;
        const double C694 = C687 / C677;
        const double C695 = C114 * C690;
        const double C696 = C690 * C74;
        const double C697 = C682 + C691;
        const double C698 = C694 + C674;
        const double C699 = C689 / C116;
        const double C700 = C695 + C693;
        const double C701 = C692 - C699;
        const double C702 = C697 / C257;
        const double C703 = 0.0042 * C700;
        const double C704 = C255 * C701;
        const double C705 = C703 / C116;
        const double C706 = C702 - C705;
        const double C707 = C255 * C706;
        const double C708 = C707 * C685;

                result.d3e_drbrbgbb =  - ( ( C545 * ( C208 * ( C210 * ( ( C213 * ( ( C118 * -0.0336 * C214 + ( -0.0336 * C538 * C541)  / C77)  / 3. + ( -0.0336 * ( C204 * C570 + C113 * C543) )  / C116)  - ( C578 * C568)  / 3.)  / C546 - ( C116 * 0.0042 * ( ( C594 * C74)  / C251 - ( C114 * C541 * C532)  / 9. + ( C543 * -8. * C113 + C570 * C528)  / C213)  - ( 0.0042 * C583 * C533)  / 3.)  / C562)  + ( C600 * C531)  / 3.)  + ( C608 * C554)  / C77 - ( C591 * ( C118 * 2 * C570 + ( 2 * C543 * C541)  / C77)  + C210 * C600 * C566)  / C116)  - ( ( C208 * C608 - ( C591 * C566)  / C116)  * std::pow(C118, 3) * 4 * C541)  / C77)  / std::pow(C118, 8) + ( ( 4. * std::pow(rhob, C206) * ( ( C118 * 0.0042 * C74)  / C251 - ( 0.0042 * C114 * C541)  / C77) )  / ( 3. * C208)  + ( C208 * 4. * C209 * C600 - ( 4. * C209 * C585 * C554)  / C77)  / C545)  / 3.) ;
                result.d3e_drbgbbgbb =  - ( ( std::pow(C118, 4) * ( C254 * C255 * ( ( -0.0336 * C670 - 0.0336 * ( C250 * C698 + C670) )  / ( 3. * std::pow(C70, 16. / 3.))  - ( 0.0042 * ( C696 / C251 - ( C114 * C698 * C249)  / 3. + ( C251 * ( C675 / C247 + C696)  - ( C686 * C116)  / C247)  / C678) )  / C116)  + C708 / C77 - ( C704 * ( C118 * 2 * C698 + ( 2 * std::pow(C258, 2))  / C77)  + C708)  / C77)  - ( ( C254 * C707 - ( C704 * C685)  / C77)  * std::pow(C118, 3) * 4 * C258)  / C77)  / std::pow(C118, 8) + ( 3. * C254 * 4. * C679 * ( ( C251 * ( ( 0.0042 * C118)  / C247 + ( 0.0042 * C74 * C258)  / C77)  - ( C684 * C116)  / C247)  / C678 - ( 0.0042 * ( C114 * C698 + ( C258 * C74)  / C251) )  / C77)  - ( 4. * C679 * ( C684 / C251 - ( 0.0042 * C114 * C258)  / C77)  * 3. * C685)  / C77)  / std::pow(3. * C254, 2)) ;
            }

            if (rhob >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;

                result.d3e_drbgaagab = 0;
            }

            if (rhob >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C152 = rhoa + 1e-16;
        const double C153 = 4. / 3.;
        const double C154 = std::sqrt(gammaaa);
        const double C155 = 0.0252 * C154;
        const double C156 = std::pow(C152, C153);
        const double C157 = C154 / C156;
        const double C158 = std::asinh(C157);
        const double C159 = C158 * C155;
        const double C160 = C159 / C156;
        const double C161 = C160 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C246 = 0.0252 * C112;
        const double C247 = 2 * C74;
        const double C248 = 3. * C116;
        const double C249 = 4. * C113;
        const double C250 = C113 * gammabb;
        const double C251 = C74 * C116;
        const double C252 = 0;
        const double C253 = 0;
        const double C254 = std::pow(C118, 2);
        const double C255 = std::pow(rhob, C72);
        const double C256 = C115 * C249;
        const double C257 = C77 * C248;
        const double C258 = C246 / C247;
        const double C259 = C258 + C253;
        const double C260 = C256 / 3.;
        const double C261 = C252 - C260;

                result.d3e_drbgaagbb = 0;
            }

            if (rhob >= eps && gammaab >= eps && gammabb >= eps) {
        const double C68 = 4. * Pi;
        const double C69 = rhoa + 1e-16;
        const double C70 = rhob + 1e-16;
        const double C71 = 1. / 3.;
        const double C72 = 4. / 3.;
        const double C73 = std::sqrt(gammaaa);
        const double C74 = std::sqrt(gammabb);
        const double C75 = 3. / C68;
        const double C76 = std::pow(C69, C72);
        const double C77 = std::pow(C70, C72);
        const double C78 = C73 / C76;
        const double C79 = C74 / C77;
        const double C80 = std::pow(C75, C71);
        const double C81 = 3. * C80;
        const double C82 = C81 / 2.;
        const double C110 = 0.0252 * C74;
        const double C111 = 8. / 3.;
        const double C112 = std::asinh(C79);
        const double C113 = std::pow(C70, C71);
        const double C114 = std::pow(C79, 2);
        const double C115 = C112 * C110;
        const double C116 = std::pow(C70, C111);
        const double C117 = C115 / C77;
        const double C118 = C117 + 1.;
        const double C164 = rhob + 1e-16;
        const double C165 = 4. / 3.;
        const double C166 = std::sqrt(gammabb);
        const double C167 = 0.0252 * C166;
        const double C168 = std::pow(C164, C165);
        const double C169 = C166 / C168;
        const double C170 = std::asinh(C169);
        const double C171 = C170 * C167;
        const double C172 = C171 / C168;
        const double C173 = C172 + 1.;
        const double C246 = 0.0252 * C112;
        const double C247 = 2 * C74;
        const double C248 = 3. * C116;
        const double C249 = 4. * C113;
        const double C250 = C113 * gammabb;
        const double C251 = C74 * C116;
        const double C252 = 0;
        const double C253 = 0;
        const double C254 = std::pow(C118, 2);
        const double C255 = std::pow(rhob, C72);
        const double C256 = C115 * C249;
        const double C257 = C77 * C248;
        const double C258 = C246 / C247;
        const double C259 = C258 + C253;
        const double C260 = C256 / 3.;
        const double C261 = C252 - C260;

                result.d3e_drbgabgbb = 0;
            }

            return result;
        }
    }
}

