/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated file, do not modify
#include "xc_kit/xc_functionals.hpp"

#include <cmath>
#include <limits>

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated, do not modify
namespace niedoida {
    namespace xc {
        XCFunctionalData lyp_c_functional(
            double rhoa, double rhob, 
            double gammaaa, double gammaab, double gammabb, 
            unsigned n)
        {
            const double eps = std::numeric_limits<double>::epsilon();
            const double Pi = 3.1415926535897932384626433832795028842;

            XCFunctionalData result;

            if (rhoa + rhob < 2 * eps)
                return result;

            // Value of the functional itself

            if (rhoa >= eps && rhob >= eps) {
        const double C47 = rhob * rhoa;
        const double C48 = rhoa + rhob;
        const double C49 = -11. / 3.;
        const double C50 = 1. / 3.;
        const double C51 = 8. / 3.;
        const double C52 = std::pow(C48, C49);
        const double C53 = std::pow(C48, C50);
        const double C54 = -0.2533 / C53;
        const double C55 = 0.2533 / C53;
        const double C56 = 0.349 / C53;
        const double C57 = C56 + 1;
        const double C58 = std::exp(C54);
        const double C59 = C52 * C58;
        const double C60 = C53 * C57;
        const double C61 = 0.00649176 * C59;
        const double C62 = 0.349 / C60;
        const double C63 = C55 + C62;
        const double C64 = 3 * C63;
        const double C65 = C63 - 11;
        const double C66 = 1 - C64;

                result.e =  - ( ( 0.19672 * rhoa * rhob)  / ( C48 * C57)  + ( ( std::pow(rhoa, C51) + std::pow(rhob, C51))  * rhob * rhoa * 0.00649176 * std::pow(3 * std::pow(Pi, 2), 2. / 3.) * 3. * std::pow(2, 11. / 3.) * C59)  / ( 10. * C57)  + ( gammaaa * ( ( ( C66 - ( C65 * rhoa)  / C48)  * C47)  / 9. - std::pow(rhob, 2))  * C61)  / C57 + ( gammaab * ( ( ( 47 - 7 * C63)  * C47)  / 9. - ( 4. * std::pow(C48, 2))  / 3.)  * C61)  / C57 + ( gammabb * ( ( ( C66 - ( C65 * rhob)  / C48)  * C47)  / 9. - std::pow(rhoa, 2))  * C61)  / C57) ;
            } else if (rhoa < eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;

                result.e =  - ( ( 0.19672 * rhoa * rhob)  / ( C72 * C81)  + ( ( std::pow(rhoa, C75) + std::pow(rhob, C75))  * rhob * rhoa * 0.00649176 * std::pow(3 * std::pow(Pi, 2), 2. / 3.) * 3. * std::pow(2, 11. / 3.) * C83)  / ( 10. * C81)  + ( gammaaa * ( ( ( C90 - ( C89 * rhoa)  / C72)  * C71)  / 9. - std::pow(rhob, 2))  * C85)  / C81 + ( gammaab * ( ( ( 47 - 7 * C87)  * C71)  / 9. - ( 4. * std::pow(C72, 2))  / 3.)  * C85)  / C81 + ( gammabb * ( ( ( C90 - ( C89 * rhob)  / C72)  * C71)  / 9. - std::pow(rhoa, 2))  * C85)  / C81) ;
            } else if (rhob < eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;

                result.e =  - ( ( 0.19672 * rhoa * rhob)  / ( C93 * C102)  + ( ( std::pow(rhoa, C96) + std::pow(rhob, C96))  * rhob * rhoa * 0.00649176 * std::pow(3 * std::pow(Pi, 2), 2. / 3.) * 3. * std::pow(2, 11. / 3.) * C104)  / ( 10. * C102)  + ( gammaaa * ( ( ( C111 - ( C110 * rhoa)  / C93)  * C92)  / 9. - std::pow(rhob, 2))  * C106)  / C102 + ( gammaab * ( ( ( 47 - 7 * C108)  * C92)  / 9. - ( 4. * std::pow(C93, 2))  / 3.)  * C106)  / C102 + ( gammabb * ( ( ( C111 - ( C110 * rhob)  / C93)  * C92)  / 9. - std::pow(rhoa, 2))  * C106)  / C102) ;
            }

            if (n < 1)
                return result;

            // First derivatives with respect to density

            if (rhoa >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;

                result.de_dra =  - ( ( C116 * 0.19672 * rhob - 0.19672 * rhoa * rhob * ( C101 - ( C93 * C142)  / C144 + 1) )  / std::pow(C116, 2) + ( 10. * C102 * ( C131 * rhob * ( rhoa * 0.00649176 * C155 * C174 + C167)  + ( C176 * 8. * std::pow(rhoa, 5. / 3.))  / 3.)  - ( C131 * C176 * -3.49 * C137)  / C144)  / std::pow(10. * C102, 2) + ( C102 * gammaaa * ( C169 * C175 + ( 0.00649176 * C104 * ( C147 * rhob - ( C180 + ( C93 * ( C108 + C179 * rhoa - 11)  - C114)  / C123)  * C92) )  / 9.)  - (  - ( gammaaa * C169 * C106 * C142)  / 3.)  / C138)  / C121 + ( C102 * gammaab * ( C162 * C175 + ( ( C132 * rhob - 7 * C179 * C92)  / 9. - ( 8. * C93)  / 3.)  * C106)  - (  - ( gammaab * C162 * C106 * C142)  / 3.)  / C138)  / C121 + ( C102 * gammabb * ( C170 * C175 + ( ( C148 * rhob - ( C180 + ( C93 * C179 * rhob - C115)  / C123)  * C92)  / 9. - 2 * rhoa)  * C106)  - (  - ( gammabb * C170 * C106 * C142)  / 3.)  / C138)  / C121) ;
            }

            if (rhob >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;

                result.de_drb =  - ( ( C183 * 0.19672 * rhoa - 0.19672 * rhoa * rhob * ( C80 - ( C72 * C211)  / C213 + 1) )  / std::pow(C183, 2) + ( 10. * C81 * ( C200 * ( rhob * rhoa * 0.00649176 * C222 * C243 + C242)  + ( C245 * 8. * std::pow(rhob, 5. / 3.))  / 3.)  - ( C200 * C245 * -3.49 * C206)  / C213)  / std::pow(10. * C81, 2) + ( C81 * gammaaa * ( C238 * C244 + ( ( C216 * rhoa - ( C249 + ( C72 * C248 * rhoa - C184)  / C190)  * C71)  / 9. - 2 * rhob)  * C85)  - (  - ( gammaaa * C238 * C85 * C211)  / 3.)  / C207)  / C191 + ( C81 * gammaab * ( C231 * C244 + ( ( C201 * rhoa - 7 * C248 * C71)  / 9. - ( 8. * C72)  / 3.)  * C85)  - (  - ( gammaab * C231 * C85 * C211)  / 3.)  / C207)  / C191 + ( C81 * gammabb * ( C239 * C244 + ( 0.00649176 * C83 * ( C217 * rhoa - ( C249 + ( C72 * ( C87 + C248 * rhob - 11)  - C185)  / C190)  * C71) )  / 9.)  - (  - ( gammabb * C239 * C85 * C211)  / 3.)  / C207)  / C191) ;
            }

            // First derivatives with respect to density gradient

            if (gammaaa >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;

                result.de_dgaa =  - ( ( ( ( 1 - 3 * C437 - ( ( C437 - 11)  * rhoa)  / C429)  * rhob * rhoa)  / 9. - std::pow(rhob, 2))  * 0.00649176 * std::pow(C429, -11. / 3.) * std::exp(-0.2533 / C431))  / C434;
            }

            if (gammaab >= eps) {
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.de_dgab =  - ( ( ( ( 47 - 7 * ( 0.2533 / C441 + 0.349 / ( C441 * C443) ) )  * rhob * rhoa)  / 9. - ( 4. * std::pow(C439, 2))  / 3.)  * 0.00649176 * std::pow(C439, -11. / 3.) * std::exp(-0.2533 / C441))  / C443;
            }

            if (gammabb >= eps) {
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.de_dgbb =  - ( ( ( ( 1 - 3 * C453 - ( ( C453 - 11)  * rhob)  / C445)  * rhob * rhoa)  / 9. - std::pow(rhoa, 2))  * 0.00649176 * std::pow(C445, -11. / 3.) * std::exp(-0.2533 / C447))  / C450;
            }

            if (n < 2)
                return result;

            // Second derivatives with respect to density

            if (rhoa >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;

                result.d2e_drara =  - ( ( std::pow(C116, 2) * ( C544 * C457 - 0.19672 * ( C481 * ( (  - C142 / 3.)  / C138 - ( 3. * C138 * ( ( C93 * C514)  / 3. + C142)  - ( C480 * C518)  / 3.)  / C490)  + rhob * C544) )  - ( C116 * C457 - 0.19672 * C481 * C544)  * 2 * C544 * C116)  / std::pow(C116, 4) + ( std::pow(C461, 2) * ( 10. * ( C102 * ( C131 * rhob * ( rhoa * 0.00649176 * C155 * C612 + C492 + C492)  + C563 / 3. + ( ( C176 * 40. * std::pow(rhoa, C119))  / 3. + C563)  / 3.)  - ( C578 * C142)  / C144)  - ( 3. * C138 * ( ( C462 * 6.98 * C508)  / 3. + C578 * C455)  - ( C498 * C518)  / 3.)  / C490)  - ( ( 10. * C102 * C578 - C498 / C144)  * 10. * C102 * -6.98 * C137)  / C144)  / std::pow(C461, 4) + ( C121 * ( C102 * gammaaa * ( C169 * C613 + ( 0.00649176 * C597)  / 9. + ( 0.00649176 * ( C597 - C104 * ( C584 + C584 + ( C619 + ( C123 * C93 * ( C179 + C179 + C618 * rhoa)  - C553 * C458)  / C491)  * C92) ) )  / 9.)  - C616 / C144 - ( ( 2. * C510 * C522)  / 9. - ( C138 * ( ( C500 * C514)  / 3. + C616) )  / 3.)  / C511)  - ( ( C102 * C614 - (  - C522 / 3.)  / C138)  * C497)  / C144)  / C488 + ( C121 * ( C102 * gammaab * ( C162 * C613 + C567 + C567 + ( (  - ( 7 * C479 + 7 * ( C479 + C618 * C92) ) )  / 9. - C96)  * C106)  - C591 / C144 - ( ( 2. * C510 * C523)  / 9. - ( C138 * ( ( C501 * C514)  / 3. + C591) )  / 3.)  / C511)  - ( ( C102 * C585 - (  - C523 / 3.)  / C138)  * C497)  / C144)  / C488 + ( C121 * ( C102 * gammabb * ( C170 * C613 + C599 + C599 + ( (  - ( C565 + C565 + ( C619 + ( C123 * C93 * C618 * rhob - C528 * C458)  / C491)  * C92) )  / 9. - 2)  * C106)  - C610 / C144 - ( ( 2. * C510 * C524)  / 9. - ( C138 * ( ( C502 * C514)  / 3. + C610) )  / 3.)  / C511)  - ( ( C102 * C606 - (  - C524 / 3.)  / C138)  * C497)  / C144)  / C488) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C621 = -3.49 * C137;
        const double C622 = -0.698 * C137;
        const double C623 = 0.19672 * rhoa;
        const double C624 = 2 * C93;
        const double C625 = 2 * rhoa;
        const double C626 = 2 * rhob;
        const double C627 = 8. * C93;
        const double C628 = 10. * C102;
        const double C629 = C131 * C176;
        const double C630 = C132 * rhoa;
        const double C631 = C132 * rhob;
        const double C632 = C136 * C152;
        const double C633 = C137 * C152;
        const double C634 = C147 * rhoa;
        const double C635 = C147 * rhob;
        const double C636 = C148 * rhoa;
        const double C637 = C148 * rhob;
        const double C638 = C152 * C139;
        const double C639 = C155 * C174;
        const double C640 = C162 * C106;
        const double C641 = C162 * C175;
        const double C642 = C168 * C105;
        const double C643 = C169 * C106;
        const double C644 = C169 * C175;
        const double C645 = C170 * C106;
        const double C646 = C170 * C175;
        const double C647 = C179 * C92;
        const double C648 = C179 * rhoa;
        const double C649 = C179 * rhob;
        const double C650 = C93 * C142;
        const double C651 = rhoa * rhob;
        const double C652 = -17. / 3.;
        const double C653 = -5. / 3.;
        const double C654 = -4. / 3.;
        const double C655 = -1. / 3.;
        const double C656 = 4. / 3.;
        const double C657 = 5. / 3.;
        const double C658 = std::pow(C102, 4);
        const double C659 = std::pow(C105, 4);
        const double C660 = std::pow(C144, 2);
        const double C661 = std::pow(C93, 4);
        const double C662 = 0.00649176 * C639;
        const double C663 = 0.2533 * C633;
        const double C664 = 2 * C642;
        const double C665 = 7 * C647;
        const double C666 = 11. * C632;
        const double C667 = C102 * C622;
        const double C668 = C629 * C621;
        const double C669 = C93 * C648;
        const double C670 = C93 * C649;
        const double C671 = gammaaa * C643;
        const double C672 = gammaab * C640;
        const double C673 = gammabb * C645;
        const double C674 = C108 + C648;
        const double C675 = C108 + C649;
        const double C676 = C627 / 3.;
        const double C677 = C638 / 3.;
        const double C678 = C650 / C144;
        const double C679 = std::pow(C93, C652);
        const double C680 = std::pow(C93, C653);
        const double C681 = std::pow(C93, C654);
        const double C682 = std::pow(C93, C655);
        const double C683 = std::pow(C93, C656);
        const double C684 = std::pow(rhoa, C657);
        const double C685 = std::pow(rhob, C657);
        const double C686 = -2. * C680;
        const double C687 = -0.698 * C680;
        const double C688 = -0.5066 * C680;
        const double C689 = 0.349 * C681;
        const double C690 = 0.5066 * C680;
        const double C691 = 6. * C682;
        const double C692 = 8. * C684;
        const double C693 = 8. * C685;
        const double C694 = 154. * C679;
        const double C695 = C168 * C664;
        const double C696 = C671 * C142;
        const double C697 = C672 * C142;
        const double C698 = C673 * C142;
        const double C699 = rhoa * C662;
        const double C700 = C101 - C678;
        const double C701 = C630 - C665;
        const double C702 = C631 - C665;
        const double C703 = C669 - C114;
        const double C704 = C670 - C115;
        const double C705 = C674 - 11;
        const double C706 = C675 - 11;
        const double C707 = C663 / C144;
        const double C708 = C666 / C144;
        const double C709 = 0.349 * C695;
        const double C710 = C102 * C686;
        const double C711 = C103 * C690;
        const double C712 = C103 * C694;
        const double C713 = C137 * C691;
        const double C714 = C138 * C688;
        const double C715 = C156 * C691;
        const double C716 = C161 * C691;
        const double C717 = C176 * C693;
        const double C718 = C93 * C705;
        const double C719 = C93 * C706;
        const double C720 = C98 * C687;
        const double C721 = rhob * C699;
        const double C722 = C699 + C167;
        const double C723 = C700 + 1;
        const double C724 = C689 / C144;
        const double C725 = C701 / 9.;
        const double C726 = C702 / 9.;
        const double C727 = C703 / C123;
        const double C728 = C704 / C123;
        const double C729 = 0.2533 * C713;
        const double C730 = 3. * C714;
        const double C731 = rhob * C722;
        const double C732 = C180 + C727;
        const double C733 = C180 + C728;
        const double C734 = C720 + C689;
        const double C735 = C721 + C173;
        const double C736 = C718 - C114;
        const double C737 = C719 - C115;
        const double C738 = C725 - C676;
        const double C739 = C726 - C676;
        const double C740 = C710 / 3.;
        const double C741 = C711 / 3.;
        const double C742 = C712 / 3.;
        const double C743 = C715 / 3.;
        const double C744 = C716 / 3.;
        const double C745 = C717 / 3.;
        const double C746 = C131 * C735;
        const double C747 = C138 * C734;
        const double C748 = C732 * C92;
        const double C749 = C733 * C92;
        const double C750 = C738 * C106;
        const double C751 = C741 + C707;
        const double C752 = C742 + C708;
        const double C753 = C740 - C724;
        const double C754 = C729 / 3.;
        const double C755 = C730 / 3.;
        const double C756 = C736 / C123;
        const double C757 = C737 / C123;
        const double C758 = 3. * C747;
        const double C759 = C97 * C751;
        const double C760 = C180 + C756;
        const double C761 = C180 + C757;
        const double C762 = C641 + C750;
        const double C763 = C746 + C745;
        const double C764 = C634 - C748;
        const double C765 = C637 - C749;
        const double C766 = C755 - C754;
        const double C767 = C752 / 3.;
        const double C768 = C753 / 3.;
        const double C769 = C760 * C92;
        const double C770 = C761 * C92;
        const double C771 = gammaab * C762;
        const double C772 = C759 + C677;
        const double C773 = C758 / 3.;
        const double C774 = C764 / 9.;
        const double C775 = C765 / 9.;
        const double C776 = C766 / C660;
        const double C777 = C138 * C772;
        const double C778 = C635 - C769;
        const double C779 = C636 - C770;
        const double C780 = C773 - C743;
        const double C781 = C774 - C626;
        const double C782 = C775 - C625;
        const double C783 = 3. * C777;
        const double C784 = C104 * C779;
        const double C785 = C781 * C106;
        const double C786 = C780 / C660;
        const double C787 = 0.00649176 * C784;
        const double C788 = C644 + C785;
        const double C789 = C768 - C786;
        const double C790 = C783 - C744;
        const double C791 = 0.349 * C789;
        const double C792 = gammaaa * C788;
        const double C793 = C787 / 9.;
        const double C794 = C790 / C660;
        const double C795 = C122 * C791;
        const double C796 = C646 + C793;
        const double C797 = C767 - C794;
        const double C798 = 0.00649176 * C797;
        const double C799 = gammabb * C796;
        const double C800 = C709 - C795;
        const double C801 = C800 / C659;
        const double C802 = C801 - C776;
        const double C803 = 3 * C802;

                result.d2e_drarb =  - ( ( std::pow(C116, 2) * ( 0.19672 * C116 + C723 * C623 - 0.19672 * ( C651 * ( (  - C142 / 3.)  / C138 - ( 3. * C138 * ( ( C93 * C687)  / 3. + C142)  - ( C650 * C691)  / 3.)  / C660)  + rhob * C723) )  - ( C116 * C623 - 0.19672 * C651 * C723)  * 2 * C723 * C116)  / std::pow(C116, 4) + ( std::pow(C628, 2) * ( 10. * ( C102 * ( C131 * ( rhob * ( rhoa * 0.00649176 * C155 * C797 + C662)  + C722)  + ( C735 * C692)  / 3. + ( C731 * C693)  / 3.)  - ( C763 * C142)  / C144)  - ( 3. * C138 * ( ( C629 * 6.98 * C680)  / 3. + ( C131 * C731 + ( C176 * C692)  / 3.)  * C621)  - ( C668 * C691)  / 3.)  / C660)  - ( ( 10. * C102 * C763 - C668 / C144)  * 10. * C102 * -6.98 * C137)  / C144)  / std::pow(C628, 4) + ( C121 * ( C102 * gammaaa * ( C169 * C798 + ( 0.00649176 * C174 * C778)  / 9. + C781 * C175 + ( 0.00649176 * C104 * ( C147 - C760 * rhoa - ( C732 * rhob + ( C803 + ( C123 * ( C93 * ( C179 + C802 * rhoa)  + C648 - C705)  - C703 * C624)  / C661)  * C92) ) )  / 9.)  - ( C792 * C142)  / C144 - ( ( 2. * C682 * C696)  / 9. - ( C138 * ( ( C671 * C687)  / 3. + gammaaa * ( C644 + ( 0.00649176 * C104 * C778)  / 9.)  * C142) )  / 3.)  / C683)  - ( ( C102 * C792 - (  - C696 / 3.)  / C138)  * C667)  / C144)  / C658 + ( C121 * ( C102 * gammaab * ( C162 * C798 + C739 * C175 + C738 * C175 + ( ( C132 - 7 * C648 - 7 * ( C649 + C802 * C92) )  / 9. - C96)  * C106)  - ( C771 * C142)  / C144 - ( ( 2. * C682 * C697)  / 9. - ( C138 * ( ( C672 * C687)  / 3. + gammaab * ( C641 + C739 * C106)  * C142) )  / 3.)  / C683)  - ( ( C102 * C771 - (  - C697 / 3.)  / C138)  * C667)  / C144)  / C658 + ( C121 * ( C102 * gammabb * ( C170 * C798 + C782 * C175 + ( 0.00649176 * ( C104 * ( C148 - C733 * rhoa - ( C761 * rhob + ( C803 + ( C123 * ( C93 * ( C179 + C802 * rhob)  + C706 - C649)  - C737 * C624)  / C661)  * C92) )  + C174 * C779) )  / 9.)  - ( C799 * C142)  / C144 - ( ( 2. * C682 * C698)  / 9. - ( C138 * ( ( C673 * C687)  / 3. + gammabb * ( C646 + C782 * C106)  * C142) )  / 3.)  / C683)  - ( ( C102 * C799 - (  - C698 / 3.)  / C138)  * C667)  / C144)  / C658) ;
            }

            if (rhob >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;

                result.d2e_drbrb =  - ( ( std::pow(C183, 2) * ( C894 * C807 - 0.19672 * ( C831 * ( (  - C211 / 3.)  / C207 - ( 3. * C207 * ( ( C72 * C864)  / 3. + C211)  - ( C830 * C868)  / 3.)  / C838)  + rhoa * C894) )  - ( C183 * C807 - 0.19672 * C831 * C894)  * 2 * C894 * C183)  / std::pow(C183, 4) + ( std::pow(C811, 2) * ( 10. * ( C81 * ( C200 * ( rhob * rhoa * 0.00649176 * C222 * C962 + C875 + C875)  + C915 / 3. + ( ( C245 * 40. * std::pow(rhob, C188))  / 3. + C915)  / 3.)  - ( C928 * C211)  / C213)  - ( 3. * C207 * ( ( C812 * 6.98 * C858)  / 3. + C928 * C805)  - ( C849 * C868)  / 3.)  / C838)  - ( ( 10. * C81 * C928 - C849 / C213)  * 10. * C81 * -6.98 * C206)  / C213)  / std::pow(C811, 4) + ( C191 * ( C81 * gammaaa * ( C238 * C963 + C948 + C948 + ( (  - ( C914 + C914 + ( C969 + ( C190 * C72 * C968 * rhoa - C878 * C808)  / C839)  * C71) )  / 9. - 2)  * C85)  - C960 / C213 - ( ( 2. * C860 * C872)  / 9. - ( C207 * ( ( C850 * C864)  / 3. + C960) )  / 3.)  / C861)  - ( ( C81 * C956 - (  - C872 / 3.)  / C207)  * C848)  / C213)  / C840 + ( C191 * ( C81 * gammaab * ( C231 * C963 + C916 + C916 + ( (  - ( 7 * C828 + 7 * ( C828 + C968 * C71) ) )  / 9. - C75)  * C85)  - C941 / C213 - ( ( 2. * C860 * C873)  / 9. - ( C207 * ( ( C851 * C864)  / 3. + C941) )  / 3.)  / C861)  - ( ( C81 * C935 - (  - C873 / 3.)  / C207)  * C848)  / C213)  / C840 + ( C191 * ( C81 * gammabb * ( C239 * C963 + ( 0.00649176 * C946)  / 9. + ( 0.00649176 * ( C946 - C83 * ( C934 + C934 + ( C969 + ( C190 * C72 * ( C248 + C248 + C968 * rhob)  - C903 * C808)  / C839)  * C71) ) )  / 9.)  - C966 / C213 - ( ( 2. * C860 * C874)  / 9. - ( C207 * ( ( C852 * C864)  / 3. + C966) )  / 3.)  / C861)  - ( ( C81 * C964 - (  - C874 / 3.)  / C207)  * C848)  / C213)  / C840) ;
            }

            // Second derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;

                result.d2e_dgaagaa = 0;
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d2e_dgaagab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d2e_dgaagbb = 0;
            }

            if (gammaab >= eps) {
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d2e_dgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d2e_dgbbgab = 0;
            }

            if (gammabb >= eps) {
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d2e_dgbbgbb = 0;
            }

            // Mixed second derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;

                result.d2e_dragaa =  - ( C102 * ( C169 * C175 + ( 0.00649176 * C104 * ( C147 * rhob - ( C180 + ( C93 * ( C108 + C179 * rhoa - 11)  - C114)  / C123)  * C92) )  / 9.)  - (  - ( C169 * C106 * C142)  / 3.)  / C138)  / C121;
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d2e_dragab =  - ( C102 * ( C162 * C175 + ( ( C132 * rhob - 7 * C179 * C92)  / 9. - ( 8. * C93)  / 3.)  * C106)  - (  - ( C162 * C106 * C142)  / 3.)  / C138)  / C121;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d2e_dragbb =  - ( C102 * ( C170 * C175 + ( ( C148 * rhob - ( C180 + ( C93 * C179 * rhob - C115)  / C123)  * C92)  / 9. - 2 * rhoa)  * C106)  - (  - ( C170 * C106 * C142)  / 3.)  / C138)  / C121;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;

                result.d2e_drbgaa =  - ( C81 * ( C238 * C244 + ( ( C216 * rhoa - ( C249 + ( C72 * C248 * rhoa - C184)  / C190)  * C71)  / 9. - 2 * rhob)  * C85)  - (  - ( C238 * C85 * C211)  / 3.)  / C207)  / C191;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d2e_drbgab =  - ( C81 * ( C231 * C244 + ( ( C201 * rhoa - 7 * C248 * C71)  / 9. - ( 8. * C72)  / 3.)  * C85)  - (  - ( C231 * C85 * C211)  / 3.)  / C207)  / C191;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d2e_drbgbb =  - ( C81 * ( C239 * C244 + ( 0.00649176 * C83 * ( C217 * rhoa - ( C249 + ( C72 * ( C87 + C248 * rhob - 11)  - C185)  / C190)  * C71) )  / 9.)  - (  - ( C239 * C85 * C211)  / 3.)  / C207)  / C191;
            }

            if (n < 3)
                return result;

            // Third derivatives with respect to density

            if (rhoa >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;
        const double C983 = -14. * C507;
        const double C984 = -6.98 * C137;
        const double C985 = -6. * C509;
        const double C986 = -1.396 * C137;
        const double C987 = 0.00649176 * C597;
        const double C988 = 0.243602 * C509;
        const double C989 = 0.698 * C508;
        const double C990 = 1.396 * C508;
        const double C991 = 2. * C510;
        const double C992 = 4. * C98;
        const double C993 = 6.98 * C508;
        const double C994 = 7 * C479;
        const double C995 = 12. * C510;
        const double C996 = C102 * C578;
        const double C997 = C102 * C585;
        const double C998 = C102 * C606;
        const double C999 = C102 * C614;
        const double C1000 = C116 * C457;
        const double C1001 = C136 * C568;
        const double C1002 = C137 * C568;
        const double C1003 = C152 * C513;
        const double C1004 = C152 * C520;
        const double C1005 = C155 * C612;
        const double C1006 = C162 * C613;
        const double C1007 = C169 * C613;
        const double C1008 = C170 * C613;
        const double C1009 = C464 * C518;
        const double C1010 = C465 * C518;
        const double C1011 = C472 * C605;
        const double C1012 = C480 * C518;
        const double C1013 = C481 * C544;
        const double C1014 = C498 * C518;
        const double C1015 = C500 * C514;
        const double C1016 = C501 * C514;
        const double C1017 = C502 * C514;
        const double C1018 = C507 * C152;
        const double C1019 = C508 * C142;
        const double C1020 = C508 * C152;
        const double C1021 = C509 * C518;
        const double C1022 = C510 * C513;
        const double C1023 = C510 * C522;
        const double C1024 = C510 * C523;
        const double C1025 = C510 * C524;
        const double C1026 = C510 * C552;
        const double C1027 = C528 * C458;
        const double C1028 = C544 * C116;
        const double C1029 = C544 * C457;
        const double C1030 = C553 * C458;
        const double C1031 = C554 * C613;
        const double C1032 = C568 * C139;
        const double C1033 = C578 * C142;
        const double C1034 = C578 * C455;
        const double C1035 = C585 * C514;
        const double C1036 = C586 * C518;
        const double C1037 = C594 * C613;
        const double C1038 = C603 * C105;
        const double C1039 = C603 * C494;
        const double C1040 = C606 * C514;
        const double C1041 = C612 * C592;
        const double C1042 = C614 * C514;
        const double C1043 = C618 * C92;
        const double C1044 = C618 * rhoa;
        const double C1045 = C618 * rhob;
        const double C1046 = C93 * C514;
        const double C1047 = rhob * C544;
        const double C1048 = -20. / 3.;
        const double C1049 = -8. / 3.;
        const double C1050 = -7. / 3.;
        const double C1051 = C142 / 3.;
        const double C1052 = C498 / C144;
        const double C1053 = C522 / 3.;
        const double C1054 = C523 / 3.;
        const double C1055 = C524 / 3.;
        const double C1056 = C563 / 3.;
        const double C1057 = C591 / C144;
        const double C1058 = C610 / C144;
        const double C1059 = C616 / C144;
        const double C1060 = std::pow(C102, 3);
        const double C1061 = std::pow(C102, 8);
        const double C1062 = std::pow(C105, 3);
        const double C1063 = std::pow(C105, 8);
        const double C1064 = std::pow(C116, 2);
        const double C1065 = std::pow(C144, 4);
        const double C1066 = std::pow(C168, 2);
        const double C1067 = std::pow(C461, 2);
        const double C1068 = std::pow(C93, 3);
        const double C1069 = std::pow(C93, 8);
        const double C1070 = std::pow(C93, C96);
        const double C1071 = std::pow(rhoa, C119);
        const double C1072 = -154. * C1018;
        const double C1073 = -0.5066 * C1020;
        const double C1074 = 0.00649176 * C1005;
        const double C1075 = 0.19672 * C1013;
        const double C1076 = 0.2533 * C1010;
        const double C1077 = 0.349 * C1021;
        const double C1078 = 2 * C1011;
        const double C1079 = 2. * C1019;
        const double C1080 = 2. * C1023;
        const double C1081 = 2. * C1024;
        const double C1082 = 2. * C1025;
        const double C1083 = 2 * C1028;
        const double C1084 = 4 * C1068;
        const double C1085 = 6. * C1022;
        const double C1086 = 6. * C1026;
        const double C1087 = 10. * C996;
        const double C1088 = 11. * C1009;
        const double C1089 = 40. * C1071;
        const double C1090 = C102 * C984;
        const double C1091 = C102 * C990;
        const double C1092 = C1060 * C986;
        const double C1093 = C137 * C985;
        const double C1094 = C138 * C995;
        const double C1095 = C152 * C983;
        const double C1096 = C156 * C985;
        const double C1097 = C161 * C985;
        const double C1098 = C168 * C1062;
        const double C1099 = C462 * C993;
        const double C1100 = C508 * C991;
        const double C1101 = C552 * C991;
        const double C1102 = C578 * C993;
        const double C1103 = C586 * C991;
        const double C1104 = C93 * C1045;
        const double C1105 = C1006 + C567;
        const double C1106 = C1008 + C599;
        const double C1107 = C1066 + C1038;
        const double C1108 = C179 + C1044;
        const double C1109 = C479 + C1043;
        const double C1110 =  - C1051;
        const double C1111 =  - C1053;
        const double C1112 =  - C1054;
        const double C1113 =  - C1055;
        const double C1114 = C1003 / 3.;
        const double C1115 = C1004 / 3.;
        const double C1116 = C1012 / 3.;
        const double C1117 = C1014 / 3.;
        const double C1118 = C1015 / 3.;
        const double C1119 = C1016 / 3.;
        const double C1120 = C1017 / 3.;
        const double C1121 = C1032 / 3.;
        const double C1122 = C1033 / C144;
        const double C1123 = C1035 / 3.;
        const double C1124 = C1040 / 3.;
        const double C1125 = C1042 / 3.;
        const double C1126 = C1046 / 3.;
        const double C1127 = C987 / 9.;
        const double C1128 = C988 / C144;
        const double C1129 = std::pow(C93, C1048);
        const double C1130 = std::pow(C93, C1049);
        const double C1131 = std::pow(C93, C1050);
        const double C1132 = -2618. * C1129;
        const double C1133 = -2.533 * C1130;
        const double C1134 = -1.396 * C1131;
        const double C1135 = 0.5066 * C1100;
        const double C1136 = 0.698 * C1131;
        const double C1137 = 1.396 * C1131;
        const double C1138 = 2 * C1107;
        const double C1139 = 2.533 * C1130;
        const double C1140 = 3. * C1094;
        const double C1141 = 3.49 * C1130;
        const double C1142 = 4 * C1098;
        const double C1143 = 7 * C1109;
        const double C1144 = 10. * C1090;
        const double C1145 = 10. * C1130;
        const double C1146 = C123 * C1104;
        const double C1147 = C176 * C1089;
        const double C1148 = C550 * C1089;
        const double C1149 = rhoa * C1074;
        const double C1150 = C1002 + C1114;
        const double C1151 = C1007 + C1127;
        const double C1152 = C1093 + C1085;
        const double C1153 = C1096 + C1086;
        const double C1154 = C1115 + C1032;
        const double C1155 = C1118 + C616;
        const double C1156 = C1119 + C591;
        const double C1157 = C1120 + C610;
        const double C1158 = C1126 + C142;
        const double C1159 = C179 + C1108;
        const double C1160 = C1000 - C1075;
        const double C1161 = C1087 - C1052;
        const double C1162 = C1072 / C144;
        const double C1163 = C1073 / C144;
        const double C1164 = C1076 / 3.;
        const double C1165 = C1077 / 3.;
        const double C1166 = C1079 / C144;
        const double C1167 = C1080 / 9.;
        const double C1168 = C1081 / 9.;
        const double C1169 = C1082 / 9.;
        const double C1170 = C1088 / 3.;
        const double C1171 = C1091 / 3.;
        const double C1172 = C1095 / 3.;
        const double C1173 = C1097 / 3.;
        const double C1174 = C1099 / 3.;
        const double C1175 = C1103 / 3.;
        const double C1176 = C1110 / C138;
        const double C1177 = C1111 / C138;
        const double C1178 = C1112 / C138;
        const double C1179 = C1113 / C138;
        const double C1180 = 0.2533 * C1150;
        const double C1181 = 0.2533 * C1152;
        const double C1182 = C102 * C1145;
        const double C1183 = C103 * C1132;
        const double C1184 = C103 * C1133;
        const double C1185 = C1161 * C1144;
        const double C1186 = C138 * C1134;
        const double C1187 = C138 * C1139;
        const double C1188 = C138 * C1155;
        const double C1189 = C138 * C1156;
        const double C1190 = C138 * C1157;
        const double C1191 = C138 * C1158;
        const double C1192 = C168 * C1138;
        const double C1193 = C580 * C1140;
        const double C1194 = C593 * C1140;
        const double C1195 = C604 * C1140;
        const double C1196 = C615 * C1142;
        const double C1197 = C93 * C1159;
        const double C1198 = C98 * C1141;
        const double C1199 = C1001 + C1172;
        const double C1200 = C1149 + C492;
        const double C1201 = C1171 + C1128;
        const double C1202 = C1173 + C1036;
        const double C1203 = C1174 + C1034;
        const double C1204 = C994 + C1143;
        const double C1205 = C1146 - C1027;
        const double C1206 = C997 - C1178;
        const double C1207 = C998 - C1179;
        const double C1208 = C999 - C1177;
        const double C1209 = C1147 / 3.;
        const double C1210 = C1148 / 3.;
        const double C1211 = C1153 / 9.;
        const double C1212 = C1154 / 3.;
        const double C1213 = 3. * C1186;
        const double C1214 = 3. * C1191;
        const double C1215 = 11. * C1199;
        const double C1216 = C1206 * C497;
        const double C1217 = C1207 * C497;
        const double C1218 = C1208 * C497;
        const double C1219 = C123 * C1197;
        const double C1220 = C138 * C1180;
        const double C1221 = C138 * C1203;
        const double C1222 = C1192 + C1039;
        const double C1223 = C1200 + C492;
        const double C1224 = C1209 + C563;
        const double C1225 = C1187 - C1135;
        const double C1226 = C1198 - C1136;
        const double C1227 =  - C1204;
        const double C1228 = C1181 / 9.;
        const double C1229 = C1182 / 3.;
        const double C1230 = C1183 / 3.;
        const double C1231 = C1184 / 3.;
        const double C1232 = C1188 / 3.;
        const double C1233 = C1189 / 3.;
        const double C1234 = C1190 / 3.;
        const double C1235 = C1193 / 3.;
        const double C1236 = C1194 / 3.;
        const double C1237 = C1195 / 3.;
        const double C1238 = C1202 / 3.;
        const double C1239 = C1205 / C491;
        const double C1240 = 0.349 * C1222;
        const double C1241 = 3. * C1220;
        const double C1242 = 3. * C1221;
        const double C1243 = 3. * C1225;
        const double C1244 = C138 * C1215;
        const double C1245 = rhob * C1223;
        const double C1246 = C1229 + C1166;
        const double C1247 = C1230 + C1162;
        const double C1248 = C1231 + C1163;
        const double C1249 = C619 + C1239;
        const double C1250 = C1167 - C1232;
        const double C1251 = C1168 - C1233;
        const double C1252 = C1169 - C1234;
        const double C1253 = C1214 - C1116;
        const double C1254 = C1219 - C1030;
        const double C1255 = C1226 - C1137;
        const double C1256 = C1213 / 3.;
        const double C1257 = C1224 / 3.;
        const double C1258 = C1227 / 9.;
        const double C1259 = 3. * C1244;
        const double C1260 = C1245 * C519;
        const double C1261 = C1249 * C92;
        const double C1262 = C1249 * rhob;
        const double C1263 = C131 * C1245;
        const double C1264 = C138 * C1255;
        const double C1265 = C1241 - C1164;
        const double C1266 = C1242 - C1117;
        const double C1267 = C1256 - C1165;
        const double C1268 = C1258 - C96;
        const double C1269 = C1243 / 9.;
        const double C1270 = C1246 / 3.;
        const double C1271 = C1247 / 3.;
        const double C1272 = C1248 / 3.;
        const double C1273 = C1250 / C511;
        const double C1274 = C1251 / C511;
        const double C1275 = C1252 / C511;
        const double C1276 = C1253 / C490;
        const double C1277 = C1254 / C491;
        const double C1278 = C1268 * C106;
        const double C1279 = C1268 * C175;
        const double C1280 = C1210 + C1260;
        const double C1281 = C1263 + C1056;
        const double C1282 = C1264 + C1101;
        const double C1283 = C565 + C1261;
        const double C1284 = C619 + C1277;
        const double C1285 = C1176 - C1276;
        const double C1286 = C1259 - C1170;
        const double C1287 = C1269 - C1228;
        const double C1288 = C1265 / C490;
        const double C1289 = C1266 / C490;
        const double C1290 = C1267 / C490;
        const double C1291 = 3. * C1282;
        const double C1292 = C1284 * C92;
        const double C1293 = C1284 * rhob;
        const double C1294 = C481 * C1285;
        const double C1295 = C490 * C1287;
        const double C1296 = rhob * C1285;
        const double C1297 = C1031 + C1279;
        const double C1298 = C1272 + C1288;
        const double C1299 = C1281 + C1257;
        const double C1300 = C565 + C1283;
        const double C1301 = C567 + C1278;
        const double C1302 = C1270 - C1290;
        const double C1303 = C1286 / C490;
        const double C1304 = C102 * C1299;
        const double C1305 = C1299 * C142;
        const double C1306 = C97 * C1298;
        const double C1307 = C1105 + C1301;
        const double C1308 = C1271 + C1303;
        const double C1309 = C1294 + C1047;
        const double C1310 = C584 + C1292;
        const double C1311 = C1295 - C1235;
        const double C1312 =  - C1300;
        const double C1313 = C1291 / 9.;
        const double C1314 = C1302 / 3.;
        const double C1315 = 0.19672 * C1309;
        const double C1316 = gammaab * C1307;
        const double C1317 = C1306 + C1121;
        const double C1318 = C584 + C1310;
        const double C1319 = C1304 - C1122;
        const double C1320 = C1313 - C1211;
        const double C1321 = C1308 / 3.;
        const double C1322 = C1311 / C1065;
        const double C1323 = C1312 / 9.;
        const double C1324 = 10. * C1319;
        const double C1325 = C102 * C1316;
        const double C1326 = C104 * C1318;
        const double C1327 = C1316 * C142;
        const double C1328 = C174 * C1318;
        const double C1329 = C490 * C1320;
        const double C1330 = C1317 + C1212;
        const double C1331 = C1029 - C1315;
        const double C1332 = C1323 - 2;
        const double C1333 = C1332 * C106;
        const double C1334 = C1332 * C175;
        const double C1335 = C138 * C1330;
        const double C1336 = C1123 + C1327;
        const double C1337 = C1041 - C1328;
        const double C1338 = C1324 - C1289;
        const double C1339 = C1325 - C1057;
        const double C1340 = C1329 - C1236;
        const double C1341 = C597 - C1326;
        const double C1342 = 0.00649176 * C1341;
        const double C1343 = C1338 * C1144;
        const double C1344 = C1037 + C1334;
        const double C1345 = C1335 + C1175;
        const double C1346 = C599 + C1333;
        const double C1347 = C1339 - C1274;
        const double C1348 = C1340 / C1065;
        const double C1349 = 3. * C1345;
        const double C1350 = C1347 * C497;
        const double C1351 = C1106 + C1346;
        const double C1352 = C1314 - C1348;
        const double C1353 = C1342 / 9.;
        const double C1354 = 0.349 * C1352;
        const double C1355 = gammabb * C1351;
        const double C1356 = C1151 + C1353;
        const double C1357 = C1349 - C1238;
        const double C1358 = C102 * C1355;
        const double C1359 = C122 * C1354;
        const double C1360 = C1355 * C142;
        const double C1361 = C490 * C1357;
        const double C1362 = gammaaa * C1356;
        const double C1363 = C102 * C1362;
        const double C1364 = C1362 * C142;
        const double C1365 = C1124 + C1360;
        const double C1366 = C1359 + C1078;
        const double C1367 = C1358 - C1058;
        const double C1368 = C1361 - C1237;
        const double C1369 = C1125 + C1364;
        const double C1370 = C1240 - C1366;
        const double C1371 = C1363 - C1059;
        const double C1372 = C1367 - C1275;
        const double C1373 = C1368 / C1065;
        const double C1374 = C1372 * C497;
        const double C1375 = C489 * C1370;
        const double C1376 = C1321 - C1373;
        const double C1377 = C1371 - C1273;
        const double C1378 = 0.00649176 * C1376;
        const double C1379 = C1377 * C497;
        const double C1380 = C1375 - C1196;
        const double C1381 = C1380 / C1063;
        const double C1382 = C1381 - C1322;
        const double C1383 = 3 * C1382;

                result.d3e_drarara =  - ( ( std::pow(C116, 4) * ( C1064 * ( C1285 * C457 - 0.19672 * ( C481 * ( ( ( 2. * C510 * C142)  / 9. - ( C138 * C514)  / 9.)  / C511 - ( C490 * ( ( 3. * ( C138 * ( ( C93 * C1141)  / 3. - C989 - C989)  + C1158 * C991) )  / 3. - ( ( C480 * C985)  / 3. + C1158 * C518)  / 3.)  - ( C1253 * C1140)  / 3.)  / C1065)  + C1296 + C1296) )  + 2 * C1028 * C1331 - ( C1160 * 2 * ( std::pow(C544, 2) + C1285 * C116)  + C1331 * C1083) )  - ( C1064 * C1331 - C1160 * C1083)  * 4 * C544 * std::pow(C116, 3))  / std::pow(C116, 8) + ( std::pow(C461, 4) * ( C1067 * ( 10. * ( C102 * ( C131 * rhob * ( rhoa * 0.00649176 * C155 * C1376 + C1074 + C1074 + C1074)  + C1260 / 3. + C1280 / 3. + ( ( ( C176 * 80. * std::pow(rhoa, C485))  / 3. + C1148)  / 3. + C1280)  / 3.)  - C1305 / C144 - ( 3. * C138 * ( ( C578 * C514)  / 3. + C1305)  - ( C1033 * C518)  / 3.)  / C490)  - ( C490 * ( 3. * ( C138 * ( ( ( C462 * -0.349e2 * C1130)  / 3. + C1102)  / 3. + C1102 / 3. + C1299 * C455)  + ( C1203 * C991)  / 3.)  - ( ( C498 * C985)  / 3. + C1203 * C518)  / 3.)  - ( C1266 * C1140)  / 3.)  / C1065)  + C1343 / C144 - ( 3. * C138 * ( C1161 * 10. * ( ( C102 * 0.1396e2 * C508)  / 3. + ( 2.43602 * C509)  / C144)  + C1343)  - ( C1185 * C518)  / 3.)  / C490)  - ( ( C1067 * C1338 - C1185 / C144)  * std::pow(C461, 3) * -0.1396e2 * C137)  / C144)  / std::pow(C461, 8) + ( C488 * ( C121 * ( C102 * gammaaa * ( C169 * C1378 + ( 0.00649176 * C1041)  / 9. + ( 0.00649176 * C1337)  / 9. + ( 0.00649176 * ( C1337 - ( C104 * ( C1293 + C1293 + C1293 + ( C1383 + ( C491 * ( C123 * ( C93 * ( C618 + C618 + C618 + C1382 * rhoa)  + C1159)  + 2 * C1159 * C123 - ( 2 * C553 + C1197 * C458) )  - C1254 * C1084)  / C1069)  * C92)  + C1328) ) )  / 9.)  - C1364 / C144 - ( 3. * C138 * C1369 - ( C616 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1155 - ( C522 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C500 * C1141)  / 3. + C1042)  / 3. + C1369)  + ( C1155 * C991)  / 3.)  / 3.)  - ( C1250 * C992)  / 3.)  / C1070)  + C1379 / C144 - ( 3. * C138 * ( C1208 * C1201 + C1379)  - ( C1218 * C518)  / 3.)  / C490)  - ( ( C121 * C1377 - C1218 / C144)  * C1092)  / C144)  / C1061 + ( C488 * ( C121 * ( C102 * gammaab * ( C162 * C1378 + C1031 + C1297 + C1297 + C1279 + ( -0.00649176 * C104 * ( 7 * C1045 + 7 * ( C1045 + C1045 + C1382 * C92) ) )  / 9.)  - C1327 / C144 - ( 3. * C138 * C1336 - ( C591 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1156 - ( C523 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C501 * C1141)  / 3. + C1035)  / 3. + C1336)  + ( C1156 * C991)  / 3.)  / 3.)  - ( C1251 * C992)  / 3.)  / C1070)  + C1350 / C144 - ( 3. * C138 * ( C1206 * C1201 + C1350)  - ( C1216 * C518)  / 3.)  / C490)  - ( ( C121 * C1347 - C1216 / C144)  * C1092)  / C144)  / C1061 + ( C488 * ( C121 * ( C102 * gammabb * ( C170 * C1378 + C1037 + C1344 + C1344 + C1334 + ( -0.00649176 * C104 * ( C1262 + C1262 + C1262 + ( C1383 + ( C491 * ( C123 * ( C93 * C1382 * rhob + C1045)  + 2 * C1045 * C123 - ( 2 * C528 + C1104 * C458) )  - C1205 * C1084)  / C1069)  * C92) )  / 9.)  - C1360 / C144 - ( 3. * C138 * C1365 - ( C610 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1157 - ( C524 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C502 * C1141)  / 3. + C1040)  / 3. + C1365)  + ( C1157 * C991)  / 3.)  / 3.)  - ( C1252 * C992)  / 3.)  / C1070)  + C1374 / C144 - ( 3. * C138 * ( C1207 * C1201 + C1374)  - ( C1217 * C518)  / 3.)  / C490)  - ( ( C121 * C1372 - C1217 / C144)  * C1092)  / C144)  / C1061) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;
        const double C621 = -3.49 * C137;
        const double C622 = -0.698 * C137;
        const double C623 = 0.19672 * rhoa;
        const double C624 = 2 * C93;
        const double C625 = 2 * rhoa;
        const double C626 = 2 * rhob;
        const double C627 = 8. * C93;
        const double C628 = 10. * C102;
        const double C629 = C131 * C176;
        const double C630 = C132 * rhoa;
        const double C631 = C132 * rhob;
        const double C632 = C136 * C152;
        const double C633 = C137 * C152;
        const double C634 = C147 * rhoa;
        const double C635 = C147 * rhob;
        const double C636 = C148 * rhoa;
        const double C637 = C148 * rhob;
        const double C638 = C152 * C139;
        const double C639 = C155 * C174;
        const double C640 = C162 * C106;
        const double C641 = C162 * C175;
        const double C642 = C168 * C105;
        const double C643 = C169 * C106;
        const double C644 = C169 * C175;
        const double C645 = C170 * C106;
        const double C646 = C170 * C175;
        const double C647 = C179 * C92;
        const double C648 = C179 * rhoa;
        const double C649 = C179 * rhob;
        const double C650 = C93 * C142;
        const double C651 = rhoa * rhob;
        const double C652 = -17. / 3.;
        const double C653 = -5. / 3.;
        const double C654 = -4. / 3.;
        const double C655 = -1. / 3.;
        const double C656 = 4. / 3.;
        const double C657 = 5. / 3.;
        const double C658 = std::pow(C102, 4);
        const double C659 = std::pow(C105, 4);
        const double C660 = std::pow(C144, 2);
        const double C661 = std::pow(C93, 4);
        const double C662 = 0.00649176 * C639;
        const double C663 = 0.2533 * C633;
        const double C664 = 2 * C642;
        const double C665 = 7 * C647;
        const double C666 = 11. * C632;
        const double C667 = C102 * C622;
        const double C668 = C629 * C621;
        const double C669 = C93 * C648;
        const double C670 = C93 * C649;
        const double C671 = gammaaa * C643;
        const double C672 = gammaab * C640;
        const double C673 = gammabb * C645;
        const double C674 = C108 + C648;
        const double C675 = C108 + C649;
        const double C676 = C627 / 3.;
        const double C677 = C638 / 3.;
        const double C678 = C650 / C144;
        const double C679 = std::pow(C93, C652);
        const double C680 = std::pow(C93, C653);
        const double C681 = std::pow(C93, C654);
        const double C682 = std::pow(C93, C655);
        const double C683 = std::pow(C93, C656);
        const double C684 = std::pow(rhoa, C657);
        const double C685 = std::pow(rhob, C657);
        const double C686 = -2. * C680;
        const double C687 = -0.698 * C680;
        const double C688 = -0.5066 * C680;
        const double C689 = 0.349 * C681;
        const double C690 = 0.5066 * C680;
        const double C691 = 6. * C682;
        const double C692 = 8. * C684;
        const double C693 = 8. * C685;
        const double C694 = 154. * C679;
        const double C695 = C168 * C664;
        const double C696 = C671 * C142;
        const double C697 = C672 * C142;
        const double C698 = C673 * C142;
        const double C699 = rhoa * C662;
        const double C700 = C101 - C678;
        const double C701 = C630 - C665;
        const double C702 = C631 - C665;
        const double C703 = C669 - C114;
        const double C704 = C670 - C115;
        const double C705 = C674 - 11;
        const double C706 = C675 - 11;
        const double C707 = C663 / C144;
        const double C708 = C666 / C144;
        const double C709 = 0.349 * C695;
        const double C710 = C102 * C686;
        const double C711 = C103 * C690;
        const double C712 = C103 * C694;
        const double C713 = C137 * C691;
        const double C714 = C138 * C688;
        const double C715 = C156 * C691;
        const double C716 = C161 * C691;
        const double C717 = C176 * C693;
        const double C718 = C93 * C705;
        const double C719 = C93 * C706;
        const double C720 = C98 * C687;
        const double C721 = rhob * C699;
        const double C722 = C699 + C167;
        const double C723 = C700 + 1;
        const double C724 = C689 / C144;
        const double C725 = C701 / 9.;
        const double C726 = C702 / 9.;
        const double C727 = C703 / C123;
        const double C728 = C704 / C123;
        const double C729 = 0.2533 * C713;
        const double C730 = 3. * C714;
        const double C731 = rhob * C722;
        const double C732 = C180 + C727;
        const double C733 = C180 + C728;
        const double C734 = C720 + C689;
        const double C735 = C721 + C173;
        const double C736 = C718 - C114;
        const double C737 = C719 - C115;
        const double C738 = C725 - C676;
        const double C739 = C726 - C676;
        const double C740 = C710 / 3.;
        const double C741 = C711 / 3.;
        const double C742 = C712 / 3.;
        const double C743 = C715 / 3.;
        const double C744 = C716 / 3.;
        const double C745 = C717 / 3.;
        const double C746 = C131 * C735;
        const double C747 = C138 * C734;
        const double C748 = C732 * C92;
        const double C749 = C733 * C92;
        const double C750 = C738 * C106;
        const double C751 = C741 + C707;
        const double C752 = C742 + C708;
        const double C753 = C740 - C724;
        const double C754 = C729 / 3.;
        const double C755 = C730 / 3.;
        const double C756 = C736 / C123;
        const double C757 = C737 / C123;
        const double C758 = 3. * C747;
        const double C759 = C97 * C751;
        const double C760 = C180 + C756;
        const double C761 = C180 + C757;
        const double C762 = C641 + C750;
        const double C763 = C746 + C745;
        const double C764 = C634 - C748;
        const double C765 = C637 - C749;
        const double C766 = C755 - C754;
        const double C767 = C752 / 3.;
        const double C768 = C753 / 3.;
        const double C769 = C760 * C92;
        const double C770 = C761 * C92;
        const double C771 = gammaab * C762;
        const double C772 = C759 + C677;
        const double C773 = C758 / 3.;
        const double C774 = C764 / 9.;
        const double C775 = C765 / 9.;
        const double C776 = C766 / C660;
        const double C777 = C138 * C772;
        const double C778 = C635 - C769;
        const double C779 = C636 - C770;
        const double C780 = C773 - C743;
        const double C781 = C774 - C626;
        const double C782 = C775 - C625;
        const double C783 = 3. * C777;
        const double C784 = C104 * C779;
        const double C785 = C781 * C106;
        const double C786 = C780 / C660;
        const double C787 = 0.00649176 * C784;
        const double C788 = C644 + C785;
        const double C789 = C768 - C786;
        const double C790 = C783 - C744;
        const double C791 = 0.349 * C789;
        const double C792 = gammaaa * C788;
        const double C793 = C787 / 9.;
        const double C794 = C790 / C660;
        const double C795 = C122 * C791;
        const double C796 = C646 + C793;
        const double C797 = C767 - C794;
        const double C798 = 0.00649176 * C797;
        const double C799 = gammabb * C796;
        const double C800 = C709 - C795;
        const double C801 = C800 / C659;
        const double C802 = C801 - C776;
        const double C803 = 3 * C802;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;
        const double C1385 = -14. * C507;
        const double C1386 = -6.98 * C137;
        const double C1387 = -6. * C509;
        const double C1388 = -1.396 * C137;
        const double C1389 = 0.00649176 * C597;
        const double C1390 = 0.243602 * C509;
        const double C1391 = 0.698 * C508;
        const double C1392 = 1.396 * C508;
        const double C1393 = 2. * C510;
        const double C1394 = 4. * C98;
        const double C1395 = 6.98 * C508;
        const double C1396 = 7 * C479;
        const double C1397 = 12. * C510;
        const double C1398 = C102 * C578;
        const double C1399 = C102 * C585;
        const double C1400 = C102 * C606;
        const double C1401 = C102 * C614;
        const double C1402 = C116 * C457;
        const double C1403 = C136 * C568;
        const double C1404 = C137 * C568;
        const double C1405 = C152 * C513;
        const double C1406 = C152 * C520;
        const double C1407 = C155 * C612;
        const double C1408 = C162 * C613;
        const double C1409 = C169 * C613;
        const double C1410 = C170 * C613;
        const double C1411 = C464 * C518;
        const double C1412 = C465 * C518;
        const double C1413 = C472 * C605;
        const double C1414 = C480 * C518;
        const double C1415 = C481 * C544;
        const double C1416 = C498 * C518;
        const double C1417 = C500 * C514;
        const double C1418 = C501 * C514;
        const double C1419 = C502 * C514;
        const double C1420 = C507 * C152;
        const double C1421 = C508 * C142;
        const double C1422 = C508 * C152;
        const double C1423 = C509 * C518;
        const double C1424 = C510 * C513;
        const double C1425 = C510 * C522;
        const double C1426 = C510 * C523;
        const double C1427 = C510 * C524;
        const double C1428 = C510 * C552;
        const double C1429 = C528 * C458;
        const double C1430 = C544 * C116;
        const double C1431 = C544 * C457;
        const double C1432 = C551 * rhoa;
        const double C1433 = C553 * C458;
        const double C1434 = C554 * C613;
        const double C1435 = C568 * C139;
        const double C1436 = C576 * rhoa;
        const double C1437 = C578 * C142;
        const double C1438 = C578 * C455;
        const double C1439 = C585 * C514;
        const double C1440 = C586 * C518;
        const double C1441 = C594 * C613;
        const double C1442 = C603 * C105;
        const double C1443 = C603 * C494;
        const double C1444 = C606 * C514;
        const double C1445 = C612 * C592;
        const double C1446 = C614 * C514;
        const double C1447 = C618 * C92;
        const double C1448 = C618 * rhoa;
        const double C1449 = C618 * rhob;
        const double C1450 = C93 * C478;
        const double C1451 = C93 * C514;
        const double C1452 = rhob * C525;
        const double C1453 = rhob * C544;
        const double C1454 = C108 + C479;
        const double C1455 = C630 - C495;
        const double C1456 = -20. / 3.;
        const double C1457 = -8. / 3.;
        const double C1458 = -7. / 3.;
        const double C1459 = C142 / 3.;
        const double C1460 = C498 / C144;
        const double C1461 = C522 / 3.;
        const double C1462 = C523 / 3.;
        const double C1463 = C524 / 3.;
        const double C1464 = C563 / 3.;
        const double C1465 = C591 / C144;
        const double C1466 = C610 / C144;
        const double C1467 = C616 / C144;
        const double C1468 = std::pow(C102, 3);
        const double C1469 = std::pow(C102, 8);
        const double C1470 = std::pow(C105, 3);
        const double C1471 = std::pow(C105, 8);
        const double C1472 = std::pow(C116, 2);
        const double C1473 = std::pow(C144, 4);
        const double C1474 = std::pow(C168, 2);
        const double C1475 = std::pow(C461, 2);
        const double C1476 = std::pow(C93, 3);
        const double C1477 = std::pow(C93, 8);
        const double C1478 = std::pow(C93, C96);
        const double C1479 = std::pow(rhoa, C119);
        const double C1480 = std::pow(rhob, C487);
        const double C1481 = -154. * C1420;
        const double C1482 = -0.5066 * C1422;
        const double C1483 = 0.00649176 * C1407;
        const double C1484 = 0.19672 * C1415;
        const double C1485 = 0.2533 * C1412;
        const double C1486 = 0.349 * C1423;
        const double C1487 = 2 * C1413;
        const double C1488 = 2. * C1421;
        const double C1489 = 2. * C1425;
        const double C1490 = 2. * C1426;
        const double C1491 = 2. * C1427;
        const double C1492 = 2 * C1430;
        const double C1493 = 4 * C1476;
        const double C1494 = 6. * C1424;
        const double C1495 = 6. * C1428;
        const double C1496 = 8. * C1480;
        const double C1497 = 10. * C1398;
        const double C1498 = 11. * C1411;
        const double C1499 = 40. * C1479;
        const double C1500 = C102 * C1386;
        const double C1501 = C102 * C1392;
        const double C1502 = C137 * C1387;
        const double C1503 = C138 * C1397;
        const double C1504 = C1468 * C1388;
        const double C1505 = C152 * C1385;
        const double C1506 = C156 * C1387;
        const double C1507 = C161 * C1387;
        const double C1508 = C168 * C1470;
        const double C1509 = C462 * C1395;
        const double C1510 = C508 * C1393;
        const double C1511 = C552 * C1393;
        const double C1512 = C586 * C1393;
        const double C1513 = C93 * C1449;
        const double C1514 = C1408 + C567;
        const double C1515 = C1410 + C599;
        const double C1516 = C1452 + C173;
        const double C1517 = C1474 + C1442;
        const double C1518 = C179 + C1448;
        const double C1519 = C179 + C1449;
        const double C1520 = C478 + C1447;
        const double C1521 = C479 + C1447;
        const double C1522 = C132 - C1396;
        const double C1523 = C1450 - C114;
        const double C1524 = C1454 - 11;
        const double C1525 =  - C1459;
        const double C1526 =  - C1461;
        const double C1527 =  - C1462;
        const double C1528 =  - C1463;
        const double C1529 = C1389 / 9.;
        const double C1530 = C1390 / C144;
        const double C1531 = C1405 / 3.;
        const double C1532 = C1406 / 3.;
        const double C1533 = C1414 / 3.;
        const double C1534 = C1416 / 3.;
        const double C1535 = C1417 / 3.;
        const double C1536 = C1418 / 3.;
        const double C1537 = C1419 / 3.;
        const double C1538 = C1435 / 3.;
        const double C1539 = C1437 / C144;
        const double C1540 = C1439 / 3.;
        const double C1541 = C1444 / 3.;
        const double C1542 = C1446 / 3.;
        const double C1543 = C1451 / 3.;
        const double C1544 = C1455 / 9.;
        const double C1545 = std::pow(C93, C1456);
        const double C1546 = std::pow(C93, C1457);
        const double C1547 = std::pow(C93, C1458);
        const double C1548 = -2618. * C1545;
        const double C1549 = -2.533 * C1546;
        const double C1550 = -1.396 * C1547;
        const double C1551 = 0.5066 * C1510;
        const double C1552 = 0.698 * C1547;
        const double C1553 = 1.396 * C1547;
        const double C1554 = 2 * C1517;
        const double C1555 = 2.533 * C1546;
        const double C1556 = 3. * C1503;
        const double C1557 = 3.49 * C1546;
        const double C1558 = 4 * C1508;
        const double C1559 = 7 * C1520;
        const double C1560 = 7 * C1521;
        const double C1561 = 10. * C1500;
        const double C1562 = 10. * C1546;
        const double C1563 = C123 * C1513;
        const double C1564 = C131 * C1516;
        const double C1565 = C1516 * C519;
        const double C1566 = C176 * C1496;
        const double C1567 = C176 * C1499;
        const double C1568 = C550 * C1496;
        const double C1569 = C93 * C1518;
        const double C1570 = C93 * C1519;
        const double C1571 = C93 * C1524;
        const double C1572 = rhoa * C1483;
        const double C1573 = C1404 + C1531;
        const double C1574 = C1409 + C1529;
        const double C1575 = C1502 + C1494;
        const double C1576 = C1506 + C1495;
        const double C1577 = C1532 + C1435;
        const double C1578 = C1535 + C616;
        const double C1579 = C1536 + C591;
        const double C1580 = C1537 + C610;
        const double C1581 = C1543 + C142;
        const double C1582 = C179 + C1518;
        const double C1583 = C1402 - C1484;
        const double C1584 = C1497 - C1460;
        const double C1585 = C1544 - C504;
        const double C1586 = C1481 / C144;
        const double C1587 = C1482 / C144;
        const double C1588 = C1485 / 3.;
        const double C1589 = C1486 / 3.;
        const double C1590 = C1488 / C144;
        const double C1591 = C1489 / 9.;
        const double C1592 = C1490 / 9.;
        const double C1593 = C1491 / 9.;
        const double C1594 = C1498 / 3.;
        const double C1595 = C1501 / 3.;
        const double C1596 = C1505 / 3.;
        const double C1597 = C1507 / 3.;
        const double C1598 = C1509 / 3.;
        const double C1599 = C1512 / 3.;
        const double C1600 = C1523 / C123;
        const double C1601 = C1525 / C138;
        const double C1602 = C1526 / C138;
        const double C1603 = C1527 / C138;
        const double C1604 = C1528 / C138;
        const double C1605 = 0.2533 * C1573;
        const double C1606 = 0.2533 * C1575;
        const double C1607 = C102 * C1562;
        const double C1608 = C103 * C1548;
        const double C1609 = C103 * C1549;
        const double C1610 = C138 * C1550;
        const double C1611 = C138 * C1555;
        const double C1612 = C138 * C1578;
        const double C1613 = C138 * C1579;
        const double C1614 = C138 * C1580;
        const double C1615 = C138 * C1581;
        const double C1616 = C1584 * C1561;
        const double C1617 = C1585 * C106;
        const double C1618 = C1585 * C175;
        const double C1619 = C168 * C1554;
        const double C1620 = C580 * C1556;
        const double C1621 = C593 * C1556;
        const double C1622 = C604 * C1556;
        const double C1623 = C615 * C1558;
        const double C1624 = C93 * C1582;
        const double C1625 = C98 * C1557;
        const double C1626 = C1396 + C1560;
        const double C1627 = C1403 + C1596;
        const double C1628 = C1569 + C529;
        const double C1629 = C1570 + C479;
        const double C1630 = C1572 + C492;
        const double C1631 = C1595 + C1530;
        const double C1632 = C1597 + C1440;
        const double C1633 = C1598 + C1438;
        const double C1634 = C180 + C1600;
        const double C1635 = C1399 - C1603;
        const double C1636 = C1400 - C1604;
        const double C1637 = C1401 - C1602;
        const double C1638 = C1522 - C1559;
        const double C1639 = C1563 - C1429;
        const double C1640 = C1571 - C115;
        const double C1641 = C1565 / 3.;
        const double C1642 = C1566 / 3.;
        const double C1643 = C1567 / 3.;
        const double C1644 = C1568 / 3.;
        const double C1645 = C1576 / 9.;
        const double C1646 = C1577 / 3.;
        const double C1647 = 3. * C1610;
        const double C1648 = 3. * C1615;
        const double C1649 = 11. * C1627;
        const double C1650 = C123 * C1624;
        const double C1651 = C138 * C1605;
        const double C1652 = C138 * C1633;
        const double C1653 = C1634 * C92;
        const double C1654 = C1634 * rhob;
        const double C1655 = C1635 * C497;
        const double C1656 = C1636 * C497;
        const double C1657 = C1637 * C497;
        const double C1658 = rhob * C1630;
        const double C1659 = C1408 + C1618;
        const double C1660 = C1564 + C1642;
        const double C1661 = C1619 + C1443;
        const double C1662 = C1630 + C492;
        const double C1663 = C1643 + C563;
        const double C1664 = C471 + C1617;
        const double C1665 = C1611 - C1551;
        const double C1666 = C1625 - C1552;
        const double C1667 =  - C1626;
        const double C1668 = C1628 - C478;
        const double C1669 = C1629 - C1524;
        const double C1670 = C1606 / 9.;
        const double C1671 = C1607 / 3.;
        const double C1672 = C1608 / 3.;
        const double C1673 = C1609 / 3.;
        const double C1674 = C1612 / 3.;
        const double C1675 = C1613 / 3.;
        const double C1676 = C1614 / 3.;
        const double C1677 = C1620 / 3.;
        const double C1678 = C1621 / 3.;
        const double C1679 = C1622 / 3.;
        const double C1680 = C1632 / 3.;
        const double C1681 = C1638 / 9.;
        const double C1682 = C1639 / C491;
        const double C1683 = C1640 / C123;
        const double C1684 = 0.349 * C1661;
        const double C1685 = 3. * C1651;
        const double C1686 = 3. * C1652;
        const double C1687 = 3. * C1665;
        const double C1688 = C123 * C1668;
        const double C1689 = C123 * C1669;
        const double C1690 = C138 * C1649;
        const double C1691 = C1660 * C455;
        const double C1692 = gammaab * C1664;
        const double C1693 = rhob * C1662;
        const double C1694 = C1658 + C543;
        const double C1695 = C1671 + C1590;
        const double C1696 = C1672 + C1586;
        const double C1697 = C1673 + C1587;
        const double C1698 = C180 + C1683;
        const double C1699 = C619 + C1682;
        const double C1700 = C147 - C1654;
        const double C1701 = C1591 - C1674;
        const double C1702 = C1592 - C1675;
        const double C1703 = C1593 - C1676;
        const double C1704 = C1648 - C1533;
        const double C1705 = C1650 - C1433;
        const double C1706 = C1666 - C1553;
        const double C1707 = C1681 - C96;
        const double C1708 = C634 - C1653;
        const double C1709 = C1647 / 3.;
        const double C1710 = C1663 / 3.;
        const double C1711 = C1667 / 9.;
        const double C1712 = 3. * C1690;
        const double C1713 = C131 * C1693;
        const double C1714 = C131 * C1694;
        const double C1715 = C138 * C1706;
        const double C1716 = C1692 * C142;
        const double C1717 = C1694 * C519;
        const double C1718 = C1698 * C92;
        const double C1719 = C1698 * rhob;
        const double C1720 = C1699 * C92;
        const double C1721 = C1707 * C106;
        const double C1722 = C1707 * C175;
        const double C1723 = C1598 + C1691;
        const double C1724 = C1685 - C1588;
        const double C1725 = C1686 - C1534;
        const double C1726 = C1688 - C1433;
        const double C1727 = C1689 - C1429;
        const double C1728 = C1709 - C1589;
        const double C1729 = C1711 - C96;
        const double C1730 = C1687 / 9.;
        const double C1731 = C1695 / 3.;
        const double C1732 = C1696 / 3.;
        const double C1733 = C1697 / 3.;
        const double C1734 = C1701 / C511;
        const double C1735 = C1702 / C511;
        const double C1736 = C1703 / C511;
        const double C1737 = C1704 / C490;
        const double C1738 = C1705 / C491;
        const double C1739 = C1708 / 9.;
        const double C1740 = C1729 * C106;
        const double C1741 = C1434 + C1722;
        const double C1742 = C1536 + C1716;
        const double C1743 = C1713 + C1464;
        const double C1744 = C1714 + C1644;
        const double C1745 = C1715 + C1511;
        const double C1746 = C565 + C1720;
        const double C1747 = C567 + C1721;
        const double C1748 = C619 + C1738;
        const double C1749 = C148 - C1719;
        const double C1750 = C1601 - C1737;
        const double C1751 = C1712 - C1594;
        const double C1752 = C1730 - C1670;
        const double C1753 = C1739 - C626;
        const double C1754 = C636 - C1718;
        const double C1755 = C1724 / C490;
        const double C1756 = C1725 / C490;
        const double C1757 = C1726 / C491;
        const double C1758 = C1727 / C491;
        const double C1759 = C1728 / C490;
        const double C1760 = 3. * C1745;
        const double C1761 = C104 * C1754;
        const double C1762 = C174 * C1754;
        const double C1763 = C1748 * C92;
        const double C1764 = C1753 * C106;
        const double C1765 = C1753 * C175;
        const double C1766 = C481 * C1750;
        const double C1767 = C490 * C1752;
        const double C1768 = C1659 + C1747;
        const double C1769 = C1733 + C1755;
        const double C1770 = C1743 + C1710;
        const double C1771 = C1744 + C1641;
        const double C1772 = C565 + C1746;
        const double C1773 = C567 + C1740;
        const double C1774 = C619 + C1757;
        const double C1775 = C619 + C1758;
        const double C1776 = C1731 - C1759;
        const double C1777 = C1751 / C490;
        const double C1778 = 0.00649176 * C1761;
        const double C1779 = 0.00649176 * C1762;
        const double C1780 = C102 * C1770;
        const double C1781 = C1774 * C92;
        const double C1782 = C1774 * rhob;
        const double C1783 = C1775 * C92;
        const double C1784 = C1775 * rhob;
        const double C1785 = C97 * C1769;
        const double C1786 = gammaab * C1768;
        const double C1787 = C1409 + C1765;
        const double C1788 = C1514 + C1773;
        const double C1789 = C1732 + C1777;
        const double C1790 = C1766 + C1453;
        const double C1791 = C474 + C1764;
        const double C1792 = C584 + C1763;
        const double C1793 = C1767 - C1677;
        const double C1794 =  - C1772;
        const double C1795 = C1760 / 9.;
        const double C1796 = C1776 / 3.;
        const double C1797 = 0.19672 * C1790;
        const double C1798 = C1786 * C142;
        const double C1799 = gammaaa * C1791;
        const double C1800 = gammaab * C1788;
        const double C1801 = C1432 + C1783;
        const double C1802 = C1436 + C1781;
        const double C1803 = C1785 + C1538;
        const double C1804 = C551 + C1784;
        const double C1805 = C576 + C1782;
        const double C1806 = C584 + C1792;
        const double C1807 = C1780 - C1539;
        const double C1808 = C1795 - C1645;
        const double C1809 = C1778 / 9.;
        const double C1810 = C1779 / 9.;
        const double C1811 = C1789 / 3.;
        const double C1812 = C1793 / C1473;
        const double C1813 = C1794 / 9.;
        const double C1814 = 10. * C1807;
        const double C1815 = C102 * C1800;
        const double C1816 = C104 * C1806;
        const double C1817 = C1799 * C142;
        const double C1818 = C490 * C1808;
        const double C1819 = C1410 + C1810;
        const double C1820 = C1540 + C1798;
        const double C1821 = C1803 + C1646;
        const double C1822 = C476 + C1809;
        const double C1823 = C1431 - C1797;
        const double C1824 = C1700 - C1802;
        const double C1825 = C1749 - C1801;
        const double C1826 = C1813 - 2;
        const double C1827 = C104 * C1824;
        const double C1828 = C104 * C1825;
        const double C1829 = C138 * C1821;
        const double C1830 = C174 * C1824;
        const double C1831 = C174 * C1825;
        const double C1832 = C1826 * C106;
        const double C1833 = gammabb * C1822;
        const double C1834 = C1535 + C1817;
        const double C1835 = C1814 - C1756;
        const double C1836 = C1815 - C1465;
        const double C1837 = C1818 - C1678;
        const double C1838 = C597 - C1816;
        const double C1839 = 0.00649176 * C1828;
        const double C1840 = 0.00649176 * C1831;
        const double C1841 = 0.00649176 * C1838;
        const double C1842 = C1833 * C142;
        const double C1843 = C1827 + C597;
        const double C1844 = C1829 + C1599;
        const double C1845 = C1830 + C1445;
        const double C1846 = C599 + C1832;
        const double C1847 = C1836 - C1735;
        const double C1848 = C1837 / C1473;
        const double C1849 = 0.00649176 * C1843;
        const double C1850 = 3. * C1844;
        const double C1851 = C1515 + C1846;
        const double C1852 = C1537 + C1842;
        const double C1853 = C1796 - C1848;
        const double C1854 = C1839 / 9.;
        const double C1855 = C1840 / 9.;
        const double C1856 = C1841 / 9.;
        const double C1857 = 0.349 * C1853;
        const double C1858 = gammabb * C1851;
        const double C1859 = C1441 + C1855;
        const double C1860 = C1574 + C1856;
        const double C1861 = C599 + C1854;
        const double C1862 = C1850 - C1680;
        const double C1863 = C1849 / 9.;
        const double C1864 = C102 * C1858;
        const double C1865 = C122 * C1857;
        const double C1866 = C490 * C1862;
        const double C1867 = gammaaa * C1860;
        const double C1868 = C1787 + C1863;
        const double C1869 = C1819 + C1861;
        const double C1870 = C102 * C1867;
        const double C1871 = gammaaa * C1868;
        const double C1872 = gammabb * C1869;
        const double C1873 = C1865 + C1487;
        const double C1874 = C1864 - C1466;
        const double C1875 = C1866 - C1679;
        const double C1876 = C1871 * C142;
        const double C1877 = C1872 * C142;
        const double C1878 = C1684 - C1873;
        const double C1879 = C1870 - C1467;
        const double C1880 = C1874 - C1736;
        const double C1881 = C1875 / C1473;
        const double C1882 = C489 * C1878;
        const double C1883 = C1541 + C1877;
        const double C1884 = C1542 + C1876;
        const double C1885 = C1811 - C1881;
        const double C1886 = C1879 - C1734;
        const double C1887 = 0.00649176 * C1885;
        const double C1888 = C1882 - C1623;
        const double C1889 = C1888 / C1471;
        const double C1890 = C1889 - C1812;
        const double C1891 = 3 * C1890;
        const double C1893 = -14. * C679;
        const double C1894 = -6.98 * C137;
        const double C1895 = -6. * C681;
        const double C1896 = -1.396 * C137;
        const double C1897 = 0.19672 * C116;
        const double C1898 = 0.243602 * C681;
        const double C1899 = 0.698 * C680;
        const double C1900 = 1.396 * C680;
        const double C1901 = 2. * C682;
        const double C1902 = 4. * C98;
        const double C1903 = 6.98 * C680;
        const double C1904 = 7 * C648;
        const double C1905 = 7 * C649;
        const double C1906 = 12. * C682;
        const double C1907 = C102 * C763;
        const double C1908 = C102 * C771;
        const double C1909 = C102 * C792;
        const double C1910 = C102 * C799;
        const double C1911 = C104 * C778;
        const double C1912 = C116 * C623;
        const double C1913 = C131 * C731;
        const double C1914 = C136 * C751;
        const double C1915 = C137 * C751;
        const double C1916 = C152 * C686;
        const double C1917 = C152 * C694;
        const double C1918 = C155 * C797;
        const double C1919 = C162 * C798;
        const double C1920 = C169 * C798;
        const double C1921 = C170 * C798;
        const double C1922 = C174 * C778;
        const double C1923 = C174 * C779;
        const double C1924 = C176 * C692;
        const double C1925 = C632 * C691;
        const double C1926 = C633 * C691;
        const double C1927 = C642 * C791;
        const double C1928 = C650 * C691;
        const double C1929 = C651 * C723;
        const double C1930 = C668 * C691;
        const double C1931 = C671 * C687;
        const double C1932 = C672 * C687;
        const double C1933 = C673 * C687;
        const double C1934 = C679 * C152;
        const double C1935 = C680 * C142;
        const double C1936 = C680 * C152;
        const double C1937 = C681 * C691;
        const double C1938 = C682 * C686;
        const double C1939 = C682 * C696;
        const double C1940 = C682 * C697;
        const double C1941 = C682 * C698;
        const double C1942 = C682 * C734;
        const double C1943 = C703 * C624;
        const double C1944 = C704 * C624;
        const double C1945 = C723 * C116;
        const double C1946 = C723 * C623;
        const double C1947 = C731 * C693;
        const double C1948 = C732 * rhoa;
        const double C1949 = C732 * rhob;
        const double C1950 = C733 * rhoa;
        const double C1951 = C735 * C692;
        const double C1952 = C735 * C693;
        const double C1953 = C736 * C624;
        const double C1954 = C737 * C624;
        const double C1955 = C738 * C175;
        const double C1956 = C738 * C798;
        const double C1957 = C739 * C106;
        const double C1958 = C739 * C175;
        const double C1959 = C751 * C139;
        const double C1960 = C760 * rhoa;
        const double C1961 = C761 * rhoa;
        const double C1962 = C761 * rhob;
        const double C1963 = C763 * C142;
        const double C1964 = C763 * C621;
        const double C1965 = C771 * C142;
        const double C1966 = C771 * C687;
        const double C1967 = C772 * C691;
        const double C1968 = C781 * C175;
        const double C1969 = C781 * C798;
        const double C1970 = C782 * C106;
        const double C1971 = C782 * C175;
        const double C1972 = C789 * C105;
        const double C1973 = C789 * C664;
        const double C1974 = C792 * C142;
        const double C1975 = C792 * C687;
        const double C1976 = C797 * C779;
        const double C1977 = C799 * C142;
        const double C1978 = C799 * C687;
        const double C1979 = C802 * C92;
        const double C1980 = C802 * rhoa;
        const double C1981 = C802 * rhob;
        const double C1982 = C93 * C687;
        const double C1983 = rhob * C723;
        const double C1984 = -20. / 3.;
        const double C1985 = -8. / 3.;
        const double C1986 = -7. / 3.;
        const double C1987 = C142 / 3.;
        const double C1988 = C668 / C144;
        const double C1989 = C696 / 3.;
        const double C1990 = C697 / 3.;
        const double C1991 = C698 / 3.;
        const double C1992 = std::pow(C102, 3);
        const double C1993 = std::pow(C102, 8);
        const double C1994 = std::pow(C105, 3);
        const double C1995 = std::pow(C105, 8);
        const double C1996 = std::pow(C116, 2);
        const double C1997 = std::pow(C144, 4);
        const double C1998 = std::pow(C168, 2);
        const double C1999 = std::pow(C628, 2);
        const double C2000 = std::pow(C93, 3);
        const double C2001 = std::pow(C93, 8);
        const double C2002 = std::pow(C93, C96);
        const double C2003 = std::pow(rhob, C119);
        const double C2004 = -154. * C1934;
        const double C2005 = -0.5066 * C1936;
        const double C2006 = 0.00649176 * C1911;
        const double C2007 = 0.00649176 * C1918;
        const double C2008 = 0.00649176 * C1922;
        const double C2009 = 0.00649176 * C1923;
        const double C2010 = 0.19672 * C1929;
        const double C2011 = 0.2533 * C1926;
        const double C2012 = 0.349 * C1937;
        const double C2013 = 2 * C1927;
        const double C2014 = 2. * C1935;
        const double C2015 = 2. * C1939;
        const double C2016 = 2. * C1940;
        const double C2017 = 2. * C1941;
        const double C2018 = 2 * C1945;
        const double C2019 = 4 * C2000;
        const double C2020 = 6. * C1938;
        const double C2021 = 6. * C1942;
        const double C2022 = 10. * C1907;
        const double C2023 = 11. * C1925;
        const double C2024 = 40. * C2003;
        const double C2025 = C102 * C1894;
        const double C2026 = C102 * C1900;
        const double C2027 = C137 * C1895;
        const double C2028 = C138 * C1906;
        const double C2029 = C152 * C1893;
        const double C2030 = C156 * C1895;
        const double C2031 = C161 * C1895;
        const double C2032 = C168 * C1994;
        const double C2033 = C1992 * C1896;
        const double C2034 = C629 * C1903;
        const double C2035 = C680 * C1901;
        const double C2036 = C734 * C1901;
        const double C2037 = C772 * C1901;
        const double C2038 = C93 * C1980;
        const double C2039 = C179 + C1980;
        const double C2040 = C179 + C1981;
        const double C2041 = C1897 + C1946;
        const double C2042 = C1919 + C1955;
        const double C2043 = C1919 + C1958;
        const double C2044 = C1920 + C1968;
        const double C2045 = C1921 + C1971;
        const double C2046 = C1998 + C1972;
        const double C2047 = C641 + C1957;
        const double C2048 = C646 + C1970;
        const double C2049 = C648 + C1979;
        const double C2050 = C649 + C1979;
        const double C2051 = C132 - C1904;
        const double C2052 = C132 - C1905;
        const double C2053 = C147 - C1949;
        const double C2054 = C147 - C1960;
        const double C2055 = C148 - C1950;
        const double C2056 = C148 - C1962;
        const double C2057 =  - C1987;
        const double C2058 =  - C1989;
        const double C2059 =  - C1990;
        const double C2060 =  - C1991;
        const double C2061 = C1898 / C144;
        const double C2062 = C1916 / 3.;
        const double C2063 = C1917 / 3.;
        const double C2064 = C1924 / 3.;
        const double C2065 = C1928 / 3.;
        const double C2066 = C1930 / 3.;
        const double C2067 = C1931 / 3.;
        const double C2068 = C1932 / 3.;
        const double C2069 = C1933 / 3.;
        const double C2070 = C1947 / 3.;
        const double C2071 = C1951 / 3.;
        const double C2072 = C1952 / 3.;
        const double C2073 = C1959 / 3.;
        const double C2074 = C1963 / C144;
        const double C2075 = C1965 / C144;
        const double C2076 = C1974 / C144;
        const double C2077 = C1977 / C144;
        const double C2078 = C1982 / 3.;
        const double C2079 = std::pow(C93, C1984);
        const double C2080 = std::pow(C93, C1985);
        const double C2081 = std::pow(C93, C1986);
        const double C2082 = -2618. * C2079;
        const double C2083 = -2.533 * C2080;
        const double C2084 = -1.396 * C2081;
        const double C2085 = 0.5066 * C2035;
        const double C2086 = 0.698 * C2081;
        const double C2087 = 1.396 * C2081;
        const double C2088 = 2 * C2046;
        const double C2089 = 2.533 * C2080;
        const double C2090 = 3. * C2028;
        const double C2091 = 3.49 * C2080;
        const double C2092 = 4 * C2032;
        const double C2093 = 7 * C2049;
        const double C2094 = 7 * C2050;
        const double C2095 = 10. * C2025;
        const double C2096 = 10. * C2080;
        const double C2097 = C123 * C2038;
        const double C2098 = C176 * C2024;
        const double C2099 = C93 * C2039;
        const double C2100 = C93 * C2040;
        const double C2101 = gammaab * C2047;
        const double C2102 = gammabb * C2048;
        const double C2103 = rhoa * C2007;
        const double C2104 = C179 + C2040;
        const double C2105 = C1913 + C2064;
        const double C2106 = C1915 + C2062;
        const double C2107 = C2027 + C2020;
        const double C2108 = C2030 + C2021;
        const double C2109 = C2063 + C1959;
        const double C2110 = C2067 + C1974;
        const double C2111 = C2068 + C1965;
        const double C2112 = C2069 + C1977;
        const double C2113 = C2078 + C142;
        const double C2114 = C1912 - C2010;
        const double C2115 = C2022 - C1988;
        const double C2116 = C2004 / C144;
        const double C2117 = C2005 / C144;
        const double C2118 = C2006 / 9.;
        const double C2119 = C2008 / 9.;
        const double C2120 = C2009 / 9.;
        const double C2121 = C2011 / 3.;
        const double C2122 = C2012 / 3.;
        const double C2123 = C2014 / C144;
        const double C2124 = C2015 / 9.;
        const double C2125 = C2016 / 9.;
        const double C2126 = C2017 / 9.;
        const double C2127 = C2023 / 3.;
        const double C2128 = C2026 / 3.;
        const double C2129 = C2029 / 3.;
        const double C2130 = C2031 / 3.;
        const double C2131 = C2034 / 3.;
        const double C2132 = C2037 / 3.;
        const double C2133 = C2057 / C138;
        const double C2134 = C2058 / C138;
        const double C2135 = C2059 / C138;
        const double C2136 = C2060 / C138;
        const double C2137 = 0.2533 * C2106;
        const double C2138 = 0.2533 * C2107;
        const double C2139 = C102 * C2096;
        const double C2140 = C103 * C2082;
        const double C2141 = C103 * C2083;
        const double C2142 = C138 * C2084;
        const double C2143 = C138 * C2089;
        const double C2144 = C138 * C2113;
        const double C2145 = C168 * C2088;
        const double C2146 = C2101 * C142;
        const double C2147 = C2102 * C142;
        const double C2148 = C2105 * C621;
        const double C2149 = C2115 * C2095;
        const double C2150 = C766 * C2090;
        const double C2151 = C780 * C2090;
        const double C2152 = C790 * C2090;
        const double C2153 = C800 * C2092;
        const double C2154 = C93 * C2104;
        const double C2155 = C98 * C2091;
        const double C2156 = rhob * C2103;
        const double C2157 = C1904 + C2093;
        const double C2158 = C1914 + C2129;
        const double C2159 = C1920 + C2119;
        const double C2160 = C1921 + C2120;
        const double C2161 = C2099 + C648;
        const double C2162 = C2099 + C705;
        const double C2163 = C2100 + C649;
        const double C2164 = C2100 + C706;
        const double C2165 = C2103 + C662;
        const double C2166 = C2128 + C2061;
        const double C2167 = C2130 + C1967;
        const double C2168 = C2131 + C1964;
        const double C2169 = C644 + C2118;
        const double C2170 = C1908 - C2135;
        const double C2171 = C1909 - C2134;
        const double C2172 = C1910 - C2136;
        const double C2173 = C2051 - C2094;
        const double C2174 = C2052 - C2093;
        const double C2175 = C2097 - C1943;
        const double C2176 = C2098 / 3.;
        const double C2177 = C2108 / 9.;
        const double C2178 = C2109 / 3.;
        const double C2179 = 3. * C2142;
        const double C2180 = 3. * C2144;
        const double C2181 = 11. * C2158;
        const double C2182 = C123 * C2154;
        const double C2183 = C138 * C2137;
        const double C2184 = C2170 * C667;
        const double C2185 = C2171 * C667;
        const double C2186 = C2172 * C667;
        const double C2187 = gammaaa * C2169;
        const double C2188 = rhob * C2165;
        const double C2189 = C2068 + C2146;
        const double C2190 = C2069 + C2147;
        const double C2191 = C2131 + C2148;
        const double C2192 = C2145 + C1973;
        const double C2193 = C2156 + C699;
        const double C2194 = C2176 + C1952;
        const double C2195 = C2143 - C2085;
        const double C2196 = C2155 - C2086;
        const double C2197 =  - C2157;
        const double C2198 = C2161 - C705;
        const double C2199 = C2162 - C648;
        const double C2200 = C2163 - C706;
        const double C2201 = C2164 - C649;
        const double C2202 = C2138 / 9.;
        const double C2203 = C2139 / 3.;
        const double C2204 = C2140 / 3.;
        const double C2205 = C2141 / 3.;
        const double C2206 = C2150 / 3.;
        const double C2207 = C2151 / 3.;
        const double C2208 = C2152 / 3.;
        const double C2209 = C2167 / 3.;
        const double C2210 = C2173 / 9.;
        const double C2211 = C2174 / 9.;
        const double C2212 = C2175 / C661;
        const double C2213 = 0.349 * C2192;
        const double C2214 = 3. * C2183;
        const double C2215 = 3. * C2195;
        const double C2216 = C123 * C2198;
        const double C2217 = C123 * C2199;
        const double C2218 = C123 * C2200;
        const double C2219 = C123 * C2201;
        const double C2220 = C138 * C2181;
        const double C2221 = C138 * C2189;
        const double C2222 = C138 * C2190;
        const double C2223 = C138 * C2191;
        const double C2224 = C2187 * C142;
        const double C2225 = C2188 + C722;
        const double C2226 = C2193 + C699;
        const double C2227 = C2203 + C2123;
        const double C2228 = C2204 + C2116;
        const double C2229 = C2205 + C2117;
        const double C2230 = C803 + C2212;
        const double C2231 = C2180 - C2065;
        const double C2232 = C2182 - C1954;
        const double C2233 = C2196 - C2087;
        const double C2234 = C2210 - C96;
        const double C2235 = C2211 - C96;
        const double C2236 = C2179 / 3.;
        const double C2237 = C2194 / 3.;
        const double C2238 = C2197 / 9.;
        const double C2239 = 3. * C2220;
        const double C2240 = 3. * C2223;
        const double C2241 = C131 * C2225;
        const double C2242 = C131 * C2226;
        const double C2243 = C138 * C2233;
        const double C2244 = C2225 * C693;
        const double C2245 = C2230 * C92;
        const double C2246 = C2234 * C106;
        const double C2247 = C2067 + C2224;
        const double C2248 = C2214 - C2121;
        const double C2249 = C2216 - C1943;
        const double C2250 = C2217 - C1953;
        const double C2251 = C2218 - C1944;
        const double C2252 = C2219 - C1954;
        const double C2253 = C2236 - C2122;
        const double C2254 = C2238 - C96;
        const double C2255 = C2215 / 9.;
        const double C2256 = C2221 / 3.;
        const double C2257 = C2222 / 3.;
        const double C2258 = C2227 / 3.;
        const double C2259 = C2228 / 3.;
        const double C2260 = C2229 / 3.;
        const double C2261 = C2231 / C660;
        const double C2262 = C2232 / C661;
        const double C2263 = C138 * C2247;
        const double C2264 = C2254 * C106;
        const double C2265 = C1948 + C2245;
        const double C2266 = C1955 + C2246;
        const double C2267 = C2241 + C2071;
        const double C2268 = C2242 + C2072;
        const double C2269 = C2243 + C2036;
        const double C2270 = C803 + C2262;
        const double C2271 = C2125 - C2256;
        const double C2272 = C2126 - C2257;
        const double C2273 = C2133 - C2261;
        const double C2274 = C2239 - C2127;
        const double C2275 = C2240 - C2066;
        const double C2276 = C2255 - C2202;
        const double C2277 = C2248 / C660;
        const double C2278 = C2249 / C661;
        const double C2279 = C2250 / C661;
        const double C2280 = C2251 / C661;
        const double C2281 = C2252 / C661;
        const double C2282 = C2253 / C660;
        const double C2283 = 3. * C2269;
        const double C2284 = C2270 * C92;
        const double C2285 = C651 * C2273;
        const double C2286 = C660 * C2276;
        const double C2287 = C1948 + C2265;
        const double C2288 = C1955 + C2264;
        const double C2289 = C2043 + C2266;
        const double C2290 = C2260 + C2277;
        const double C2291 = C2267 + C2070;
        const double C2292 = C2268 + C2237;
        const double C2293 = C803 + C2278;
        const double C2294 = C803 + C2279;
        const double C2295 = C803 + C2280;
        const double C2296 = C803 + C2281;
        const double C2297 = C2258 - C2282;
        const double C2298 = C2263 / 3.;
        const double C2299 = C2271 / C683;
        const double C2300 = C2272 / C683;
        const double C2301 = C2274 / C660;
        const double C2302 = C2275 / C660;
        const double C2303 = C102 * C2291;
        const double C2304 = C2293 * C92;
        const double C2305 = C2294 * C92;
        const double C2306 = C2295 * C92;
        const double C2307 = C2296 * C92;
        const double C2308 = C97 * C2290;
        const double C2309 = gammaab * C2289;
        const double C2310 = C1961 + C2284;
        const double C2311 = C2042 + C2288;
        const double C2312 = C2259 + C2301;
        const double C2313 = C2285 + C1983;
        const double C2314 = C2124 - C2298;
        const double C2315 = C2286 - C2206;
        const double C2316 =  - C2287;
        const double C2317 = C2283 / 9.;
        const double C2318 = C2297 / 3.;
        const double C2319 = 0.19672 * C2313;
        const double C2320 = C102 * C2309;
        const double C2321 = gammaab * C2311;
        const double C2322 = C1949 + C2304;
        const double C2323 = C1950 + C2306;
        const double C2324 = C1960 + C2305;
        const double C2325 = C1961 + C2310;
        const double C2326 = C1962 + C2307;
        const double C2327 = C2308 + C2073;
        const double C2328 = C2303 - C2074;
        const double C2329 = C2317 - C2177;
        const double C2330 = C2312 / 3.;
        const double C2331 = C2314 / C683;
        const double C2332 = C2315 / C1997;
        const double C2333 = C2316 / 9.;
        const double C2334 = 10. * C2328;
        const double C2335 = C104 * C2325;
        const double C2336 = C660 * C2329;
        const double C2337 = C2327 + C2178;
        const double C2338 = C2041 - C2319;
        const double C2339 = C2053 - C2324;
        const double C2340 = C2054 - C2322;
        const double C2341 = C2055 - C2326;
        const double C2342 = C2056 - C2323;
        const double C2343 = C2320 - C2075;
        const double C2344 = C2333 - 2;
        const double C2345 = C104 * C2340;
        const double C2346 = C104 * C2341;
        const double C2347 = C138 * C2337;
        const double C2348 = C2344 * C106;
        const double C2349 = C1923 - C2335;
        const double C2350 = C2334 - C2302;
        const double C2351 = C2336 - C2207;
        const double C2352 = C2343 - C2299;
        const double C2353 = 0.00649176 * C2345;
        const double C2354 = 0.00649176 * C2349;
        const double C2355 = C1968 + C2348;
        const double C2356 = C2346 + C1923;
        const double C2357 = C2347 + C2132;
        const double C2358 = C2351 / C1997;
        const double C2359 = 0.00649176 * C2356;
        const double C2360 = 3. * C2357;
        const double C2361 = C2044 + C2355;
        const double C2362 = C2318 - C2358;
        const double C2363 = C2353 / 9.;
        const double C2364 = C2354 / 9.;
        const double C2365 = 0.349 * C2362;
        const double C2366 = gammaaa * C2361;
        const double C2367 = C1968 + C2363;
        const double C2368 = C2160 + C2364;
        const double C2369 = C2360 - C2209;
        const double C2370 = C2359 / 9.;
        const double C2371 = C122 * C2365;
        const double C2372 = C660 * C2369;
        const double C2373 = gammabb * C2368;
        const double C2374 = C2045 + C2370;
        const double C2375 = C2159 + C2367;
        const double C2376 = gammaaa * C2375;
        const double C2377 = gammabb * C2374;
        const double C2378 = C2371 + C2013;
        const double C2379 = C2372 - C2208;
        const double C2380 = C102 * C2376;
        const double C2381 = C102 * C2377;
        const double C2382 = C2213 - C2378;
        const double C2383 = C2379 / C1997;
        const double C2384 = C659 * C2382;
        const double C2385 = C2330 - C2383;
        const double C2386 = C2380 - C2076;
        const double C2387 = C2381 - C2077;
        const double C2388 = 0.00649176 * C2385;
        const double C2389 = C2384 - C2153;
        const double C2390 = C2386 - C2331;
        const double C2391 = C2387 - C2300;
        const double C2392 = C2389 / C1995;
        const double C2393 = C2392 - C2332;
        const double C2394 = 3 * C2393;

                result.d3e_drararb =  - ( ( std::pow(C116, 4) * ( C1472 * ( 0.19672 * C544 + C1750 * C457 - 0.19672 * ( C481 * ( ( ( 2. * C510 * C142)  / 9. - ( C138 * C514)  / 9.)  / C511 - ( C490 * ( ( 3. * ( C138 * ( ( C93 * C1557)  / 3. - C1391 - C1391)  + C1581 * C1393) )  / 3. - ( ( C480 * C1387)  / 3. + C1581 * C518)  / 3.)  - ( C1704 * C1556)  / 3.)  / C1473)  + rhoa * C1750 + rhob * C1750 + C544) )  + 2 * C1430 * C1823 - ( C1583 * 2 * ( std::pow(C544, 2) + C1750 * C116)  + ( 0.19672 * C116 + C1431 - 0.19672 * ( C1766 + rhoa * C544) )  * C1492) )  - ( C1472 * C1823 - C1583 * C1492)  * 4 * C544 * std::pow(C116, 3))  / std::pow(C116, 8) + ( std::pow(C461, 4) * ( C1475 * ( 10. * ( C102 * ( C131 * ( rhob * ( rhoa * 0.00649176 * C155 * C1885 + C1483 + C1483)  + C1662)  + ( C1693 * C1496)  / 3. + C1717 / 3. + ( ( C1516 * C1499)  / 3. + C1717)  / 3.)  - ( C1770 * C142)  / C144 - ( 3. * C138 * ( ( C578 * C514)  / 3. + C1771 * C142)  - ( C1437 * C518)  / 3.)  / C490)  - ( C490 * ( 3. * ( C138 * ( ( ( C462 * -0.349e2 * C1546)  / 3. + C1660 * C1395)  / 3. + ( C578 * C1395)  / 3. + C1771 * C455)  + ( C1633 * C1393)  / 3.)  - ( ( C498 * C1387)  / 3. + C1723 * C518)  / 3.)  - ( C1725 * C1556)  / 3.)  / C1473)  + ( C1835 * C1561)  / C144 - ( 3. * C138 * ( C1584 * 10. * ( ( C102 * 0.1396e2 * C508)  / 3. + ( 2.43602 * C509)  / C144)  + ( 10. * ( C102 * C1771 - C1539)  - ( 3. * C138 * C1723 - C1534)  / C490)  * C1561)  - ( C1616 * C518)  / 3.)  / C490)  - ( ( C1475 * C1835 - C1616 / C144)  * std::pow(C461, 3) * -0.1396e2 * C137)  / C144)  / std::pow(C461, 8) + ( C488 * ( C121 * ( C102 * gammaaa * ( C169 * C1887 + C1753 * C613 + ( 0.00649176 * C1845)  / 9. + ( 0.00649176 * ( C1845 - ( C104 * ( C1805 + C1805 + C1748 * rhoa + ( C1891 + ( C491 * ( C123 * ( C93 * ( C618 + C618 + C1890 * rhoa)  + C1582)  + 2 * C1582 * C123 - ( 2 * C553 + C1668 * C458) )  - C1705 * C1493)  / C1477)  * C92)  + C174 * C1806) ) )  / 9.)  - ( C1867 * C142)  / C144 - ( 3. * C138 * C1884 - ( C616 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1834 - ( C522 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C500 * C1557)  / 3. + C1799 * C514)  / 3. + C1884)  + ( C1578 * C1393)  / 3.)  / 3.)  - ( C1701 * C1394)  / 3.)  / C1478)  + ( C1886 * C497)  / C144 - ( 3. * C138 * ( C1637 * C1631 + ( C102 * C1871 - C1467 - ( C1591 - ( C138 * C1834)  / 3.)  / C511)  * C497)  - ( C1657 * C518)  / 3.)  / C490)  - ( ( C121 * C1886 - C1657 / C144)  * C1504)  / C144)  / C1469 + ( C488 * ( C121 * ( C102 * gammaab * ( C162 * C1887 + C1585 * C613 + C1741 + C1741 + C1729 * C175 + ( -0.00649176 * C104 * ( 7 * C1519 + 7 * ( C1519 + C1448 + C1890 * C92) ) )  / 9.)  - ( C1800 * C142)  / C144 - ( 3. * C138 * C1820 - ( C591 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1742 - ( C523 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C501 * C1557)  / 3. + C1692 * C514)  / 3. + C1820)  + ( C1579 * C1393)  / 3.)  / 3.)  - ( C1702 * C1394)  / 3.)  / C1478)  + ( C1847 * C497)  / C144 - ( 3. * C138 * ( C1635 * C1631 + ( C102 * C1786 - C1465 - ( C1592 - ( C138 * C1742)  / 3.)  / C511)  * C497)  - ( C1655 * C518)  / 3.)  / C490)  - ( ( C121 * C1847 - C1655 / C144)  * C1504)  / C144)  / C1469 + ( C488 * ( C121 * ( C102 * gammabb * ( C170 * C1887 + ( 0.00649176 * C612 * C1754)  / 9. + C1859 + C1859 + C1826 * C175 + ( -0.00649176 * C104 * ( C1804 + C1804 + C1699 * rhoa + ( C1891 + ( C491 * ( C123 * ( C93 * ( C618 + C1890 * rhob)  + C1449)  + 2 * C1449 * C123 - ( 2 * C528 + C1669 * C458) )  - C1639 * C1493)  / C1477)  * C92) )  / 9.)  - ( C1858 * C142)  / C144 - ( 3. * C138 * C1883 - ( C610 * C518)  / 3.)  / C490 - ( C511 * ( ( 2. * ( C510 * C1852 - ( C524 * C509)  / 3.) )  / 9. - ( C138 * ( ( ( C502 * C1557)  / 3. + C1833 * C514)  / 3. + C1883)  + ( C1580 * C1393)  / 3.)  / 3.)  - ( C1703 * C1394)  / 3.)  / C1478)  + ( C1880 * C497)  / C144 - ( 3. * C138 * ( C1636 * C1631 + ( C102 * C1872 - C1466 - ( C1593 - ( C138 * C1852)  / 3.)  / C511)  * C497)  - ( C1656 * C518)  / 3.)  / C490)  - ( ( C121 * C1880 - C1656 / C144)  * C1504)  / C144)  / C1469) ;
                result.d3e_drarbrb =  - ( ( std::pow(C116, 4) * ( C1996 * ( 0.19672 * C723 + C2273 * C623 - 0.19672 * ( C651 * ( ( ( 2. * C682 * C142)  / 9. - ( C138 * C687)  / 9.)  / C683 - ( C660 * ( ( 3. * ( C138 * ( ( C93 * C2091)  / 3. - C1899 - C1899)  + C2113 * C1901) )  / 3. - ( ( C650 * C1895)  / 3. + C2113 * C691)  / 3.)  - ( C2231 * C2090)  / 3.)  / C1997)  + rhoa * C2273 + rhob * C2273 + C723) )  + 2 * C1945 * C2338 - ( C2114 * 2 * ( std::pow(C723, 2) + C2273 * C116)  + ( C1946 - 0.19672 * ( C2285 + rhoa * C723) )  * C2018) )  - ( C1996 * C2338 - C2114 * C2018)  * 4 * C723 * std::pow(C116, 3))  / std::pow(C116, 8) + ( std::pow(C628, 4) * ( C1999 * ( 10. * ( C102 * ( C131 * ( rhob * ( rhoa * 0.00649176 * C155 * C2385 + C2007)  + C2165 + C2165)  + C2244 / 3. + ( C2226 * C692)  / 3. + ( ( C731 * C2024)  / 3. + C2244)  / 3.)  - ( C2291 * C142)  / C144 - ( 3. * C138 * ( ( C763 * C687)  / 3. + C2292 * C142)  - ( C1963 * C691)  / 3.)  / C660)  - ( C660 * ( 3. * ( C138 * ( ( ( C629 * -0.349e2 * C2080)  / 3. + C763 * C1903)  / 3. + ( C2105 * C1903)  / 3. + ( C2241 + C2070 + C2071)  * C621)  + ( C2191 * C1901)  / 3.)  - ( ( C668 * C1895)  / 3. + C2168 * C691)  / 3.)  - ( C2275 * C2090)  / 3.)  / C1997)  + ( C2350 * C2095)  / C144 - ( 3. * C138 * ( C2115 * 10. * ( ( C102 * 0.1396e2 * C680)  / 3. + ( 2.43602 * C681)  / C144)  + ( 10. * ( C102 * C2292 - C2074)  - ( 3. * C138 * C2168 - C2066)  / C660)  * C2095)  - ( C2149 * C691)  / 3.)  / C660)  - ( ( C1999 * C2350 - C2149 / C144)  * std::pow(C628, 3) * -0.1396e2 * C137)  / C144)  / std::pow(C628, 8) + ( C658 * ( C121 * ( C102 * gammaaa * ( C169 * C2388 + C1969 + ( 0.00649176 * ( C174 * C2339 + C797 * C778) )  / 9. + C1969 + C2344 * C175 + ( 0.00649176 * ( C174 * C2340 - C104 * ( C732 + C2294 * rhoa + C732 + C2230 * rhob + C2293 * rhoa + ( C2394 + ( C661 * ( C123 * ( C93 * ( C802 + C2393 * rhoa)  + C2039 + C1980 - C2039)  + 2 * C93 * C2198 - ( 2 * C703 + C2038 * C624) )  - C2249 * C2019)  / C2001)  * C92) ) )  / 9.)  - ( C2376 * C142)  / C144 - ( 3. * C138 * ( C1975 / 3. + C2366 * C142)  - ( C1974 * C691)  / 3.)  / C660 - ( C683 * ( ( 2. * ( C682 * C2110 - ( C696 * C681)  / 3.) )  / 9. - ( C138 * ( ( ( C671 * C2091)  / 3. + C1975)  / 3. + ( C2187 * C687)  / 3. + gammaaa * ( C2044 + ( 0.00649176 * ( C104 * C2339 + C1922) )  / 9.)  * C142)  + ( C2247 * C1901)  / 3.)  / 3.)  - ( C2314 * C1902)  / 3.)  / C2002)  + ( C2390 * C667)  / C144 - ( 3. * C138 * ( C2171 * C2166 + ( C102 * C2366 - C2076 - ( C2124 - ( C138 * C2110)  / 3.)  / C683)  * C667)  - ( C2185 * C691)  / 3.)  / C660)  - ( ( C121 * C2390 - C2185 / C144)  * C2033)  / C144)  / C1993 + ( C658 * ( C121 * ( C102 * gammaab * ( C162 * C2388 + C1956 + C739 * C798 + C2235 * C175 + C1956 + C2254 * C175 + C2234 * C175 + ( -0.00649176 * C104 * ( 7 * C179 + 7 * C1980 + 7 * ( C2040 + C1980 + C2393 * C92) ) )  / 9.)  - ( C2309 * C142)  / C144 - ( 3. * C138 * ( C1966 / 3. + C2321 * C142)  - ( C1965 * C691)  / 3.)  / C660 - ( C683 * ( ( 2. * ( C682 * C2111 - ( C697 * C681)  / 3.) )  / 9. - ( C138 * ( ( ( C672 * C2091)  / 3. + C1966)  / 3. + ( C2101 * C687)  / 3. + gammaab * ( C2042 + C1958 + C2235 * C106)  * C142)  + ( C2189 * C1901)  / 3.)  / 3.)  - ( C2271 * C1902)  / 3.)  / C2002)  + ( C2352 * C667)  / C144 - ( 3. * C138 * ( C2170 * C2166 + ( C102 * C2321 - C2075 - ( C2125 - ( C138 * C2111)  / 3.)  / C683)  * C667)  - ( C2184 * C691)  / 3.)  / C660)  - ( ( C121 * C2352 - C2184 / C144)  * C2033)  / C144)  / C1993 + ( C658 * ( C121 * ( C102 * gammabb * ( C170 * C2388 + ( 0.00649176 * C1976)  / 9. + C782 * C798 + ( 0.00649176 * C174 * C2342)  / 9. + ( 0.00649176 * ( C174 * C2341 - C104 * ( C761 + C2295 * rhoa + C761 + C2270 * rhob + C2296 * rhoa + ( C2394 + ( C661 * ( C123 * ( C93 * ( C802 + C802 + C2393 * rhob)  + C2040 + C2104 - C2040)  + 2 * C93 * C2201 - ( 2 * C737 + C2154 * C624) )  - C2252 * C2019)  / C2001)  * C92)  + C1976 - C174 * C2325) )  / 9.)  - ( C2377 * C142)  / C144 - ( 3. * C138 * ( C1978 / 3. + C2373 * C142)  - ( C1977 * C691)  / 3.)  / C660 - ( C683 * ( ( 2. * ( C682 * C2112 - ( C698 * C681)  / 3.) )  / 9. - ( C138 * ( ( ( C673 * C2091)  / 3. + C1978)  / 3. + ( C2102 * C687)  / 3. + gammabb * ( C2160 + C1971 + ( 0.00649176 * C104 * C2342)  / 9.)  * C142)  + ( C2190 * C1901)  / 3.)  / 3.)  - ( C2272 * C1902)  / 3.)  / C2002)  + ( C2391 * C667)  / C144 - ( 3. * C138 * ( C2172 * C2166 + ( C102 * C2373 - C2077 - ( C2126 - ( C138 * C2112)  / 3.)  / C683)  * C667)  - ( C2186 * C691)  / 3.)  / C660)  - ( ( C121 * C2391 - C2186 / C144)  * C2033)  / C144)  / C1993) ;
            }

            if (rhob >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;
        const double C2396 = -14. * C857;
        const double C2397 = -6.98 * C206;
        const double C2398 = -6. * C859;
        const double C2399 = -1.396 * C206;
        const double C2400 = 0.00649176 * C946;
        const double C2401 = 0.243602 * C859;
        const double C2402 = 0.698 * C858;
        const double C2403 = 1.396 * C858;
        const double C2404 = 2. * C860;
        const double C2405 = 4. * C77;
        const double C2406 = 6.98 * C858;
        const double C2407 = 7 * C828;
        const double C2408 = 12. * C860;
        const double C2409 = C183 * C807;
        const double C2410 = C205 * C918;
        const double C2411 = C206 * C918;
        const double C2412 = C222 * C962;
        const double C2413 = C225 * C863;
        const double C2414 = C225 * C870;
        const double C2415 = C231 * C963;
        const double C2416 = C238 * C963;
        const double C2417 = C239 * C963;
        const double C2418 = C72 * C864;
        const double C2419 = C81 * C928;
        const double C2420 = C81 * C935;
        const double C2421 = C81 * C956;
        const double C2422 = C81 * C964;
        const double C2423 = C814 * C868;
        const double C2424 = C815 * C868;
        const double C2425 = C822 * C955;
        const double C2426 = C830 * C868;
        const double C2427 = C831 * C894;
        const double C2428 = C849 * C868;
        const double C2429 = C850 * C864;
        const double C2430 = C851 * C864;
        const double C2431 = C852 * C864;
        const double C2432 = C857 * C225;
        const double C2433 = C858 * C211;
        const double C2434 = C858 * C225;
        const double C2435 = C859 * C868;
        const double C2436 = C860 * C863;
        const double C2437 = C860 * C872;
        const double C2438 = C860 * C873;
        const double C2439 = C860 * C874;
        const double C2440 = C860 * C901;
        const double C2441 = C878 * C808;
        const double C2442 = C894 * C183;
        const double C2443 = C894 * C807;
        const double C2444 = C903 * C808;
        const double C2445 = C904 * C963;
        const double C2446 = C918 * C208;
        const double C2447 = C928 * C211;
        const double C2448 = C928 * C805;
        const double C2449 = C935 * C864;
        const double C2450 = C936 * C868;
        const double C2451 = C944 * C963;
        const double C2452 = C953 * C84;
        const double C2453 = C953 * C844;
        const double C2454 = C956 * C864;
        const double C2455 = C962 * C942;
        const double C2456 = C964 * C864;
        const double C2457 = C968 * C71;
        const double C2458 = C968 * rhoa;
        const double C2459 = C968 * rhob;
        const double C2460 = rhoa * C894;
        const double C2461 = -20. / 3.;
        const double C2462 = -8. / 3.;
        const double C2463 = -7. / 3.;
        const double C2464 = C211 / 3.;
        const double C2465 = C849 / C213;
        const double C2466 = C872 / 3.;
        const double C2467 = C873 / 3.;
        const double C2468 = C874 / 3.;
        const double C2469 = C915 / 3.;
        const double C2470 = C941 / C213;
        const double C2471 = C960 / C213;
        const double C2472 = C966 / C213;
        const double C2473 = std::pow(C183, 2);
        const double C2474 = std::pow(C213, 4);
        const double C2475 = std::pow(C237, 2);
        const double C2476 = std::pow(C72, 3);
        const double C2477 = std::pow(C72, 8);
        const double C2478 = std::pow(C72, C75);
        const double C2479 = std::pow(C81, 3);
        const double C2480 = std::pow(C81, 8);
        const double C2481 = std::pow(C811, 2);
        const double C2482 = std::pow(C84, 3);
        const double C2483 = std::pow(C84, 8);
        const double C2484 = std::pow(rhob, C188);
        const double C2485 = -154. * C2432;
        const double C2486 = -0.5066 * C2434;
        const double C2487 = 0.00649176 * C2412;
        const double C2488 = 0.19672 * C2427;
        const double C2489 = 0.2533 * C2424;
        const double C2490 = 0.349 * C2435;
        const double C2491 = 2 * C2425;
        const double C2492 = 2. * C2433;
        const double C2493 = 2. * C2437;
        const double C2494 = 2. * C2438;
        const double C2495 = 2. * C2439;
        const double C2496 = 2 * C2442;
        const double C2497 = 4 * C2476;
        const double C2498 = 6. * C2436;
        const double C2499 = 6. * C2440;
        const double C2500 = 10. * C2419;
        const double C2501 = 11. * C2423;
        const double C2502 = 40. * C2484;
        const double C2503 = C206 * C2398;
        const double C2504 = C207 * C2408;
        const double C2505 = C223 * C2398;
        const double C2506 = C225 * C2396;
        const double C2507 = C230 * C2398;
        const double C2508 = C237 * C2482;
        const double C2509 = C2479 * C2399;
        const double C2510 = C72 * C2458;
        const double C2511 = C81 * C2397;
        const double C2512 = C81 * C2403;
        const double C2513 = C812 * C2406;
        const double C2514 = C858 * C2404;
        const double C2515 = C901 * C2404;
        const double C2516 = C928 * C2406;
        const double C2517 = C936 * C2404;
        const double C2518 = C2415 + C916;
        const double C2519 = C2416 + C948;
        const double C2520 = C2475 + C2452;
        const double C2521 = C248 + C2459;
        const double C2522 = C828 + C2457;
        const double C2523 =  - C2464;
        const double C2524 =  - C2466;
        const double C2525 =  - C2467;
        const double C2526 =  - C2468;
        const double C2527 = C2400 / 9.;
        const double C2528 = C2401 / C213;
        const double C2529 = C2413 / 3.;
        const double C2530 = C2414 / 3.;
        const double C2531 = C2418 / 3.;
        const double C2532 = C2426 / 3.;
        const double C2533 = C2428 / 3.;
        const double C2534 = C2429 / 3.;
        const double C2535 = C2430 / 3.;
        const double C2536 = C2431 / 3.;
        const double C2537 = C2446 / 3.;
        const double C2538 = C2447 / C213;
        const double C2539 = C2449 / 3.;
        const double C2540 = C2454 / 3.;
        const double C2541 = C2456 / 3.;
        const double C2542 = std::pow(C72, C2461);
        const double C2543 = std::pow(C72, C2462);
        const double C2544 = std::pow(C72, C2463);
        const double C2545 = -2618. * C2542;
        const double C2546 = -2.533 * C2543;
        const double C2547 = -1.396 * C2544;
        const double C2548 = 0.5066 * C2514;
        const double C2549 = 0.698 * C2544;
        const double C2550 = 1.396 * C2544;
        const double C2551 = 2 * C2520;
        const double C2552 = 2.533 * C2543;
        const double C2553 = 3. * C2504;
        const double C2554 = 3.49 * C2543;
        const double C2555 = 4 * C2508;
        const double C2556 = 7 * C2522;
        const double C2557 = 10. * C2511;
        const double C2558 = 10. * C2543;
        const double C2559 = C190 * C2510;
        const double C2560 = C245 * C2502;
        const double C2561 = C902 * C2502;
        const double C2562 = rhoa * C2487;
        const double C2563 = C2411 + C2529;
        const double C2564 = C2417 + C2527;
        const double C2565 = C248 + C2521;
        const double C2566 = C2503 + C2498;
        const double C2567 = C2505 + C2499;
        const double C2568 = C2530 + C2446;
        const double C2569 = C2531 + C211;
        const double C2570 = C2534 + C960;
        const double C2571 = C2535 + C941;
        const double C2572 = C2536 + C966;
        const double C2573 = C2409 - C2488;
        const double C2574 = C2500 - C2465;
        const double C2575 = C2485 / C213;
        const double C2576 = C2486 / C213;
        const double C2577 = C2489 / 3.;
        const double C2578 = C2490 / 3.;
        const double C2579 = C2492 / C213;
        const double C2580 = C2493 / 9.;
        const double C2581 = C2494 / 9.;
        const double C2582 = C2495 / 9.;
        const double C2583 = C2501 / 3.;
        const double C2584 = C2506 / 3.;
        const double C2585 = C2507 / 3.;
        const double C2586 = C2512 / 3.;
        const double C2587 = C2513 / 3.;
        const double C2588 = C2517 / 3.;
        const double C2589 = C2523 / C207;
        const double C2590 = C2524 / C207;
        const double C2591 = C2525 / C207;
        const double C2592 = C2526 / C207;
        const double C2593 = 0.2533 * C2563;
        const double C2594 = 0.2533 * C2566;
        const double C2595 = C207 * C2547;
        const double C2596 = C207 * C2552;
        const double C2597 = C207 * C2569;
        const double C2598 = C207 * C2570;
        const double C2599 = C207 * C2571;
        const double C2600 = C207 * C2572;
        const double C2601 = C237 * C2551;
        const double C2602 = C2574 * C2557;
        const double C2603 = C72 * C2565;
        const double C2604 = C77 * C2554;
        const double C2605 = C81 * C2558;
        const double C2606 = C82 * C2545;
        const double C2607 = C82 * C2546;
        const double C2608 = C930 * C2553;
        const double C2609 = C943 * C2553;
        const double C2610 = C954 * C2553;
        const double C2611 = C965 * C2555;
        const double C2612 = rhob * C2562;
        const double C2613 = C2407 + C2556;
        const double C2614 = C2410 + C2584;
        const double C2615 = C2585 + C2450;
        const double C2616 = C2586 + C2528;
        const double C2617 = C2587 + C2448;
        const double C2618 = C2420 - C2591;
        const double C2619 = C2421 - C2590;
        const double C2620 = C2422 - C2592;
        const double C2621 = C2559 - C2441;
        const double C2622 = C2560 / 3.;
        const double C2623 = C2561 / 3.;
        const double C2624 = C2567 / 9.;
        const double C2625 = C2568 / 3.;
        const double C2626 = 3. * C2595;
        const double C2627 = 3. * C2597;
        const double C2628 = 11. * C2614;
        const double C2629 = C190 * C2603;
        const double C2630 = C207 * C2593;
        const double C2631 = C207 * C2617;
        const double C2632 = C2618 * C848;
        const double C2633 = C2619 * C848;
        const double C2634 = C2620 * C848;
        const double C2635 = C2601 + C2453;
        const double C2636 = C2612 + C875;
        const double C2637 = C2622 + C915;
        const double C2638 = C2596 - C2548;
        const double C2639 = C2604 - C2549;
        const double C2640 =  - C2613;
        const double C2641 = C2594 / 9.;
        const double C2642 = C2598 / 3.;
        const double C2643 = C2599 / 3.;
        const double C2644 = C2600 / 3.;
        const double C2645 = C2605 / 3.;
        const double C2646 = C2606 / 3.;
        const double C2647 = C2607 / 3.;
        const double C2648 = C2608 / 3.;
        const double C2649 = C2609 / 3.;
        const double C2650 = C2610 / 3.;
        const double C2651 = C2615 / 3.;
        const double C2652 = C2621 / C839;
        const double C2653 = 0.349 * C2635;
        const double C2654 = 3. * C2630;
        const double C2655 = 3. * C2631;
        const double C2656 = 3. * C2638;
        const double C2657 = C207 * C2628;
        const double C2658 = C2636 + C875;
        const double C2659 = C2645 + C2579;
        const double C2660 = C2646 + C2575;
        const double C2661 = C2647 + C2576;
        const double C2662 = C969 + C2652;
        const double C2663 = C2580 - C2642;
        const double C2664 = C2581 - C2643;
        const double C2665 = C2582 - C2644;
        const double C2666 = C2627 - C2532;
        const double C2667 = C2629 - C2444;
        const double C2668 = C2639 - C2550;
        const double C2669 = C2626 / 3.;
        const double C2670 = C2637 / 3.;
        const double C2671 = C2640 / 9.;
        const double C2672 = 3. * C2657;
        const double C2673 = C200 * C2658;
        const double C2674 = C207 * C2668;
        const double C2675 = C2658 * C869;
        const double C2676 = C2662 * C71;
        const double C2677 = C2662 * rhoa;
        const double C2678 = C2654 - C2577;
        const double C2679 = C2655 - C2533;
        const double C2680 = C2669 - C2578;
        const double C2681 = C2671 - C75;
        const double C2682 = C2656 / 9.;
        const double C2683 = C2659 / 3.;
        const double C2684 = C2660 / 3.;
        const double C2685 = C2661 / 3.;
        const double C2686 = C2663 / C861;
        const double C2687 = C2664 / C861;
        const double C2688 = C2665 / C861;
        const double C2689 = C2666 / C838;
        const double C2690 = C2667 / C839;
        const double C2691 = C2681 * C244;
        const double C2692 = C2681 * C85;
        const double C2693 = C2623 + C2675;
        const double C2694 = C2673 + C2469;
        const double C2695 = C2674 + C2515;
        const double C2696 = C914 + C2676;
        const double C2697 = C969 + C2690;
        const double C2698 = C2589 - C2689;
        const double C2699 = C2672 - C2583;
        const double C2700 = C2682 - C2641;
        const double C2701 = C2678 / C838;
        const double C2702 = C2679 / C838;
        const double C2703 = C2680 / C838;
        const double C2704 = 3. * C2695;
        const double C2705 = C2697 * C71;
        const double C2706 = C2697 * rhoa;
        const double C2707 = C831 * C2698;
        const double C2708 = C838 * C2700;
        const double C2709 = rhoa * C2698;
        const double C2710 = C2445 + C2691;
        const double C2711 = C2685 + C2701;
        const double C2712 = C2694 + C2670;
        const double C2713 = C914 + C2696;
        const double C2714 = C916 + C2692;
        const double C2715 = C2683 - C2703;
        const double C2716 = C2699 / C838;
        const double C2717 = C2712 * C211;
        const double C2718 = C76 * C2711;
        const double C2719 = C81 * C2712;
        const double C2720 = C2518 + C2714;
        const double C2721 = C2684 + C2716;
        const double C2722 = C2707 + C2460;
        const double C2723 = C934 + C2705;
        const double C2724 = C2708 - C2648;
        const double C2725 =  - C2713;
        const double C2726 = C2704 / 9.;
        const double C2727 = C2715 / 3.;
        const double C2728 = 0.19672 * C2722;
        const double C2729 = gammaab * C2720;
        const double C2730 = C2718 + C2537;
        const double C2731 = C934 + C2723;
        const double C2732 = C2719 - C2538;
        const double C2733 = C2726 - C2624;
        const double C2734 = C2721 / 3.;
        const double C2735 = C2724 / C2474;
        const double C2736 = C2725 / 9.;
        const double C2737 = 10. * C2732;
        const double C2738 = C243 * C2731;
        const double C2739 = C2729 * C211;
        const double C2740 = C81 * C2729;
        const double C2741 = C83 * C2731;
        const double C2742 = C838 * C2733;
        const double C2743 = C2730 + C2625;
        const double C2744 = C2443 - C2728;
        const double C2745 = C2736 - 2;
        const double C2746 = C207 * C2743;
        const double C2747 = C2745 * C244;
        const double C2748 = C2745 * C85;
        const double C2749 = C2539 + C2739;
        const double C2750 = C2455 - C2738;
        const double C2751 = C2737 - C2702;
        const double C2752 = C2740 - C2470;
        const double C2753 = C2742 - C2649;
        const double C2754 = C946 - C2741;
        const double C2755 = 0.00649176 * C2754;
        const double C2756 = C2751 * C2557;
        const double C2757 = C2451 + C2747;
        const double C2758 = C2746 + C2588;
        const double C2759 = C948 + C2748;
        const double C2760 = C2752 - C2687;
        const double C2761 = C2753 / C2474;
        const double C2762 = 3. * C2758;
        const double C2763 = C2760 * C848;
        const double C2764 = C2519 + C2759;
        const double C2765 = C2727 - C2761;
        const double C2766 = C2755 / 9.;
        const double C2767 = 0.349 * C2765;
        const double C2768 = gammaaa * C2764;
        const double C2769 = C2564 + C2766;
        const double C2770 = C2762 - C2651;
        const double C2771 = C192 * C2767;
        const double C2772 = C2768 * C211;
        const double C2773 = C81 * C2768;
        const double C2774 = C838 * C2770;
        const double C2775 = gammabb * C2769;
        const double C2776 = C2775 * C211;
        const double C2777 = C81 * C2775;
        const double C2778 = C2540 + C2772;
        const double C2779 = C2771 + C2491;
        const double C2780 = C2773 - C2471;
        const double C2781 = C2774 - C2650;
        const double C2782 = C2541 + C2776;
        const double C2783 = C2653 - C2779;
        const double C2784 = C2777 - C2472;
        const double C2785 = C2780 - C2686;
        const double C2786 = C2781 / C2474;
        const double C2787 = C2785 * C848;
        const double C2788 = C841 * C2783;
        const double C2789 = C2734 - C2786;
        const double C2790 = C2784 - C2688;
        const double C2791 = 0.00649176 * C2789;
        const double C2792 = C2790 * C848;
        const double C2793 = C2788 - C2611;
        const double C2794 = C2793 / C2483;
        const double C2795 = C2794 - C2735;
        const double C2796 = 3 * C2795;

                result.d3e_drbrbrb =  - ( ( std::pow(C183, 4) * ( C2473 * ( C2698 * C807 - 0.19672 * ( C831 * ( ( ( 2. * C860 * C211)  / 9. - ( C207 * C864)  / 9.)  / C861 - ( C838 * ( ( 3. * ( C207 * ( ( C72 * C2554)  / 3. - C2402 - C2402)  + C2569 * C2404) )  / 3. - ( ( C830 * C2398)  / 3. + C2569 * C868)  / 3.)  - ( C2666 * C2553)  / 3.)  / C2474)  + C2709 + C2709) )  + 2 * C2442 * C2744 - ( C2573 * 2 * ( std::pow(C894, 2) + C2698 * C183)  + C2744 * C2496) )  - ( C2473 * C2744 - C2573 * C2496)  * 4 * C894 * std::pow(C183, 3))  / std::pow(C183, 8) + ( std::pow(C811, 4) * ( C2481 * ( 10. * ( C81 * ( C200 * ( rhob * rhoa * 0.00649176 * C222 * C2789 + C2562 + C2562 + C2562)  + C2675 / 3. + C2693 / 3. + ( ( ( C245 * 80. * std::pow(rhob, C835))  / 3. + C2561)  / 3. + C2693)  / 3.)  - C2717 / C213 - ( 3. * C207 * ( ( C928 * C864)  / 3. + C2717)  - ( C2447 * C868)  / 3.)  / C838)  - ( C838 * ( 3. * ( C207 * ( ( ( C812 * -0.349e2 * C2543)  / 3. + C2516)  / 3. + C2516 / 3. + C2712 * C805)  + ( C2617 * C2404)  / 3.)  - ( ( C849 * C2398)  / 3. + C2617 * C868)  / 3.)  - ( C2679 * C2553)  / 3.)  / C2474)  + C2756 / C213 - ( 3. * C207 * ( C2574 * 10. * ( ( C81 * 0.1396e2 * C858)  / 3. + ( 2.43602 * C859)  / C213)  + C2756)  - ( C2602 * C868)  / 3.)  / C838)  - ( ( C2481 * C2751 - C2602 / C213)  * std::pow(C811, 3) * -0.1396e2 * C206)  / C213)  / std::pow(C811, 8) + ( C840 * ( C191 * ( C81 * gammaaa * ( C238 * C2791 + C2451 + C2757 + C2757 + C2747 + ( -0.00649176 * C83 * ( C2677 + C2677 + C2677 + ( C2796 + ( C839 * ( C190 * ( C72 * C2795 * rhoa + C2458)  + 2 * C2458 * C190 - ( 2 * C878 + C2510 * C808) )  - C2621 * C2497)  / C2477)  * C71) )  / 9.)  - C2772 / C213 - ( 3. * C207 * C2778 - ( C960 * C868)  / 3.)  / C838 - ( C861 * ( ( 2. * ( C860 * C2570 - ( C872 * C859)  / 3.) )  / 9. - ( C207 * ( ( ( C850 * C2554)  / 3. + C2454)  / 3. + C2778)  + ( C2570 * C2404)  / 3.)  / 3.)  - ( C2663 * C2405)  / 3.)  / C2478)  + C2787 / C213 - ( 3. * C207 * ( C2619 * C2616 + C2787)  - ( C2633 * C868)  / 3.)  / C838)  - ( ( C191 * C2785 - C2633 / C213)  * C2509)  / C213)  / C2480 + ( C840 * ( C191 * ( C81 * gammaab * ( C231 * C2791 + C2445 + C2710 + C2710 + C2691 + ( -0.00649176 * C83 * ( 7 * C2458 + 7 * ( C2458 + C2458 + C2795 * C71) ) )  / 9.)  - C2739 / C213 - ( 3. * C207 * C2749 - ( C941 * C868)  / 3.)  / C838 - ( C861 * ( ( 2. * ( C860 * C2571 - ( C873 * C859)  / 3.) )  / 9. - ( C207 * ( ( ( C851 * C2554)  / 3. + C2449)  / 3. + C2749)  + ( C2571 * C2404)  / 3.)  / 3.)  - ( C2664 * C2405)  / 3.)  / C2478)  + C2763 / C213 - ( 3. * C207 * ( C2618 * C2616 + C2763)  - ( C2632 * C868)  / 3.)  / C838)  - ( ( C191 * C2760 - C2632 / C213)  * C2509)  / C213)  / C2480 + ( C840 * ( C191 * ( C81 * gammabb * ( C239 * C2791 + ( 0.00649176 * C2455)  / 9. + ( 0.00649176 * C2750)  / 9. + ( 0.00649176 * ( C2750 - ( C83 * ( C2706 + C2706 + C2706 + ( C2796 + ( C839 * ( C190 * ( C72 * ( C968 + C968 + C968 + C2795 * rhob)  + C2565)  + 2 * C2565 * C190 - ( 2 * C903 + C2603 * C808) )  - C2667 * C2497)  / C2477)  * C71)  + C2738) ) )  / 9.)  - C2776 / C213 - ( 3. * C207 * C2782 - ( C966 * C868)  / 3.)  / C838 - ( C861 * ( ( 2. * ( C860 * C2572 - ( C874 * C859)  / 3.) )  / 9. - ( C207 * ( ( ( C852 * C2554)  / 3. + C2456)  / 3. + C2782)  + ( C2572 * C2404)  / 3.)  / 3.)  - ( C2665 * C2405)  / 3.)  / C2478)  + C2792 / C213 - ( 3. * C207 * ( C2620 * C2616 + C2792)  - ( C2634 * C868)  / 3.)  / C838)  - ( ( C191 * C2790 - C2634 / C213)  * C2509)  / C213)  / C2480) ;
            }

            // Third derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;

                result.d3e_dgaagaagaa = 0;
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d3e_dgaagaagab = 0;
                result.d3e_dgaagabgab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_dgaagaagbb = 0;
                result.d3e_dgaagbbgbb = 0;
            }

            if (gammaaa >= eps && gammaab >= eps && gammabb >= eps) {
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_dgaagabgbb = 0;
            }

            if (gammaab >= eps) {
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d3e_dgabgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_dgabgabgbb = 0;
                result.d3e_dgabgbbgbb = 0;
            }

            if (gammabb >= eps) {
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_dgbbgbbgbb = 0;
            }

            // Mixed third derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;
        const double C2798 = C473 * C142;
        const double C2799 = C611 * C142;

                result.d3e_draragaa =  - ( C121 * ( C102 * ( C169 * C613 + ( 0.00649176 * C597)  / 9. + ( 0.00649176 * ( C597 - C104 * ( C584 + C584 + ( C619 + ( C123 * C93 * ( C179 + C179 + C618 * rhoa)  - C553 * C458)  / C491)  * C92) ) )  / 9.)  - C2799 / C144 - ( ( 2. * C510 * C2798)  / 9. - ( C138 * ( ( C473 * C514)  / 3. + C2799) )  / 3.)  / C511)  - ( ( C102 * C611 - (  - C2798 / 3.)  / C138)  * C497)  / C144)  / C488;
                result.d3e_dragaagaa = 0;
            }

            if (rhoa >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d3e_dragaagab = 0;
            }

            if (rhoa >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_dragaagbb = 0;
            }

            if (rhoa >= eps && rhob >= eps && gammaaa >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C621 = -3.49 * C137;
        const double C622 = -0.698 * C137;
        const double C623 = 0.19672 * rhoa;
        const double C624 = 2 * C93;
        const double C625 = 2 * rhoa;
        const double C626 = 2 * rhob;
        const double C627 = 8. * C93;
        const double C628 = 10. * C102;
        const double C629 = C131 * C176;
        const double C630 = C132 * rhoa;
        const double C631 = C132 * rhob;
        const double C632 = C136 * C152;
        const double C633 = C137 * C152;
        const double C634 = C147 * rhoa;
        const double C635 = C147 * rhob;
        const double C636 = C148 * rhoa;
        const double C637 = C148 * rhob;
        const double C638 = C152 * C139;
        const double C639 = C155 * C174;
        const double C640 = C162 * C106;
        const double C641 = C162 * C175;
        const double C642 = C168 * C105;
        const double C643 = C169 * C106;
        const double C644 = C169 * C175;
        const double C645 = C170 * C106;
        const double C646 = C170 * C175;
        const double C647 = C179 * C92;
        const double C648 = C179 * rhoa;
        const double C649 = C179 * rhob;
        const double C650 = C93 * C142;
        const double C651 = rhoa * rhob;
        const double C652 = -17. / 3.;
        const double C653 = -5. / 3.;
        const double C654 = -4. / 3.;
        const double C655 = -1. / 3.;
        const double C656 = 4. / 3.;
        const double C657 = 5. / 3.;
        const double C658 = std::pow(C102, 4);
        const double C659 = std::pow(C105, 4);
        const double C660 = std::pow(C144, 2);
        const double C661 = std::pow(C93, 4);
        const double C662 = 0.00649176 * C639;
        const double C663 = 0.2533 * C633;
        const double C664 = 2 * C642;
        const double C665 = 7 * C647;
        const double C666 = 11. * C632;
        const double C667 = C102 * C622;
        const double C668 = C629 * C621;
        const double C669 = C93 * C648;
        const double C670 = C93 * C649;
        const double C671 = gammaaa * C643;
        const double C672 = gammaab * C640;
        const double C673 = gammabb * C645;
        const double C674 = C108 + C648;
        const double C675 = C108 + C649;
        const double C676 = C627 / 3.;
        const double C677 = C638 / 3.;
        const double C678 = C650 / C144;
        const double C679 = std::pow(C93, C652);
        const double C680 = std::pow(C93, C653);
        const double C681 = std::pow(C93, C654);
        const double C682 = std::pow(C93, C655);
        const double C683 = std::pow(C93, C656);
        const double C684 = std::pow(rhoa, C657);
        const double C685 = std::pow(rhob, C657);
        const double C686 = -2. * C680;
        const double C687 = -0.698 * C680;
        const double C688 = -0.5066 * C680;
        const double C689 = 0.349 * C681;
        const double C690 = 0.5066 * C680;
        const double C691 = 6. * C682;
        const double C692 = 8. * C684;
        const double C693 = 8. * C685;
        const double C694 = 154. * C679;
        const double C695 = C168 * C664;
        const double C696 = C671 * C142;
        const double C697 = C672 * C142;
        const double C698 = C673 * C142;
        const double C699 = rhoa * C662;
        const double C700 = C101 - C678;
        const double C701 = C630 - C665;
        const double C702 = C631 - C665;
        const double C703 = C669 - C114;
        const double C704 = C670 - C115;
        const double C705 = C674 - 11;
        const double C706 = C675 - 11;
        const double C707 = C663 / C144;
        const double C708 = C666 / C144;
        const double C709 = 0.349 * C695;
        const double C710 = C102 * C686;
        const double C711 = C103 * C690;
        const double C712 = C103 * C694;
        const double C713 = C137 * C691;
        const double C714 = C138 * C688;
        const double C715 = C156 * C691;
        const double C716 = C161 * C691;
        const double C717 = C176 * C693;
        const double C718 = C93 * C705;
        const double C719 = C93 * C706;
        const double C720 = C98 * C687;
        const double C721 = rhob * C699;
        const double C722 = C699 + C167;
        const double C723 = C700 + 1;
        const double C724 = C689 / C144;
        const double C725 = C701 / 9.;
        const double C726 = C702 / 9.;
        const double C727 = C703 / C123;
        const double C728 = C704 / C123;
        const double C729 = 0.2533 * C713;
        const double C730 = 3. * C714;
        const double C731 = rhob * C722;
        const double C732 = C180 + C727;
        const double C733 = C180 + C728;
        const double C734 = C720 + C689;
        const double C735 = C721 + C173;
        const double C736 = C718 - C114;
        const double C737 = C719 - C115;
        const double C738 = C725 - C676;
        const double C739 = C726 - C676;
        const double C740 = C710 / 3.;
        const double C741 = C711 / 3.;
        const double C742 = C712 / 3.;
        const double C743 = C715 / 3.;
        const double C744 = C716 / 3.;
        const double C745 = C717 / 3.;
        const double C746 = C131 * C735;
        const double C747 = C138 * C734;
        const double C748 = C732 * C92;
        const double C749 = C733 * C92;
        const double C750 = C738 * C106;
        const double C751 = C741 + C707;
        const double C752 = C742 + C708;
        const double C753 = C740 - C724;
        const double C754 = C729 / 3.;
        const double C755 = C730 / 3.;
        const double C756 = C736 / C123;
        const double C757 = C737 / C123;
        const double C758 = 3. * C747;
        const double C759 = C97 * C751;
        const double C760 = C180 + C756;
        const double C761 = C180 + C757;
        const double C762 = C641 + C750;
        const double C763 = C746 + C745;
        const double C764 = C634 - C748;
        const double C765 = C637 - C749;
        const double C766 = C755 - C754;
        const double C767 = C752 / 3.;
        const double C768 = C753 / 3.;
        const double C769 = C760 * C92;
        const double C770 = C761 * C92;
        const double C771 = gammaab * C762;
        const double C772 = C759 + C677;
        const double C773 = C758 / 3.;
        const double C774 = C764 / 9.;
        const double C775 = C765 / 9.;
        const double C776 = C766 / C660;
        const double C777 = C138 * C772;
        const double C778 = C635 - C769;
        const double C779 = C636 - C770;
        const double C780 = C773 - C743;
        const double C781 = C774 - C626;
        const double C782 = C775 - C625;
        const double C783 = 3. * C777;
        const double C784 = C104 * C779;
        const double C785 = C781 * C106;
        const double C786 = C780 / C660;
        const double C787 = 0.00649176 * C784;
        const double C788 = C644 + C785;
        const double C789 = C768 - C786;
        const double C790 = C783 - C744;
        const double C791 = 0.349 * C789;
        const double C792 = gammaaa * C788;
        const double C793 = C787 / 9.;
        const double C794 = C790 / C660;
        const double C795 = C122 * C791;
        const double C796 = C646 + C793;
        const double C797 = C767 - C794;
        const double C798 = 0.00649176 * C797;
        const double C799 = gammabb * C796;
        const double C800 = C709 - C795;
        const double C801 = C800 / C659;
        const double C802 = C801 - C776;
        const double C803 = 3 * C802;
        const double C2807 = C643 * C142;

                result.d3e_drarbgaa =  - ( C121 * ( C102 * ( C169 * C798 + ( 0.00649176 * C174 * C778)  / 9. + C781 * C175 + ( 0.00649176 * C104 * ( C147 - C760 * rhoa - ( C732 * rhob + ( C803 + ( C123 * ( C93 * ( C179 + C802 * rhoa)  + C648 - C705)  - C703 * C624)  / C661)  * C92) ) )  / 9.)  - ( C788 * C142)  / C144 - ( ( 2. * C682 * C2807)  / 9. - ( C138 * ( ( C643 * C687)  / 3. + ( C644 + ( 0.00649176 * C104 * C778)  / 9.)  * C142) )  / 3.)  / C683)  - ( ( C102 * C788 - (  - C2807 / 3.)  / C138)  * C667)  / C144)  / C658;
            }

            if (rhoa >= eps && rhob >= eps && gammaab >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C621 = -3.49 * C137;
        const double C622 = -0.698 * C137;
        const double C623 = 0.19672 * rhoa;
        const double C624 = 2 * C93;
        const double C625 = 2 * rhoa;
        const double C626 = 2 * rhob;
        const double C627 = 8. * C93;
        const double C628 = 10. * C102;
        const double C629 = C131 * C176;
        const double C630 = C132 * rhoa;
        const double C631 = C132 * rhob;
        const double C632 = C136 * C152;
        const double C633 = C137 * C152;
        const double C634 = C147 * rhoa;
        const double C635 = C147 * rhob;
        const double C636 = C148 * rhoa;
        const double C637 = C148 * rhob;
        const double C638 = C152 * C139;
        const double C639 = C155 * C174;
        const double C640 = C162 * C106;
        const double C641 = C162 * C175;
        const double C642 = C168 * C105;
        const double C643 = C169 * C106;
        const double C644 = C169 * C175;
        const double C645 = C170 * C106;
        const double C646 = C170 * C175;
        const double C647 = C179 * C92;
        const double C648 = C179 * rhoa;
        const double C649 = C179 * rhob;
        const double C650 = C93 * C142;
        const double C651 = rhoa * rhob;
        const double C652 = -17. / 3.;
        const double C653 = -5. / 3.;
        const double C654 = -4. / 3.;
        const double C655 = -1. / 3.;
        const double C656 = 4. / 3.;
        const double C657 = 5. / 3.;
        const double C658 = std::pow(C102, 4);
        const double C659 = std::pow(C105, 4);
        const double C660 = std::pow(C144, 2);
        const double C661 = std::pow(C93, 4);
        const double C662 = 0.00649176 * C639;
        const double C663 = 0.2533 * C633;
        const double C664 = 2 * C642;
        const double C665 = 7 * C647;
        const double C666 = 11. * C632;
        const double C667 = C102 * C622;
        const double C668 = C629 * C621;
        const double C669 = C93 * C648;
        const double C670 = C93 * C649;
        const double C671 = gammaaa * C643;
        const double C672 = gammaab * C640;
        const double C673 = gammabb * C645;
        const double C674 = C108 + C648;
        const double C675 = C108 + C649;
        const double C676 = C627 / 3.;
        const double C677 = C638 / 3.;
        const double C678 = C650 / C144;
        const double C679 = std::pow(C93, C652);
        const double C680 = std::pow(C93, C653);
        const double C681 = std::pow(C93, C654);
        const double C682 = std::pow(C93, C655);
        const double C683 = std::pow(C93, C656);
        const double C684 = std::pow(rhoa, C657);
        const double C685 = std::pow(rhob, C657);
        const double C686 = -2. * C680;
        const double C687 = -0.698 * C680;
        const double C688 = -0.5066 * C680;
        const double C689 = 0.349 * C681;
        const double C690 = 0.5066 * C680;
        const double C691 = 6. * C682;
        const double C692 = 8. * C684;
        const double C693 = 8. * C685;
        const double C694 = 154. * C679;
        const double C695 = C168 * C664;
        const double C696 = C671 * C142;
        const double C697 = C672 * C142;
        const double C698 = C673 * C142;
        const double C699 = rhoa * C662;
        const double C700 = C101 - C678;
        const double C701 = C630 - C665;
        const double C702 = C631 - C665;
        const double C703 = C669 - C114;
        const double C704 = C670 - C115;
        const double C705 = C674 - 11;
        const double C706 = C675 - 11;
        const double C707 = C663 / C144;
        const double C708 = C666 / C144;
        const double C709 = 0.349 * C695;
        const double C710 = C102 * C686;
        const double C711 = C103 * C690;
        const double C712 = C103 * C694;
        const double C713 = C137 * C691;
        const double C714 = C138 * C688;
        const double C715 = C156 * C691;
        const double C716 = C161 * C691;
        const double C717 = C176 * C693;
        const double C718 = C93 * C705;
        const double C719 = C93 * C706;
        const double C720 = C98 * C687;
        const double C721 = rhob * C699;
        const double C722 = C699 + C167;
        const double C723 = C700 + 1;
        const double C724 = C689 / C144;
        const double C725 = C701 / 9.;
        const double C726 = C702 / 9.;
        const double C727 = C703 / C123;
        const double C728 = C704 / C123;
        const double C729 = 0.2533 * C713;
        const double C730 = 3. * C714;
        const double C731 = rhob * C722;
        const double C732 = C180 + C727;
        const double C733 = C180 + C728;
        const double C734 = C720 + C689;
        const double C735 = C721 + C173;
        const double C736 = C718 - C114;
        const double C737 = C719 - C115;
        const double C738 = C725 - C676;
        const double C739 = C726 - C676;
        const double C740 = C710 / 3.;
        const double C741 = C711 / 3.;
        const double C742 = C712 / 3.;
        const double C743 = C715 / 3.;
        const double C744 = C716 / 3.;
        const double C745 = C717 / 3.;
        const double C746 = C131 * C735;
        const double C747 = C138 * C734;
        const double C748 = C732 * C92;
        const double C749 = C733 * C92;
        const double C750 = C738 * C106;
        const double C751 = C741 + C707;
        const double C752 = C742 + C708;
        const double C753 = C740 - C724;
        const double C754 = C729 / 3.;
        const double C755 = C730 / 3.;
        const double C756 = C736 / C123;
        const double C757 = C737 / C123;
        const double C758 = 3. * C747;
        const double C759 = C97 * C751;
        const double C760 = C180 + C756;
        const double C761 = C180 + C757;
        const double C762 = C641 + C750;
        const double C763 = C746 + C745;
        const double C764 = C634 - C748;
        const double C765 = C637 - C749;
        const double C766 = C755 - C754;
        const double C767 = C752 / 3.;
        const double C768 = C753 / 3.;
        const double C769 = C760 * C92;
        const double C770 = C761 * C92;
        const double C771 = gammaab * C762;
        const double C772 = C759 + C677;
        const double C773 = C758 / 3.;
        const double C774 = C764 / 9.;
        const double C775 = C765 / 9.;
        const double C776 = C766 / C660;
        const double C777 = C138 * C772;
        const double C778 = C635 - C769;
        const double C779 = C636 - C770;
        const double C780 = C773 - C743;
        const double C781 = C774 - C626;
        const double C782 = C775 - C625;
        const double C783 = 3. * C777;
        const double C784 = C104 * C779;
        const double C785 = C781 * C106;
        const double C786 = C780 / C660;
        const double C787 = 0.00649176 * C784;
        const double C788 = C644 + C785;
        const double C789 = C768 - C786;
        const double C790 = C783 - C744;
        const double C791 = 0.349 * C789;
        const double C792 = gammaaa * C788;
        const double C793 = C787 / 9.;
        const double C794 = C790 / C660;
        const double C795 = C122 * C791;
        const double C796 = C646 + C793;
        const double C797 = C767 - C794;
        const double C798 = 0.00649176 * C797;
        const double C799 = gammabb * C796;
        const double C800 = C709 - C795;
        const double C801 = C800 / C659;
        const double C802 = C801 - C776;
        const double C803 = 3 * C802;
        const double C2809 = C640 * C142;

                result.d3e_drarbgab =  - ( C121 * ( C102 * ( C162 * C798 + C739 * C175 + C738 * C175 + ( ( C132 - 7 * C648 - 7 * ( C649 + C802 * C92) )  / 9. - C96)  * C106)  - ( C762 * C142)  / C144 - ( ( 2. * C682 * C2809)  / 9. - ( C138 * ( ( C640 * C687)  / 3. + ( C641 + C739 * C106)  * C142) )  / 3.)  / C683)  - ( ( C102 * C762 - (  - C2809 / 3.)  / C138)  * C667)  / C144)  / C658;
            }

            if (rhoa >= eps && rhob >= eps && gammabb >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;
        const double C621 = -3.49 * C137;
        const double C622 = -0.698 * C137;
        const double C623 = 0.19672 * rhoa;
        const double C624 = 2 * C93;
        const double C625 = 2 * rhoa;
        const double C626 = 2 * rhob;
        const double C627 = 8. * C93;
        const double C628 = 10. * C102;
        const double C629 = C131 * C176;
        const double C630 = C132 * rhoa;
        const double C631 = C132 * rhob;
        const double C632 = C136 * C152;
        const double C633 = C137 * C152;
        const double C634 = C147 * rhoa;
        const double C635 = C147 * rhob;
        const double C636 = C148 * rhoa;
        const double C637 = C148 * rhob;
        const double C638 = C152 * C139;
        const double C639 = C155 * C174;
        const double C640 = C162 * C106;
        const double C641 = C162 * C175;
        const double C642 = C168 * C105;
        const double C643 = C169 * C106;
        const double C644 = C169 * C175;
        const double C645 = C170 * C106;
        const double C646 = C170 * C175;
        const double C647 = C179 * C92;
        const double C648 = C179 * rhoa;
        const double C649 = C179 * rhob;
        const double C650 = C93 * C142;
        const double C651 = rhoa * rhob;
        const double C652 = -17. / 3.;
        const double C653 = -5. / 3.;
        const double C654 = -4. / 3.;
        const double C655 = -1. / 3.;
        const double C656 = 4. / 3.;
        const double C657 = 5. / 3.;
        const double C658 = std::pow(C102, 4);
        const double C659 = std::pow(C105, 4);
        const double C660 = std::pow(C144, 2);
        const double C661 = std::pow(C93, 4);
        const double C662 = 0.00649176 * C639;
        const double C663 = 0.2533 * C633;
        const double C664 = 2 * C642;
        const double C665 = 7 * C647;
        const double C666 = 11. * C632;
        const double C667 = C102 * C622;
        const double C668 = C629 * C621;
        const double C669 = C93 * C648;
        const double C670 = C93 * C649;
        const double C671 = gammaaa * C643;
        const double C672 = gammaab * C640;
        const double C673 = gammabb * C645;
        const double C674 = C108 + C648;
        const double C675 = C108 + C649;
        const double C676 = C627 / 3.;
        const double C677 = C638 / 3.;
        const double C678 = C650 / C144;
        const double C679 = std::pow(C93, C652);
        const double C680 = std::pow(C93, C653);
        const double C681 = std::pow(C93, C654);
        const double C682 = std::pow(C93, C655);
        const double C683 = std::pow(C93, C656);
        const double C684 = std::pow(rhoa, C657);
        const double C685 = std::pow(rhob, C657);
        const double C686 = -2. * C680;
        const double C687 = -0.698 * C680;
        const double C688 = -0.5066 * C680;
        const double C689 = 0.349 * C681;
        const double C690 = 0.5066 * C680;
        const double C691 = 6. * C682;
        const double C692 = 8. * C684;
        const double C693 = 8. * C685;
        const double C694 = 154. * C679;
        const double C695 = C168 * C664;
        const double C696 = C671 * C142;
        const double C697 = C672 * C142;
        const double C698 = C673 * C142;
        const double C699 = rhoa * C662;
        const double C700 = C101 - C678;
        const double C701 = C630 - C665;
        const double C702 = C631 - C665;
        const double C703 = C669 - C114;
        const double C704 = C670 - C115;
        const double C705 = C674 - 11;
        const double C706 = C675 - 11;
        const double C707 = C663 / C144;
        const double C708 = C666 / C144;
        const double C709 = 0.349 * C695;
        const double C710 = C102 * C686;
        const double C711 = C103 * C690;
        const double C712 = C103 * C694;
        const double C713 = C137 * C691;
        const double C714 = C138 * C688;
        const double C715 = C156 * C691;
        const double C716 = C161 * C691;
        const double C717 = C176 * C693;
        const double C718 = C93 * C705;
        const double C719 = C93 * C706;
        const double C720 = C98 * C687;
        const double C721 = rhob * C699;
        const double C722 = C699 + C167;
        const double C723 = C700 + 1;
        const double C724 = C689 / C144;
        const double C725 = C701 / 9.;
        const double C726 = C702 / 9.;
        const double C727 = C703 / C123;
        const double C728 = C704 / C123;
        const double C729 = 0.2533 * C713;
        const double C730 = 3. * C714;
        const double C731 = rhob * C722;
        const double C732 = C180 + C727;
        const double C733 = C180 + C728;
        const double C734 = C720 + C689;
        const double C735 = C721 + C173;
        const double C736 = C718 - C114;
        const double C737 = C719 - C115;
        const double C738 = C725 - C676;
        const double C739 = C726 - C676;
        const double C740 = C710 / 3.;
        const double C741 = C711 / 3.;
        const double C742 = C712 / 3.;
        const double C743 = C715 / 3.;
        const double C744 = C716 / 3.;
        const double C745 = C717 / 3.;
        const double C746 = C131 * C735;
        const double C747 = C138 * C734;
        const double C748 = C732 * C92;
        const double C749 = C733 * C92;
        const double C750 = C738 * C106;
        const double C751 = C741 + C707;
        const double C752 = C742 + C708;
        const double C753 = C740 - C724;
        const double C754 = C729 / 3.;
        const double C755 = C730 / 3.;
        const double C756 = C736 / C123;
        const double C757 = C737 / C123;
        const double C758 = 3. * C747;
        const double C759 = C97 * C751;
        const double C760 = C180 + C756;
        const double C761 = C180 + C757;
        const double C762 = C641 + C750;
        const double C763 = C746 + C745;
        const double C764 = C634 - C748;
        const double C765 = C637 - C749;
        const double C766 = C755 - C754;
        const double C767 = C752 / 3.;
        const double C768 = C753 / 3.;
        const double C769 = C760 * C92;
        const double C770 = C761 * C92;
        const double C771 = gammaab * C762;
        const double C772 = C759 + C677;
        const double C773 = C758 / 3.;
        const double C774 = C764 / 9.;
        const double C775 = C765 / 9.;
        const double C776 = C766 / C660;
        const double C777 = C138 * C772;
        const double C778 = C635 - C769;
        const double C779 = C636 - C770;
        const double C780 = C773 - C743;
        const double C781 = C774 - C626;
        const double C782 = C775 - C625;
        const double C783 = 3. * C777;
        const double C784 = C104 * C779;
        const double C785 = C781 * C106;
        const double C786 = C780 / C660;
        const double C787 = 0.00649176 * C784;
        const double C788 = C644 + C785;
        const double C789 = C768 - C786;
        const double C790 = C783 - C744;
        const double C791 = 0.349 * C789;
        const double C792 = gammaaa * C788;
        const double C793 = C787 / 9.;
        const double C794 = C790 / C660;
        const double C795 = C122 * C791;
        const double C796 = C646 + C793;
        const double C797 = C767 - C794;
        const double C798 = 0.00649176 * C797;
        const double C799 = gammabb * C796;
        const double C800 = C709 - C795;
        const double C801 = C800 / C659;
        const double C802 = C801 - C776;
        const double C803 = 3 * C802;
        const double C2811 = C645 * C142;

                result.d3e_drarbgbb =  - ( C121 * ( C102 * ( C170 * C798 + C782 * C175 + ( 0.00649176 * ( C104 * ( C148 - C733 * rhoa - ( C761 * rhob + ( C803 + ( C123 * ( C93 * ( C179 + C802 * rhob)  + C706 - C649)  - C737 * C624)  / C661)  * C92) )  + C174 * C779) )  / 9.)  - ( C796 * C142)  / C144 - ( ( 2. * C682 * C2811)  / 9. - ( C138 * ( ( C645 * C687)  / 3. + ( C646 + C782 * C106)  * C142) )  / 3.)  / C683)  - ( ( C102 * C796 - (  - C2811 / 3.)  / C138)  * C667)  / C144)  / C658;
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;
        const double C2801 = C470 * C142;
        const double C2802 = C577 * C142;

                result.d3e_draragab =  - ( C121 * ( C102 * ( C162 * C613 + C567 + C567 + ( (  - ( 7 * C479 + 7 * ( C479 + C618 * C92) ) )  / 9. - C96)  * C106)  - C2802 / C144 - ( ( 2. * C510 * C2801)  / 9. - ( C138 * ( ( C470 * C514)  / 3. + C2802) )  / 3.)  / C511)  - ( ( C102 * C577 - (  - C2801 / 3.)  / C138)  * C497)  / C144)  / C488;
                result.d3e_dragabgab = 0;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C92 = rhob * rhoa;
        const double C93 = rhoa + rhob;
        const double C94 = -11. / 3.;
        const double C95 = 1. / 3.;
        const double C96 = 8. / 3.;
        const double C97 = std::pow(C93, C94);
        const double C98 = std::pow(C93, C95);
        const double C99 = -0.2533 / C98;
        const double C100 = 0.2533 / C98;
        const double C101 = 0.349 / C98;
        const double C102 = C101 + 1;
        const double C103 = std::exp(C99);
        const double C104 = C97 * C103;
        const double C105 = C98 * C102;
        const double C106 = 0.00649176 * C104;
        const double C107 = 0.349 / C105;
        const double C108 = C100 + C107;
        const double C109 = 3 * C108;
        const double C110 = C108 - 11;
        const double C111 = 1 - C109;
        const double C113 = 7 * C108;
        const double C114 = C110 * rhoa;
        const double C115 = C110 * rhob;
        const double C116 = C93 * C102;
        const double C117 = -14. / 3.;
        const double C118 = -2. / 3.;
        const double C119 = 2. / 3.;
        const double C120 = 11. / 3.;
        const double C121 = std::pow(C102, 2);
        const double C122 = std::pow(C105, 2);
        const double C123 = std::pow(C93, 2);
        const double C124 = std::pow(Pi, 2);
        const double C125 = std::pow(rhoa, 2);
        const double C126 = std::pow(rhoa, C96);
        const double C127 = std::pow(rhob, 2);
        const double C128 = std::pow(rhob, C96);
        const double C129 = 3 * C124;
        const double C130 = 4. * C123;
        const double C131 = C126 + C128;
        const double C132 = 47 - C113;
        const double C133 = C114 / C93;
        const double C134 = C115 / C93;
        const double C135 = std::pow(2, C120);
        const double C136 = std::pow(C93, C117);
        const double C137 = std::pow(C93, C118);
        const double C138 = std::pow(C93, C119);
        const double C139 = -11. * C136;
        const double C140 = -0.2533 * C137;
        const double C141 = 0.2533 * C137;
        const double C142 = 0.349 * C137;
        const double C143 = 3. * C135;
        const double C144 = 3. * C138;
        const double C145 = C102 * C137;
        const double C146 = C132 * C92;
        const double C147 = C111 - C133;
        const double C148 = C111 - C134;
        const double C149 = C130 / 3.;
        const double C150 = std::pow(C129, C119);
        const double C151 = C103 * C139;
        const double C152 = C103 * C140;
        const double C153 = C147 * C92;
        const double C154 = C148 * C92;
        const double C155 = C150 * C143;
        const double C156 = C98 * C142;
        const double C157 = C141 / C144;
        const double C158 = C145 / 3.;
        const double C159 = C146 / 9.;
        const double C160 = C155 * C104;
        const double C161 = C97 * C152;
        const double C162 = C159 - C149;
        const double C163 = C151 / 3.;
        const double C164 = C153 / 9.;
        const double C165 = C154 / 9.;
        const double C166 = C156 / C144;
        const double C167 = 0.00649176 * C160;
        const double C168 = C158 - C166;
        const double C169 = C164 - C127;
        const double C170 = C165 - C125;
        const double C171 = C161 / C144;
        const double C172 = 0.349 * C168;
        const double C173 = rhoa * C167;
        const double C174 = C163 - C171;
        const double C175 = 0.00649176 * C174;
        const double C176 = rhob * C173;
        const double C177 =  - C172;
        const double C178 = C177 / C122;
        const double C179 = C178 - C157;
        const double C180 = 3 * C179;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;
        const double C455 = -3.49 * C137;
        const double C456 = -0.698 * C137;
        const double C457 = 0.19672 * rhob;
        const double C458 = 2 * C93;
        const double C459 = 2 * rhoa;
        const double C460 = 8. * C93;
        const double C461 = 10. * C102;
        const double C462 = C131 * C176;
        const double C463 = C132 * rhob;
        const double C464 = C136 * C152;
        const double C465 = C137 * C152;
        const double C466 = C147 * rhob;
        const double C467 = C148 * rhob;
        const double C468 = C152 * C139;
        const double C469 = C155 * C174;
        const double C470 = C162 * C106;
        const double C471 = C162 * C175;
        const double C472 = C168 * C105;
        const double C473 = C169 * C106;
        const double C474 = C169 * C175;
        const double C475 = C170 * C106;
        const double C476 = C170 * C175;
        const double C477 = C179 * C92;
        const double C478 = C179 * rhoa;
        const double C479 = C179 * rhob;
        const double C480 = C93 * C142;
        const double C481 = rhoa * rhob;
        const double C482 = -17. / 3.;
        const double C483 = -5. / 3.;
        const double C484 = -4. / 3.;
        const double C485 = -1. / 3.;
        const double C486 = 4. / 3.;
        const double C487 = 5. / 3.;
        const double C488 = std::pow(C102, 4);
        const double C489 = std::pow(C105, 4);
        const double C490 = std::pow(C144, 2);
        const double C491 = std::pow(C93, 4);
        const double C492 = 0.00649176 * C469;
        const double C493 = 0.2533 * C465;
        const double C494 = 2 * C472;
        const double C495 = 7 * C477;
        const double C496 = 11. * C464;
        const double C497 = C102 * C456;
        const double C498 = C462 * C455;
        const double C499 = C93 * C479;
        const double C500 = gammaaa * C473;
        const double C501 = gammaab * C470;
        const double C502 = gammabb * C475;
        const double C503 = C108 + C478;
        const double C504 = C460 / 3.;
        const double C505 = C468 / 3.;
        const double C506 = C480 / C144;
        const double C507 = std::pow(C93, C482);
        const double C508 = std::pow(C93, C483);
        const double C509 = std::pow(C93, C484);
        const double C510 = std::pow(C93, C485);
        const double C511 = std::pow(C93, C486);
        const double C512 = std::pow(rhoa, C487);
        const double C513 = -2. * C508;
        const double C514 = -0.698 * C508;
        const double C515 = -0.5066 * C508;
        const double C516 = 0.349 * C509;
        const double C517 = 0.5066 * C508;
        const double C518 = 6. * C510;
        const double C519 = 8. * C512;
        const double C520 = 154. * C507;
        const double C521 = C168 * C494;
        const double C522 = C500 * C142;
        const double C523 = C501 * C142;
        const double C524 = C502 * C142;
        const double C525 = rhoa * C492;
        const double C526 = C101 - C506;
        const double C527 = C463 - C495;
        const double C528 = C499 - C115;
        const double C529 = C503 - 11;
        const double C530 = C493 / C144;
        const double C531 = C496 / C144;
        const double C532 = 0.349 * C521;
        const double C533 = C102 * C513;
        const double C534 = C103 * C517;
        const double C535 = C103 * C520;
        const double C536 = C137 * C518;
        const double C537 = C138 * C515;
        const double C538 = C156 * C518;
        const double C539 = C161 * C518;
        const double C540 = C176 * C519;
        const double C541 = C93 * C529;
        const double C542 = C98 * C514;
        const double C543 = C525 + C167;
        const double C544 = C526 + 1;
        const double C545 = C516 / C144;
        const double C546 = C527 / 9.;
        const double C547 = C528 / C123;
        const double C548 = 0.2533 * C536;
        const double C549 = 3. * C537;
        const double C550 = rhob * C543;
        const double C551 = C180 + C547;
        const double C552 = C542 + C516;
        const double C553 = C541 - C114;
        const double C554 = C546 - C504;
        const double C555 = C533 / 3.;
        const double C556 = C534 / 3.;
        const double C557 = C535 / 3.;
        const double C558 = C538 / 3.;
        const double C559 = C539 / 3.;
        const double C560 = C540 / 3.;
        const double C561 = C131 * C550;
        const double C562 = C138 * C552;
        const double C563 = C550 * C519;
        const double C564 = C551 * C92;
        const double C565 = C551 * rhob;
        const double C566 = C554 * C106;
        const double C567 = C554 * C175;
        const double C568 = C556 + C530;
        const double C569 = C557 + C531;
        const double C570 = C555 - C545;
        const double C571 = C548 / 3.;
        const double C572 = C549 / 3.;
        const double C573 = C553 / C123;
        const double C574 = 3. * C562;
        const double C575 = C97 * C568;
        const double C576 = C180 + C573;
        const double C577 = C471 + C566;
        const double C578 = C561 + C560;
        const double C579 = C467 - C564;
        const double C580 = C572 - C571;
        const double C581 = C569 / 3.;
        const double C582 = C570 / 3.;
        const double C583 = C576 * C92;
        const double C584 = C576 * rhob;
        const double C585 = gammaab * C577;
        const double C586 = C575 + C505;
        const double C587 = C574 / 3.;
        const double C588 = C579 / 9.;
        const double C589 = C580 / C490;
        const double C590 = C138 * C586;
        const double C591 = C585 * C142;
        const double C592 = C466 - C583;
        const double C593 = C587 - C558;
        const double C594 = C588 - C459;
        const double C595 = 3. * C590;
        const double C596 = C104 * C592;
        const double C597 = C174 * C592;
        const double C598 = C594 * C106;
        const double C599 = C594 * C175;
        const double C600 = C593 / C490;
        const double C601 = 0.00649176 * C596;
        const double C602 = C476 + C598;
        const double C603 = C582 - C600;
        const double C604 = C595 - C559;
        const double C605 = 0.349 * C603;
        const double C606 = gammabb * C602;
        const double C607 = C601 / 9.;
        const double C608 = C604 / C490;
        const double C609 = C122 * C605;
        const double C610 = C606 * C142;
        const double C611 = C474 + C607;
        const double C612 = C581 - C608;
        const double C613 = 0.00649176 * C612;
        const double C614 = gammaaa * C611;
        const double C615 = C532 - C609;
        const double C616 = C614 * C142;
        const double C617 = C615 / C489;
        const double C618 = C617 - C589;
        const double C619 = 3 * C618;
        const double C2804 = C475 * C142;
        const double C2805 = C602 * C142;

                result.d3e_draragbb =  - ( C121 * ( C102 * ( C170 * C613 + C599 + C599 + ( (  - ( C565 + C565 + ( C619 + ( C123 * C93 * C618 * rhob - C528 * C458)  / C491)  * C92) )  / 9. - 2)  * C106)  - C2805 / C144 - ( ( 2. * C510 * C2804)  / 9. - ( C138 * ( ( C475 * C514)  / 3. + C2805) )  / 3.)  / C511)  - ( ( C102 * C602 - (  - C2804 / 3.)  / C138)  * C497)  / C144)  / C488;
                result.d3e_dragbbgbb = 0;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;
        const double C2813 = C824 * C211;
        const double C2814 = C952 * C211;

                result.d3e_drbrbgaa =  - ( C191 * ( C81 * ( C238 * C963 + C948 + C948 + ( (  - ( C914 + C914 + ( C969 + ( C190 * C72 * C968 * rhoa - C878 * C808)  / C839)  * C71) )  / 9. - 2)  * C85)  - C2814 / C213 - ( ( 2. * C860 * C2813)  / 9. - ( C207 * ( ( C824 * C864)  / 3. + C2814) )  / 3.)  / C861)  - ( ( C81 * C952 - (  - C2813 / 3.)  / C207)  * C848)  / C213)  / C840;
                result.d3e_drbgaagaa = 0;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;
        const double C2816 = C821 * C211;
        const double C2817 = C927 * C211;

                result.d3e_drbrbgab =  - ( C191 * ( C81 * ( C231 * C963 + C916 + C916 + ( (  - ( 7 * C828 + 7 * ( C828 + C968 * C71) ) )  / 9. - C75)  * C85)  - C2817 / C213 - ( ( 2. * C860 * C2816)  / 9. - ( C207 * ( ( C821 * C864)  / 3. + C2817) )  / 3.)  / C861)  - ( ( C81 * C927 - (  - C2816 / 3.)  / C207)  * C848)  / C213)  / C840;
                result.d3e_drbgabgab = 0;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;
        const double C805 = -3.49 * C206;
        const double C806 = -0.698 * C206;
        const double C807 = 0.19672 * rhoa;
        const double C808 = 2 * C72;
        const double C809 = 2 * rhob;
        const double C810 = 8. * C72;
        const double C811 = 10. * C81;
        const double C812 = C200 * C245;
        const double C813 = C201 * rhoa;
        const double C814 = C205 * C225;
        const double C815 = C206 * C225;
        const double C816 = C216 * rhoa;
        const double C817 = C217 * rhoa;
        const double C818 = C222 * C243;
        const double C819 = C225 * C208;
        const double C820 = C231 * C244;
        const double C821 = C231 * C85;
        const double C822 = C237 * C84;
        const double C823 = C238 * C244;
        const double C824 = C238 * C85;
        const double C825 = C239 * C244;
        const double C826 = C239 * C85;
        const double C827 = C248 * C71;
        const double C828 = C248 * rhoa;
        const double C829 = C248 * rhob;
        const double C830 = C72 * C211;
        const double C831 = rhoa * rhob;
        const double C832 = -17. / 3.;
        const double C833 = -5. / 3.;
        const double C834 = -4. / 3.;
        const double C835 = -1. / 3.;
        const double C836 = 4. / 3.;
        const double C837 = 5. / 3.;
        const double C838 = std::pow(C213, 2);
        const double C839 = std::pow(C72, 4);
        const double C840 = std::pow(C81, 4);
        const double C841 = std::pow(C84, 4);
        const double C842 = 0.00649176 * C818;
        const double C843 = 0.2533 * C815;
        const double C844 = 2 * C822;
        const double C845 = 7 * C827;
        const double C846 = 11. * C814;
        const double C847 = C72 * C828;
        const double C848 = C81 * C806;
        const double C849 = C812 * C805;
        const double C850 = gammaaa * C824;
        const double C851 = gammaab * C821;
        const double C852 = gammabb * C826;
        const double C853 = C87 + C829;
        const double C854 = C810 / 3.;
        const double C855 = C819 / 3.;
        const double C856 = C830 / C213;
        const double C857 = std::pow(C72, C832);
        const double C858 = std::pow(C72, C833);
        const double C859 = std::pow(C72, C834);
        const double C860 = std::pow(C72, C835);
        const double C861 = std::pow(C72, C836);
        const double C862 = std::pow(rhob, C837);
        const double C863 = -2. * C858;
        const double C864 = -0.698 * C858;
        const double C865 = -0.5066 * C858;
        const double C866 = 0.349 * C859;
        const double C867 = 0.5066 * C858;
        const double C868 = 6. * C860;
        const double C869 = 8. * C862;
        const double C870 = 154. * C857;
        const double C871 = C237 * C844;
        const double C872 = C850 * C211;
        const double C873 = C851 * C211;
        const double C874 = C852 * C211;
        const double C875 = rhoa * C842;
        const double C876 = C80 - C856;
        const double C877 = C813 - C845;
        const double C878 = C847 - C184;
        const double C879 = C853 - 11;
        const double C880 = C843 / C213;
        const double C881 = C846 / C213;
        const double C882 = 0.349 * C871;
        const double C883 = C206 * C868;
        const double C884 = C207 * C865;
        const double C885 = C223 * C868;
        const double C886 = C230 * C868;
        const double C887 = C245 * C869;
        const double C888 = C72 * C879;
        const double C889 = C77 * C864;
        const double C890 = C81 * C863;
        const double C891 = C82 * C867;
        const double C892 = C82 * C870;
        const double C893 = rhob * C875;
        const double C894 = C876 + 1;
        const double C895 = C866 / C213;
        const double C896 = C877 / 9.;
        const double C897 = C878 / C190;
        const double C898 = 0.2533 * C883;
        const double C899 = 3. * C884;
        const double C900 = C249 + C897;
        const double C901 = C889 + C866;
        const double C902 = C893 + C242;
        const double C903 = C888 - C185;
        const double C904 = C896 - C854;
        const double C905 = C885 / 3.;
        const double C906 = C886 / 3.;
        const double C907 = C887 / 3.;
        const double C908 = C890 / 3.;
        const double C909 = C891 / 3.;
        const double C910 = C892 / 3.;
        const double C911 = C200 * C902;
        const double C912 = C207 * C901;
        const double C913 = C900 * C71;
        const double C914 = C900 * rhoa;
        const double C915 = C902 * C869;
        const double C916 = C904 * C244;
        const double C917 = C904 * C85;
        const double C918 = C909 + C880;
        const double C919 = C910 + C881;
        const double C920 = C908 - C895;
        const double C921 = C898 / 3.;
        const double C922 = C899 / 3.;
        const double C923 = C903 / C190;
        const double C924 = 3. * C912;
        const double C925 = C76 * C918;
        const double C926 = C249 + C923;
        const double C927 = C820 + C917;
        const double C928 = C911 + C907;
        const double C929 = C816 - C913;
        const double C930 = C922 - C921;
        const double C931 = C919 / 3.;
        const double C932 = C920 / 3.;
        const double C933 = C926 * C71;
        const double C934 = C926 * rhoa;
        const double C935 = gammaab * C927;
        const double C936 = C925 + C855;
        const double C937 = C924 / 3.;
        const double C938 = C929 / 9.;
        const double C939 = C930 / C838;
        const double C940 = C207 * C936;
        const double C941 = C935 * C211;
        const double C942 = C817 - C933;
        const double C943 = C937 - C905;
        const double C944 = C938 - C809;
        const double C945 = 3. * C940;
        const double C946 = C243 * C942;
        const double C947 = C83 * C942;
        const double C948 = C944 * C244;
        const double C949 = C944 * C85;
        const double C950 = C943 / C838;
        const double C951 = 0.00649176 * C947;
        const double C952 = C823 + C949;
        const double C953 = C932 - C950;
        const double C954 = C945 - C906;
        const double C955 = 0.349 * C953;
        const double C956 = gammaaa * C952;
        const double C957 = C951 / 9.;
        const double C958 = C954 / C838;
        const double C959 = C192 * C955;
        const double C960 = C956 * C211;
        const double C961 = C825 + C957;
        const double C962 = C931 - C958;
        const double C963 = 0.00649176 * C962;
        const double C964 = gammabb * C961;
        const double C965 = C882 - C959;
        const double C966 = C964 * C211;
        const double C967 = C965 / C841;
        const double C968 = C967 - C939;
        const double C969 = 3 * C968;
        const double C2819 = C826 * C211;
        const double C2820 = C961 * C211;

                result.d3e_drbrbgbb =  - ( C191 * ( C81 * ( C239 * C963 + ( 0.00649176 * C946)  / 9. + ( 0.00649176 * ( C946 - C83 * ( C934 + C934 + ( C969 + ( C190 * C72 * ( C248 + C248 + C968 * rhob)  - C903 * C808)  / C839)  * C71) ) )  / 9.)  - C2820 / C213 - ( ( 2. * C860 * C2819)  / 9. - ( C207 * ( ( C826 * C864)  / 3. + C2820) )  / 3.)  / C861)  - ( ( C81 * C961 - (  - C2819 / 3.)  / C207)  * C848)  / C213)  / C840;
                result.d3e_drbgbbgbb = 0;
            }

            if (rhob >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;

                result.d3e_drbgaagab = 0;
            }

            if (rhob >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C429 = rhoa + rhob;
        const double C430 = 1. / 3.;
        const double C431 = std::pow(C429, C430);
        const double C432 = 0.2533 / C431;
        const double C433 = 0.349 / C431;
        const double C434 = C433 + 1;
        const double C435 = C431 * C434;
        const double C436 = 0.349 / C435;
        const double C437 = C432 + C436;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_drbgaagbb = 0;
            }

            if (rhob >= eps && gammaab >= eps && gammabb >= eps) {
        const double C71 = rhob * rhoa;
        const double C72 = rhoa + rhob;
        const double C73 = -11. / 3.;
        const double C74 = 1. / 3.;
        const double C75 = 8. / 3.;
        const double C76 = std::pow(C72, C73);
        const double C77 = std::pow(C72, C74);
        const double C78 = -0.2533 / C77;
        const double C79 = 0.2533 / C77;
        const double C80 = 0.349 / C77;
        const double C81 = C80 + 1;
        const double C82 = std::exp(C78);
        const double C83 = C76 * C82;
        const double C84 = C77 * C81;
        const double C85 = 0.00649176 * C83;
        const double C86 = 0.349 / C84;
        const double C87 = C79 + C86;
        const double C88 = 3 * C87;
        const double C89 = C87 - 11;
        const double C90 = 1 - C88;
        const double C182 = 7 * C87;
        const double C183 = C72 * C81;
        const double C184 = C89 * rhoa;
        const double C185 = C89 * rhob;
        const double C186 = -14. / 3.;
        const double C187 = -2. / 3.;
        const double C188 = 2. / 3.;
        const double C189 = 11. / 3.;
        const double C190 = std::pow(C72, 2);
        const double C191 = std::pow(C81, 2);
        const double C192 = std::pow(C84, 2);
        const double C193 = std::pow(Pi, 2);
        const double C194 = std::pow(rhoa, 2);
        const double C195 = std::pow(rhoa, C75);
        const double C196 = std::pow(rhob, 2);
        const double C197 = std::pow(rhob, C75);
        const double C198 = 3 * C193;
        const double C199 = 4. * C190;
        const double C200 = C195 + C197;
        const double C201 = 47 - C182;
        const double C202 = C184 / C72;
        const double C203 = C185 / C72;
        const double C204 = std::pow(2, C189);
        const double C205 = std::pow(C72, C186);
        const double C206 = std::pow(C72, C187);
        const double C207 = std::pow(C72, C188);
        const double C208 = -11. * C205;
        const double C209 = -0.2533 * C206;
        const double C210 = 0.2533 * C206;
        const double C211 = 0.349 * C206;
        const double C212 = 3. * C204;
        const double C213 = 3. * C207;
        const double C214 = C201 * C71;
        const double C215 = C81 * C206;
        const double C216 = C90 - C202;
        const double C217 = C90 - C203;
        const double C218 = C199 / 3.;
        const double C219 = std::pow(C198, C188);
        const double C220 = C216 * C71;
        const double C221 = C217 * C71;
        const double C222 = C219 * C212;
        const double C223 = C77 * C211;
        const double C224 = C82 * C208;
        const double C225 = C82 * C209;
        const double C226 = C210 / C213;
        const double C227 = C214 / 9.;
        const double C228 = C215 / 3.;
        const double C229 = C222 * C83;
        const double C230 = C76 * C225;
        const double C231 = C227 - C218;
        const double C232 = C220 / 9.;
        const double C233 = C221 / 9.;
        const double C234 = C223 / C213;
        const double C235 = C224 / 3.;
        const double C236 = 0.00649176 * C229;
        const double C237 = C228 - C234;
        const double C238 = C232 - C196;
        const double C239 = C233 - C194;
        const double C240 = C230 / C213;
        const double C241 = 0.349 * C237;
        const double C242 = rhoa * C236;
        const double C243 = C235 - C240;
        const double C244 = 0.00649176 * C243;
        const double C245 = rhob * C242;
        const double C246 =  - C241;
        const double C247 = C246 / C192;
        const double C248 = C247 - C226;
        const double C249 = 3 * C248;
        const double C439 = rhoa + rhob;
        const double C440 = 1. / 3.;
        const double C441 = std::pow(C439, C440);
        const double C442 = 0.349 / C441;
        const double C443 = C442 + 1;
        const double C445 = rhoa + rhob;
        const double C446 = 1. / 3.;
        const double C447 = std::pow(C445, C446);
        const double C448 = 0.2533 / C447;
        const double C449 = 0.349 / C447;
        const double C450 = C449 + 1;
        const double C451 = C447 * C450;
        const double C452 = 0.349 / C451;
        const double C453 = C448 + C452;

                result.d3e_drbgabgbb = 0;
            }

            return result;
        }
    }
}

