/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated file, do not modify
#include "xc_kit/xc_functionals.hpp"

#include <cmath>
#include <limits>

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// Auto-generated, do not modify
namespace niedoida {
    namespace xc {
        XCFunctionalData mpw91_x_functional(
            double rhoa, double rhob, 
            double gammaaa, double gammaab, double gammabb, 
            unsigned n)
        {
            const double eps = std::numeric_limits<double>::epsilon();
            const double Pi = 3.1415926535897932384626433832795028842;

            XCFunctionalData result;

            if (rhoa + rhob < 2 * eps)
                return result;

            // Value of the functional itself

            if (rhoa >= eps && rhob >= eps) {
        const double C49 = 4 * Pi;
        const double C50 = 36. * Pi;
        const double C51 = rhoa + 1e-16;
        const double C52 = rhob + 1e-16;
        const double C53 = -5. / 3.;
        const double C54 = 1. / 3.;
        const double C55 = 4. / 3.;
        const double C56 = std::sqrt(gammaaa);
        const double C57 = std::sqrt(gammabb);
        const double C58 = std::pow(3., C55);
        const double C59 = std::pow(C49, C54);
        const double C60 = std::pow(C50, C53);
        const double C61 = std::pow(C51, C55);
        const double C62 = std::pow(C52, C55);
        const double C63 = std::pow(rhoa, C55);
        const double C64 = std::pow(rhob, C55);
        const double C65 = 5. * C60;
        const double C66 = C56 / C61;
        const double C67 = C57 / C62;
        const double C68 = 0.00426 - C65;
        const double C69 = std::pow(C66, 2);
        const double C70 = std::pow(C66, 3.72);
        const double C71 = std::pow(C67, 2);
        const double C72 = std::pow(C67, 3.72);

                result.e =  - ( ( ( C63 + C64)  * 3. * std::pow(6. / Pi, C54))  / 4. + ( C63 * ( 0.00426 * C69 - C68 * C69 * std::exp( - 1.6455 * C69) - 0.000001 * C70) )  / ( ( std::asinh(C66) * 0.02556 * C56)  / C61 + ( 0.000002 * C70 * C59)  / C58 + 1)  + ( C64 * ( 0.00426 * C71 - C68 * C71 * std::exp( - 1.6455 * C71) - 0.000001 * C72) )  / ( ( std::asinh(C67) * 0.02556 * C57)  / C62 + ( 0.000002 * C72 * C59)  / C58 + 1) ) ;
            } else if (rhoa < eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);

                result.e =  - ( ( ( C91 + C92)  * 3. * std::pow(6. / Pi, C82))  / 4. + ( C91 * ( 0.00426 * C97 - C96 * C97 * std::exp( - 1.6455 * C97) - 0.000001 * C98) )  / ( ( std::asinh(C94) * 0.02556 * C84)  / C89 + ( 0.000002 * C98 * C87)  / C86 + 1)  + ( C92 * ( 0.00426 * C99 - C96 * C99 * std::exp( - 1.6455 * C99) - 0.000001 * C100) )  / ( ( std::asinh(C95) * 0.02556 * C85)  / C90 + ( 0.000002 * C100 * C87)  / C86 + 1) ) ;
            } else if (rhob < eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);

                result.e =  - ( ( ( C116 + C117)  * 3. * std::pow(6. / Pi, C107))  / 4. + ( C116 * ( 0.00426 * C122 - C121 * C122 * std::exp( - 1.6455 * C122) - 0.000001 * C123) )  / ( ( std::asinh(C119) * 0.02556 * C109)  / C114 + ( 0.000002 * C123 * C112)  / C111 + 1)  + ( C117 * ( 0.00426 * C124 - C121 * C124 * std::exp( - 1.6455 * C124) - 0.000001 * C125) )  / ( ( std::asinh(C120) * 0.02556 * C110)  / C115 + ( 0.000002 * C125 * C112)  / C111 + 1) ) ;
            }

            if (n < 1)
                return result;

            // First derivatives with respect to density

            if (rhoa >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;

                result.de_dra =  - ( ( 3. * std::pow(6. / Pi, C107) * C140)  / 12. + ( C155 * ( C116 * ( ( -0.03408 * C142)  / C151 - ( ( C149 * C121 * -8. * C142)  / C151 - ( C131 * C149 * -0.13164e2 * C142)  / C151)  - ( 0.000001 * C154)  / C145)  + ( C157 * C140)  / 3.)  - C116 * C157 * ( ( 0.000002 * C112 * C154)  / ( 3. * C144 * C111)  - ( C141 * C139)  / ( 3. * C144) ) )  / std::pow(C155, 2)) ;
            }

            if (rhob >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;

                result.de_drb =  - ( ( 3. * std::pow(6. / Pi, C82) * C172)  / 12. + ( C187 * ( C92 * ( ( -0.03408 * C174)  / C184 - ( ( C181 * C96 * -8. * C174)  / C184 - ( C164 * C181 * -0.13164e2 * C174)  / C184)  - ( 0.000001 * C186)  / C177)  + ( C189 * C172)  / 3.)  - C92 * C189 * ( ( 0.000002 * C87 * C186)  / ( 3. * C176 * C86)  - ( C173 * C171)  / ( 3. * C176) ) )  / std::pow(C187, 2)) ;
            }

            // First derivatives with respect to density gradient

            if (gammaaa >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;

                result.de_dgaa =  - ( C323 * C303 * ( ( 0.00426 * C296)  / C306 - ( ( C321 * C308 * C296)  / C306 - ( C314 * C321 * 1.6455 * C296)  / C306)  - ( 0.00000372 * C311)  / ( 2 * C305) )  - C303 * ( 0.00426 * C310 - C314 * C321 - 0.000001 * C312)  * ( ( 0.02556 * C309)  / ( 2 * C296 * C301)  + ( 0.000002 * C299 * 3.72 * C311)  / ( 2 * C305 * C298) ) )  / std::pow(C323, 2);
            }

            if (gammaab >= eps) {

                result.de_dgab = 0;
            }

            if (gammabb >= eps) {
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;

                result.de_dgbb =  - ( C360 * C340 * ( ( 0.00426 * C333)  / C343 - ( ( C358 * C345 * C333)  / C343 - ( C351 * C358 * 1.6455 * C333)  / C343)  - ( 0.00000372 * C348)  / ( 2 * C342) )  - C340 * ( 0.00426 * C347 - C351 * C358 - 0.000001 * C349)  * ( ( 0.02556 * C346)  / ( 2 * C333 * C338)  + ( 0.000002 * C336 * 3.72 * C348)  / ( 2 * C342 * C335) ) )  / std::pow(C360, 2);
            }

            if (n < 2)
                return result;

            // Second derivatives with respect to density

            if (rhoa >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;

                result.d2e_drara =  - ( ( 3. * std::pow(6. / Pi, C107) * C392)  / 36. + ( std::pow(C155, 2) * ( C155 * ( C116 * ( ( ( C151 * -0.03408 * C398)  / 3. - ( -0.03408 * C142 * C408)  / 3.)  / C377 - ( ( C151 * ( ( C149 * C121 * -8. * C398)  / 3. - ( C381 * C382)  / C151)  - ( C397 * C408)  / 3.)  / C377 - ( C151 * ( C131 * ( ( C149 * -0.13164e2 * C398)  / 3. - ( -0.13164e2 * C142 * C382)  / C151)  + ( C382 * C381)  / C151)  - ( C395 * C408)  / 3.)  / C377)  - ( 3. * C144 * 0.000001 * C418 - ( 0.000001 * C154 * C394)  / 3.)  / std::pow(C145, 2))  + C417 / 3. + ( ( C157 * C392)  / 3. + C417)  / 3.)  + C409 * C419 - ( C369 * ( ( 3. * C371 * 0.000002 * C112 * C418 - ( 0.000002 * C367 * 3. * C111 * C393)  / 3.)  / std::pow(C379, 2) - ( ( C144 * C141 * C391)  / 9. + ( C399 * C393)  / 3.)  / std::pow(C104, 16. / 3.))  + C419 * C409) )  - ( C155 * C419 - C369 * C409)  * 2 * C409 * C155)  / std::pow(C155, 4)) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C421 = 0.000001 * C125;
        const double C422 = 0.00426 * C124;
        const double C423 = 0.02556 * C110;
        const double C424 = 1.6455 * C124;
        const double C425 = C121 * C124;
        const double C426 = C125 * C112;
        const double C427 = std::asinh(C120);
        const double C428 = std::pow(C105, C107);
        const double C429 = std::pow(C105, C133);
        const double C430 = 0.000002 * C426;
        const double C431 = C427 * C423;
        const double C432 = C430 / C111;
        const double C433 = C431 / C115;
        const double C434 = C433 + C432;
        const double C435 = C434 + 1;

                result.d2e_drarb =  - ( C435 * C117 * C425 * 0. * C428 * gammabb)  / ( C115 * 3. * C429 * std::pow(C435, 2)) ;
            }

            if (rhob >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;

                result.d2e_drbrb =  - ( ( 3. * std::pow(6. / Pi, C82) * C467)  / 36. + ( std::pow(C187, 2) * ( C187 * ( C92 * ( ( ( C184 * -0.03408 * C473)  / 3. - ( -0.03408 * C174 * C483)  / 3.)  / C451 - ( ( C184 * ( ( C181 * C96 * -8. * C473)  / 3. - ( C458 * C456)  / C184)  - ( C472 * C483)  / 3.)  / C451 - ( C184 * ( C164 * ( ( C181 * -0.13164e2 * C473)  / 3. - ( -0.13164e2 * C174 * C456)  / C184)  + ( C456 * C458)  / C184)  - ( C470 * C483)  / 3.)  / C451)  - ( 3. * C176 * 0.000001 * C493 - ( 0.000001 * C186 * C469)  / 3.)  / std::pow(C177, 2))  + C491 / 3. + ( ( C189 * C467)  / 3. + C491)  / 3.)  + C484 * C494 - ( C448 * ( ( 3. * C444 * 0.000002 * C87 * C493 - ( 0.000002 * C446 * 3. * C86 * C468)  / 3.)  / std::pow(C455, 2) - ( ( C176 * C173 * C466)  / 9. + ( C474 * C468)  / 3.)  / std::pow(C80, 16. / 3.))  + C494 * C484) )  - ( C187 * C494 - C448 * C484)  * 2 * C484 * C187)  / std::pow(C187, 4)) ;
            }

            // Second derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;

                result.d2e_dgaagaa =  - ( std::pow(C323, 2) * ( C323 * C303 * ( ( C306 * ( C314 * ( ( 1.6455 * C321)  / C648 - ( 1.6455 * C296 * C659)  / C306)  + ( C659 * C652)  / C306)  - ( C666 * C302)  / C648)  / C655 - ( C306 * ( ( C321 * C308)  / C648 - ( C652 * C659)  / C306)  - ( C660 * C302)  / C648)  / C655 - ( ( C305 * 0.0000101184 * C656)  / C305 - ( 0.00000372 * C311 * C301)  / C296)  / std::pow(C649, 2))  + C674 * C678 - ( C670 * ( ( ( C651 * 0.000002 * C299 * 10.1184 * C656)  / C305 - ( 0.000002 * C658 * C298 * C301)  / C296)  / std::pow(C657, 2) - C646 / ( C296 * std::pow(C648, 2) * C301) )  + C678 * C674) )  - ( C323 * C678 - C670 * C674)  * 2 * C674 * C323)  / std::pow(C323, 4);
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;

                result.d2e_dgaagab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;

                result.d2e_dgaagbb = 0;
            }

            if (gammaab >= eps) {

                result.d2e_dgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;

                result.d2e_dgbbgab = 0;
            }

            if (gammabb >= eps) {
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;

                result.d2e_dgbbgbb =  - ( std::pow(C360, 2) * ( C360 * C340 * ( ( C343 * ( C351 * ( ( 1.6455 * C358)  / C689 - ( 1.6455 * C333 * C700)  / C343)  + ( C700 * C693)  / C343)  - ( C707 * C339)  / C689)  / C696 - ( C343 * ( ( C358 * C345)  / C689 - ( C693 * C700)  / C343)  - ( C701 * C339)  / C689)  / C696 - ( ( C342 * 0.0000101184 * C697)  / C342 - ( 0.00000372 * C348 * C338)  / C333)  / std::pow(C690, 2))  + C715 * C719 - ( C711 * ( ( ( C692 * 0.000002 * C336 * 10.1184 * C697)  / C342 - ( 0.000002 * C699 * C335 * C338)  / C333)  / std::pow(C698, 2) - C687 / ( C333 * std::pow(C689, 2) * C338) )  + C719 * C715) )  - ( C360 * C719 - C711 * C715)  * 2 * C715 * C360)  / std::pow(C360, 4);
            }

            // Mixed second derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C496 = -0.1488e2 * C135;
        const double C497 = -0.13164e2 * C142;
        const double C498 = -8. * C142;
        const double C499 = -0.03408 * C142;
        const double C500 = 0.000001 * C154;
        const double C501 = 0.00000372 * C136;
        const double C502 = 0.00426 * C109;
        const double C503 = 0.02556 * C134;
        const double C504 = 1.6455 * C109;
        const double C505 = 2 * C109;
        const double C506 = 3.72 * C136;
        const double C507 = C109 * C114;
        const double C508 = C109 * C144;
        const double C509 = C112 * C154;
        const double C510 = 0;
        const double C511 = C116 * C157;
        const double C512 = C121 * C109;
        const double C513 = C141 * C139;
        const double C514 = C144 * C111;
        const double C515 = C157 * C140;
        const double C516 = 0;
        const double C517 = std::pow(C119, 1.72);
        const double C518 = 0.000002 * C509;
        const double C519 = 2 * C507;
        const double C520 = 2.72 * C517;
        const double C521 = 3. * C514;
        const double C522 = C112 * C506;
        const double C523 = C121 * C498;
        const double C524 = C136 * C496;
        const double C525 = C149 * C497;
        const double C526 = C149 * C504;
        const double C527 = C149 * C512;
        const double C528 = C507 * C111;
        const double C529 = C499 / C151;
        const double C530 = C500 / C145;
        const double C531 = C502 / C508;
        const double C532 = C503 / C505;
        const double C533 = C513 / 3.;
        const double C534 = C515 / 3.;
        const double C535 = 0.000002 * C522;
        const double C536 = 2 * C528;
        const double C537 = C131 * C525;
        const double C538 = C131 * C526;
        const double C539 = C146 * C520;
        const double C540 = C149 * C523;
        const double C541 = C532 + C516;
        const double C542 = C510 - C533;
        const double C543 = C501 / C519;
        const double C544 = C518 / C521;
        const double C545 = C524 / C505;
        const double C546 = C527 / C508;
        const double C547 = -3.72 * C539;
        const double C548 = C535 / C536;
        const double C549 = C537 / C151;
        const double C550 = C538 / C508;
        const double C551 = C540 / C151;
        const double C552 = C541 / C114;
        const double C553 = C542 / C144;
        const double C554 = C552 + C548;
        const double C555 = C553 + C544;
        const double C556 = C546 - C550;
        const double C557 = C551 - C549;
        const double C558 = C547 / C519;
        const double C559 = C545 + C558;
        const double C560 = C529 - C557;
        const double C561 = C531 - C556;
        const double C562 = C560 - C530;
        const double C563 = C561 - C543;
        const double C564 = C116 * C562;
        const double C565 = C564 + C534;

                result.d2e_dragaa =  - ( std::pow(C155, 2) * ( C155 * ( C116 * ( ( -0.03408 * C135)  / C151 - ( ( C149 * C121 * -8. * C135 - ( C523 * C526)  / C508)  / C151 - ( C131 * ( C149 * -0.13164e2 * C135 - ( -0.13164e2 * C142 * C526)  / C508)  + ( C525 * C512)  / C508)  / C151)  - ( 0.000001 * C559)  / C145)  + ( C563 * C140)  / 3.)  + C554 * C565 - ( C511 * ( ( 0.000002 * C112 * C559)  / C521 - ( C541 * C139)  / ( 3. * C144) )  + C116 * C563 * C555) )  - ( C155 * C565 - C511 * C555)  * 2 * C554 * C155)  / std::pow(C155, 4);
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;

                result.d2e_dragab =  - ( C155 * C116 * C131 * 0. * C142)  / ( C151 * std::pow(C155, 2)) ;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;

                result.d2e_dragbb =  - ( C155 * C116 * C131 * 0. * C142)  / ( C151 * std::pow(C155, 2)) ;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;

                result.d2e_drbgaa =  - ( C187 * C92 * C164 * 0. * C174)  / ( C184 * std::pow(C187, 2)) ;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;

                result.d2e_drbgab =  - ( C187 * C92 * C164 * 0. * C174)  / ( C184 * std::pow(C187, 2)) ;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C571 = -0.1488e2 * C167;
        const double C572 = -0.13164e2 * C174;
        const double C573 = -8. * C174;
        const double C574 = -0.03408 * C174;
        const double C575 = 0.000001 * C186;
        const double C576 = 0.00000372 * C168;
        const double C577 = 0.00426 * C85;
        const double C578 = 0.02556 * C166;
        const double C579 = 1.6455 * C85;
        const double C580 = 2 * C85;
        const double C581 = 3.72 * C168;
        const double C582 = C173 * C171;
        const double C583 = C176 * C86;
        const double C584 = C189 * C172;
        const double C585 = C85 * C176;
        const double C586 = C85 * C90;
        const double C587 = C87 * C186;
        const double C588 = 0;
        const double C589 = C92 * C189;
        const double C590 = C96 * C85;
        const double C591 = 0;
        const double C592 = std::pow(C95, 1.72);
        const double C593 = 0.000002 * C587;
        const double C594 = 2 * C586;
        const double C595 = 2.72 * C592;
        const double C596 = 3. * C583;
        const double C597 = C168 * C571;
        const double C598 = C181 * C572;
        const double C599 = C181 * C579;
        const double C600 = C181 * C590;
        const double C601 = C586 * C86;
        const double C602 = C87 * C581;
        const double C603 = C96 * C573;
        const double C604 = C574 / C184;
        const double C605 = C575 / C177;
        const double C606 = C577 / C585;
        const double C607 = C578 / C580;
        const double C608 = C582 / 3.;
        const double C609 = C584 / 3.;
        const double C610 = 0.000002 * C602;
        const double C611 = 2 * C601;
        const double C612 = C164 * C598;
        const double C613 = C164 * C599;
        const double C614 = C178 * C595;
        const double C615 = C181 * C603;
        const double C616 = C607 + C591;
        const double C617 = C588 - C608;
        const double C618 = C576 / C594;
        const double C619 = C593 / C596;
        const double C620 = C597 / C580;
        const double C621 = C600 / C585;
        const double C622 = -3.72 * C614;
        const double C623 = C610 / C611;
        const double C624 = C612 / C184;
        const double C625 = C613 / C585;
        const double C626 = C615 / C184;
        const double C627 = C616 / C90;
        const double C628 = C617 / C176;
        const double C629 = C627 + C623;
        const double C630 = C628 + C619;
        const double C631 = C621 - C625;
        const double C632 = C626 - C624;
        const double C633 = C622 / C594;
        const double C634 = C620 + C633;
        const double C635 = C604 - C632;
        const double C636 = C606 - C631;
        const double C637 = C635 - C605;
        const double C638 = C636 - C618;
        const double C639 = C92 * C637;
        const double C640 = C639 + C609;

                result.d2e_drbgbb =  - ( std::pow(C187, 2) * ( C187 * ( C92 * ( ( -0.03408 * C167)  / C184 - ( ( C181 * C96 * -8. * C167 - ( C603 * C599)  / C585)  / C184 - ( C164 * ( C181 * -0.13164e2 * C167 - ( -0.13164e2 * C174 * C599)  / C585)  + ( C598 * C590)  / C585)  / C184)  - ( 0.000001 * C634)  / C177)  + ( C638 * C172)  / 3.)  + C629 * C640 - ( C589 * ( ( 0.000002 * C87 * C634)  / C596 - ( C616 * C171)  / ( 3. * C176) )  + C92 * C638 * C630) )  - ( C187 * C640 - C589 * C630)  * 2 * C629 * C187)  / std::pow(C187, 4);
            }

            if (n < 3)
                return result;

            // Third derivatives with respect to density

            if (rhoa >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;
        const double C722 = -0.13164e2 * C398;
        const double C723 = -8. * C398;
        const double C724 = -2.72 * C402;
        const double C725 = -1.72 * C146;
        const double C726 = -0.03408 * C398;
        const double C727 = 0.000001 * C418;
        const double C728 = 2 * C408;
        const double C729 = C111 * C393;
        const double C730 = C112 * C418;
        const double C731 = C135 * C393;
        const double C732 = C141 * C391;
        const double C733 = C142 * C382;
        const double C734 = C142 * C408;
        const double C735 = C144 * C391;
        const double C736 = C154 * C394;
        const double C737 = C155 * C419;
        const double C738 = C157 * C392;
        const double C739 = C381 * C382;
        const double C740 = C382 * C381;
        const double C741 = C383 * C402;
        const double C742 = C389 * C139;
        const double C743 = C395 * C408;
        const double C744 = C396 * C394;
        const double C745 = C397 * C408;
        const double C746 = C402 * C383;
        const double C747 = C414 * C392;
        const double C748 = 0;
        const double C749 = 0;
        const double C750 =  - C386;
        const double C751 = 2. / 3.;
        const double C752 = 16. / 3.;
        const double C753 = C417 / 3.;
        const double C754 = std::pow(C104, C106);
        const double C755 = std::pow(C119, 0.72);
        const double C756 = std::pow(C145, 2);
        const double C757 = std::pow(C151, 4);
        const double C758 = std::pow(C155, 2);
        const double C759 = std::pow(C379, 2);
        const double C760 = std::pow(rhoa, C106);
        const double C761 = -0.13164e2 * C733;
        const double C762 = -8. * C754;
        const double C763 = -8. * C760;
        const double C764 = -3.72 * C744;
        const double C765 = -3.72 * C746;
        const double C766 = -2. * C754;
        const double C767 = -0.03408 * C734;
        const double C768 = 0.000001 * C736;
        const double C769 = 0.000002 * C730;
        const double C770 = 3. * C729;
        const double C771 = 4. * C731;
        const double C772 = 24. * C742;
        const double C773 = 0;
        const double C774 = C121 * C723;
        const double C775 = C144 * C727;
        const double C776 = C149 * C722;
        const double C777 = C151 * C726;
        const double C778 = C151 * C728;
        const double C779 = C376 * C724;
        const double C780 = C750 * C393;
        const double C781 = C755 * C725;
        const double C782 = C732 / 3.;
        const double C783 = C738 / 3.;
        const double C784 = C739 / C151;
        const double C785 = C740 / C151;
        const double C786 = C741 / 3.;
        const double C787 = C743 / 3.;
        const double C788 = C745 / 3.;
        const double C789 = C747 / 3.;
        const double C790 = C748 / 3.;
        const double C791 = C750 / C144;
        const double C792 = std::pow(C104, C751);
        const double C793 = std::pow(C104, C752);
        const double C794 = 3. * C775;
        const double C795 = 40. * C792;
        const double C796 = 120. * C792;
        const double C797 = C109 * C762;
        const double C798 = C146 * C781;
        const double C799 = C149 * C774;
        const double C800 = C367 * C770;
        const double C801 = C371 * C769;
        const double C802 = C382 * C774;
        const double C803 = gammaaa * C766;
        const double C804 = C735 + C771;
        const double C805 = C773 + C790;
        const double C806 = C782 + C748;
        const double C807 = C783 + C417;
        const double C808 = C791 + C400;
        const double C809 = C761 / C151;
        const double C810 = C764 / 3.;
        const double C811 = C765 / C145;
        const double C812 = C767 / 3.;
        const double C813 = C768 / 3.;
        const double C814 = C776 / 3.;
        const double C815 = C777 / 3.;
        const double C816 = C779 / 3.;
        const double C817 = C780 / 3.;
        const double C818 = -3.72 * C797;
        const double C819 = -2.72 * C798;
        const double C820 = 0.000002 * C800;
        const double C821 = 3. * C801;
        const double C822 = 3. * C804;
        const double C823 = C114 * C796;
        const double C824 = C369 * C808;
        const double C825 = C419 * C808;
        const double C826 = C808 * C155;
        const double C827 = C808 * C419;
        const double C828 = C794 - C813;
        const double C829 = C814 - C809;
        const double C830 = C815 - C812;
        const double C831 = C799 / 3.;
        const double C832 = C802 / 3.;
        const double C833 = C806 / 3.;
        const double C834 = C807 / 3.;
        const double C835 = 2 * C826;
        const double C836 = C131 * C829;
        const double C837 = C136 * C818;
        const double C838 = C829 * C381;
        const double C839 = C823 + C772;
        const double C840 = C737 - C824;
        const double C841 = C805 - C833;
        const double C842 = C831 - C784;
        const double C843 = C819 / C145;
        const double C844 = C820 / 3.;
        const double C845 = C828 / C756;
        const double C846 = C830 / C377;
        const double C847 = C144 * C841;
        const double C848 = C151 * C842;
        const double C849 = C841 * C393;
        const double C850 = C842 * C408;
        const double C851 = C816 + C843;
        const double C852 = C836 + C785;
        const double C853 = C839 + C822;
        const double C854 = C821 - C844;
        const double C855 = C837 / 3.;
        const double C856 = C146 * C851;
        const double C857 = C151 * C852;
        const double C858 = C852 * C408;
        const double C859 = C855 + C811;
        const double C860 = C847 - C817;
        const double C861 = C848 - C788;
        const double C862 = C854 / C759;
        const double C863 = C856 + C786;
        const double C864 = C857 - C787;
        const double C865 = C859 / 3.;
        const double C866 = C860 / C793;
        const double C867 = C861 / C377;
        const double C868 = -3.72 * C863;
        const double C869 = C866 + C862;
        const double C870 = C864 / C377;
        const double C871 = C144 * C868;
        const double C872 = C369 * C869;
        const double C873 = C419 * C869;
        const double C874 = C867 - C870;
        const double C875 = 3. * C871;
        const double C876 = C872 + C825;
        const double C877 = C846 - C874;
        const double C878 = C875 - C810;
        const double C879 = C877 - C845;
        const double C880 = C116 * C879;
        const double C881 = C879 * C140;
        const double C882 = C878 / C756;
        const double C883 = C789 + C881;
        const double C884 = C865 + C882;
        const double C885 = C880 + C753;
        const double C886 = C885 + C834;
        const double C887 = C155 * C886;
        const double C888 = C808 * C886;
        const double C889 = C887 + C827;
        const double C890 = C889 - C876;

                result.d3e_drarara =  - ( ( 3. * std::pow(6. / Pi, C107) * C763)  / 108. + ( std::pow(C155, 4) * ( C758 * ( C155 * ( C116 * ( ( C377 * ( ( C151 * -0.03408 * C803 - 0.03408 * C398 * C408)  / 9. - ( -0.03408 * ( C142 * C853 + C408 * C398) )  / 9.)  - ( C830 * C778)  / 3.)  / C757 - ( ( C377 * ( C151 * ( ( ( C149 * C121 * -8. * C803)  / 3. - ( C774 * C382)  / C151)  / 3. - ( C151 * ( C381 * C829 + C832)  - ( C739 * C408)  / 3.)  / C377)  + C850 / 3. - ( ( C397 * C853)  / 3. + C850)  / 3.)  - ( C861 * C778)  / 3.)  / C757 - ( C377 * ( C151 * ( C131 * ( ( ( C149 * -0.13164e2 * C803)  / 3. - ( -0.13164e2 * C398 * C382)  / C151)  / 3. - ( C151 * -0.13164e2 * ( C142 * C829 + ( C382 * C398)  / 3.)  - ( -0.13164e2 * C733 * C408)  / 3.)  / C377)  + C838 / C151 + ( C151 * ( C832 + C838)  - ( C740 * C408)  / 3.)  / C377)  + C858 / 3. - ( ( C395 * C853)  / 3. + C858)  / 3.)  - ( C864 * C778)  / 3.)  / C757)  - ( C756 * ( 3. * ( C144 * 0.000001 * C884 + ( 0.000001 * C418 * C393)  / 3.)  - ( 0.000001 * ( ( C154 * C796)  / 3. + C418 * C394) )  / 3.)  - ( C828 * 3. * C144 * 48. * C389)  / 3.)  / std::pow(C145, 4))  + C881 / 3. + C883 / 3. + ( ( ( C157 * C763)  / 3. + C747)  / 3. + C883)  / 3.)  + C888 + C888 + C869 * C419 - ( C369 * ( ( C793 * ( C849 / 3. - ( C144 * C141 * C762)  / 27. - ( ( C750 * C795)  / 3. + C849)  / 3.)  - ( C860 * 16. * std::pow(C104, 13. / 3.))  / 3.)  / std::pow(C104, 32. / 3.) + ( C759 * ( 3. * ( C371 * 0.000002 * C112 * C884 + ( 0.000002 * C730 * C729)  / 3.)  - ( 0.000002 * ( ( C367 * 3. * C111 * C795)  / 3. + C730 * C770) )  / 3.)  - ( C854 * 3. * C371 * 6. * C729)  / 3.)  / std::pow(C379, 4))  + C873 + C873 + C886 * C808) )  + 2 * C826 * C890 - ( C840 * 2 * ( std::pow(C808, 2) + C869 * C155)  + C890 * C835) )  - ( C758 * C890 - C840 * C835)  * 4 * C808 * std::pow(C155, 3))  / std::pow(C155, 8)) ;
            }

            if (rhoa >= eps && rhob >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;
        const double C421 = 0.000001 * C125;
        const double C422 = 0.00426 * C124;
        const double C423 = 0.02556 * C110;
        const double C424 = 1.6455 * C124;
        const double C425 = C121 * C124;
        const double C426 = C125 * C112;
        const double C427 = std::asinh(C120);
        const double C428 = std::pow(C105, C107);
        const double C429 = std::pow(C105, C133);
        const double C430 = 0.000002 * C426;
        const double C431 = C427 * C423;
        const double C432 = C430 / C111;
        const double C433 = C431 / C115;
        const double C434 = C433 + C432;
        const double C435 = C434 + 1;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;
        const double C892 = 0. * C142;
        const double C893 = 3. * C151;
        const double C894 =  - C386;
        const double C895 = 0;
        const double C896 = C131 * C892;
        const double C897 = C894 / C144;
        const double C898 = C116 * C896;
        const double C899 = C137 * C896;
        const double C900 = C897 + C400;
        const double C901 = 4. * C899;
        const double C902 = C900 * C898;
        const double C903 = C901 / C893;
        const double C904 = C902 / C151;
        const double C906 = 3. * C429;
        const double C907 = 4. * C428;
        const double C908 = 0;
        const double C909 = C428 * gammabb;
        const double C910 = C429 * C111;
        const double C911 = std::pow(C120, 2.72);
        const double C912 = 0. * C909;
        const double C913 = 3. * C910;
        const double C914 = C110 * C907;
        const double C915 = C115 * C906;
        const double C916 = C431 * C907;
        const double C917 = -3.72 * C914;
        const double C918 = C425 * C912;
        const double C919 = C916 / 3.;
        const double C920 = C117 * C918;
        const double C921 = C911 * C917;
        const double C922 = C908 - C919;
        const double C923 = C112 * C921;
        const double C924 = C435 * C920;
        const double C925 = C922 / C429;
        const double C926 = 0.000002 * C923;
        const double C927 = C926 / C913;
        const double C928 = C925 + C927;

                result.d3e_drararb =  - ( std::pow(C155, 2) * ( C155 * ( C116 * ( ( C151 * ( C131 * ( ( 0. * C398)  / 3. - ( 0. * std::pow(C142, 2))  / C151)  + ( 0. * C142 * C381)  / C151)  - ( C896 * C408)  / 3.)  / C377 - (  - ( C151 * C381 * C892)  / C151)  / C377)  + C903 + C903)  + C904 + C895 - ( C895 + C904) )  - ( 2 * C900 * C155 * C155 * C898)  / C151)  / std::pow(C155, 4);
                result.d3e_drarbrb =  - ( ( std::pow(C435, 2) * ( C915 * ( C435 * ( C117 * ( ( C425 * 0. * gammabb * std::pow(C105, C449))  / 3. + ( 0. * C909 * C121 * -8. * C909)  / C915)  + ( C918 * 4. * std::pow(rhob, C107))  / 3.)  + C928 * C920)  - ( C924 * ( C115 * 24. * std::pow(C105, C450) + 3. * C429 * C907) )  / 3.) )  / std::pow(C915, 2) - ( 2 * C928 * C435 * C924)  / C915)  / std::pow(C435, 4);
            }

            if (rhob >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;
        const double C930 = -0.13164e2 * C473;
        const double C931 = -8. * C473;
        const double C932 = -2.72 * C477;
        const double C933 = -1.72 * C178;
        const double C934 = -0.03408 * C473;
        const double C935 = 0.000001 * C493;
        const double C936 = 2 * C483;
        const double C937 = C167 * C468;
        const double C938 = C173 * C466;
        const double C939 = C174 * C456;
        const double C940 = C174 * C483;
        const double C941 = C176 * C466;
        const double C942 = C186 * C469;
        const double C943 = C187 * C494;
        const double C944 = C189 * C467;
        const double C945 = C456 * C458;
        const double C946 = C457 * C477;
        const double C947 = C458 * C456;
        const double C948 = C464 * C171;
        const double C949 = C470 * C483;
        const double C950 = C471 * C469;
        const double C951 = C472 * C483;
        const double C952 = C477 * C457;
        const double C953 = C489 * C467;
        const double C954 = C86 * C468;
        const double C955 = C87 * C493;
        const double C956 = 0;
        const double C957 = 0;
        const double C958 =  - C461;
        const double C959 = 2. / 3.;
        const double C960 = 16. / 3.;
        const double C961 = C491 / 3.;
        const double C962 = std::pow(C177, 2);
        const double C963 = std::pow(C184, 4);
        const double C964 = std::pow(C187, 2);
        const double C965 = std::pow(C455, 2);
        const double C966 = std::pow(C80, C81);
        const double C967 = std::pow(C95, 0.72);
        const double C968 = std::pow(rhob, C81);
        const double C969 = -0.13164e2 * C939;
        const double C970 = -8. * C966;
        const double C971 = -8. * C968;
        const double C972 = -3.72 * C950;
        const double C973 = -3.72 * C952;
        const double C974 = -2. * C966;
        const double C975 = -0.03408 * C940;
        const double C976 = 0.000001 * C942;
        const double C977 = 0.000002 * C955;
        const double C978 = 3. * C954;
        const double C979 = 4. * C937;
        const double C980 = 24. * C948;
        const double C981 = C176 * C935;
        const double C982 = C181 * C930;
        const double C983 = C184 * C934;
        const double C984 = C184 * C936;
        const double C985 = C452 * C932;
        const double C986 = 0;
        const double C987 = C958 * C468;
        const double C988 = C96 * C931;
        const double C989 = C967 * C933;
        const double C990 = C938 / 3.;
        const double C991 = C944 / 3.;
        const double C992 = C945 / C184;
        const double C993 = C946 / 3.;
        const double C994 = C947 / C184;
        const double C995 = C949 / 3.;
        const double C996 = C951 / 3.;
        const double C997 = C953 / 3.;
        const double C998 = C956 / 3.;
        const double C999 = C958 / C176;
        const double C1000 = std::pow(C80, C959);
        const double C1001 = std::pow(C80, C960);
        const double C1002 = 3. * C981;
        const double C1003 = 40. * C1000;
        const double C1004 = 120. * C1000;
        const double C1005 = C178 * C989;
        const double C1006 = C181 * C988;
        const double C1007 = C444 * C977;
        const double C1008 = C446 * C978;
        const double C1009 = C456 * C988;
        const double C1010 = C85 * C970;
        const double C1011 = gammabb * C974;
        const double C1012 = C941 + C979;
        const double C1013 = C986 + C998;
        const double C1014 = C990 + C956;
        const double C1015 = C991 + C491;
        const double C1016 = C999 + C475;
        const double C1017 = C969 / C184;
        const double C1018 = C972 / 3.;
        const double C1019 = C973 / C177;
        const double C1020 = C975 / 3.;
        const double C1021 = C976 / 3.;
        const double C1022 = C982 / 3.;
        const double C1023 = C983 / 3.;
        const double C1024 = C985 / 3.;
        const double C1025 = C987 / 3.;
        const double C1026 = -3.72 * C1010;
        const double C1027 = -2.72 * C1005;
        const double C1028 = 0.000002 * C1008;
        const double C1029 = 3. * C1007;
        const double C1030 = 3. * C1012;
        const double C1031 = C1016 * C187;
        const double C1032 = C1016 * C494;
        const double C1033 = C448 * C1016;
        const double C1034 = C494 * C1016;
        const double C1035 = C90 * C1004;
        const double C1036 = C1002 - C1021;
        const double C1037 = C1022 - C1017;
        const double C1038 = C1023 - C1020;
        const double C1039 = C1006 / 3.;
        const double C1040 = C1009 / 3.;
        const double C1041 = C1014 / 3.;
        const double C1042 = C1015 / 3.;
        const double C1043 = 2 * C1031;
        const double C1044 = C1037 * C458;
        const double C1045 = C164 * C1037;
        const double C1046 = C168 * C1026;
        const double C1047 = C1035 + C980;
        const double C1048 = C1013 - C1041;
        const double C1049 = C1039 - C994;
        const double C1050 = C943 - C1033;
        const double C1051 = C1027 / C177;
        const double C1052 = C1028 / 3.;
        const double C1053 = C1036 / C962;
        const double C1054 = C1038 / C451;
        const double C1055 = C1048 * C468;
        const double C1056 = C1049 * C483;
        const double C1057 = C176 * C1048;
        const double C1058 = C184 * C1049;
        const double C1059 = C1024 + C1051;
        const double C1060 = C1045 + C992;
        const double C1061 = C1047 + C1030;
        const double C1062 = C1029 - C1052;
        const double C1063 = C1046 / 3.;
        const double C1064 = C1060 * C483;
        const double C1065 = C178 * C1059;
        const double C1066 = C184 * C1060;
        const double C1067 = C1063 + C1019;
        const double C1068 = C1057 - C1025;
        const double C1069 = C1058 - C996;
        const double C1070 = C1062 / C965;
        const double C1071 = C1065 + C993;
        const double C1072 = C1066 - C995;
        const double C1073 = C1067 / 3.;
        const double C1074 = C1068 / C1001;
        const double C1075 = C1069 / C451;
        const double C1076 = -3.72 * C1071;
        const double C1077 = C1074 + C1070;
        const double C1078 = C1072 / C451;
        const double C1079 = C176 * C1076;
        const double C1080 = C448 * C1077;
        const double C1081 = C494 * C1077;
        const double C1082 = C1075 - C1078;
        const double C1083 = 3. * C1079;
        const double C1084 = C1080 + C1034;
        const double C1085 = C1054 - C1082;
        const double C1086 = C1083 - C1018;
        const double C1087 = C1085 - C1053;
        const double C1088 = C1087 * C172;
        const double C1089 = C92 * C1087;
        const double C1090 = C1086 / C962;
        const double C1091 = C1073 + C1090;
        const double C1092 = C1089 + C961;
        const double C1093 = C997 + C1088;
        const double C1094 = C1092 + C1042;
        const double C1095 = C1016 * C1094;
        const double C1096 = C187 * C1094;
        const double C1097 = C1096 + C1032;
        const double C1098 = C1097 - C1084;

                result.d3e_drbrbrb =  - ( ( 3. * std::pow(6. / Pi, C82) * C971)  / 108. + ( std::pow(C187, 4) * ( C964 * ( C187 * ( C92 * ( ( C451 * ( ( C184 * -0.03408 * C1011 - 0.03408 * C473 * C483)  / 9. - ( -0.03408 * ( C174 * C1061 + C483 * C473) )  / 9.)  - ( C1038 * C984)  / 3.)  / C963 - ( ( C451 * ( C184 * ( ( ( C181 * C96 * -8. * C1011)  / 3. - ( C988 * C456)  / C184)  / 3. - ( C184 * ( C458 * C1037 + C1040)  - ( C947 * C483)  / 3.)  / C451)  + C1056 / 3. - ( ( C472 * C1061)  / 3. + C1056)  / 3.)  - ( C1069 * C984)  / 3.)  / C963 - ( C451 * ( C184 * ( C164 * ( ( ( C181 * -0.13164e2 * C1011)  / 3. - ( -0.13164e2 * C473 * C456)  / C184)  / 3. - ( C184 * -0.13164e2 * ( C174 * C1037 + ( C456 * C473)  / 3.)  - ( -0.13164e2 * C939 * C483)  / 3.)  / C451)  + C1044 / C184 + ( C184 * ( C1040 + C1044)  - ( C945 * C483)  / 3.)  / C451)  + C1064 / 3. - ( ( C470 * C1061)  / 3. + C1064)  / 3.)  - ( C1072 * C984)  / 3.)  / C963)  - ( C962 * ( 3. * ( C176 * 0.000001 * C1091 + ( 0.000001 * C493 * C468)  / 3.)  - ( 0.000001 * ( ( C186 * C1004)  / 3. + C493 * C469) )  / 3.)  - ( C1036 * 3. * C176 * 48. * C464)  / 3.)  / std::pow(C177, 4))  + C1088 / 3. + C1093 / 3. + ( ( ( C189 * C971)  / 3. + C953)  / 3. + C1093)  / 3.)  + C1095 + C1095 + C1077 * C494 - ( C448 * ( ( C1001 * ( C1055 / 3. - ( C176 * C173 * C970)  / 27. - ( ( C958 * C1003)  / 3. + C1055)  / 3.)  - ( C1068 * 16. * std::pow(C80, 13. / 3.))  / 3.)  / std::pow(C80, 32. / 3.) + ( C965 * ( 3. * ( C444 * 0.000002 * C87 * C1091 + ( 0.000002 * C955 * C954)  / 3.)  - ( 0.000002 * ( ( C446 * 3. * C86 * C1003)  / 3. + C955 * C978) )  / 3.)  - ( C1062 * 3. * C444 * 6. * C954)  / 3.)  / std::pow(C455, 4))  + C1081 + C1081 + C1094 * C1016) )  + 2 * C1031 * C1098 - ( C1050 * 2 * ( std::pow(C1016, 2) + C1077 * C187)  + C1098 * C1043) )  - ( C964 * C1098 - C1050 * C1043)  * 4 * C1016 * std::pow(C187, 3))  / std::pow(C187, 8)) ;
            }

            // Third derivatives with respect to density gradient

            if (gammaaa > eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;
        const double C1850 = 0.0000101184 * C656;
        const double C1851 = 1.6455 * C321;
        const double C1852 = 0;
        const double C1853 = 10.1184 * C656;
        const double C1854 = C296 * C659;
        const double C1855 = C298 * C301;
        const double C1856 = C311 * C301;
        const double C1857 = C321 * C308;
        const double C1858 = C323 * C678;
        const double C1859 = C652 * C659;
        const double C1860 = C659 * C308;
        const double C1861 = C659 * C652;
        const double C1862 = C660 * C302;
        const double C1863 = C666 * C302;
        const double C1864 = 0;
        const double C1865 = 16. / 3.;
        const double C1866 = C646 / C296;
        const double C1867 = C664 / C301;
        const double C1868 = std::pow(C305, 2);
        const double C1869 = std::pow(C306, 4);
        const double C1870 = std::pow(C307, 0.72);
        const double C1871 = std::pow(C323, 2);
        const double C1872 = std::pow(C648, 2);
        const double C1873 = std::pow(C649, 2);
        const double C1874 = std::pow(C657, 2);
        const double C1875 = 0.00000372 * C1856;
        const double C1876 = 1.6455 * C1854;
        const double C1877 = C299 * C1853;
        const double C1878 = C305 * C1850;
        const double C1879 = C658 * C1855;
        const double C1880 = C1867 + C671;
        const double C1881 = C1852 - C1866;
        const double C1882 = C1851 / C648;
        const double C1883 = C1857 / C648;
        const double C1884 = C1859 / C306;
        const double C1885 = C1860 / C648;
        const double C1886 = C1861 / C306;
        const double C1887 = C1862 / C648;
        const double C1888 = C1863 / C648;
        const double C1889 = std::pow(C291, C1865);
        const double C1890 = 0.000002 * C1877;
        const double C1891 = 0.000002 * C1879;
        const double C1892 = C1880 * C323;
        const double C1893 = C1880 * C678;
        const double C1894 = C296 * C1889;
        const double C1895 = C670 * C1880;
        const double C1896 = C678 * C1880;
        const double C1897 = C1883 - C1884;
        const double C1898 = C1875 / C296;
        const double C1899 = C1876 / C306;
        const double C1900 = C1878 / C305;
        const double C1901 = C1881 / C1872;
        const double C1902 = 2 * C1892;
        const double C1903 = C1897 * C302;
        const double C1904 = C306 * C1897;
        const double C1905 = C651 * C1890;
        const double C1906 = C1901 + C1864;
        const double C1907 = C1858 - C1895;
        const double C1908 = C1882 - C1899;
        const double C1909 = C1900 - C1898;
        const double C1910 = C1891 / C296;
        const double C1911 = C1908 * C652;
        const double C1912 = C314 * C1908;
        const double C1913 = C1904 - C1887;
        const double C1914 = C1905 / C305;
        const double C1915 = C1906 / C301;
        const double C1916 = C1909 / C1873;
        const double C1917 = C1912 + C1886;
        const double C1918 = C1914 - C1910;
        const double C1919 = C1913 / C655;
        const double C1920 = C1917 * C302;
        const double C1921 = C306 * C1917;
        const double C1922 = C1918 / C1874;
        const double C1923 = C1915 + C1922;
        const double C1924 = C1921 - C1888;
        const double C1925 = C670 * C1923;
        const double C1926 = C678 * C1923;
        const double C1927 = C1924 / C655;
        const double C1928 = C1925 + C1896;
        const double C1929 = C1927 - C1919;
        const double C1930 = C1929 - C1916;
        const double C1931 = C303 * C1930;
        const double C1932 = C1880 * C1931;
        const double C1933 = C323 * C1931;
        const double C1934 = C1933 + C1893;
        const double C1935 = C1934 - C1928;

                result.d3e_dgaagaagaa =  - ( std::pow(C323, 4) * ( C1871 * ( C323 * C303 * ( ( C655 * ( C306 * ( C314 * ( ( ( 2 * C296 * -1.6455 * C659)  / C306 - C1851 / C296)  / C1872 - ( C306 * 1.6455 * ( C296 * C1908 + C659 / C648)  - ( 1.6455 * C1854 * C302)  / C648)  / C655)  + C1911 / C306 + ( C306 * ( C1885 + C1911)  - ( C1861 * C302)  / C648)  / C655)  + C1920 / C648 - ( 2 * C296 * C1920 - C1863 / C296)  / C1872)  - ( C1924 * C1894)  / C296)  / C1869 - ( C655 * ( C306 * ( ( ( -2 * C296 * C308 * C659)  / C306 - C1857 / C296)  / C1872 - ( C306 * ( C652 * C1908 + C1885)  - ( C1859 * C302)  / C648)  / C655)  + C1903 / C648 - ( 2 * C296 * C1903 - C1862 / C296)  / C1872)  - ( C1913 * C1894)  / C296)  / C1869 - ( C1873 * ( ( C305 * ( ( C305 * 0.000017403648 * C1870)  / C649 + ( 0.0000101184 * C656 * C301)  / C648)  - ( C1878 * C301)  / C648)  / C1868 - ( ( C296 * 0.00000372 * C301 * 2.72 * C656)  / C649 - C1875 / C648)  / gammaaa)  - ( C1909 * 2 * C305 * 2 * C301)  / C296)  / std::pow(C649, 4))  + C1932 + C1932 + C1923 * C678 - ( C670 * ( ( ( C1872 * C664)  / gammaaa - ( C1881 * 4 * C296)  / C296)  / ( std::pow(C648, 4) * C301)  + ( C1874 * ( ( C305 * ( ( C651 * 0.000002 * C299 * 0.17403648e2 * C1870)  / C649 + ( 0.000002 * C1877 * C1855)  / C648)  - ( C1905 * C301)  / C648)  / C1868 - ( ( C296 * 0.000002 * C1855 * C1877)  / C649 - C1891 / C648)  / gammaaa)  - ( C1918 * 2 * C651 * 2 * C1855)  / C296)  / std::pow(C657, 4))  + C1926 + C1926 + C1931 * C1880) )  + 2 * C1892 * C1935 - ( C1907 * 2 * ( std::pow(C1880, 2) + C1923 * C323)  + C1935 * C1902) )  - ( C1871 * C1935 - C1907 * C1902)  * 4 * C1880 * std::pow(C323, 3))  / std::pow(C323, 8);
            }

            if (gammaaa >= eps && gammaab >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;

                result.d3e_dgaagaagab = 0;
                result.d3e_dgaagabgab = 0;
            }

            if (gammaaa >= eps && gammabb >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;

                result.d3e_dgaagaagbb = 0;
                result.d3e_dgaagbbgbb = 0;
            }

            if (gammaaa >= eps && gammaab >= eps && gammabb >= eps) {
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;

                result.d3e_dgaagabgbb = 0;
            }

            if (gammaab >= eps) {

                result.d3e_dgabgabgab = 0;
            }

            if (gammabb >= eps && gammaab >= eps) {
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;

                result.d3e_dgabgabgbb = 0;
                result.d3e_dgabgbbgbb = C695;
            }

            if (gammabb >= eps) {
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;
        const double C1945 = 0.0000101184 * C697;
        const double C1946 = 1.6455 * C358;
        const double C1947 = 0;
        const double C1948 = 10.1184 * C697;
        const double C1949 = C333 * C700;
        const double C1950 = C335 * C338;
        const double C1951 = C348 * C338;
        const double C1952 = C358 * C345;
        const double C1953 = C360 * C719;
        const double C1954 = C693 * C700;
        const double C1955 = C700 * C345;
        const double C1956 = C700 * C693;
        const double C1957 = C701 * C339;
        const double C1958 = C707 * C339;
        const double C1959 = 0;
        const double C1960 = 16. / 3.;
        const double C1961 = C687 / C333;
        const double C1962 = C705 / C338;
        const double C1963 = std::pow(C342, 2);
        const double C1964 = std::pow(C343, 4);
        const double C1965 = std::pow(C344, 0.72);
        const double C1966 = std::pow(C360, 2);
        const double C1967 = std::pow(C689, 2);
        const double C1968 = std::pow(C690, 2);
        const double C1969 = std::pow(C698, 2);
        const double C1970 = 0.00000372 * C1951;
        const double C1971 = 1.6455 * C1949;
        const double C1972 = C336 * C1948;
        const double C1973 = C342 * C1945;
        const double C1974 = C699 * C1950;
        const double C1975 = C1962 + C712;
        const double C1976 = C1947 - C1961;
        const double C1977 = C1946 / C689;
        const double C1978 = C1952 / C689;
        const double C1979 = C1954 / C343;
        const double C1980 = C1955 / C689;
        const double C1981 = C1956 / C343;
        const double C1982 = C1957 / C689;
        const double C1983 = C1958 / C689;
        const double C1984 = std::pow(C328, C1960);
        const double C1985 = 0.000002 * C1972;
        const double C1986 = 0.000002 * C1974;
        const double C1987 = C1975 * C360;
        const double C1988 = C1975 * C719;
        const double C1989 = C333 * C1984;
        const double C1990 = C711 * C1975;
        const double C1991 = C719 * C1975;
        const double C1992 = C1978 - C1979;
        const double C1993 = C1970 / C333;
        const double C1994 = C1971 / C343;
        const double C1995 = C1973 / C342;
        const double C1996 = C1976 / C1967;
        const double C1997 = 2 * C1987;
        const double C1998 = C1992 * C339;
        const double C1999 = C343 * C1992;
        const double C2000 = C692 * C1985;
        const double C2001 = C1996 + C1959;
        const double C2002 = C1953 - C1990;
        const double C2003 = C1977 - C1994;
        const double C2004 = C1995 - C1993;
        const double C2005 = C1986 / C333;
        const double C2006 = C2003 * C693;
        const double C2007 = C351 * C2003;
        const double C2008 = C1999 - C1982;
        const double C2009 = C2000 / C342;
        const double C2010 = C2001 / C338;
        const double C2011 = C2004 / C1968;
        const double C2012 = C2007 + C1981;
        const double C2013 = C2009 - C2005;
        const double C2014 = C2008 / C696;
        const double C2015 = C2012 * C339;
        const double C2016 = C343 * C2012;
        const double C2017 = C2013 / C1969;
        const double C2018 = C2010 + C2017;
        const double C2019 = C2016 - C1983;
        const double C2020 = C711 * C2018;
        const double C2021 = C719 * C2018;
        const double C2022 = C2019 / C696;
        const double C2023 = C2020 + C1991;
        const double C2024 = C2022 - C2014;
        const double C2025 = C2024 - C2011;
        const double C2026 = C340 * C2025;
        const double C2027 = C1975 * C2026;
        const double C2028 = C360 * C2026;
        const double C2029 = C2028 + C1988;
        const double C2030 = C2029 - C2023;

                result.d3e_dgbbgbbgbb =  - ( std::pow(C360, 4) * ( C1966 * ( C360 * C340 * ( ( C696 * ( C343 * ( C351 * ( ( ( 2 * C333 * -1.6455 * C700)  / C343 - C1946 / C333)  / C1967 - ( C343 * 1.6455 * ( C333 * C2003 + C700 / C689)  - ( 1.6455 * C1949 * C339)  / C689)  / C696)  + C2006 / C343 + ( C343 * ( C1980 + C2006)  - ( C1956 * C339)  / C689)  / C696)  + C2015 / C689 - ( 2 * C333 * C2015 - C1958 / C333)  / C1967)  - ( C2019 * C1989)  / C333)  / C1964 - ( C696 * ( C343 * ( ( ( -2 * C333 * C345 * C700)  / C343 - C1952 / C333)  / C1967 - ( C343 * ( C693 * C2003 + C1980)  - ( C1954 * C339)  / C689)  / C696)  + C1998 / C689 - ( 2 * C333 * C1998 - C1957 / C333)  / C1967)  - ( C2008 * C1989)  / C333)  / C1964 - ( C1968 * ( ( C342 * ( ( C342 * 0.000017403648 * C1965)  / C690 + ( 0.0000101184 * C697 * C338)  / C689)  - ( C1973 * C338)  / C689)  / C1963 - ( ( C333 * 0.00000372 * C338 * 2.72 * C697)  / C690 - C1970 / C689)  / gammabb)  - ( C2004 * 2 * C342 * 2 * C338)  / C333)  / std::pow(C690, 4))  + C2027 + C2027 + C2018 * C719 - ( C711 * ( ( ( C1967 * C705)  / gammabb - ( C1976 * 4 * C333)  / C333)  / ( std::pow(C689, 4) * C338)  + ( C1969 * ( ( C342 * ( ( C692 * 0.000002 * C336 * 0.17403648e2 * C1965)  / C690 + ( 0.000002 * C1972 * C1950)  / C689)  - ( C2000 * C338)  / C689)  / C1963 - ( ( C333 * 0.000002 * C1950 * C1972)  / C690 - C1986 / C689)  / gammabb)  - ( C2013 * 2 * C692 * 2 * C1950)  / C333)  / std::pow(C698, 4))  + C2021 + C2021 + C2026 * C1975) )  + 2 * C1987 * C2030 - ( C2002 * 2 * ( std::pow(C1975, 2) + C2018 * C360)  + C2030 * C1997) )  - ( C1966 * C2030 - C2002 * C1997)  * 4 * C1975 * std::pow(C360, 3))  / std::pow(C360, 8);
            }

            // Mixed third derivatives

            if (rhoa >= eps && gammaaa >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;
        const double C496 = -0.1488e2 * C135;
        const double C497 = -0.13164e2 * C142;
        const double C498 = -8. * C142;
        const double C499 = -0.03408 * C142;
        const double C500 = 0.000001 * C154;
        const double C501 = 0.00000372 * C136;
        const double C502 = 0.00426 * C109;
        const double C503 = 0.02556 * C134;
        const double C504 = 1.6455 * C109;
        const double C505 = 2 * C109;
        const double C506 = 3.72 * C136;
        const double C507 = C109 * C114;
        const double C508 = C109 * C144;
        const double C509 = C112 * C154;
        const double C510 = 0;
        const double C511 = C116 * C157;
        const double C512 = C121 * C109;
        const double C513 = C141 * C139;
        const double C514 = C144 * C111;
        const double C515 = C157 * C140;
        const double C516 = 0;
        const double C517 = std::pow(C119, 1.72);
        const double C518 = 0.000002 * C509;
        const double C519 = 2 * C507;
        const double C520 = 2.72 * C517;
        const double C521 = 3. * C514;
        const double C522 = C112 * C506;
        const double C523 = C121 * C498;
        const double C524 = C136 * C496;
        const double C525 = C149 * C497;
        const double C526 = C149 * C504;
        const double C527 = C149 * C512;
        const double C528 = C507 * C111;
        const double C529 = C499 / C151;
        const double C530 = C500 / C145;
        const double C531 = C502 / C508;
        const double C532 = C503 / C505;
        const double C533 = C513 / 3.;
        const double C534 = C515 / 3.;
        const double C535 = 0.000002 * C522;
        const double C536 = 2 * C528;
        const double C537 = C131 * C525;
        const double C538 = C131 * C526;
        const double C539 = C146 * C520;
        const double C540 = C149 * C523;
        const double C541 = C532 + C516;
        const double C542 = C510 - C533;
        const double C543 = C501 / C519;
        const double C544 = C518 / C521;
        const double C545 = C524 / C505;
        const double C546 = C527 / C508;
        const double C547 = -3.72 * C539;
        const double C548 = C535 / C536;
        const double C549 = C537 / C151;
        const double C550 = C538 / C508;
        const double C551 = C540 / C151;
        const double C552 = C541 / C114;
        const double C553 = C542 / C144;
        const double C554 = C552 + C548;
        const double C555 = C553 + C544;
        const double C556 = C546 - C550;
        const double C557 = C551 - C549;
        const double C558 = C547 / C519;
        const double C559 = C545 + C558;
        const double C560 = C529 - C557;
        const double C561 = C531 - C556;
        const double C562 = C560 - C530;
        const double C563 = C561 - C543;
        const double C564 = C116 * C562;
        const double C565 = C564 + C534;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;
        const double C1100 = -0.1488e2 * C388;
        const double C1101 = -0.13164e2 * C135;
        const double C1102 = -0.13164e2 * C398;
        const double C1103 = -10.88 * C135;
        const double C1104 = -8. * C135;
        const double C1105 = -8. * C398;
        const double C1106 = -0.03408 * C135;
        const double C1107 = -0.03408 * C398;
        const double C1108 = 0.000001 * C418;
        const double C1109 = 2.72 * C376;
        const double C1110 = C111 * C393;
        const double C1111 = C112 * C418;
        const double C1112 = 0;
        const double C1113 = C116 * C563;
        const double C1114 = C141 * C391;
        const double C1115 = C142 * C382;
        const double C1116 = C142 * C408;
        const double C1117 = C142 * C526;
        const double C1118 = C154 * C394;
        const double C1119 = C155 * C419;
        const double C1120 = C157 * C392;
        const double C1121 = C381 * C382;
        const double C1122 = C381 * C526;
        const double C1123 = C382 * C381;
        const double C1124 = C382 * C512;
        const double C1125 = C383 * C139;
        const double C1126 = C395 * C408;
        const double C1127 = C397 * C408;
        const double C1128 = C563 * C140;
        const double C1129 = 0;
        const double C1130 = C532 * C139;
        const double C1131 = 0;
        const double C1132 =  - C386;
        const double C1133 = 16. / 3.;
        const double C1134 = C417 / 3.;
        const double C1135 = C532 / C114;
        const double C1136 = std::pow(C119, 0.72);
        const double C1137 = std::pow(C145, 2);
        const double C1138 = std::pow(C155, 2);
        const double C1139 = std::pow(C379, 2);
        const double C1140 = -0.13164e2 * C1115;
        const double C1141 = -0.13164e2 * C1117;
        const double C1142 = -0.03408 * C1116;
        const double C1143 = 0.000001 * C1118;
        const double C1144 = 0.000002 * C1111;
        const double C1145 = 1.72 * C1136;
        const double C1146 = 3. * C1110;
        const double C1147 = C1132 * C393;
        const double C1148 = 0;
        const double C1149 = C121 * C1104;
        const double C1150 = C121 * C1105;
        const double C1151 = C136 * C1100;
        const double C1152 = C144 * C1108;
        const double C1153 = C146 * C1109;
        const double C1154 = C149 * C1101;
        const double C1155 = C149 * C1102;
        const double C1156 = C151 * C1107;
        const double C1157 = C376 * C1103;
        const double C1158 = C402 * C1109;
        const double C1159 = C1135 + C548;
        const double C1160 = C1106 / C151;
        const double C1161 = C1114 / 3.;
        const double C1162 = C1120 / 3.;
        const double C1163 = C1121 / C151;
        const double C1164 = C1122 / C508;
        const double C1165 = C1123 / C151;
        const double C1166 = C1124 / C508;
        const double C1167 = C1125 / C505;
        const double C1168 = C1126 / 3.;
        const double C1169 = C1127 / 3.;
        const double C1170 = C1128 / 3.;
        const double C1171 = C1129 / 3.;
        const double C1172 = C1130 / 3.;
        const double C1173 = C1132 / C144;
        const double C1174 = std::pow(C104, C1133);
        const double C1175 = -3.72 * C1153;
        const double C1176 = -3.72 * C1158;
        const double C1177 = 3. * C1152;
        const double C1178 = C146 * C1145;
        const double C1179 = C149 * C1149;
        const double C1180 = C149 * C1150;
        const double C1181 = C367 * C1146;
        const double C1182 = C371 * C1144;
        const double C1183 = C1148 + C1171;
        const double C1184 = C1161 + C1129;
        const double C1185 = C1162 + C417;
        const double C1186 = C1173 + C400;
        const double C1187 = C1112 - C1172;
        const double C1188 = C1140 / C151;
        const double C1189 = C1141 / C508;
        const double C1190 = C1142 / 3.;
        const double C1191 = C1143 / 3.;
        const double C1192 = C1147 / 3.;
        const double C1193 = C1151 / C505;
        const double C1194 = C1155 / 3.;
        const double C1195 = C1156 / 3.;
        const double C1196 = C1157 / C505;
        const double C1197 = -2.72 * C1178;
        const double C1198 = 0.000002 * C1181;
        const double C1199 = 3. * C1182;
        const double C1200 = C1186 * C155;
        const double C1201 = C1186 * C419;
        const double C1202 = C369 * C1186;
        const double C1203 = C419 * C1186;
        const double C1204 = C1154 - C1189;
        const double C1205 = C1177 - C1191;
        const double C1206 = C1179 - C1164;
        const double C1207 = C1194 - C1188;
        const double C1208 = C1195 - C1190;
        const double C1209 = C1175 / C519;
        const double C1210 = C1176 / C519;
        const double C1211 = C1180 / 3.;
        const double C1212 = C1184 / 3.;
        const double C1213 = C1185 / 3.;
        const double C1214 = C1187 / C144;
        const double C1215 = 2 * C1200;
        const double C1216 = C131 * C1204;
        const double C1217 = C131 * C1207;
        const double C1218 = C1193 + C1210;
        const double C1219 = C545 + C1209;
        const double C1220 = C1119 - C1202;
        const double C1221 = C1183 - C1212;
        const double C1222 = C1211 - C1163;
        const double C1223 = C1197 / C519;
        const double C1224 = C1198 / 3.;
        const double C1225 = C1205 / C1137;
        const double C1226 = C1206 / C151;
        const double C1227 = C1208 / C377;
        const double C1228 = 0.000001 * C1219;
        const double C1229 = C112 * C1219;
        const double C1230 = C144 * C1221;
        const double C1231 = C151 * C1222;
        const double C1232 = C1196 + C1223;
        const double C1233 = C1216 + C1166;
        const double C1234 = C1217 + C1165;
        const double C1235 = C1199 - C1224;
        const double C1236 = C1218 / 3.;
        const double C1237 = 0.000002 * C1229;
        const double C1238 = C146 * C1232;
        const double C1239 = C151 * C1234;
        const double C1240 = C1230 - C1192;
        const double C1241 = C1231 - C1169;
        const double C1242 = C1228 / C145;
        const double C1243 = C1233 / C151;
        const double C1244 = C1235 / C1139;
        const double C1245 = C1238 + C1167;
        const double C1246 = C1226 - C1243;
        const double C1247 = C1239 - C1168;
        const double C1248 = C1237 / C379;
        const double C1249 = C1240 / C1174;
        const double C1250 = C1241 / C377;
        const double C1251 = -3.72 * C1245;
        const double C1252 = C1214 + C1248;
        const double C1253 = C1249 + C1244;
        const double C1254 = C1160 - C1246;
        const double C1255 = C1247 / C377;
        const double C1256 = C369 * C1253;
        const double C1257 = C1250 - C1255;
        const double C1258 = C1254 - C1242;
        const double C1259 = C1251 / C145;
        const double C1260 = C116 * C1258;
        const double C1261 = C1258 * C140;
        const double C1262 = C1236 + C1259;
        const double C1263 = C1256 + C1203;
        const double C1264 = C1227 - C1257;
        const double C1265 = C1260 + C1170;
        const double C1266 = C1264 - C1225;
        const double C1267 = C116 * C1266;
        const double C1268 = C1267 + C1134;
        const double C1269 = C1268 + C1213;
        const double C1270 = C155 * C1269;
        const double C1271 = C1270 + C1201;
        const double C1272 = C1271 - C1263;
        const double C1528 = -0.13164e2 * C135;
        const double C1529 = -8. * C135;
        const double C1530 = -0.03408 * C135;
        const double C1531 = 0.000001 * C559;
        const double C1532 = 0.0000101184 * C517;
        const double C1533 = 1.6455 * C149;
        const double C1534 = 0;
        const double C1535 = 10.1184 * C517;
        const double C1536 = C109 * C526;
        const double C1537 = C111 * C114;
        const double C1538 = C112 * C559;
        const double C1539 = 0;
        const double C1540 = C116 * C563;
        const double C1541 = C135 * C520;
        const double C1542 = C135 * C526;
        const double C1543 = C136 * C114;
        const double C1544 = C142 * C526;
        const double C1545 = C149 * C121;
        const double C1546 = C155 * C565;
        const double C1547 = C512 * C526;
        const double C1548 = C517 * C139;
        const double C1549 = C523 * C526;
        const double C1550 = C525 * C512;
        const double C1551 = C526 * C512;
        const double C1552 = C527 * C144;
        const double C1553 = C538 * C144;
        const double C1554 = C539 * C114;
        const double C1555 = C563 * C140;
        const double C1556 = C532 * C139;
        const double C1557 = 0;
        const double C1558 =  - C533;
        const double C1559 = C503 / C109;
        const double C1560 = C524 / C109;
        const double C1561 = C532 / C114;
        const double C1562 = std::pow(C119, 0.72);
        const double C1563 = std::pow(C155, 2);
        const double C1564 = std::pow(C505, 2);
        const double C1565 = std::pow(C508, 2);
        const double C1566 = std::pow(C519, 2);
        const double C1567 = std::pow(C536, 2);
        const double C1568 = -0.1488e2 * C1541;
        const double C1569 = -0.13164e2 * C1544;
        const double C1570 = -3.72 * C1554;
        const double C1571 = 0.000002 * C1538;
        const double C1572 = 0.00000372 * C1543;
        const double C1573 = 1.6455 * C1536;
        const double C1574 = 2.72 * C1548;
        const double C1575 = 4.6784 * C1562;
        const double C1576 = C112 * C1535;
        const double C1577 = C121 * C1529;
        const double C1578 = C149 * C1528;
        const double C1579 = C507 * C1532;
        const double C1580 = C522 * C1537;
        const double C1581 = C1561 + C548;
        const double C1582 = C1534 - C1559;
        const double C1583 = C1530 / C151;
        const double C1584 = C1531 / C145;
        const double C1585 = C1533 / C505;
        const double C1586 = C1545 / C505;
        const double C1587 = C1547 / C508;
        const double C1588 = C1549 / C508;
        const double C1589 = C1550 / C508;
        const double C1590 = C1551 / C508;
        const double C1591 = C1552 / C505;
        const double C1592 = C1553 / C505;
        const double C1593 = C1555 / 3.;
        const double C1594 = C1556 / 3.;
        const double C1595 = C1558 / C144;
        const double C1596 = 0.000002 * C1576;
        const double C1597 = 0.000002 * C1580;
        const double C1598 = C109 * C1568;
        const double C1599 = C146 * C1575;
        const double C1600 = C149 * C1577;
        const double C1601 = C1577 * C526;
        const double C1602 = C1581 * C155;
        const double C1603 = C1581 * C565;
        const double C1604 = C1595 + C544;
        const double C1605 = C1539 - C1594;
        const double C1606 = C1586 - C1587;
        const double C1607 = C1569 / C508;
        const double C1608 = C1570 / C109;
        const double C1609 = C1571 / C521;
        const double C1610 = C1572 / C109;
        const double C1611 = C1573 / C508;
        const double C1612 = C1574 / C505;
        const double C1613 = C1579 / C507;
        const double C1614 = C1582 / C1564;
        const double C1615 = 2 * C1602;
        const double C1616 = C1540 * C1604;
        const double C1617 = C508 * C1606;
        const double C1618 = C511 * C1604;
        const double C1619 = C528 * C1596;
        const double C1620 = C1614 + C1557;
        const double C1621 = C1578 - C1607;
        const double C1622 = C1585 - C1611;
        const double C1623 = C1600 - C1588;
        const double C1624 = C1613 - C1610;
        const double C1625 = C1597 / C109;
        const double C1626 = C1598 / C507;
        const double C1627 = C1599 / C519;
        const double C1628 = C1605 / C144;
        const double C1629 = C131 * C1621;
        const double C1630 = C131 * C1622;
        const double C1631 = C1621 * C512;
        const double C1632 = C1627 + C1612;
        const double C1633 = C1628 + C1609;
        const double C1634 = C1546 - C1618;
        const double C1635 = C1617 - C1591;
        const double C1636 = C1626 - C1560;
        const double C1637 = C1619 / C507;
        const double C1638 = C1620 / C114;
        const double C1639 = C1623 / C151;
        const double C1640 = C1624 / C1566;
        const double C1641 = -3.72 * C1632;
        const double C1642 = C1540 * C1633;
        const double C1643 = C511 * C1633;
        const double C1644 = C1629 + C1589;
        const double C1645 = C1630 + C1590;
        const double C1646 = C1637 - C1625;
        const double C1647 = C1635 / C1565;
        const double C1648 = C1636 / C1564;
        const double C1649 = C507 * C1641;
        const double C1650 = C508 * C1645;
        const double C1651 = C1643 + C1616;
        const double C1652 = C1644 / C151;
        const double C1653 = C1646 / C1567;
        const double C1654 = 2 * C1649;
        const double C1655 = C1638 + C1653;
        const double C1656 = C1639 - C1652;
        const double C1657 = C1650 - C1592;
        const double C1658 = C1583 - C1656;
        const double C1659 = C1654 - C1608;
        const double C1660 = C1657 / C1565;
        const double C1661 = C1658 - C1584;
        const double C1662 = C1660 - C1647;
        const double C1663 = C1659 / C1566;
        const double C1664 = C116 * C1661;
        const double C1665 = C1648 + C1663;
        const double C1666 = C1662 - C1640;
        const double C1667 = C1664 + C1593;
        const double C1668 = C155 * C1667;
        const double C1669 = C1581 * C1667;
        const double C1670 = C1668 + C1603;
        const double C1671 = C1670 - C1651;

                result.d3e_draragaa =  - ( std::pow(C155, 4) * ( C1138 * ( C155 * ( C116 * ( ( ( C151 * -0.03408 * C388)  / 3. - ( -0.03408 * C135 * C408)  / 3.)  / C377 - ( ( C151 * ( ( C149 * C121 * -8. * C388 - ( C1150 * C526)  / C508)  / 3. - ( C381 * C1204 + C1149 * C382)  / C151)  - ( C1206 * C408)  / 3.)  / C377 - ( C151 * ( C131 * ( ( C149 * -0.13164e2 * C388 - ( -0.13164e2 * C398 * C526)  / C508)  / 3. - ( -0.13164e2 * ( C142 * C1204 + C135 * C382) )  / C151)  + ( C1207 * C512)  / C508 + ( C382 * C1149 + C1204 * C381)  / C151)  - ( C1233 * C408)  / 3.)  / C377)  - ( 3. * C144 * 0.000001 * C1262 - ( 0.000001 * C1219 * C394)  / 3.)  / C1137)  + C1261 / 3. + ( ( C563 * C392)  / 3. + C1261)  / 3.)  + C1159 * C1269 + C1186 * C1265 + C1252 * C419 - ( C369 * ( ( 3. * C371 * 0.000002 * C112 * C1262 - ( 0.000002 * C1229 * C1146)  / 3.)  / C1139 - ( ( C144 * C532 * C391)  / 9. + ( C1187 * C393)  / 3.)  / C1174)  + C1113 * C1253 + C419 * C1252 + C1265 * C1186) )  + 2 * C1159 * C155 * C1272 - ( C1220 * 2 * ( C1186 * C1159 + C1252 * C155)  + ( C155 * C1265 + C1159 * C419 - ( C369 * C1252 + C1113 * C1186) )  * C1215) )  - ( C1138 * C1272 - C1220 * C1215)  * 4 * C1159 * std::pow(C155, 3))  / std::pow(C155, 8);
                result.d3e_dragaagaa =  - ( std::pow(C155, 4) * ( C1563 * ( C155 * ( C116 * ( ( C1631 / C508 - C131 * ( ( -0.13164e2 * C1542)  / C508 + ( C508 * -0.13164e2 * ( C142 * C1622 + C1542)  - ( -0.13164e2 * C1544 * C144)  / C505)  / C1565)  + ( C508 * ( ( C525 * C121)  / C505 + C1631)  - ( C1550 * C144)  / C505)  / C1565)  / C151 - (  - ( C1601 / C508 + ( C508 * ( C523 * C1622 + C1601)  - ( C1549 * C144)  / C505)  / C1565) )  / C151 - ( 0.000001 * C1665)  / C145)  + ( C1666 * C140)  / 3.)  + C1669 + C1669 + C1655 * C565 - ( C511 * ( ( 0.000002 * C112 * C1665)  / C521 - ( C1620 * C139)  / ( 3. * C144) )  + C1642 + C1642 + C116 * C1666 * C1604) )  + 2 * C1602 * C1671 - ( C1634 * 2 * ( std::pow(C1581, 2) + C1655 * C155)  + C1671 * C1615) )  - ( C1563 * C1671 - C1634 * C1615)  * 4 * C1581 * std::pow(C155, 3))  / std::pow(C155, 8);
            }

            if (rhoa >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C496 = -0.1488e2 * C135;
        const double C497 = -0.13164e2 * C142;
        const double C498 = -8. * C142;
        const double C499 = -0.03408 * C142;
        const double C500 = 0.000001 * C154;
        const double C501 = 0.00000372 * C136;
        const double C502 = 0.00426 * C109;
        const double C503 = 0.02556 * C134;
        const double C504 = 1.6455 * C109;
        const double C505 = 2 * C109;
        const double C506 = 3.72 * C136;
        const double C507 = C109 * C114;
        const double C508 = C109 * C144;
        const double C509 = C112 * C154;
        const double C510 = 0;
        const double C511 = C116 * C157;
        const double C512 = C121 * C109;
        const double C513 = C141 * C139;
        const double C514 = C144 * C111;
        const double C515 = C157 * C140;
        const double C516 = 0;
        const double C517 = std::pow(C119, 1.72);
        const double C518 = 0.000002 * C509;
        const double C519 = 2 * C507;
        const double C520 = 2.72 * C517;
        const double C521 = 3. * C514;
        const double C522 = C112 * C506;
        const double C523 = C121 * C498;
        const double C524 = C136 * C496;
        const double C525 = C149 * C497;
        const double C526 = C149 * C504;
        const double C527 = C149 * C512;
        const double C528 = C507 * C111;
        const double C529 = C499 / C151;
        const double C530 = C500 / C145;
        const double C531 = C502 / C508;
        const double C532 = C503 / C505;
        const double C533 = C513 / 3.;
        const double C534 = C515 / 3.;
        const double C535 = 0.000002 * C522;
        const double C536 = 2 * C528;
        const double C537 = C131 * C525;
        const double C538 = C131 * C526;
        const double C539 = C146 * C520;
        const double C540 = C149 * C523;
        const double C541 = C532 + C516;
        const double C542 = C510 - C533;
        const double C543 = C501 / C519;
        const double C544 = C518 / C521;
        const double C545 = C524 / C505;
        const double C546 = C527 / C508;
        const double C547 = -3.72 * C539;
        const double C548 = C535 / C536;
        const double C549 = C537 / C151;
        const double C550 = C538 / C508;
        const double C551 = C540 / C151;
        const double C552 = C541 / C114;
        const double C553 = C542 / C144;
        const double C554 = C552 + C548;
        const double C555 = C553 + C544;
        const double C556 = C546 - C550;
        const double C557 = C551 - C549;
        const double C558 = C547 / C519;
        const double C559 = C545 + C558;
        const double C560 = C529 - C557;
        const double C561 = C531 - C556;
        const double C562 = C560 - C530;
        const double C563 = C561 - C543;
        const double C564 = C116 * C562;
        const double C565 = C564 + C534;
        const double C1673 = 0. * C135;
        const double C1674 = 0. * C142;
        const double C1675 = C532 / C114;
        const double C1676 = C131 * C1674;
        const double C1677 = C1675 + C548;
        const double C1678 = C116 * C1676;

                result.d3e_dragaagab =  - ( std::pow(C155, 2) * ( C155 * C116 * ( ( C131 * C1673 + ( 0. * C142 * C512)  / C508)  / C151 - C1673 / ( 2 * C109 * C145) )  + ( C1677 * C1678)  / C151 - ( C511 * 0.000002 * C112 * C1673)  / ( 2 * C109 * C521) )  - ( 2 * C1677 * C155 * C155 * C1678)  / C151)  / std::pow(C155, 4);
            }

            if (rhoa >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C496 = -0.1488e2 * C135;
        const double C497 = -0.13164e2 * C142;
        const double C498 = -8. * C142;
        const double C499 = -0.03408 * C142;
        const double C500 = 0.000001 * C154;
        const double C501 = 0.00000372 * C136;
        const double C502 = 0.00426 * C109;
        const double C503 = 0.02556 * C134;
        const double C504 = 1.6455 * C109;
        const double C505 = 2 * C109;
        const double C506 = 3.72 * C136;
        const double C507 = C109 * C114;
        const double C508 = C109 * C144;
        const double C509 = C112 * C154;
        const double C510 = 0;
        const double C511 = C116 * C157;
        const double C512 = C121 * C109;
        const double C513 = C141 * C139;
        const double C514 = C144 * C111;
        const double C515 = C157 * C140;
        const double C516 = 0;
        const double C517 = std::pow(C119, 1.72);
        const double C518 = 0.000002 * C509;
        const double C519 = 2 * C507;
        const double C520 = 2.72 * C517;
        const double C521 = 3. * C514;
        const double C522 = C112 * C506;
        const double C523 = C121 * C498;
        const double C524 = C136 * C496;
        const double C525 = C149 * C497;
        const double C526 = C149 * C504;
        const double C527 = C149 * C512;
        const double C528 = C507 * C111;
        const double C529 = C499 / C151;
        const double C530 = C500 / C145;
        const double C531 = C502 / C508;
        const double C532 = C503 / C505;
        const double C533 = C513 / 3.;
        const double C534 = C515 / 3.;
        const double C535 = 0.000002 * C522;
        const double C536 = 2 * C528;
        const double C537 = C131 * C525;
        const double C538 = C131 * C526;
        const double C539 = C146 * C520;
        const double C540 = C149 * C523;
        const double C541 = C532 + C516;
        const double C542 = C510 - C533;
        const double C543 = C501 / C519;
        const double C544 = C518 / C521;
        const double C545 = C524 / C505;
        const double C546 = C527 / C508;
        const double C547 = -3.72 * C539;
        const double C548 = C535 / C536;
        const double C549 = C537 / C151;
        const double C550 = C538 / C508;
        const double C551 = C540 / C151;
        const double C552 = C541 / C114;
        const double C553 = C542 / C144;
        const double C554 = C552 + C548;
        const double C555 = C553 + C544;
        const double C556 = C546 - C550;
        const double C557 = C551 - C549;
        const double C558 = C547 / C519;
        const double C559 = C545 + C558;
        const double C560 = C529 - C557;
        const double C561 = C531 - C556;
        const double C562 = C560 - C530;
        const double C563 = C561 - C543;
        const double C564 = C116 * C562;
        const double C565 = C564 + C534;
        const double C1680 = 0. * C135;
        const double C1681 = 0. * C142;
        const double C1682 = C532 / C114;
        const double C1683 = C131 * C1681;
        const double C1684 = C1682 + C548;
        const double C1685 = C116 * C1683;

                result.d3e_dragaagbb =  - ( std::pow(C155, 2) * ( C155 * C116 * ( ( C131 * C1680 + ( 0. * C142 * C512)  / C508)  / C151 - C1680 / ( 2 * C109 * C145) )  + ( C1684 * C1685)  / C151 - ( C511 * 0.000002 * C112 * C1680)  / ( 2 * C109 * C521) )  - ( 2 * C1684 * C155 * C155 * C1685)  / C151)  / std::pow(C155, 4);
            }

            if (rhoa >= eps && rhob >= eps && gammaaa >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C421 = 0.000001 * C125;
        const double C422 = 0.00426 * C124;
        const double C423 = 0.02556 * C110;
        const double C424 = 1.6455 * C124;
        const double C425 = C121 * C124;
        const double C426 = C125 * C112;
        const double C427 = std::asinh(C120);
        const double C428 = std::pow(C105, C107);
        const double C429 = std::pow(C105, C133);
        const double C430 = 0.000002 * C426;
        const double C431 = C427 * C423;
        const double C432 = C430 / C111;
        const double C433 = C431 / C115;
        const double C434 = C433 + C432;
        const double C435 = C434 + 1;
        const double C496 = -0.1488e2 * C135;
        const double C497 = -0.13164e2 * C142;
        const double C498 = -8. * C142;
        const double C499 = -0.03408 * C142;
        const double C500 = 0.000001 * C154;
        const double C501 = 0.00000372 * C136;
        const double C502 = 0.00426 * C109;
        const double C503 = 0.02556 * C134;
        const double C504 = 1.6455 * C109;
        const double C505 = 2 * C109;
        const double C506 = 3.72 * C136;
        const double C507 = C109 * C114;
        const double C508 = C109 * C144;
        const double C509 = C112 * C154;
        const double C510 = 0;
        const double C511 = C116 * C157;
        const double C512 = C121 * C109;
        const double C513 = C141 * C139;
        const double C514 = C144 * C111;
        const double C515 = C157 * C140;
        const double C516 = 0;
        const double C517 = std::pow(C119, 1.72);
        const double C518 = 0.000002 * C509;
        const double C519 = 2 * C507;
        const double C520 = 2.72 * C517;
        const double C521 = 3. * C514;
        const double C522 = C112 * C506;
        const double C523 = C121 * C498;
        const double C524 = C136 * C496;
        const double C525 = C149 * C497;
        const double C526 = C149 * C504;
        const double C527 = C149 * C512;
        const double C528 = C507 * C111;
        const double C529 = C499 / C151;
        const double C530 = C500 / C145;
        const double C531 = C502 / C508;
        const double C532 = C503 / C505;
        const double C533 = C513 / 3.;
        const double C534 = C515 / 3.;
        const double C535 = 0.000002 * C522;
        const double C536 = 2 * C528;
        const double C537 = C131 * C525;
        const double C538 = C131 * C526;
        const double C539 = C146 * C520;
        const double C540 = C149 * C523;
        const double C541 = C532 + C516;
        const double C542 = C510 - C533;
        const double C543 = C501 / C519;
        const double C544 = C518 / C521;
        const double C545 = C524 / C505;
        const double C546 = C527 / C508;
        const double C547 = -3.72 * C539;
        const double C548 = C535 / C536;
        const double C549 = C537 / C151;
        const double C550 = C538 / C508;
        const double C551 = C540 / C151;
        const double C552 = C541 / C114;
        const double C553 = C542 / C144;
        const double C554 = C552 + C548;
        const double C555 = C553 + C544;
        const double C556 = C546 - C550;
        const double C557 = C551 - C549;
        const double C558 = C547 / C519;
        const double C559 = C545 + C558;
        const double C560 = C529 - C557;
        const double C561 = C531 - C556;
        const double C562 = C560 - C530;
        const double C563 = C561 - C543;
        const double C564 = C116 * C562;
        const double C565 = C564 + C534;

                result.d3e_drarbgaa =  - ( C435 * C117 * 0. * C428 * gammabb)  / ( C115 * 3. * C429 * std::pow(C435, 2)) ;
            }

            if (rhoa >= eps && rhob >= eps && gammaab >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C421 = 0.000001 * C125;
        const double C422 = 0.00426 * C124;
        const double C423 = 0.02556 * C110;
        const double C424 = 1.6455 * C124;
        const double C425 = C121 * C124;
        const double C426 = C125 * C112;
        const double C427 = std::asinh(C120);
        const double C428 = std::pow(C105, C107);
        const double C429 = std::pow(C105, C133);
        const double C430 = 0.000002 * C426;
        const double C431 = C427 * C423;
        const double C432 = C430 / C111;
        const double C433 = C431 / C115;
        const double C434 = C433 + C432;
        const double C435 = C434 + 1;

                result.d3e_drarbgab =  - ( C435 * C117 * 0. * C428 * gammabb)  / ( C115 * 3. * C429 * std::pow(C435, 2)) ;
            }

            if (rhoa >= eps && rhob >= eps && gammabb >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C421 = 0.000001 * C125;
        const double C422 = 0.00426 * C124;
        const double C423 = 0.02556 * C110;
        const double C424 = 1.6455 * C124;
        const double C425 = C121 * C124;
        const double C426 = C125 * C112;
        const double C427 = std::asinh(C120);
        const double C428 = std::pow(C105, C107);
        const double C429 = std::pow(C105, C133);
        const double C430 = 0.000002 * C426;
        const double C431 = C427 * C423;
        const double C432 = C430 / C111;
        const double C433 = C431 / C115;
        const double C434 = C433 + C432;
        const double C435 = C434 + 1;
        const double C571 = -0.1488e2 * C167;
        const double C572 = -0.13164e2 * C174;
        const double C573 = -8. * C174;
        const double C574 = -0.03408 * C174;
        const double C575 = 0.000001 * C186;
        const double C576 = 0.00000372 * C168;
        const double C577 = 0.00426 * C85;
        const double C578 = 0.02556 * C166;
        const double C579 = 1.6455 * C85;
        const double C580 = 2 * C85;
        const double C581 = 3.72 * C168;
        const double C582 = C173 * C171;
        const double C583 = C176 * C86;
        const double C584 = C189 * C172;
        const double C585 = C85 * C176;
        const double C586 = C85 * C90;
        const double C587 = C87 * C186;
        const double C588 = 0;
        const double C589 = C92 * C189;
        const double C590 = C96 * C85;
        const double C591 = 0;
        const double C592 = std::pow(C95, 1.72);
        const double C593 = 0.000002 * C587;
        const double C594 = 2 * C586;
        const double C595 = 2.72 * C592;
        const double C596 = 3. * C583;
        const double C597 = C168 * C571;
        const double C598 = C181 * C572;
        const double C599 = C181 * C579;
        const double C600 = C181 * C590;
        const double C601 = C586 * C86;
        const double C602 = C87 * C581;
        const double C603 = C96 * C573;
        const double C604 = C574 / C184;
        const double C605 = C575 / C177;
        const double C606 = C577 / C585;
        const double C607 = C578 / C580;
        const double C608 = C582 / 3.;
        const double C609 = C584 / 3.;
        const double C610 = 0.000002 * C602;
        const double C611 = 2 * C601;
        const double C612 = C164 * C598;
        const double C613 = C164 * C599;
        const double C614 = C178 * C595;
        const double C615 = C181 * C603;
        const double C616 = C607 + C591;
        const double C617 = C588 - C608;
        const double C618 = C576 / C594;
        const double C619 = C593 / C596;
        const double C620 = C597 / C580;
        const double C621 = C600 / C585;
        const double C622 = -3.72 * C614;
        const double C623 = C610 / C611;
        const double C624 = C612 / C184;
        const double C625 = C613 / C585;
        const double C626 = C615 / C184;
        const double C627 = C616 / C90;
        const double C628 = C617 / C176;
        const double C629 = C627 + C623;
        const double C630 = C628 + C619;
        const double C631 = C621 - C625;
        const double C632 = C626 - C624;
        const double C633 = C622 / C594;
        const double C634 = C620 + C633;
        const double C635 = C604 - C632;
        const double C636 = C606 - C631;
        const double C637 = C635 - C605;
        const double C638 = C636 - C618;
        const double C639 = C92 * C637;
        const double C640 = C639 + C609;
        const double C1304 = 0.02556 * C427;
        const double C1305 = 2 * C110;
        const double C1306 = 3. * C429;
        const double C1307 = C110 * C115;
        const double C1308 = C428 * gammabb;
        const double C1309 = 0;
        const double C1310 = std::pow(C120, 2.72);
        const double C1311 = 0. * C1308;
        const double C1312 = 3.72 * C1310;
        const double C1313 = C115 * C1306;
        const double C1314 = C1307 * C111;
        const double C1315 = C1304 / C1305;
        const double C1316 = 2 * C1314;
        const double C1317 = C112 * C1312;
        const double C1318 = C425 * C1311;
        const double C1319 = C1315 + C1309;
        const double C1320 = 0.000002 * C1317;
        const double C1321 = C117 * C1318;
        const double C1322 = C1319 / C115;
        const double C1323 = C1320 / C1316;
        const double C1324 = C1322 + C1323;

                result.d3e_drarbgbb =  - ( ( std::pow(C435, 2) * ( C435 * C117 * ( C425 * 0. * C428 + ( 0. * C1308 * C121 * C110)  / ( C110 * C429) )  + C1324 * C1321) )  / C1313 - ( 2 * C1324 * C435 * C435 * C1321)  / C1313)  / std::pow(C435, 4);
            }

            if (rhoa >= eps && gammaab >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;
        const double C1274 = 0. * C142;
        const double C1275 = 3. * C151;
        const double C1276 =  - C386;
        const double C1277 = 0;
        const double C1278 = C131 * C1274;
        const double C1279 = C1276 / C144;
        const double C1280 = C116 * C1278;
        const double C1281 = C137 * C1278;
        const double C1282 = C1279 + C400;
        const double C1283 = 4. * C1281;
        const double C1284 = C1282 * C1280;
        const double C1285 = C1283 / C1275;
        const double C1286 = C1284 / C151;

                result.d3e_draragab =  - ( std::pow(C155, 2) * ( C155 * ( C116 * ( ( C151 * ( C131 * ( ( 0. * C398)  / 3. - ( 0. * std::pow(C142, 2))  / C151)  + ( 0. * C142 * C381)  / C151)  - ( C1278 * C408)  / 3.)  / C377 - (  - ( C151 * C381 * C1274)  / C151)  / C377)  + C1285 + C1285)  + C1286 + C1277 - ( C1277 + C1286) )  - ( 2 * C1282 * C155 * C155 * C1280)  / C151)  / std::pow(C155, 4);
                result.d3e_dragabgab =  - ( C155 * C116 * 0. * C142)  / ( C151 * std::pow(C155, 2)) ;
            }

            if (rhoa >= eps && gammabb >= eps) {
        const double C102 = 4 * Pi;
        const double C103 = 36. * Pi;
        const double C104 = rhoa + 1e-16;
        const double C105 = rhob + 1e-16;
        const double C106 = -5. / 3.;
        const double C107 = 1. / 3.;
        const double C108 = 4. / 3.;
        const double C109 = std::sqrt(gammaaa);
        const double C110 = std::sqrt(gammabb);
        const double C111 = std::pow(3., C108);
        const double C112 = std::pow(C102, C107);
        const double C113 = std::pow(C103, C106);
        const double C114 = std::pow(C104, C108);
        const double C115 = std::pow(C105, C108);
        const double C116 = std::pow(rhoa, C108);
        const double C117 = std::pow(rhob, C108);
        const double C118 = 5. * C113;
        const double C119 = C109 / C114;
        const double C120 = C110 / C115;
        const double C121 = 0.00426 - C118;
        const double C122 = std::pow(C119, 2);
        const double C123 = std::pow(C119, 3.72);
        const double C124 = std::pow(C120, 2);
        const double C125 = std::pow(C120, 3.72);
        const double C127 = 0.000001 * C123;
        const double C128 = 0.00426 * C122;
        const double C129 = 0.02556 * C109;
        const double C130 = 1.6455 * C122;
        const double C131 = C121 * C122;
        const double C132 = C123 * C112;
        const double C133 = 8. / 3.;
        const double C134 = std::asinh(C119);
        const double C135 = std::pow(C104, C107);
        const double C136 = std::pow(C119, 2.72);
        const double C137 = std::pow(rhoa, C107);
        const double C138 = 0.000002 * C132;
        const double C139 = 4. * C135;
        const double C140 = 4. * C137;
        const double C141 = C134 * C129;
        const double C142 = C135 * gammaaa;
        const double C143 =  - C130;
        const double C144 = std::pow(C104, C133);
        const double C145 = 3. * C144;
        const double C146 = C109 * C139;
        const double C147 = C138 / C111;
        const double C148 = C141 / C114;
        const double C149 = std::exp(C143);
        const double C150 = -3.72 * C146;
        const double C151 = C114 * C145;
        const double C152 = C131 * C149;
        const double C153 = C148 + C147;
        const double C154 = C136 * C150;
        const double C155 = C153 + 1;
        const double C156 = C128 - C152;
        const double C157 = C156 - C127;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C362 = -0.13164e2 * C142;
        const double C363 = -8. * C142;
        const double C364 = -2.72 * C146;
        const double C365 = -0.03408 * C142;
        const double C366 = 0.000001 * C154;
        const double C367 = C112 * C154;
        const double C368 = 0;
        const double C369 = C116 * C157;
        const double C370 = C141 * C139;
        const double C371 = C144 * C111;
        const double C372 = C144 * C139;
        const double C373 = C157 * C140;
        const double C374 = -2. / 3.;
        const double C375 = 5. / 3.;
        const double C376 = std::pow(C119, 1.72);
        const double C377 = std::pow(C151, 2);
        const double C378 = 0.000002 * C367;
        const double C379 = 3. * C371;
        const double C380 = 3. * C372;
        const double C381 = C121 * C363;
        const double C382 = C149 * C362;
        const double C383 = C376 * C364;
        const double C384 = C365 / C151;
        const double C385 = C366 / C145;
        const double C386 = C370 / 3.;
        const double C387 = C373 / 3.;
        const double C388 = std::pow(C104, C374);
        const double C389 = std::pow(C104, C375);
        const double C390 = std::pow(rhoa, C374);
        const double C391 = 4. * C388;
        const double C392 = 4. * C390;
        const double C393 = 8. * C389;
        const double C394 = 24. * C389;
        const double C395 = C131 * C382;
        const double C396 = C146 * C383;
        const double C397 = C149 * C381;
        const double C398 = gammaaa * C388;
        const double C399 = C368 - C386;
        const double C400 = C378 / C379;
        const double C401 = -3.72 * C396;
        const double C402 = C109 * C391;
        const double C403 = C114 * C394;
        const double C404 = C395 / C151;
        const double C405 = C397 / C151;
        const double C406 = C399 / C144;
        const double C407 = -3.72 * C402;
        const double C408 = C403 + C380;
        const double C409 = C406 + C400;
        const double C410 = C405 - C404;
        const double C411 = C401 / C145;
        const double C412 = C136 * C407;
        const double C413 = C384 - C410;
        const double C414 = C413 - C385;
        const double C415 = C412 / 3.;
        const double C416 = C116 * C414;
        const double C417 = C414 * C140;
        const double C418 = C415 + C411;
        const double C419 = C416 + C387;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;
        const double C1288 = 0. * C142;
        const double C1289 = 3. * C151;
        const double C1290 =  - C386;
        const double C1291 = 0;
        const double C1292 = C131 * C1288;
        const double C1293 = C1290 / C144;
        const double C1294 = C116 * C1292;
        const double C1295 = C137 * C1292;
        const double C1296 = C1293 + C400;
        const double C1297 = 4. * C1295;
        const double C1298 = C1296 * C1294;
        const double C1299 = C1297 / C1289;
        const double C1300 = C1298 / C151;

                result.d3e_draragbb =  - ( std::pow(C155, 2) * ( C155 * ( C116 * ( ( C151 * ( C131 * ( ( 0. * C398)  / 3. - ( 0. * std::pow(C142, 2))  / C151)  + ( 0. * C142 * C381)  / C151)  - ( C1292 * C408)  / 3.)  / C377 - (  - ( C151 * C381 * C1288)  / C151)  / C377)  + C1299 + C1299)  + C1300 + C1291 - ( C1291 + C1300) )  - ( 2 * C1296 * C155 * C155 * C1294)  / C151)  / std::pow(C155, 4);
                result.d3e_dragbbgbb =  - ( C155 * C116 * 0. * C142)  / ( C151 * std::pow(C155, 2)) ;
            }

            if (rhob >= eps && gammaaa >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;
        const double C642 = 0.000001 * C312;
        const double C643 = 0.00000372 * C311;
        const double C644 = 0.00426 * C296;
        const double C645 = 0.00426 * C310;
        const double C646 = 0.02556 * C309;
        const double C647 = 1.6455 * C296;
        const double C648 = 2 * C296;
        const double C649 = 2 * C305;
        const double C650 = 3.72 * C311;
        const double C651 = C305 * C298;
        const double C652 = C308 * C296;
        const double C653 = C314 * C321;
        const double C654 = 0;
        const double C655 = std::pow(C306, 2);
        const double C656 = std::pow(C307, 1.72);
        const double C657 = 2 * C651;
        const double C658 = C299 * C650;
        const double C659 = C321 * C647;
        const double C660 = C321 * C652;
        const double C661 = C645 - C653;
        const double C662 = C643 / C649;
        const double C663 = C644 / C306;
        const double C664 = C646 / C648;
        const double C665 = 0.000002 * C658;
        const double C666 = C314 * C659;
        const double C667 = C664 + C654;
        const double C668 = C661 - C642;
        const double C669 = C660 / C306;
        const double C670 = C303 * C668;
        const double C671 = C665 / C657;
        const double C672 = C666 / C306;
        const double C673 = C667 / C301;
        const double C674 = C673 + C671;
        const double C675 = C669 - C672;
        const double C676 = C663 - C675;
        const double C677 = C676 - C662;
        const double C678 = C303 * C677;
        const double C1326 = 0. * C174;
        const double C1327 = 3. * C184;
        const double C1328 =  - C461;
        const double C1329 = 0;
        const double C1330 = C164 * C1326;
        const double C1331 = C1328 / C176;
        const double C1332 = C169 * C1330;
        const double C1333 = C92 * C1330;
        const double C1334 = C1331 + C475;
        const double C1335 = 4. * C1332;
        const double C1336 = C1334 * C1333;
        const double C1337 = C1335 / C1327;
        const double C1338 = C1336 / C184;

                result.d3e_drbrbgaa =  - ( std::pow(C187, 2) * ( C187 * ( C92 * ( ( C184 * ( C164 * ( ( 0. * C473)  / 3. - ( 0. * std::pow(C174, 2))  / C184)  + ( 0. * C174 * C458)  / C184)  - ( C1330 * C483)  / 3.)  / C451 - (  - ( C184 * C458 * C1326)  / C184)  / C451)  + C1337 + C1337)  + C1338 + C1329 - ( C1329 + C1338) )  - ( 2 * C1334 * C187 * C187 * C1333)  / C184)  / std::pow(C187, 4);
                result.d3e_drbgaagaa =  - ( C187 * C92 * 0. * C174)  / ( C184 * std::pow(C187, 2)) ;
            }

            if (rhob >= eps && gammaab >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;
        const double C1340 = 0. * C174;
        const double C1341 = 3. * C184;
        const double C1342 =  - C461;
        const double C1343 = 0;
        const double C1344 = C164 * C1340;
        const double C1345 = C1342 / C176;
        const double C1346 = C169 * C1344;
        const double C1347 = C92 * C1344;
        const double C1348 = C1345 + C475;
        const double C1349 = 4. * C1346;
        const double C1350 = C1348 * C1347;
        const double C1351 = C1349 / C1341;
        const double C1352 = C1350 / C184;

                result.d3e_drbrbgab =  - ( std::pow(C187, 2) * ( C187 * ( C92 * ( ( C184 * ( C164 * ( ( 0. * C473)  / 3. - ( 0. * std::pow(C174, 2))  / C184)  + ( 0. * C174 * C458)  / C184)  - ( C1344 * C483)  / 3.)  / C451 - (  - ( C184 * C458 * C1340)  / C184)  / C451)  + C1351 + C1351)  + C1352 + C1343 - ( C1343 + C1352) )  - ( 2 * C1348 * C187 * C187 * C1347)  / C184)  / std::pow(C187, 4);
                result.d3e_drbgabgab =  - ( C187 * C92 * 0. * C174)  / ( C184 * std::pow(C187, 2)) ;
            }

            if (rhob >= eps && gammabb >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C437 = -0.13164e2 * C174;
        const double C438 = -8. * C174;
        const double C439 = -2.72 * C178;
        const double C440 = -0.03408 * C174;
        const double C441 = 0.000001 * C186;
        const double C442 = C173 * C171;
        const double C443 = C176 * C171;
        const double C444 = C176 * C86;
        const double C445 = C189 * C172;
        const double C446 = C87 * C186;
        const double C447 = 0;
        const double C448 = C92 * C189;
        const double C449 = -2. / 3.;
        const double C450 = 5. / 3.;
        const double C451 = std::pow(C184, 2);
        const double C452 = std::pow(C95, 1.72);
        const double C453 = 0.000002 * C446;
        const double C454 = 3. * C443;
        const double C455 = 3. * C444;
        const double C456 = C181 * C437;
        const double C457 = C452 * C439;
        const double C458 = C96 * C438;
        const double C459 = C440 / C184;
        const double C460 = C441 / C177;
        const double C461 = C442 / 3.;
        const double C462 = C445 / 3.;
        const double C463 = std::pow(C80, C449);
        const double C464 = std::pow(C80, C450);
        const double C465 = std::pow(rhob, C449);
        const double C466 = 4. * C463;
        const double C467 = 4. * C465;
        const double C468 = 8. * C464;
        const double C469 = 24. * C464;
        const double C470 = C164 * C456;
        const double C471 = C178 * C457;
        const double C472 = C181 * C458;
        const double C473 = gammabb * C463;
        const double C474 = C447 - C461;
        const double C475 = C453 / C455;
        const double C476 = -3.72 * C471;
        const double C477 = C85 * C466;
        const double C478 = C90 * C469;
        const double C479 = C470 / C184;
        const double C480 = C472 / C184;
        const double C481 = C474 / C176;
        const double C482 = -3.72 * C477;
        const double C483 = C478 + C454;
        const double C484 = C481 + C475;
        const double C485 = C480 - C479;
        const double C486 = C476 / C177;
        const double C487 = C168 * C482;
        const double C488 = C459 - C485;
        const double C489 = C488 - C460;
        const double C490 = C487 / 3.;
        const double C491 = C489 * C172;
        const double C492 = C92 * C489;
        const double C493 = C490 + C486;
        const double C494 = C492 + C462;
        const double C571 = -0.1488e2 * C167;
        const double C572 = -0.13164e2 * C174;
        const double C573 = -8. * C174;
        const double C574 = -0.03408 * C174;
        const double C575 = 0.000001 * C186;
        const double C576 = 0.00000372 * C168;
        const double C577 = 0.00426 * C85;
        const double C578 = 0.02556 * C166;
        const double C579 = 1.6455 * C85;
        const double C580 = 2 * C85;
        const double C581 = 3.72 * C168;
        const double C582 = C173 * C171;
        const double C583 = C176 * C86;
        const double C584 = C189 * C172;
        const double C585 = C85 * C176;
        const double C586 = C85 * C90;
        const double C587 = C87 * C186;
        const double C588 = 0;
        const double C589 = C92 * C189;
        const double C590 = C96 * C85;
        const double C591 = 0;
        const double C592 = std::pow(C95, 1.72);
        const double C593 = 0.000002 * C587;
        const double C594 = 2 * C586;
        const double C595 = 2.72 * C592;
        const double C596 = 3. * C583;
        const double C597 = C168 * C571;
        const double C598 = C181 * C572;
        const double C599 = C181 * C579;
        const double C600 = C181 * C590;
        const double C601 = C586 * C86;
        const double C602 = C87 * C581;
        const double C603 = C96 * C573;
        const double C604 = C574 / C184;
        const double C605 = C575 / C177;
        const double C606 = C577 / C585;
        const double C607 = C578 / C580;
        const double C608 = C582 / 3.;
        const double C609 = C584 / 3.;
        const double C610 = 0.000002 * C602;
        const double C611 = 2 * C601;
        const double C612 = C164 * C598;
        const double C613 = C164 * C599;
        const double C614 = C178 * C595;
        const double C615 = C181 * C603;
        const double C616 = C607 + C591;
        const double C617 = C588 - C608;
        const double C618 = C576 / C594;
        const double C619 = C593 / C596;
        const double C620 = C597 / C580;
        const double C621 = C600 / C585;
        const double C622 = -3.72 * C614;
        const double C623 = C610 / C611;
        const double C624 = C612 / C184;
        const double C625 = C613 / C585;
        const double C626 = C615 / C184;
        const double C627 = C616 / C90;
        const double C628 = C617 / C176;
        const double C629 = C627 + C623;
        const double C630 = C628 + C619;
        const double C631 = C621 - C625;
        const double C632 = C626 - C624;
        const double C633 = C622 / C594;
        const double C634 = C620 + C633;
        const double C635 = C604 - C632;
        const double C636 = C606 - C631;
        const double C637 = C635 - C605;
        const double C638 = C636 - C618;
        const double C639 = C92 * C637;
        const double C640 = C639 + C609;
        const double C683 = 0.000001 * C349;
        const double C684 = 0.00000372 * C348;
        const double C685 = 0.00426 * C333;
        const double C686 = 0.00426 * C347;
        const double C687 = 0.02556 * C346;
        const double C688 = 1.6455 * C333;
        const double C689 = 2 * C333;
        const double C690 = 2 * C342;
        const double C691 = 3.72 * C348;
        const double C692 = C342 * C335;
        const double C693 = C345 * C333;
        const double C694 = C351 * C358;
        const double C695 = 0;
        const double C696 = std::pow(C343, 2);
        const double C697 = std::pow(C344, 1.72);
        const double C698 = 2 * C692;
        const double C699 = C336 * C691;
        const double C700 = C358 * C688;
        const double C701 = C358 * C693;
        const double C702 = C686 - C694;
        const double C703 = C684 / C690;
        const double C704 = C685 / C343;
        const double C705 = C687 / C689;
        const double C706 = 0.000002 * C699;
        const double C707 = C351 * C700;
        const double C708 = C705 + C695;
        const double C709 = C702 - C683;
        const double C710 = C701 / C343;
        const double C711 = C340 * C709;
        const double C712 = C706 / C698;
        const double C713 = C707 / C343;
        const double C714 = C708 / C338;
        const double C715 = C714 + C712;
        const double C716 = C710 - C713;
        const double C717 = C704 - C716;
        const double C718 = C717 - C703;
        const double C719 = C340 * C718;
        const double C1354 = -0.1488e2 * C463;
        const double C1355 = -0.13164e2 * C167;
        const double C1356 = -0.13164e2 * C473;
        const double C1357 = -10.88 * C167;
        const double C1358 = -8. * C167;
        const double C1359 = -8. * C473;
        const double C1360 = -0.03408 * C167;
        const double C1361 = -0.03408 * C473;
        const double C1362 = 0.000001 * C493;
        const double C1363 = 2.72 * C452;
        const double C1364 = C173 * C466;
        const double C1365 = C174 * C456;
        const double C1366 = C174 * C483;
        const double C1367 = C174 * C599;
        const double C1368 = C186 * C469;
        const double C1369 = C187 * C494;
        const double C1370 = C189 * C467;
        const double C1371 = C456 * C458;
        const double C1372 = C456 * C590;
        const double C1373 = C457 * C171;
        const double C1374 = C458 * C456;
        const double C1375 = C458 * C599;
        const double C1376 = C470 * C483;
        const double C1377 = C472 * C483;
        const double C1378 = C638 * C172;
        const double C1379 = C86 * C468;
        const double C1380 = C87 * C493;
        const double C1381 = 0;
        const double C1382 = C92 * C638;
        const double C1383 = 0;
        const double C1384 = C607 * C171;
        const double C1385 = 0;
        const double C1386 =  - C461;
        const double C1387 = 16. / 3.;
        const double C1388 = C491 / 3.;
        const double C1389 = C607 / C90;
        const double C1390 = std::pow(C177, 2);
        const double C1391 = std::pow(C187, 2);
        const double C1392 = std::pow(C455, 2);
        const double C1393 = std::pow(C95, 0.72);
        const double C1394 = -0.13164e2 * C1365;
        const double C1395 = -0.13164e2 * C1367;
        const double C1396 = -0.03408 * C1366;
        const double C1397 = 0.000001 * C1368;
        const double C1398 = 0.000002 * C1380;
        const double C1399 = 1.72 * C1393;
        const double C1400 = 3. * C1379;
        const double C1401 = C1386 * C468;
        const double C1402 = C168 * C1354;
        const double C1403 = C176 * C1362;
        const double C1404 = C178 * C1363;
        const double C1405 = C181 * C1355;
        const double C1406 = C181 * C1356;
        const double C1407 = C184 * C1361;
        const double C1408 = C452 * C1357;
        const double C1409 = C477 * C1363;
        const double C1410 = 0;
        const double C1411 = C96 * C1358;
        const double C1412 = C96 * C1359;
        const double C1413 = C1389 + C623;
        const double C1414 = C1360 / C184;
        const double C1415 = C1364 / 3.;
        const double C1416 = C1370 / 3.;
        const double C1417 = C1371 / C184;
        const double C1418 = C1372 / C585;
        const double C1419 = C1373 / C580;
        const double C1420 = C1374 / C184;
        const double C1421 = C1375 / C585;
        const double C1422 = C1376 / 3.;
        const double C1423 = C1377 / 3.;
        const double C1424 = C1378 / 3.;
        const double C1425 = C1383 / 3.;
        const double C1426 = C1384 / 3.;
        const double C1427 = C1386 / C176;
        const double C1428 = std::pow(C80, C1387);
        const double C1429 = -3.72 * C1404;
        const double C1430 = -3.72 * C1409;
        const double C1431 = 3. * C1403;
        const double C1432 = C178 * C1399;
        const double C1433 = C181 * C1411;
        const double C1434 = C181 * C1412;
        const double C1435 = C444 * C1398;
        const double C1436 = C446 * C1400;
        const double C1437 = C1410 + C1425;
        const double C1438 = C1415 + C1383;
        const double C1439 = C1416 + C491;
        const double C1440 = C1427 + C475;
        const double C1441 = C1381 - C1426;
        const double C1442 = C1394 / C184;
        const double C1443 = C1395 / C585;
        const double C1444 = C1396 / 3.;
        const double C1445 = C1397 / 3.;
        const double C1446 = C1401 / 3.;
        const double C1447 = C1402 / C580;
        const double C1448 = C1406 / 3.;
        const double C1449 = C1407 / 3.;
        const double C1450 = C1408 / C580;
        const double C1451 = -2.72 * C1432;
        const double C1452 = 0.000002 * C1436;
        const double C1453 = 3. * C1435;
        const double C1454 = C1440 * C187;
        const double C1455 = C1440 * C494;
        const double C1456 = C448 * C1440;
        const double C1457 = C494 * C1440;
        const double C1458 = C1405 - C1443;
        const double C1459 = C1431 - C1445;
        const double C1460 = C1433 - C1421;
        const double C1461 = C1448 - C1442;
        const double C1462 = C1449 - C1444;
        const double C1463 = C1429 / C594;
        const double C1464 = C1430 / C594;
        const double C1465 = C1434 / 3.;
        const double C1466 = C1438 / 3.;
        const double C1467 = C1439 / 3.;
        const double C1468 = C1441 / C176;
        const double C1469 = 2 * C1454;
        const double C1470 = C164 * C1458;
        const double C1471 = C164 * C1461;
        const double C1472 = C1447 + C1464;
        const double C1473 = C620 + C1463;
        const double C1474 = C1369 - C1456;
        const double C1475 = C1437 - C1466;
        const double C1476 = C1465 - C1420;
        const double C1477 = C1451 / C594;
        const double C1478 = C1452 / 3.;
        const double C1479 = C1459 / C1390;
        const double C1480 = C1460 / C184;
        const double C1481 = C1462 / C451;
        const double C1482 = 0.000001 * C1473;
        const double C1483 = C176 * C1475;
        const double C1484 = C184 * C1476;
        const double C1485 = C87 * C1473;
        const double C1486 = C1450 + C1477;
        const double C1487 = C1470 + C1418;
        const double C1488 = C1471 + C1417;
        const double C1489 = C1453 - C1478;
        const double C1490 = C1472 / 3.;
        const double C1491 = 0.000002 * C1485;
        const double C1492 = C178 * C1486;
        const double C1493 = C184 * C1488;
        const double C1494 = C1483 - C1446;
        const double C1495 = C1484 - C1423;
        const double C1496 = C1482 / C177;
        const double C1497 = C1487 / C184;
        const double C1498 = C1489 / C1392;
        const double C1499 = C1492 + C1419;
        const double C1500 = C1480 - C1497;
        const double C1501 = C1493 - C1422;
        const double C1502 = C1491 / C455;
        const double C1503 = C1494 / C1428;
        const double C1504 = C1495 / C451;
        const double C1505 = -3.72 * C1499;
        const double C1506 = C1468 + C1502;
        const double C1507 = C1503 + C1498;
        const double C1508 = C1414 - C1500;
        const double C1509 = C1501 / C451;
        const double C1510 = C448 * C1507;
        const double C1511 = C1504 - C1509;
        const double C1512 = C1508 - C1496;
        const double C1513 = C1505 / C177;
        const double C1514 = C1512 * C172;
        const double C1515 = C92 * C1512;
        const double C1516 = C1490 + C1513;
        const double C1517 = C1510 + C1457;
        const double C1518 = C1481 - C1511;
        const double C1519 = C1515 + C1424;
        const double C1520 = C1518 - C1479;
        const double C1521 = C92 * C1520;
        const double C1522 = C1521 + C1388;
        const double C1523 = C1522 + C1467;
        const double C1524 = C187 * C1523;
        const double C1525 = C1524 + C1455;
        const double C1526 = C1525 - C1517;
        const double C1705 = -0.13164e2 * C167;
        const double C1706 = -8. * C167;
        const double C1707 = -0.03408 * C167;
        const double C1708 = 0.000001 * C634;
        const double C1709 = 0.0000101184 * C592;
        const double C1710 = 1.6455 * C181;
        const double C1711 = 0;
        const double C1712 = 10.1184 * C592;
        const double C1713 = C167 * C595;
        const double C1714 = C167 * C599;
        const double C1715 = C168 * C90;
        const double C1716 = C174 * C599;
        const double C1717 = C181 * C96;
        const double C1718 = C187 * C640;
        const double C1719 = C590 * C599;
        const double C1720 = C592 * C171;
        const double C1721 = C598 * C590;
        const double C1722 = C599 * C590;
        const double C1723 = C600 * C176;
        const double C1724 = C603 * C599;
        const double C1725 = C613 * C176;
        const double C1726 = C614 * C90;
        const double C1727 = C638 * C172;
        const double C1728 = C85 * C599;
        const double C1729 = C86 * C90;
        const double C1730 = C87 * C634;
        const double C1731 = 0;
        const double C1732 = C92 * C638;
        const double C1733 = C607 * C171;
        const double C1734 = 0;
        const double C1735 =  - C608;
        const double C1736 = C578 / C85;
        const double C1737 = C597 / C85;
        const double C1738 = C607 / C90;
        const double C1739 = std::pow(C187, 2);
        const double C1740 = std::pow(C580, 2);
        const double C1741 = std::pow(C585, 2);
        const double C1742 = std::pow(C594, 2);
        const double C1743 = std::pow(C611, 2);
        const double C1744 = std::pow(C95, 0.72);
        const double C1745 = -0.1488e2 * C1713;
        const double C1746 = -0.13164e2 * C1716;
        const double C1747 = -3.72 * C1726;
        const double C1748 = 0.000002 * C1730;
        const double C1749 = 0.00000372 * C1715;
        const double C1750 = 1.6455 * C1728;
        const double C1751 = 2.72 * C1720;
        const double C1752 = 4.6784 * C1744;
        const double C1753 = C181 * C1705;
        const double C1754 = C586 * C1709;
        const double C1755 = C602 * C1729;
        const double C1756 = C87 * C1712;
        const double C1757 = C96 * C1706;
        const double C1758 = C1738 + C623;
        const double C1759 = C1711 - C1736;
        const double C1760 = C1707 / C184;
        const double C1761 = C1708 / C177;
        const double C1762 = C1710 / C580;
        const double C1763 = C1717 / C580;
        const double C1764 = C1719 / C585;
        const double C1765 = C1721 / C585;
        const double C1766 = C1722 / C585;
        const double C1767 = C1723 / C580;
        const double C1768 = C1724 / C585;
        const double C1769 = C1725 / C580;
        const double C1770 = C1727 / 3.;
        const double C1771 = C1733 / 3.;
        const double C1772 = C1735 / C176;
        const double C1773 = 0.000002 * C1755;
        const double C1774 = 0.000002 * C1756;
        const double C1775 = C1757 * C599;
        const double C1776 = C1758 * C187;
        const double C1777 = C1758 * C640;
        const double C1778 = C178 * C1752;
        const double C1779 = C181 * C1757;
        const double C1780 = C85 * C1745;
        const double C1781 = C1772 + C619;
        const double C1782 = C1731 - C1771;
        const double C1783 = C1763 - C1764;
        const double C1784 = C1746 / C585;
        const double C1785 = C1747 / C85;
        const double C1786 = C1748 / C596;
        const double C1787 = C1749 / C85;
        const double C1788 = C1750 / C585;
        const double C1789 = C1751 / C580;
        const double C1790 = C1754 / C586;
        const double C1791 = C1759 / C1740;
        const double C1792 = 2 * C1776;
        const double C1793 = C1732 * C1781;
        const double C1794 = C585 * C1783;
        const double C1795 = C589 * C1781;
        const double C1796 = C601 * C1774;
        const double C1797 = C1791 + C1734;
        const double C1798 = C1753 - C1784;
        const double C1799 = C1762 - C1788;
        const double C1800 = C1779 - C1768;
        const double C1801 = C1790 - C1787;
        const double C1802 = C1773 / C85;
        const double C1803 = C1778 / C594;
        const double C1804 = C1780 / C586;
        const double C1805 = C1782 / C176;
        const double C1806 = C164 * C1798;
        const double C1807 = C164 * C1799;
        const double C1808 = C1798 * C590;
        const double C1809 = C1803 + C1789;
        const double C1810 = C1805 + C1786;
        const double C1811 = C1718 - C1795;
        const double C1812 = C1794 - C1767;
        const double C1813 = C1804 - C1737;
        const double C1814 = C1796 / C586;
        const double C1815 = C1797 / C90;
        const double C1816 = C1800 / C184;
        const double C1817 = C1801 / C1742;
        const double C1818 = -3.72 * C1809;
        const double C1819 = C1732 * C1810;
        const double C1820 = C589 * C1810;
        const double C1821 = C1806 + C1765;
        const double C1822 = C1807 + C1766;
        const double C1823 = C1814 - C1802;
        const double C1824 = C1812 / C1741;
        const double C1825 = C1813 / C1740;
        const double C1826 = C585 * C1822;
        const double C1827 = C586 * C1818;
        const double C1828 = C1820 + C1793;
        const double C1829 = C1821 / C184;
        const double C1830 = C1823 / C1743;
        const double C1831 = 2 * C1827;
        const double C1832 = C1815 + C1830;
        const double C1833 = C1816 - C1829;
        const double C1834 = C1826 - C1769;
        const double C1835 = C1760 - C1833;
        const double C1836 = C1831 - C1785;
        const double C1837 = C1834 / C1741;
        const double C1838 = C1835 - C1761;
        const double C1839 = C1837 - C1824;
        const double C1840 = C1836 / C1742;
        const double C1841 = C92 * C1838;
        const double C1842 = C1825 + C1840;
        const double C1843 = C1839 - C1817;
        const double C1844 = C1841 + C1770;
        const double C1845 = C1758 * C1844;
        const double C1846 = C187 * C1844;
        const double C1847 = C1846 + C1777;
        const double C1848 = C1847 - C1828;

                result.d3e_drbrbgbb =  - ( std::pow(C187, 4) * ( C1391 * ( C187 * ( C92 * ( ( ( C184 * -0.03408 * C463)  / 3. - ( -0.03408 * C167 * C483)  / 3.)  / C451 - ( ( C184 * ( ( C181 * C96 * -8. * C463 - ( C1412 * C599)  / C585)  / 3. - ( C458 * C1458 + C1411 * C456)  / C184)  - ( C1460 * C483)  / 3.)  / C451 - ( C184 * ( C164 * ( ( C181 * -0.13164e2 * C463 - ( -0.13164e2 * C473 * C599)  / C585)  / 3. - ( -0.13164e2 * ( C174 * C1458 + C167 * C456) )  / C184)  + ( C1461 * C590)  / C585 + ( C456 * C1411 + C1458 * C458)  / C184)  - ( C1487 * C483)  / 3.)  / C451)  - ( 3. * C176 * 0.000001 * C1516 - ( 0.000001 * C1473 * C469)  / 3.)  / C1390)  + C1514 / 3. + ( ( C638 * C467)  / 3. + C1514)  / 3.)  + C1413 * C1523 + C1440 * C1519 + C1506 * C494 - ( C448 * ( ( 3. * C444 * 0.000002 * C87 * C1516 - ( 0.000002 * C1485 * C1400)  / 3.)  / C1392 - ( ( C176 * C607 * C466)  / 9. + ( C1441 * C468)  / 3.)  / C1428)  + C1382 * C1507 + C494 * C1506 + C1519 * C1440) )  + 2 * C1413 * C187 * C1526 - ( C1474 * 2 * ( C1440 * C1413 + C1506 * C187)  + ( C187 * C1519 + C1413 * C494 - ( C448 * C1506 + C1382 * C1440) )  * C1469) )  - ( C1391 * C1526 - C1474 * C1469)  * 4 * C1413 * std::pow(C187, 3))  / std::pow(C187, 8);
                result.d3e_drbgbbgbb =  - ( std::pow(C187, 4) * ( C1739 * ( C187 * ( C92 * ( ( C1808 / C585 - C164 * ( ( -0.13164e2 * C1714)  / C585 + ( C585 * -0.13164e2 * ( C174 * C1799 + C1714)  - ( -0.13164e2 * C1716 * C176)  / C580)  / C1741)  + ( C585 * ( ( C598 * C96)  / C580 + C1808)  - ( C1721 * C176)  / C580)  / C1741)  / C184 - (  - ( C1775 / C585 + ( C585 * ( C603 * C1799 + C1775)  - ( C1724 * C176)  / C580)  / C1741) )  / C184 - ( 0.000001 * C1842)  / C177)  + ( C1843 * C172)  / 3.)  + C1845 + C1845 + C1832 * C640 - ( C589 * ( ( 0.000002 * C87 * C1842)  / C596 - ( C1797 * C171)  / ( 3. * C176) )  + C1819 + C1819 + C92 * C1843 * C1781) )  + 2 * C1776 * C1848 - ( C1811 * 2 * ( std::pow(C1758, 2) + C1832 * C187)  + C1848 * C1792) )  - ( C1739 * C1848 - C1811 * C1792)  * 4 * C1758 * std::pow(C187, 3))  / std::pow(C187, 8);
            }

            if (rhob >= eps && gammaaa >= eps && gammaab >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;

                result.d3e_drbgaagab =  - ( C187 * C92 * 0. * C174)  / ( C184 * std::pow(C187, 2)) ;
            }

            if (rhob >= eps && gammaaa >= eps && gammabb >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C289 = 4 * Pi;
        const double C290 = 36. * Pi;
        const double C291 = rhoa + 1e-16;
        const double C292 = -5. / 3.;
        const double C293 = 1. / 3.;
        const double C294 = 4. / 3.;
        const double C295 = 8. / 3.;
        const double C296 = std::sqrt(gammaaa);
        const double C297 = 0.02556 * C296;
        const double C298 = std::pow(3., C294);
        const double C299 = std::pow(C289, C293);
        const double C300 = std::pow(C290, C292);
        const double C301 = std::pow(C291, C294);
        const double C302 = std::pow(C291, C295);
        const double C303 = std::pow(rhoa, C294);
        const double C304 = 5. * C300;
        const double C305 = C296 * C301;
        const double C306 = C296 * C302;
        const double C307 = C296 / C301;
        const double C308 = 0.00426 - C304;
        const double C309 = std::asinh(C307);
        const double C310 = std::pow(C307, 2);
        const double C311 = std::pow(C307, 2.72);
        const double C312 = std::pow(C307, 3.72);
        const double C313 = 1.6455 * C310;
        const double C314 = C308 * C310;
        const double C315 = C309 * C297;
        const double C316 = C312 * C299;
        const double C317 = 0.000002 * C316;
        const double C318 =  - C313;
        const double C319 = C315 / C301;
        const double C320 = C317 / C298;
        const double C321 = std::exp(C318);
        const double C322 = C319 + C320;
        const double C323 = C322 + 1;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C571 = -0.1488e2 * C167;
        const double C572 = -0.13164e2 * C174;
        const double C573 = -8. * C174;
        const double C574 = -0.03408 * C174;
        const double C575 = 0.000001 * C186;
        const double C576 = 0.00000372 * C168;
        const double C577 = 0.00426 * C85;
        const double C578 = 0.02556 * C166;
        const double C579 = 1.6455 * C85;
        const double C580 = 2 * C85;
        const double C581 = 3.72 * C168;
        const double C582 = C173 * C171;
        const double C583 = C176 * C86;
        const double C584 = C189 * C172;
        const double C585 = C85 * C176;
        const double C586 = C85 * C90;
        const double C587 = C87 * C186;
        const double C588 = 0;
        const double C589 = C92 * C189;
        const double C590 = C96 * C85;
        const double C591 = 0;
        const double C592 = std::pow(C95, 1.72);
        const double C593 = 0.000002 * C587;
        const double C594 = 2 * C586;
        const double C595 = 2.72 * C592;
        const double C596 = 3. * C583;
        const double C597 = C168 * C571;
        const double C598 = C181 * C572;
        const double C599 = C181 * C579;
        const double C600 = C181 * C590;
        const double C601 = C586 * C86;
        const double C602 = C87 * C581;
        const double C603 = C96 * C573;
        const double C604 = C574 / C184;
        const double C605 = C575 / C177;
        const double C606 = C577 / C585;
        const double C607 = C578 / C580;
        const double C608 = C582 / 3.;
        const double C609 = C584 / 3.;
        const double C610 = 0.000002 * C602;
        const double C611 = 2 * C601;
        const double C612 = C164 * C598;
        const double C613 = C164 * C599;
        const double C614 = C178 * C595;
        const double C615 = C181 * C603;
        const double C616 = C607 + C591;
        const double C617 = C588 - C608;
        const double C618 = C576 / C594;
        const double C619 = C593 / C596;
        const double C620 = C597 / C580;
        const double C621 = C600 / C585;
        const double C622 = -3.72 * C614;
        const double C623 = C610 / C611;
        const double C624 = C612 / C184;
        const double C625 = C613 / C585;
        const double C626 = C615 / C184;
        const double C627 = C616 / C90;
        const double C628 = C617 / C176;
        const double C629 = C627 + C623;
        const double C630 = C628 + C619;
        const double C631 = C621 - C625;
        const double C632 = C626 - C624;
        const double C633 = C622 / C594;
        const double C634 = C620 + C633;
        const double C635 = C604 - C632;
        const double C636 = C606 - C631;
        const double C637 = C635 - C605;
        const double C638 = C636 - C618;
        const double C639 = C92 * C637;
        const double C640 = C639 + C609;
        const double C1692 = 0. * C174;
        const double C1693 = C607 / C90;
        const double C1694 = C164 * C1692;
        const double C1695 = C1693 + C623;
        const double C1696 = C92 * C1694;

                result.d3e_drbgaagbb =  - ( ( std::pow(C187, 2) * ( C187 * C92 * ( C164 * 0. * C167 + ( 0. * C174 * C590)  / C585)  + C1695 * C1696) )  / C184 - ( 2 * C1695 * C187 * C187 * C1696)  / C184)  / std::pow(C187, 4);
            }

            if (rhob >= eps && gammaab >= eps && gammabb >= eps) {
        const double C77 = 4 * Pi;
        const double C78 = 36. * Pi;
        const double C79 = rhoa + 1e-16;
        const double C80 = rhob + 1e-16;
        const double C81 = -5. / 3.;
        const double C82 = 1. / 3.;
        const double C83 = 4. / 3.;
        const double C84 = std::sqrt(gammaaa);
        const double C85 = std::sqrt(gammabb);
        const double C86 = std::pow(3., C83);
        const double C87 = std::pow(C77, C82);
        const double C88 = std::pow(C78, C81);
        const double C89 = std::pow(C79, C83);
        const double C90 = std::pow(C80, C83);
        const double C91 = std::pow(rhoa, C83);
        const double C92 = std::pow(rhob, C83);
        const double C93 = 5. * C88;
        const double C94 = C84 / C89;
        const double C95 = C85 / C90;
        const double C96 = 0.00426 - C93;
        const double C97 = std::pow(C94, 2);
        const double C98 = std::pow(C94, 3.72);
        const double C99 = std::pow(C95, 2);
        const double C100 = std::pow(C95, 3.72);
        const double C159 = 0.000001 * C100;
        const double C160 = 0.00426 * C99;
        const double C161 = 0.02556 * C85;
        const double C162 = 1.6455 * C99;
        const double C163 = C100 * C87;
        const double C164 = C96 * C99;
        const double C165 = 8. / 3.;
        const double C166 = std::asinh(C95);
        const double C167 = std::pow(C80, C82);
        const double C168 = std::pow(C95, 2.72);
        const double C169 = std::pow(rhob, C82);
        const double C170 = 0.000002 * C163;
        const double C171 = 4. * C167;
        const double C172 = 4. * C169;
        const double C173 = C166 * C161;
        const double C174 = C167 * gammabb;
        const double C175 =  - C162;
        const double C176 = std::pow(C80, C165);
        const double C177 = 3. * C176;
        const double C178 = C85 * C171;
        const double C179 = C170 / C86;
        const double C180 = C173 / C90;
        const double C181 = std::exp(C175);
        const double C182 = -3.72 * C178;
        const double C183 = C164 * C181;
        const double C184 = C90 * C177;
        const double C185 = C180 + C179;
        const double C186 = C168 * C182;
        const double C187 = C185 + 1;
        const double C188 = C160 - C183;
        const double C189 = C188 - C159;
        const double C326 = 4 * Pi;
        const double C327 = 36. * Pi;
        const double C328 = rhob + 1e-16;
        const double C329 = -5. / 3.;
        const double C330 = 1. / 3.;
        const double C331 = 4. / 3.;
        const double C332 = 8. / 3.;
        const double C333 = std::sqrt(gammabb);
        const double C334 = 0.02556 * C333;
        const double C335 = std::pow(3., C331);
        const double C336 = std::pow(C326, C330);
        const double C337 = std::pow(C327, C329);
        const double C338 = std::pow(C328, C331);
        const double C339 = std::pow(C328, C332);
        const double C340 = std::pow(rhob, C331);
        const double C341 = 5. * C337;
        const double C342 = C333 * C338;
        const double C343 = C333 * C339;
        const double C344 = C333 / C338;
        const double C345 = 0.00426 - C341;
        const double C346 = std::asinh(C344);
        const double C347 = std::pow(C344, 2);
        const double C348 = std::pow(C344, 2.72);
        const double C349 = std::pow(C344, 3.72);
        const double C350 = 1.6455 * C347;
        const double C351 = C345 * C347;
        const double C352 = C346 * C334;
        const double C353 = C349 * C336;
        const double C354 = 0.000002 * C353;
        const double C355 =  - C350;
        const double C356 = C352 / C338;
        const double C357 = C354 / C335;
        const double C358 = std::exp(C355);
        const double C359 = C356 + C357;
        const double C360 = C359 + 1;
        const double C571 = -0.1488e2 * C167;
        const double C572 = -0.13164e2 * C174;
        const double C573 = -8. * C174;
        const double C574 = -0.03408 * C174;
        const double C575 = 0.000001 * C186;
        const double C576 = 0.00000372 * C168;
        const double C577 = 0.00426 * C85;
        const double C578 = 0.02556 * C166;
        const double C579 = 1.6455 * C85;
        const double C580 = 2 * C85;
        const double C581 = 3.72 * C168;
        const double C582 = C173 * C171;
        const double C583 = C176 * C86;
        const double C584 = C189 * C172;
        const double C585 = C85 * C176;
        const double C586 = C85 * C90;
        const double C587 = C87 * C186;
        const double C588 = 0;
        const double C589 = C92 * C189;
        const double C590 = C96 * C85;
        const double C591 = 0;
        const double C592 = std::pow(C95, 1.72);
        const double C593 = 0.000002 * C587;
        const double C594 = 2 * C586;
        const double C595 = 2.72 * C592;
        const double C596 = 3. * C583;
        const double C597 = C168 * C571;
        const double C598 = C181 * C572;
        const double C599 = C181 * C579;
        const double C600 = C181 * C590;
        const double C601 = C586 * C86;
        const double C602 = C87 * C581;
        const double C603 = C96 * C573;
        const double C604 = C574 / C184;
        const double C605 = C575 / C177;
        const double C606 = C577 / C585;
        const double C607 = C578 / C580;
        const double C608 = C582 / 3.;
        const double C609 = C584 / 3.;
        const double C610 = 0.000002 * C602;
        const double C611 = 2 * C601;
        const double C612 = C164 * C598;
        const double C613 = C164 * C599;
        const double C614 = C178 * C595;
        const double C615 = C181 * C603;
        const double C616 = C607 + C591;
        const double C617 = C588 - C608;
        const double C618 = C576 / C594;
        const double C619 = C593 / C596;
        const double C620 = C597 / C580;
        const double C621 = C600 / C585;
        const double C622 = -3.72 * C614;
        const double C623 = C610 / C611;
        const double C624 = C612 / C184;
        const double C625 = C613 / C585;
        const double C626 = C615 / C184;
        const double C627 = C616 / C90;
        const double C628 = C617 / C176;
        const double C629 = C627 + C623;
        const double C630 = C628 + C619;
        const double C631 = C621 - C625;
        const double C632 = C626 - C624;
        const double C633 = C622 / C594;
        const double C634 = C620 + C633;
        const double C635 = C604 - C632;
        const double C636 = C606 - C631;
        const double C637 = C635 - C605;
        const double C638 = C636 - C618;
        const double C639 = C92 * C637;
        const double C640 = C639 + C609;
        const double C1699 = 0. * C174;
        const double C1700 = C607 / C90;
        const double C1701 = C164 * C1699;
        const double C1702 = C1700 + C623;
        const double C1703 = C92 * C1701;

                result.d3e_drbgabgbb =  - ( ( std::pow(C187, 2) * ( C187 * C92 * ( C164 * 0. * C167 + ( 0. * C174 * C590)  / C585)  + C1702 * C1703) )  / C184 - ( 2 * C1702 * C187 * C187 * C1703)  / C184)  / std::pow(C187, 4);
            }

            return result;
        }
    }
}


 
